// Code generated by go-bindata. DO NOT EDIT. @generated
// sources:
// data/APIService.apiregistration.k8s.io/v1beta1.servicecatalog.k8s.io.yaml
// data/ClusterRole.rbac.authorization.k8s.io/admin.yaml
// data/ClusterRole.rbac.authorization.k8s.io/asb-access.yaml
// data/ClusterRole.rbac.authorization.k8s.io/asb-auth.yaml
// data/ClusterRole.rbac.authorization.k8s.io/basic-user.yaml
// data/ClusterRole.rbac.authorization.k8s.io/cluster-admin.yaml
// data/ClusterRole.rbac.authorization.k8s.io/cluster-debugger.yaml
// data/ClusterRole.rbac.authorization.k8s.io/cluster-reader.yaml
// data/ClusterRole.rbac.authorization.k8s.io/cluster-status.yaml
// data/ClusterRole.rbac.authorization.k8s.io/customer-admin-cluster.yaml
// data/ClusterRole.rbac.authorization.k8s.io/customer-admin-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/customer-admin-project.yaml
// data/ClusterRole.rbac.authorization.k8s.io/edit.yaml
// data/ClusterRole.rbac.authorization.k8s.io/kube-state-metrics.yaml
// data/ClusterRole.rbac.authorization.k8s.io/namespace-viewer.yaml
// data/ClusterRole.rbac.authorization.k8s.io/registry-admin.yaml
// data/ClusterRole.rbac.authorization.k8s.io/registry-editor.yaml
// data/ClusterRole.rbac.authorization.k8s.io/registry-viewer.yaml
// data/ClusterRole.rbac.authorization.k8s.io/router-metrics.yaml
// data/ClusterRole.rbac.authorization.k8s.io/sar-creator.yaml
// data/ClusterRole.rbac.authorization.k8s.io/self-access-reviewer.yaml
// data/ClusterRole.rbac.authorization.k8s.io/self-provisioner.yaml
// data/ClusterRole.rbac.authorization.k8s.io/service-catalog-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/servicecatalog-serviceclass-viewer.yaml
// data/ClusterRole.rbac.authorization.k8s.io/storage-admin.yaml
// data/ClusterRole.rbac.authorization.k8s.io/sudoer.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-aggregate-to-admin.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-aggregate-to-edit.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-aggregate-to-view.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-auth-delegator.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-aws-cloud-provider.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-basic-user.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-build-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-build-strategy-custom.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-build-strategy-docker.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-build-strategy-jenkinspipeline.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-build-strategy-source.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-certificate-signing-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-certificates.k8s.io-certificatesigningrequests-nodeclient.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-certificates.k8s.io-certificatesigningrequests-selfnodeclient.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-attachdetach-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-certificate-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-clusterrole-aggregation-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-cronjob-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-daemon-set-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-deployment-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-disruption-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-endpoint-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-generic-garbage-collector.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-horizontal-pod-autoscaler.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-job-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-namespace-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-node-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-persistent-volume-binder.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-pod-garbage-collector.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-pv-protection-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-pvc-protection-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-replicaset-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-replication-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-resourcequota-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-route-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-service-account-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-service-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-statefulset-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-controller-ttl-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-daemonset-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-deployer.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-deployment-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-deploymentconfig-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-discovery.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-disruption-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-endpoint-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-garbage-collector-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-gc-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-heapster.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-hpa-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-image-auditor.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-image-builder.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-image-pruner.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-image-puller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-image-pusher.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-image-signer.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-job-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-kube-aggregator.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-kube-controller-manager.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-kube-dns.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-kube-scheduler.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-kubelet-api-admin.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-master.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-namespace-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-node-admin.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-node-bootstrap-autoapprover.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-node-bootstrapper.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-node-problem-detector.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-node-proxier.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-node-reader.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-node.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-oauth-token-deleter.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-aggregate-to-admin.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-aggregate-to-edit.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-aggregate-to-view.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-build-config-change-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-build-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-cluster-quota-reconciliation-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-default-rolebindings-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-deployer-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-deploymentconfig-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-horizontal-pod-autoscaler.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-image-import-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-image-trigger-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-ingress-to-route-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-namespace-security-allocation-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-origin-namespace-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-pv-recycler-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-resourcequota-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-sdn-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-service-ingress-ip-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-service-serving-cert-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-pull-secrets-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-template-instance-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-template-instance-finalizer-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-template-service-broker.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-unidling-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-openshift-templateservicebroker-client.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-persistent-volume-provisioner.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-registry.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-replicaset-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-replication-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-router.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-scope-impersonation.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-sdn-manager.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-sdn-reader.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-service-catalog-aggregate-to-admin.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-service-catalog-aggregate-to-edit.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-service-catalog-aggregate-to-view.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-statefulset-controller.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-volume-scheduler.yaml
// data/ClusterRole.rbac.authorization.k8s.io/system-webhook.yaml
// data/ClusterRole.rbac.authorization.k8s.io/view.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/admin-0.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/admin.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/asb-access.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/asb-auth.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/auth-delegator-openshift-template-service-broker.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/azure-cluster-reader.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/basic-users.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/bootstrap-autoapprover.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/cluster-admin.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/cluster-admins.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/cluster-reader-0.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/cluster-reader.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/cluster-readers.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/cluster-status-binding.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-cluster-group.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-controller-admin.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-controller-project-admin.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-controller-sa.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/kube-state-metrics-cluster-role-binding.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/router-metrics.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/router-router-role.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/sdn-cluster-reader.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/sdn-reader.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/self-access-reviewers.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/self-provisioners.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-controller-binding.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-controller-namespace-viewer-binding.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-namespace-viewer-binding.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-sar-creator-binding.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/servicecatalog-serviceclass-viewer-binding.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-auth-delegator-binding.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-aws-cloud-provider.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-basic-user.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-build-strategy-docker-binding.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-build-strategy-jenkinspipeline-binding.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-build-strategy-source-binding.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-attachdetach-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-certificate-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-clusterrole-aggregation-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-cronjob-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-daemon-set-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-deployment-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-disruption-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-endpoint-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-generic-garbage-collector.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-horizontal-pod-autoscaler.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-job-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-namespace-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-node-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-persistent-volume-binder.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-pod-garbage-collector.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-pv-protection-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-pvc-protection-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-replicaset-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-replication-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-resourcequota-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-route-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-service-account-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-service-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-statefulset-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-ttl-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-deployer.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-discovery-binding.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-discovery.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-image-builder.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-image-puller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-kube-controller-manager.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-kube-dns.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-kube-scheduler.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-masters.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-node-admins.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-node-bootstrapper.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-node-proxier.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-node-proxiers.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-node.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-nodes.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-oauth-token-deleters.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-build-config-change-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-build-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-cluster-quota-reconciliation-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-default-rolebindings-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-deployer-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-deploymentconfig-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-horizontal-pod-autoscaler.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-image-import-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-image-trigger-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-ingress-to-route-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-namespace-security-allocation-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-origin-namespace-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-pv-recycler-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-resourcequota-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-sdn-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-service-ingress-ip-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-service-serving-cert-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-pull-secrets-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-controller-admin.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-finalizer-controller-admin.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-finalizer-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-service-broker.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-unidling-controller.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-registry.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-scope-impersonation.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-sdn-readers.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-volume-scheduler.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/system-webhooks.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/templateservicebroker-client.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/tsb-openshift-template-service-broker.yaml
// data/ClusterRoleBinding.rbac.authorization.k8s.io/view.yaml
// data/ClusterServiceBroker.servicecatalog.k8s.io/ansible-service-broker.yaml
// data/ClusterServiceBroker.servicecatalog.k8s.io/template-service-broker.yaml
// data/ConfigMap/kube-service-catalog/cluster-info.yaml
// data/ConfigMap/kube-system/extension-apiserver-authentication.yaml
// data/ConfigMap/openshift-ansible-service-broker/broker-config.yaml
// data/ConfigMap/openshift-infra/reconciler-rolebindings.yaml
// data/ConfigMap/openshift-metrics/alertmanager.yaml
// data/ConfigMap/openshift-metrics/prometheus.yaml
// data/ConfigMap/openshift-node/node-config-compute.yaml
// data/ConfigMap/openshift-node/node-config-infra.yaml
// data/ConfigMap/openshift-node/node-config-master.yaml
// data/ConfigMap/openshift-template-service-broker/apiserver-config.yaml
// data/ConfigMap/openshift-web-console/webconsole-config.yaml
// data/CustomResourceDefinition.apiextensions.k8s.io/bundlebindings.automationbroker.io.yaml
// data/CustomResourceDefinition.apiextensions.k8s.io/bundleinstances.automationbroker.io.yaml
// data/CustomResourceDefinition.apiextensions.k8s.io/bundles.automationbroker.io.yaml
// data/CustomResourceDefinition.apiextensions.k8s.io/etcdbackups.etcd.database.coreos.com.yaml
// data/DaemonSet.apps/openshift-metrics/prometheus-node-exporter.yaml
// data/DaemonSet.apps/openshift-node/sync.yaml
// data/DaemonSet.apps/openshift-sdn/ovs.yaml
// data/DaemonSet.apps/openshift-sdn/sdn.yaml
// data/Deployment.apps/default/docker-registry.yaml
// data/Deployment.apps/default/registry-console.yaml
// data/Deployment.apps/default/router.yaml
// data/Deployment.apps/kube-service-catalog/apiserver.yaml
// data/Deployment.apps/kube-service-catalog/controller-manager.yaml
// data/Deployment.apps/openshift-ansible-service-broker/asb.yaml
// data/Deployment.apps/openshift-etcd/etcd-operator.yaml
// data/Deployment.apps/openshift-infra/bootstrap-autoapprover.yaml
// data/Deployment.apps/openshift-infra/customer-admin-controller.yaml
// data/Deployment.apps/openshift-metrics/kube-state-metrics.yaml
// data/Deployment.apps/openshift-template-service-broker/apiserver.yaml
// data/Deployment.apps/openshift-web-console/webconsole.yaml
// data/EtcdBackup.etcd.database.coreos.com/openshift-etcd/etcd-backup.yaml
// data/Group.user.openshift.io/customer-admins.yaml
// data/Group.user.openshift.io/customer-readers.yaml
// data/ImageStream.image.openshift.io/openshift/dotnet-runtime.yaml
// data/ImageStream.image.openshift.io/openshift/dotnet.yaml
// data/ImageStream.image.openshift.io/openshift/httpd.yaml
// data/ImageStream.image.openshift.io/openshift/jenkins.yaml
// data/ImageStream.image.openshift.io/openshift/mariadb.yaml
// data/ImageStream.image.openshift.io/openshift/mongodb.yaml
// data/ImageStream.image.openshift.io/openshift/mysql.yaml
// data/ImageStream.image.openshift.io/openshift/nginx.yaml
// data/ImageStream.image.openshift.io/openshift/nodejs.yaml
// data/ImageStream.image.openshift.io/openshift/perl.yaml
// data/ImageStream.image.openshift.io/openshift/php.yaml
// data/ImageStream.image.openshift.io/openshift/postgresql.yaml
// data/ImageStream.image.openshift.io/openshift/python.yaml
// data/ImageStream.image.openshift.io/openshift/redis.yaml
// data/ImageStream.image.openshift.io/openshift/ruby.yaml
// data/ImageStream.image.openshift.io/openshift/wildfly.yaml
// data/Namespace/default.yaml
// data/Namespace/kube-public.yaml
// data/Namespace/kube-service-catalog.yaml
// data/Namespace/kube-system.yaml
// data/Namespace/openshift-ansible-service-broker.yaml
// data/Namespace/openshift-azure.yaml
// data/Namespace/openshift-etcd.yaml
// data/Namespace/openshift-infra.yaml
// data/Namespace/openshift-metrics.yaml
// data/Namespace/openshift-node.yaml
// data/Namespace/openshift-sdn.yaml
// data/Namespace/openshift-template-service-broker.yaml
// data/Namespace/openshift-web-console.yaml
// data/Namespace/openshift.yaml
// data/OAuthClient.oauth.openshift.io/cockpit-oauth-client.yaml
// data/Role.rbac.authorization.k8s.io/kube-public/system-controller-bootstrap-signer.yaml
// data/Role.rbac.authorization.k8s.io/kube-service-catalog/cluster-info-configmap.yaml
// data/Role.rbac.authorization.k8s.io/kube-service-catalog/configmap-accessor.yaml
// data/Role.rbac.authorization.k8s.io/kube-system/extension-apiserver-authentication-reader.yaml
// data/Role.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-controller-manager.yaml
// data/Role.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-scheduler.yaml
// data/Role.rbac.authorization.k8s.io/kube-system/system-controller-bootstrap-signer.yaml
// data/Role.rbac.authorization.k8s.io/kube-system/system-controller-cloud-provider.yaml
// data/Role.rbac.authorization.k8s.io/kube-system/system-controller-token-cleaner.yaml
// data/Role.rbac.authorization.k8s.io/openshift/shared-resource-viewer.yaml
// data/Role.rbac.authorization.k8s.io/openshift-etcd/etcd-operator.yaml
// data/Role.rbac.authorization.k8s.io/openshift-metrics/kube-state-metrics-resizer.yaml
// data/Role.rbac.authorization.k8s.io/openshift-node/system-node-config-reader.yaml
// data/Role.rbac.authorization.k8s.io/openshift-template-service-broker/templateservicebroker-auth-reader.yaml
// data/RoleBinding.rbac.authorization.k8s.io/kube-public/system-controller-bootstrap-signer.yaml
// data/RoleBinding.rbac.authorization.k8s.io/kube-service-catalog/cluster-info-configmap-binding.yaml
// data/RoleBinding.rbac.authorization.k8s.io/kube-service-catalog/configmap-accessor-binding.yaml
// data/RoleBinding.rbac.authorization.k8s.io/kube-system/extension-apiserver-authentication-reader-binding.yaml
// data/RoleBinding.rbac.authorization.k8s.io/kube-system/extension-apiserver-authentication-reader-openshift-template-service-broker.yaml
// data/RoleBinding.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-controller-manager.yaml
// data/RoleBinding.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-scheduler.yaml
// data/RoleBinding.rbac.authorization.k8s.io/kube-system/system-controller-bootstrap-signer.yaml
// data/RoleBinding.rbac.authorization.k8s.io/kube-system/system-controller-cloud-provider.yaml
// data/RoleBinding.rbac.authorization.k8s.io/kube-system/system-controller-token-cleaner.yaml
// data/RoleBinding.rbac.authorization.k8s.io/openshift/shared-resource-viewers.yaml
// data/RoleBinding.rbac.authorization.k8s.io/openshift-etcd/etcd-operator.yaml
// data/RoleBinding.rbac.authorization.k8s.io/openshift-metrics/kube-state-metrics.yaml
// data/RoleBinding.rbac.authorization.k8s.io/openshift-node/sync-node-config-reader-binding.yaml
// data/RoleBinding.rbac.authorization.k8s.io/openshift-node/system-node-config-reader.yaml
// data/RoleBinding.rbac.authorization.k8s.io/openshift-template-service-broker/templateservicebroker-auth-reader.yaml
// data/Route.route.openshift.io/default/docker-registry.yaml
// data/Route.route.openshift.io/default/registry-console.yaml
// data/Route.route.openshift.io/kube-service-catalog/apiserver.yaml
// data/Route.route.openshift.io/openshift-ansible-service-broker/asb-1338.yaml
// data/Route.route.openshift.io/openshift-metrics/alertmanager.yaml
// data/Route.route.openshift.io/openshift-metrics/alerts.yaml
// data/Route.route.openshift.io/openshift-metrics/prometheus.yaml
// data/Secret/default/etc-origin-cloudprovider.yaml
// data/Secret/default/registry-certificates.yaml
// data/Secret/default/registry-config.yaml
// data/Secret/default/router-certs.yaml
// data/Secret/kube-service-catalog/apiserver-ssl.yaml
// data/Secret/openshift-ansible-service-broker/asb-client.yaml
// data/Secret/openshift-etcd/etcd-backup-abs-credentials.yaml
// data/Secret/openshift-etcd/etcd-client-tls.yaml
// data/Secret/openshift-metrics/alertmanager-proxy.yaml
// data/Secret/openshift-metrics/alerts-proxy.yaml
// data/Secret/openshift-metrics/prometheus-proxy.yaml
// data/Secret/openshift-template-service-broker/templateservicebroker-client.yaml
// data/SecurityContextConstraints.security.openshift.io/anyuid.yaml
// data/SecurityContextConstraints.security.openshift.io/hostaccess.yaml
// data/SecurityContextConstraints.security.openshift.io/hostmount-anyuid.yaml
// data/SecurityContextConstraints.security.openshift.io/hostnetwork.yaml
// data/SecurityContextConstraints.security.openshift.io/nonroot.yaml
// data/SecurityContextConstraints.security.openshift.io/privileged.yaml
// data/SecurityContextConstraints.security.openshift.io/restricted.yaml
// data/Service/default/docker-registry.yaml
// data/Service/default/registry-console.yaml
// data/Service/default/router-stats.yaml
// data/Service/default/router.yaml
// data/Service/kube-service-catalog/apiserver.yaml
// data/Service/kube-service-catalog/controller-manager.yaml
// data/Service/openshift-ansible-service-broker/asb.yaml
// data/Service/openshift-metrics/alertmanager.yaml
// data/Service/openshift-metrics/alerts.yaml
// data/Service/openshift-metrics/kube-state-metrics.yaml
// data/Service/openshift-metrics/prometheus-node-exporter.yaml
// data/Service/openshift-metrics/prometheus.yaml
// data/Service/openshift-template-service-broker/apiserver.yaml
// data/Service/openshift-web-console/webconsole.yaml
// data/ServiceAccount/default/default.yaml
// data/ServiceAccount/default/registry.yaml
// data/ServiceAccount/default/router.yaml
// data/ServiceAccount/kube-service-catalog/service-catalog-apiserver.yaml
// data/ServiceAccount/kube-service-catalog/service-catalog-controller.yaml
// data/ServiceAccount/kube-system/attachdetach-controller.yaml
// data/ServiceAccount/kube-system/certificate-controller.yaml
// data/ServiceAccount/kube-system/clusterrole-aggregation-controller.yaml
// data/ServiceAccount/kube-system/cronjob-controller.yaml
// data/ServiceAccount/kube-system/daemon-set-controller.yaml
// data/ServiceAccount/kube-system/deployment-controller.yaml
// data/ServiceAccount/kube-system/disruption-controller.yaml
// data/ServiceAccount/kube-system/endpoint-controller.yaml
// data/ServiceAccount/kube-system/generic-garbage-collector.yaml
// data/ServiceAccount/kube-system/job-controller.yaml
// data/ServiceAccount/kube-system/namespace-controller.yaml
// data/ServiceAccount/kube-system/node-controller.yaml
// data/ServiceAccount/kube-system/persistent-volume-binder.yaml
// data/ServiceAccount/kube-system/pod-garbage-collector.yaml
// data/ServiceAccount/kube-system/pv-protection-controller.yaml
// data/ServiceAccount/kube-system/pvc-protection-controller.yaml
// data/ServiceAccount/kube-system/replicaset-controller.yaml
// data/ServiceAccount/kube-system/replication-controller.yaml
// data/ServiceAccount/kube-system/resourcequota-controller.yaml
// data/ServiceAccount/kube-system/service-account-controller.yaml
// data/ServiceAccount/kube-system/service-controller.yaml
// data/ServiceAccount/kube-system/statefulset-controller.yaml
// data/ServiceAccount/openshift-ansible-service-broker/asb-client.yaml
// data/ServiceAccount/openshift-ansible-service-broker/asb.yaml
// data/ServiceAccount/openshift-azure/azure-cluster-reader.yaml
// data/ServiceAccount/openshift-etcd/etcd-operator.yaml
// data/ServiceAccount/openshift-infra/bootstrap-autoapprover.yaml
// data/ServiceAccount/openshift-infra/build-config-change-controller.yaml
// data/ServiceAccount/openshift-infra/build-controller.yaml
// data/ServiceAccount/openshift-infra/cluster-quota-reconciliation-controller.yaml
// data/ServiceAccount/openshift-infra/customer-admin-controller.yaml
// data/ServiceAccount/openshift-infra/default-rolebindings-controller.yaml
// data/ServiceAccount/openshift-infra/deployer-controller.yaml
// data/ServiceAccount/openshift-infra/deploymentconfig-controller.yaml
// data/ServiceAccount/openshift-infra/horizontal-pod-autoscaler.yaml
// data/ServiceAccount/openshift-infra/image-import-controller.yaml
// data/ServiceAccount/openshift-infra/image-trigger-controller.yaml
// data/ServiceAccount/openshift-infra/ingress-to-route-controller.yaml
// data/ServiceAccount/openshift-infra/namespace-security-allocation-controller.yaml
// data/ServiceAccount/openshift-infra/node-bootstrapper.yaml
// data/ServiceAccount/openshift-infra/origin-namespace-controller.yaml
// data/ServiceAccount/openshift-infra/pv-recycler-controller.yaml
// data/ServiceAccount/openshift-infra/resourcequota-controller.yaml
// data/ServiceAccount/openshift-infra/sdn-controller.yaml
// data/ServiceAccount/openshift-infra/service-serving-cert-controller.yaml
// data/ServiceAccount/openshift-infra/serviceaccount-controller.yaml
// data/ServiceAccount/openshift-infra/serviceaccount-pull-secrets-controller.yaml
// data/ServiceAccount/openshift-infra/template-instance-controller.yaml
// data/ServiceAccount/openshift-infra/template-instance-finalizer-controller.yaml
// data/ServiceAccount/openshift-infra/unidling-controller.yaml
// data/ServiceAccount/openshift-metrics/kube-state-metrics.yaml
// data/ServiceAccount/openshift-metrics/prometheus-node-exporter.yaml
// data/ServiceAccount/openshift-metrics/prometheus-reader.yaml
// data/ServiceAccount/openshift-metrics/prometheus.yaml
// data/ServiceAccount/openshift-node/sync.yaml
// data/ServiceAccount/openshift-sdn/sdn.yaml
// data/ServiceAccount/openshift-template-service-broker/apiserver.yaml
// data/ServiceAccount/openshift-template-service-broker/templateservicebroker-client.yaml
// data/ServiceAccount/openshift-web-console/webconsole.yaml
// data/StatefulSet.apps/openshift-metrics/prometheus.yaml
// data/StorageClass.storage.k8s.io/azure.yaml
// data/Template.template.openshift.io/openshift/3scale-gateway.yaml
// data/Template.template.openshift.io/openshift/amp-apicast-wildcard-router.yaml
// data/Template.template.openshift.io/openshift/amp-pvc.yaml
// data/Template.template.openshift.io/openshift/cakephp-mysql-example.yaml
// data/Template.template.openshift.io/openshift/cakephp-mysql-persistent.yaml
// data/Template.template.openshift.io/openshift/dancer-mysql-example.yaml
// data/Template.template.openshift.io/openshift/dancer-mysql-persistent.yaml
// data/Template.template.openshift.io/openshift/django-psql-example.yaml
// data/Template.template.openshift.io/openshift/django-psql-persistent.yaml
// data/Template.template.openshift.io/openshift/dotnet-example.yaml
// data/Template.template.openshift.io/openshift/dotnet-pgsql-persistent.yaml
// data/Template.template.openshift.io/openshift/dotnet-runtime-example.yaml
// data/Template.template.openshift.io/openshift/httpd-example.yaml
// data/Template.template.openshift.io/openshift/jenkins-ephemeral.yaml
// data/Template.template.openshift.io/openshift/jenkins-persistent.yaml
// data/Template.template.openshift.io/openshift/mariadb-ephemeral.yaml
// data/Template.template.openshift.io/openshift/mariadb-persistent.yaml
// data/Template.template.openshift.io/openshift/mongodb-ephemeral.yaml
// data/Template.template.openshift.io/openshift/mongodb-persistent.yaml
// data/Template.template.openshift.io/openshift/mysql-ephemeral.yaml
// data/Template.template.openshift.io/openshift/mysql-persistent.yaml
// data/Template.template.openshift.io/openshift/nginx-example.yaml
// data/Template.template.openshift.io/openshift/nodejs-mongo-persistent.yaml
// data/Template.template.openshift.io/openshift/nodejs-mongodb-example.yaml
// data/Template.template.openshift.io/openshift/postgresql-ephemeral.yaml
// data/Template.template.openshift.io/openshift/postgresql-persistent.yaml
// data/Template.template.openshift.io/openshift/rails-pgsql-persistent.yaml
// data/Template.template.openshift.io/openshift/rails-postgresql-example.yaml
// data/Template.template.openshift.io/openshift/redis-ephemeral.yaml
// data/Template.template.openshift.io/openshift/redis-persistent.yaml
// data/Template.template.openshift.io/openshift/system.yaml
package addons

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiserviceApiregistrationK8sIoV1beta1ServicecatalogK8sIoYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x4b\xc4\x30\x10\x85\xef\xf9\x15\xef\xb6\x10\xd8\xba\xf5\x24\x73\x5b\xb1\x88\x07\x65\x51\xf1\x3e\x9b\x0e\x65\x68\x9b\x84\x24\x2d\xf8\xef\xa5\x98\xea\x65\xaf\x6f\xde\x7b\xdf\xcc\x70\xd4\x2f\x49\x59\x83\x27\x70\xd4\x24\x83\xe6\x92\xb8\x68\xf0\xcd\xf8\x90\x1b\x0d\x77\x6b\x6b\x46\xf5\x3d\xe1\x7c\x79\xf9\x90\xb4\xaa\x13\x33\x4b\xe1\x9e\x0b\x93\x01\x3c\xcf\x42\x58\xdb\xab\x14\x6e\x9b\xfc\xeb\x70\x5c\x78\x0a\x43\xed\x30\x39\x8a\xdb\xbc\x8e\x1f\x17\xdf\x4f\x42\x38\x58\x6b\xf1\xdc\xbd\x75\xef\xe7\xcf\xee\x09\xd6\xda\x83\x01\x86\x14\x96\x48\xb8\x5d\x52\xc7\x97\xa4\x21\x69\xf9\x7e\x55\xaf\xf3\x32\x13\xee\x4f\x06\x7b\x64\x83\xec\x2b\x71\xd4\x4d\x95\xf4\xa7\xe5\xc8\x4e\x08\xe3\x72\x95\x63\x0d\x1c\x2b\xc4\x00\xeb\xfe\x88\x7a\xcb\xbf\xb4\x23\x09\xed\xc9\xfc\x04\x00\x00\xff\xff\xa5\x65\x5e\x32\x33\x01\x00\x00")

func apiserviceApiregistrationK8sIoV1beta1ServicecatalogK8sIoYamlBytes() ([]byte, error) {
	return bindataRead(
		_apiserviceApiregistrationK8sIoV1beta1ServicecatalogK8sIoYaml,
		"APIService.apiregistration.k8s.io/v1beta1.servicecatalog.k8s.io.yaml",
	)
}

func apiserviceApiregistrationK8sIoV1beta1ServicecatalogK8sIoYaml() (*asset, error) {
	bytes, err := apiserviceApiregistrationK8sIoV1beta1ServicecatalogK8sIoYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "APIService.apiregistration.k8s.io/v1beta1.servicecatalog.k8s.io.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4d\x93\xf3\x26\x0c\xbe\xe7\x57\x30\x7b\xe9\x29\x9b\xe9\xad\x93\x5b\xa7\x87\x5e\x7a\x7a\x3b\xd3\xbb\x0c\x8a\xcd\x06\x23\x0a\x22\xd9\xf4\xd7\x77\xc0\x76\x42\xec\x64\xf3\xb1\xdb\xfa\x6d\xf7\xb2\x58\x28\x48\x7a\xf4\x20\x04\x50\xd7\x1e\x6b\x60\x4d\xf6\x5b\x34\xb8\x5e\x08\x21\x4d\x0c\x8c\xfe\x1b\x19\xfc\x1d\x0d\x4a\x26\x1f\x92\x7c\x29\x5a\x60\xd9\xfc\x06\x15\x9a\x2c\x48\x7f\xbe\x02\xf9\x0a\x91\x1b\xf2\xfa\xaf\xbc\xcc\xeb\xf6\xa7\xf0\xaa\x69\x35\xac\x8c\x4b\xa6\x25\xa8\x56\xdb\xb5\x78\x61\x1f\xf1\x65\x01\x4e\xff\x81\x3e\x68\xb2\xeb\x0f\x16\xd8\xfd\xb8\xd8\x6a\xab\xd6\xe2\x97\x93\x43\x8b\x16\x19\x14\x30\x24\xfb\x60\x2d\x71\xfe\x49\xef\x0e\x39\xb4\xa1\xd1\x1b\x4e\x3f\x57\x18\xa4\xd7\x8e\xb3\x95\x9f\x45\x0c\xe8\x05\x37\xc0\xa2\x81\x20\x50\x69\x16\x5e\xd7\x0d\x07\xb1\xd7\xdc\x68\x2b\xb8\x41\xe1\x3c\xbd\xa1\x64\x01\x56\x09\x09\xb6\x8f\x51\x36\x60\x6b\x2c\x15\x7e\x08\xa2\xc5\xb6\x42\x1f\x1a\xed\x5e\x17\xd7\x80\x88\x15\x7a\x8b\x8c\x1d\x1e\x91\x29\x3a\x05\x8c\x6b\xf1\xb2\x01\x13\xf0\x65\x21\x84\x29\xd0\x3c\xd7\xaf\x88\x38\xb0\x07\xe7\xb4\xad\x3b\x9c\x96\x0a\x37\x10\x0d\x87\x85\x10\x16\x5a\x5c\x8b\x8c\xeb\xc2\x47\x83\x61\xbd\x58\x0a\x70\xfa\x57\x4f\xd1\xf5\xf9\x7a\x49\x16\x3c\x06\x8a\x5e\x62\x2f\x73\xa4\xc2\x71\xb0\x02\x66\x90\xcd\xe9\x1b\xdf\x51\x9e\xbe\x1c\x79\xde\x90\xdf\x83\x57\x85\xd0\xd3\xfb\x61\x21\xc4\x0e\x7d\xd5\xaf\x29\x3d\x02\x63\x1e\x2a\x34\x78\x36\x94\x64\x12\x87\x34\xd9\x2c\xac\x91\xf3\x7f\xa3\x43\x37\x70\x89\x53\x79\xd4\x81\x93\x87\xfb\x2c\xbc\x2b\x1e\x49\x76\xa3\xeb\x16\x5c\x17\x15\x5a\xe5\x48\x5b\xee\x63\x4c\x2c\x0b\x8c\x96\x77\x64\x62\x8b\xd2\x80\x6e\xbb\x29\x8f\xce\x68\x99\x13\x25\xc9\xb2\x4f\x6e\xfa\x8f\xa6\x56\x41\x82\xe9\xdc\x0b\x28\x3d\xf6\x26\x02\xfa\x9d\x96\x08\x52\x52\xb4\xe7\xb2\xf3\x8f\xef\x0d\xb8\x4a\x5b\xa5\x6d\xdd\xc3\xb6\xc3\xc1\x79\xa3\x5b\xcd\x3e\x31\xbe\xfb\x4e\x44\x0b\x0e\x52\x04\x81\x81\x63\xc1\x1e\x43\xf5\xe9\xa3\x98\xbc\x06\x60\xa9\xd1\xf9\xf2\x67\x24\x86\x4b\xa2\x93\x72\x01\xd7\x04\x83\x07\xc2\x3d\x85\xf1\x75\x6b\x4e\x73\x5f\x2c\xac\xdb\xc4\x3e\xb2\x29\x35\x93\xd5\xc0\x65\xbe\x8e\xd6\x53\x80\x2d\xd9\x30\x50\x4b\xa1\x33\x74\x68\x8f\x99\x29\xbe\x57\x09\xd3\x0a\xe4\x76\x32\x71\x62\x69\x9f\x85\xe3\x72\xc5\x77\xc9\x65\x06\xc6\x4d\x34\x47\xb5\x52\x70\xd4\x9b\x81\xb3\xa9\x5e\x26\xf3\xda\xd6\x53\xa4\x72\x95\x25\xcb\x60\x1c\xa9\x41\xb3\xdb\xbf\x33\xb8\x5a\xf5\xba\xe3\xd2\xe4\xc9\xbe\x51\xd5\xc1\xda\x0f\x66\xf0\x0e\xdf\x19\x6d\x3a\x6c\xff\x71\xc6\x69\x5b\x7b\x0c\x61\x28\x1c\xc8\x7b\xf2\x5b\x47\x46\x4b\x8d\x13\x0e\x7e\xc0\xc9\x1b\x05\x78\x06\x0c\x73\x10\x87\x8b\xa7\xa9\xd2\xc1\xc7\xdc\x66\x54\x51\xd5\x38\x2e\x03\xf7\xd6\x97\x1e\x2d\x6d\xeb\xbe\xff\xb9\x50\xc2\x26\x80\xce\xb3\x2d\x27\xad\xda\xd4\x55\x43\x12\x4c\x88\x55\x6a\x96\x40\x4a\x0c\xc1\xe3\x4e\xe3\xfe\xb2\xd3\x13\x23\x57\x9b\xc2\xa9\x25\x4f\x06\xcf\x8e\xb2\x24\x98\x09\x9b\x7c\x46\x8c\x21\x2a\x9b\xd2\xff\x9d\xfb\x39\xcf\x83\x6c\x9c\xe8\x8f\x69\xb0\x14\xfd\x44\xee\x5e\x1f\xa2\x47\xef\x68\x40\x19\xbd\xe6\xc3\x0d\x1f\x53\x77\xd2\x6b\x76\xdb\xb8\xf4\x61\x32\x19\xd0\x6c\x06\xc7\x3e\xd4\x1b\xeb\xdc\xef\xf7\x93\xfc\xf0\x18\xd8\xeb\x9c\xeb\xcf\xf4\x30\x4b\x51\x45\x6d\xd4\x0d\xbb\x59\xa7\xeb\xad\xc3\x44\xb0\xda\x63\xd5\x10\x6d\x8b\x99\x79\x29\x7b\x77\x44\x43\xcf\xfa\xef\x81\xb7\xd2\x36\x30\x58\xd6\x43\x24\xd7\x26\x2b\x6d\xc1\x1f\x4a\x57\xa5\x21\x7b\xf9\xbc\xfb\x02\x1c\x14\x32\x68\x33\x4a\x5b\x0f\xf8\xb4\xc1\xb9\x63\xdd\x37\xb4\x5b\x3d\x66\x66\x77\x3f\xcd\x5d\x88\xd2\x1d\xbc\x69\xbf\x5c\xdf\x1a\xce\x85\x1b\x76\x4e\xad\x47\x49\xcf\x89\x74\xce\x6e\xe1\xf9\x60\x86\x26\xeb\x5a\x50\x63\x32\x4d\x35\x8a\x36\xed\x81\x8a\xf4\x04\xec\xc7\xdb\xdf\x05\xe8\x3f\x7b\x77\x4b\xb7\x27\xa8\xf1\x86\x4b\x59\x27\xb0\x47\x68\xbb\xe1\x58\xda\x76\x8f\x27\x13\xf9\x54\xb0\x2a\xaf\xf4\xc5\x04\x43\x3d\x6f\x65\x7b\x10\x87\x39\xb0\x0f\x2b\x03\x87\xc9\xdd\x6b\xb0\x79\xad\xa4\x3c\x9b\x67\x47\x7e\xdc\x62\xdf\x20\x77\xff\x66\x77\xab\x4b\xe8\xb4\x46\x4b\x17\x29\x1e\x02\x9a\x24\xf1\x9a\xdd\xfc\x90\x71\xc3\x2a\x38\x67\x34\xaa\xfe\xc9\x75\xf2\x2a\xf2\x7c\x0e\x3d\x45\xbe\x85\x6b\xd6\x99\x97\xde\xf7\xbb\xb9\x92\x31\x30\xb5\xcb\x86\xb2\xb5\xfb\xd3\xff\x80\x89\x2f\xd8\x3b\x9f\xb4\x76\x83\x52\x8c\xad\x33\x70\xd3\x80\xf3\x94\x7a\x6d\x54\x83\x7e\x38\xfb\x75\x79\x6e\x0e\xb2\xee\x60\x91\x23\xcd\xef\xe1\xc5\xe2\xbf\x73\x35\x7e\xb4\x09\x33\x34\xeb\xe1\x32\x66\x65\x59\x7c\x62\xe8\xcf\xd3\xe7\x77\xc2\x43\xb7\x9c\xab\x37\xc8\xe7\xdf\x10\xfa\xc7\x59\x09\x0c\x86\xae\x33\xa7\x57\x3b\xe7\x7f\x2f\x2c\x2e\xe6\x97\x93\x54\x20\x7d\xe1\xa4\x18\x01\x75\x4a\xd2\x05\x5f\x99\x93\xa1\xab\x5e\x3a\x52\xce\x63\x98\xbc\x2e\x3d\xeb\xcb\xdf\x01\x00\x00\xff\xff\x34\x12\xcb\xab\xf7\x1b\x00\x00")

func clusterroleRbacAuthorizationK8sIoAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoAdminYaml,
		"ClusterRole.rbac.authorization.k8s.io/admin.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoAdminYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoAsbAccessYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8c\xb1\x4e\x04\x31\x0c\x44\xfb\x7c\x85\x6b\xa4\xec\x8a\x0e\xa5\xa5\xa5\x5a\x09\x7a\x27\x3b\xe2\xac\xcd\xc5\x27\xdb\xd9\x82\xaf\x47\x1c\x57\x5f\x35\x4f\x33\xa3\xc7\x37\xf9\x82\xb9\xe8\x28\x64\x95\xdb\xc2\x33\x2e\x6a\xf2\xc3\x21\x3a\x96\xe3\xcd\x17\xd1\xf5\x7c\x4d\x87\x8c\xbd\xd0\x7b\x9f\x1e\xb0\x4d\x3b\xd2\x15\xc1\x3b\x07\x97\x44\x34\xf8\x8a\x42\xec\x35\x73\x6b\x70\x4f\x36\x3b\xbc\xa4\x4c\x43\xc7\x06\xd7\x69\x0d\x9f\xdb\x87\xff\x9d\x33\xad\x3c\x5c\x6a\x47\x76\xd8\x29\x0d\xb9\x9a\x1e\xb0\x67\xdb\xfa\x92\x88\x4e\x58\x7d\x28\x76\x74\x04\xee\xf8\x8d\xb8\xe7\x8d\xa3\x5d\xfe\x49\xfd\x51\xcd\x48\xbf\x01\x00\x00\xff\xff\xee\xb9\x5c\xb5\xe3\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoAsbAccessYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoAsbAccessYaml,
		"ClusterRole.rbac.authorization.k8s.io/asb-access.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoAsbAccessYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoAsbAccessYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/asb-access.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoAsbAuthYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x31\x8b\xe3\x40\x0c\x85\xfb\xf9\x15\x43\x9a\xc0\x41\x7c\x5c\x77\xb8\xbd\xe2\xfa\x2d\xb6\x97\xc7\x5a\x47\x6b\x5b\x1a\x24\x4d\x02\xfb\xeb\x17\x3b\x0e\xec\x26\x4e\xc2\xa6\xb2\x11\x4f\xdf\xd3\x3c\x09\x32\xbd\xa2\x1a\x09\xd7\x51\x1b\x48\x15\x14\xdf\x8b\xd2\x07\x38\x09\x57\xfd\x5f\xab\x48\x7e\x1f\xfe\x84\x9e\xb8\xad\xe3\xbf\xa1\x98\xa3\xbe\xc8\x80\x61\x44\x87\x16\x1c\xea\x10\x23\xc3\x88\x75\x04\x6b\x76\x53\x7f\xd0\x32\xa0\xd5\x61\x17\x21\xd3\x7f\x95\x92\x6d\x12\xed\xe2\x66\x13\x62\x54\x34\x29\x9a\x70\xa9\x4d\xad\x96\x21\xa1\x85\x18\x0f\xa8\xcd\x52\x4f\x8a\xe0\x38\xff\xb6\x38\xa0\xe3\x35\xee\xfb\xac\x92\x91\x6d\x4f\x6f\x5e\x91\x5c\xdb\x58\x69\xde\x31\xf9\x3c\x99\xe2\x81\xf0\xb8\x6a\xf7\xc0\xe3\x94\xc7\x4d\x3a\xa4\x84\xb6\xe0\xd7\x9f\xb3\xca\x47\x76\x4a\xf7\x0d\x5c\x7a\xe4\x1f\x81\x69\x84\x0e\x2f\x43\x59\x5f\xc1\x2c\xbd\xc0\x76\xe8\xf3\x77\x20\xf3\x6b\x38\xa3\x1f\x45\xfb\x07\x99\xa7\xd3\xb5\x2c\x62\x3b\x77\xde\xda\xf8\x64\xf9\xa4\xd3\x1d\x6a\xc9\xed\x6a\x3e\x0b\x98\xb8\xbb\x19\xfa\x22\xc9\x32\x50\xa2\xe7\xee\x53\xc6\x79\xaf\x8d\x4a\x8f\xba\x6a\xd2\x14\x6e\x07\x6c\x88\x5b\xe2\xce\xbe\x94\x88\xcd\x81\x4f\xef\x39\xd7\x2e\x66\xd8\xfe\xda\x86\xcf\x00\x00\x00\xff\xff\xb2\xa3\x7b\xd5\xc2\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoAsbAuthYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoAsbAuthYaml,
		"ClusterRole.rbac.authorization.k8s.io/asb-auth.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoAsbAuthYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoAsbAuthYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/asb-auth.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoBasicUserYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x31\x6f\xe3\x30\x0c\x85\x77\xfd\x0a\xc2\x7b\x7c\xb8\xed\xe0\xed\x70\xc3\x6d\x37\xdc\xd0\x9d\x96\x5f\x62\x35\xb6\xe4\x92\x54\x02\x74\xe8\x6f\x2f\xac\xb8\x40\x9a\xc4\x41\x9b\xc9\xb6\x44\xbe\xef\xd1\x8f\x3c\x85\x27\x88\x86\x14\x1b\x92\x96\x7d\xcd\xd9\xfa\x24\xe1\x95\x2d\xa4\x58\xef\x7f\x69\x1d\xd2\x8f\xc3\x4f\xb7\x0f\xb1\x6b\xe8\xcf\x90\xd5\x20\xff\xd3\x00\x37\xc2\xb8\x63\xe3\xc6\x11\x71\x8c\xc9\x4a\x8b\xce\x9f\x44\x69\x42\xd4\x3e\x6c\x6d\x6e\xef\xa0\x5e\xc2\x64\x85\xf2\x9b\xb2\x42\xc8\x7a\x36\xf2\x1c\x69\x07\xa3\x96\x35\x78\x0a\x71\x9b\x64\x2c\x2a\xc4\x6d\xca\x46\x93\xa4\x67\x78\xd3\xba\x68\xde\xf2\x97\x5b\x48\x84\xa1\xd8\xe4\x6c\x29\x4f\x1d\x1b\x1a\xaa\x4c\x32\x2a\x47\x14\x79\x44\x73\x22\x6c\x66\xb2\x93\x3c\x40\x1b\xb7\x21\x9e\xc2\x5f\x49\x79\x2a\x96\x37\x54\x55\xe5\x31\xd7\xd4\xe7\xf6\x1d\x91\x40\x53\x16\x8f\x7f\x3c\xe2\xa3\xfa\xad\x3a\xbb\x58\x0e\xe7\x5e\x75\x44\x07\x48\xbb\x1c\xed\x60\xab\xa8\x65\xbc\x35\xda\x52\xbc\x54\x09\x5e\x32\xd4\x2e\xe4\x87\xa0\xeb\xfa\x9f\xff\xd5\x7d\x8a\x3f\x25\x2b\x69\xc0\x8d\x09\xd6\x51\xab\x4b\xf3\x30\x62\x7e\x39\xb2\xf9\xfe\x1a\xa6\x96\x84\x77\x58\x25\x2c\xf7\x7e\x60\xd5\xef\x8d\xf1\x48\x22\xb7\xa2\xb8\x63\xfe\x81\x50\x14\xc3\x56\x73\x5b\xe2\x9f\xb7\x56\x70\x08\x38\x5e\x70\xbd\x80\x0d\xd7\xbc\xaf\x85\x72\x86\x60\xef\xa1\x77\x19\xef\x01\x00\x00\xff\xff\x51\x1c\x2c\x3a\x2e\x04\x00\x00")

func clusterroleRbacAuthorizationK8sIoBasicUserYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoBasicUserYaml,
		"ClusterRole.rbac.authorization.k8s.io/basic-user.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoBasicUserYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoBasicUserYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/basic-user.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoClusterAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x31\xaf\xd4\x40\x0c\x84\xfb\xfc\x8a\xd1\x6b\x9e\x84\x48\x10\x1d\x4a\x87\x28\x68\xa8\x4e\x02\x6a\x67\xe3\x63\x97\x97\xd8\x8b\xd7\x1b\x14\x7e\x3d\x4a\x5e\xee\x74\x91\x10\xa5\x47\x33\xb3\xdf\xda\x94\xd3\x37\xb6\x92\x54\x7a\xd8\x40\xa1\xa3\xea\x51\x2d\xfd\x21\x4f\x2a\xdd\xcb\x87\xd2\x25\x7d\xb7\xbc\x6f\x5e\x92\x8c\x3d\x3e\x4d\xb5\x38\xdb\x45\x27\x6e\x66\x76\x1a\xc9\xa9\x6f\x00\x12\x51\xdf\x23\x65\x1b\x81\x73\x8d\x66\x96\x12\xd3\xd5\xb7\xb2\xb2\x16\xe7\xb9\x55\x99\xd6\x1e\x4f\x6e\x95\x9f\xf6\xc8\xc9\x34\x72\x09\x96\xb2\xef\x60\x1f\x51\x6a\x66\x6b\x6b\x61\x83\x47\x72\x04\x12\x64\xb6\xab\xda\x0c\x92\x15\x14\x36\x27\x92\xc0\x23\x23\xbc\x52\x76\x7b\x2d\xf0\x3d\xb2\xe0\x87\x91\x38\x8f\x70\x05\x61\x2f\xfa\x9d\x3c\x26\x01\x21\x9b\xfe\xe4\xe0\x6f\xb7\xec\x8a\x48\x0b\xe3\x5a\xa7\x09\x41\xc5\x4d\x27\xe8\xc2\x86\x5f\x55\x9d\x40\x32\x1e\xa5\x33\xcf\x03\x5b\x89\x29\x6f\xe2\x09\x88\x17\xb6\x3b\x92\xca\x31\x1b\x17\xad\x16\xf8\x06\x79\xbc\xfa\x0a\xf9\xaf\xd5\xd7\x81\x4d\xd8\x79\xbf\x00\x55\xd7\x9a\x47\x72\x7e\xd8\x99\xd0\xcc\xfd\xed\xb7\x2d\x8d\x73\x92\xc6\xea\xc4\xa5\x6f\x5a\x50\x4e\x9f\x4d\x6b\xde\x0f\xd2\xe2\xf9\xcd\x73\x83\x3b\xc4\x49\x5c\xd8\x86\x07\xa1\x85\xa8\x5c\x0e\xe3\xd7\xcb\x97\xff\x79\xff\x06\x00\x00\xff\xff\x9c\xce\x56\x20\x3f\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoClusterAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoClusterAdminYaml,
		"ClusterRole.rbac.authorization.k8s.io/cluster-admin.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoClusterAdminYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoClusterAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/cluster-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoClusterDebuggerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x4f\xc3\x40\x0c\x85\xf7\xfb\x15\x56\x47\xa4\x34\x62\x43\xb7\xb2\x32\x45\x82\xdd\x49\x5e\xd3\x53\x13\x3b\xb2\x7d\x95\xca\xaf\x47\xbd\x32\x80\x60\xf4\x93\xbf\xf7\x3e\xde\xcb\x07\xcc\x8b\x4a\x26\x1b\x79\x3a\x72\x8d\xb3\x5a\xf9\xe4\x28\x2a\xc7\xcb\x8b\x1f\x8b\xf6\xd7\xe7\x74\x29\x32\x67\x7a\x5d\xab\x07\x6c\xd0\x15\x69\x43\xf0\xcc\xc1\x39\x11\xb1\x88\x46\x43\xfc\x7e\x12\xfd\xae\xd1\x1d\xe2\xe7\x72\x8a\x7b\x99\xdf\x3c\xb0\x75\x2a\xeb\x2d\xd3\x21\xac\xe2\xd0\x90\xff\xe6\xeb\x08\x13\x04\x9a\x05\xd7\xd0\xba\xcf\x1c\xf8\xc1\x09\x6f\xc8\x34\x3d\xbc\xba\x19\x63\x5d\x16\x58\xb2\xba\xc2\x73\xea\x48\x54\x06\xb8\x56\x9b\xf0\x3e\xbc\x35\xbb\x8e\xfa\xf6\xd7\xef\xbb\xe9\xe9\x4f\xd0\x3f\x3d\xa2\x0d\x61\x65\xf2\x44\x74\x85\x8d\xdf\xe4\x82\x48\x5f\x01\x00\x00\xff\xff\x91\xc3\x0a\x12\x34\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoClusterDebuggerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoClusterDebuggerYaml,
		"ClusterRole.rbac.authorization.k8s.io/cluster-debugger.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoClusterDebuggerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoClusterDebuggerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/cluster-debugger.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoClusterReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\xcf\x8e\xe3\x28\x13\xbf\xf7\x53\x58\x73\x19\xe9\x93\x32\xd1\x77\x5b\xe5\xba\x87\xbd\xec\x69\xa4\xdd\x7b\x19\x57\x1c\x26\x98\x62\xa0\x48\x4f\xf6\xe9\x57\x60\x6c\x63\x3b\x76\xd2\x71\xb6\x6f\x50\xff\xa1\x7e\x14\x05\x60\xe4\xdf\x68\x9d\x24\x7d\x28\x6c\x09\xe2\x1b\x78\x3e\x91\x95\xff\x00\x4b\xd2\xdf\xce\xbf\xb9\x6f\x92\xf6\x97\xff\xbf\x9d\xa5\xae\x0e\xc5\xef\xca\x3b\x46\xfb\x9d\x14\xbe\x35\xc8\x50\x01\xc3\xe1\xad\x28\x40\x6b\xe2\xa8\xe2\xc2\xb4\x28\xc6\x66\xc8\xa0\x76\x27\x79\xe4\x60\xcc\x5d\x1d\x63\xb3\x23\xad\xae\x87\xe2\x0b\x5b\x8f\x5f\xa2\xca\x2d\xf7\xbe\x44\xab\x91\x31\x46\x01\x9e\xc9\x9b\x0a\x18\x33\x3d\x0d\x0d\x1e\x0a\xd1\xc6\xb5\xb3\x08\x15\xda\x37\xeb\x15\xba\xc3\xdb\xae\x00\x23\xff\xb0\xe4\x4d\x8c\x6a\x57\x7c\x09\x1a\x16\x1d\x79\x2b\x30\xd1\x4a\xa9\x2b\xa9\x6b\x17\x27\x82\x1a\x43\x1a\x35\x3b\x06\xf6\x0e\x3b\xaa\x3e\xca\xba\x01\xd3\x4e\x51\x57\x86\xa4\xe6\x34\xbb\x60\x37\x54\xb2\x91\x6c\x41\xd7\x49\x2f\xc4\xe6\x0c\x88\xd9\x74\xdf\x9a\x6f\xa9\x54\x61\x36\xca\x59\x26\x64\xc6\x31\x6a\xbe\x90\xf2\x0d\x0a\x05\xb2\x59\x63\xad\x29\x2f\x50\x47\x2a\x54\x0d\x83\x7d\xda\x98\x81\x80\x17\x29\x42\x5a\x06\x8a\xa2\x8c\x3d\x36\xc4\xd8\x18\x05\x9c\xdc\x5a\x34\x4a\x8a\x98\x54\x41\x9a\x2d\x29\x85\x76\x8d\xb5\x77\x02\x14\xae\x0a\x0c\xee\xba\x8c\xfe\xf4\xc4\x70\x8b\x94\x0b\x3b\x14\xde\x4a\xbe\x06\x5b\xf8\x8b\x05\x69\xc7\x16\xfa\x74\x3a\xb4\x17\x29\x10\x84\x20\x3f\xa1\x8d\x27\x83\xcd\x0b\xda\x32\x81\xa9\x46\x4e\x48\x70\xed\xe0\x1d\x58\x9c\xe6\x40\x84\xaa\x91\x2e\x9c\x3a\x8b\xb5\x0c\xfe\xb3\xd3\x36\x87\x68\xe3\xc3\xd9\xd2\xf5\x3b\x96\x27\xa2\x73\x0b\x47\xdf\x2a\xb5\x41\x5d\x40\xc9\x6a\x55\xe6\x99\x20\x4d\x04\xfc\x24\x98\x21\x07\x16\x2f\xd2\xf5\x21\x54\x80\x0d\x69\x87\x3c\x9d\xe6\x9b\x5f\xa1\x51\x74\x6d\xfa\x13\x93\xcd\xb3\x8c\x8f\xa8\x79\x9a\x23\x10\x7a\x17\xd9\x7c\x0e\x97\xa9\xe7\x30\xc4\xa3\x57\xbd\x76\x4e\xc8\xd4\xc7\xe4\x2d\x29\x36\x12\x7f\x31\xea\xb8\x43\x8b\xa9\x15\xde\x31\x35\x1d\xb1\xc2\xa3\xd4\x72\x48\xeb\x22\x77\x6b\x64\x0f\xc1\x0e\x8c\x1c\x21\x3f\x9b\x6f\xf3\xef\x99\xc2\x86\xb7\xc5\x65\xe2\x34\x56\x7f\xd2\x0c\xca\x50\xd5\x49\x76\xb5\x62\x89\xb9\x29\x9c\x32\x92\xe7\x99\xb1\xa4\x7f\x50\xe9\x46\x93\x1c\x51\x3d\x73\xcc\x78\x22\x82\x01\x27\xf3\x30\xfe\xfb\x63\xb5\x71\xc7\x77\x85\xd4\xb5\x45\xd7\x5d\x96\xfd\xec\x81\xbd\xda\x15\x1a\xf9\x9d\xec\xd9\x90\x92\x42\xe2\x70\xfb\xa4\x22\x3d\xa2\x6f\x3a\xff\x5b\x6e\x20\xc7\x64\xa1\x0e\x77\x6c\xbf\x4a\x3e\x49\x5b\x19\xb0\x7c\xed\xf3\xf5\x64\xee\x63\xfb\xb0\x78\x06\xfb\xee\xe2\x09\xd3\x69\x6f\xa5\xae\x17\xcd\xcf\xb7\xff\x09\x3f\x51\xfb\x3a\x37\x6e\xa8\xaa\xa4\xb3\xde\x84\x9d\x2d\x7d\x55\x77\x89\xbb\xc5\x98\xf6\x21\x73\x00\x3c\x11\xd9\x62\x47\x7b\xe3\xb8\xb7\x1d\xa4\x25\x85\xe3\x8e\x70\xa0\x27\xb4\x4c\x25\x3a\xd6\x13\xf1\x39\xe4\x70\x67\x2f\xa7\xdf\x50\x65\x2c\x26\xc4\x3f\xe3\xa0\x45\xee\xa2\xfd\x1b\xc8\x6e\xfb\x42\x60\x06\x71\x6a\x9e\x07\x9f\x40\xcb\xf2\x18\x8e\x15\xae\xdc\x7e\x99\x90\xac\x75\x2c\x1d\x3f\x3d\xba\x84\x93\x65\xf6\x1e\x8c\xb1\x74\x01\x75\x4f\x6e\x4b\x59\x8e\xaf\x85\xdd\xca\x53\xe6\x35\x28\xb2\xe8\xd8\xb6\x9d\xf5\xeb\x11\x96\xd6\x50\x7a\xa9\xaa\x3b\xb1\x47\x99\xb6\x6f\x74\x33\xc2\x3e\xf5\x95\x19\x27\x1f\xee\x2b\x64\x90\x6a\x44\x6a\x1f\x07\x1b\xf6\xdd\x18\x77\x27\xe4\xe1\x46\xcb\xe3\x9e\x51\xfb\x77\xca\x9c\x73\xeb\x76\xec\x79\xdb\xb1\x23\x9b\x70\xfa\xd6\x17\x11\x65\x5c\x36\x94\xb5\x06\xf6\x76\x44\x63\x8b\xd0\xcc\x24\x23\x75\x4e\x18\x5d\xce\x03\x9d\xa1\xfe\xac\xd5\xa4\x38\x14\x5c\xdb\x4b\x76\xe2\x73\xc9\x01\x85\xb3\x76\xc7\x41\x94\x11\x4a\xa2\xe6\xd1\xc9\xdc\xb6\x34\x63\xe9\x07\x0a\xbe\xe3\x3b\x49\x8d\x8a\x54\xa2\x6d\x73\x1f\x9f\xa9\x77\x9c\x83\x31\x4a\x62\xd5\x95\x92\xf9\x9b\xf7\x83\x9c\x57\xe0\xdb\x92\xe7\x7b\x88\x88\x32\x2e\x1b\xbe\xc2\x71\x6a\x5c\x1e\x2b\xc7\x49\x38\xfd\xd7\xc4\xf6\xf4\x56\xdf\x79\x22\xc7\xce\x97\xba\x6b\x53\x34\xf2\xe8\x07\xe7\xf9\x68\xbb\x6e\xe6\x4e\xb8\xab\x5f\x13\x4f\xb5\x17\x0f\xb9\x8d\x3f\x56\xa0\x14\x89\x17\x1c\xa4\xee\xdf\xe7\xfe\x49\x12\xe1\x95\x30\xf9\x27\xea\x66\x79\x39\xef\x68\x52\x3b\x06\x2d\x26\x92\x9f\x12\x6d\x69\xe9\x8c\x76\x3d\x90\x9e\xfa\x0a\x78\x7b\x87\xf6\x4e\x4c\x75\xd4\x6a\x6b\x6e\x85\x9a\x25\x77\x38\x0e\xca\x89\x74\x6d\xc0\x98\xbe\x8f\x08\x8c\xcf\xeb\x85\x02\x9e\x54\x47\x03\x11\xd2\x6d\xf1\x22\xf1\xdd\x0d\x6c\xe7\xcb\x50\x3c\xe7\xdc\x65\x3d\x87\xea\x98\xd4\xe2\x37\xef\x88\xb7\x64\xee\xb6\x42\xb6\x0f\xc2\x22\x30\xde\xfc\xab\x78\xe0\xf1\xb0\xbe\x96\x2c\xe2\x97\x2c\xe7\xc1\xb0\x03\x00\xc4\x7a\xdc\x4c\x67\xd4\x1f\x32\xfc\xb1\x82\x36\x7d\xc8\x5d\xf3\xd5\xcd\x98\xf9\x56\xac\xca\x4d\x65\x1e\x8d\x7b\xfa\xf8\x8d\xff\xed\x0d\x86\xee\x7b\xf4\x03\x6f\x50\x3c\xda\xb3\xdc\x34\x19\x0a\xc0\xed\xb8\x06\x63\x9a\xf4\xf7\xa4\xfb\xd7\xf7\x3f\x93\xd4\xd7\xff\x7d\x7d\xbc\x59\x7a\xb8\xa7\x57\xb4\xa9\xef\x9b\xde\x16\x79\x13\xe1\x5d\xea\x48\xef\x1b\xff\x37\x00\x00\xff\xff\x88\xc7\x3c\x3a\x6a\x1a\x00\x00")

func clusterroleRbacAuthorizationK8sIoClusterReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoClusterReaderYaml,
		"ClusterRole.rbac.authorization.k8s.io/cluster-reader.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoClusterReaderYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoClusterReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/cluster-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoClusterStatusYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x51\x3d\xaf\xdb\x30\x0c\xdc\xfd\x2b\x88\x37\x16\x90\xfc\x92\xa9\xf0\x56\x74\xed\x14\xa0\xdd\x69\x9b\xb1\xd5\xd8\xa4\x21\x52\x0e\x92\x5f\x5f\xf8\x2b\x89\x91\xbe\x8d\x77\xb8\x3b\x1e\x25\x1c\xc2\x1f\x8a\x1a\x84\x0b\x88\x25\x56\x1e\x93\xb5\x12\xc3\x1d\x2d\x08\xfb\xcb\x77\xf5\x41\xf2\xf1\x90\x5d\x02\xd7\x05\xfc\xec\x92\x1a\xc5\x93\x74\x94\xf5\x64\x58\xa3\x61\x91\x01\x20\xb3\xd8\x6c\xd1\x09\x02\xec\x63\x64\x20\xd6\x36\x9c\x6d\x0a\xd3\x9b\x1a\xf5\x4e\xb8\xbb\x15\xf0\x61\x31\xd1\xc7\x6c\xd9\x89\x6a\xd2\x2a\x86\xc1\xe6\x62\x3f\x20\x29\x45\xb0\x16\x0d\x2a\x64\x68\xc8\xa0\x44\x0d\x15\x54\x4b\x1f\x50\x43\x4b\x0a\x81\xcf\x12\xfb\x65\xe7\x9c\xf9\xbf\x93\x52\x49\x91\xc9\x68\xbe\x0c\x93\x49\x1a\x6a\x34\x7a\xe9\xc2\xd8\x53\xb1\x65\xbb\x25\x3b\x8b\xa9\x23\x2d\x32\x07\x2c\x7c\x22\x95\x14\x2b\xfa\x7d\xfa\x35\xdf\xeb\x20\x6f\x09\x3b\x6b\xef\x3b\x90\x7f\xcb\x00\x46\x8a\xe5\x2a\x6a\xc8\xbe\xf4\x8f\xcb\x2f\xec\xc0\xec\x77\x90\xe3\x10\x1e\xc3\x0b\xa7\xcf\x69\x63\xe5\x21\x95\x17\xed\xf4\xb2\x13\x1c\x8f\x0b\xd6\x2b\x36\x0d\xc5\x87\xf6\x89\x37\xc7\xca\xf8\xbf\xba\x55\x5a\x19\x77\xf4\x9f\xfe\xd3\x0f\xa5\x1b\x0f\x6b\xb8\x3e\x77\x4e\x63\xbe\xcc\xfe\x4a\x5d\xe7\x2e\x2c\x57\x7e\x23\xb6\x2d\xef\xaf\xf3\x2f\x00\x00\xff\xff\x72\x86\x5b\xa5\x8f\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoClusterStatusYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoClusterStatusYaml,
		"ClusterRole.rbac.authorization.k8s.io/cluster-status.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoClusterStatusYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoClusterStatusYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/cluster-status.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoCustomerAdminClusterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8d\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\x17\xb0\x8b\x6e\x85\xd7\x0e\xdd\x3b\x74\xa7\xe5\x8f\x84\xb0\x2c\x0a\x24\xe5\x02\x3d\x7d\x11\x47\x99\xf8\x40\xbc\x47\x72\x93\x1f\x98\x8b\xd6\x85\x6c\xe5\x3c\x73\x8f\xbb\x9a\xfc\x71\x88\xd6\x79\xff\xf0\x59\xf4\xed\x7c\x4f\xbb\xd4\x6d\xa1\xcf\xd2\x3d\x60\xdf\x5a\x90\x0e\x04\x6f\x1c\xbc\x24\xa2\xca\x07\x16\xca\xdd\x43\x0f\xd8\xc4\xdb\x21\x75\xca\x4f\x39\x59\x2f\xf0\x25\x4d\xc4\x4d\xbe\x4c\x7b\xf3\x47\x32\x91\xc3\x4e\xc9\xc8\x1c\x5c\xf4\x36\x7e\x25\x22\x83\x6b\xb7\x8c\xa1\x8d\x33\xc3\x5e\x4d\x77\x98\x27\xa2\x13\xb6\xbe\x14\x03\x07\x2e\xdc\x50\x30\xf0\x86\xb8\x66\x11\x7f\x42\xe3\xc8\xf7\x8b\x7a\xdb\x5e\xc1\xef\xb5\xfc\x0f\x00\x00\xff\xff\xf0\x55\x2e\xf3\x08\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoCustomerAdminClusterYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoCustomerAdminClusterYaml,
		"ClusterRole.rbac.authorization.k8s.io/customer-admin-cluster.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoCustomerAdminClusterYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoCustomerAdminClusterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/customer-admin-cluster.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoCustomerAdminControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\x5b\x26\xbb\xe8\x56\x68\xed\xd0\xbd\x43\x77\x5a\x22\x12\x22\xb2\x28\x90\x54\x02\xf4\xf4\x45\x54\xbb\x43\x8d\x4c\x7a\x10\xf9\xf1\x3e\xb1\xf1\x17\xa9\xb1\xd4\x08\xba\x60\x9a\xb1\xfb\x45\x94\xbf\xd1\x59\xea\x7c\x7d\xb3\x99\xe5\xe5\xf6\x1a\xae\x5c\x73\x84\xf7\xd2\xcd\x49\x3f\xa5\x50\x58\xc9\x31\xa3\x63\x0c\x00\x15\x57\x8a\x90\xba\xb9\xac\xa4\x13\xe6\x95\xeb\x94\xa4\xba\x4a\x29\xa4\x41\x7b\x21\x8b\x61\x02\x6c\xfc\xa1\xd2\x9b\x3d\x52\xd3\x73\x65\x00\x50\x32\xe9\x9a\x68\x5f\x95\x42\x0b\xd7\xcc\xf5\x6c\x01\xe0\x46\xba\x6c\x93\xa4\x84\x4e\x03\x33\x15\xda\xf0\x4c\x3e\xde\xc2\xf6\x0b\x0d\x3d\x5d\x06\xf5\x96\xf7\xc0\x7d\x7c\x1e\x7a\x9d\x4e\xc7\x02\x8f\x1b\xad\x61\xa2\x7f\xfa\x83\xe8\xfe\x27\xda\x9a\xfd\x04\x00\x00\xff\xff\x73\xe4\x22\xda\x65\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoCustomerAdminControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoCustomerAdminControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/customer-admin-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoCustomerAdminControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoCustomerAdminControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/customer-admin-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoCustomerAdminProjectYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8b\xb1\x52\x03\x31\x0c\x05\x7b\x7f\x85\xbb\x54\x77\x0c\x1d\xe3\x96\x82\x9e\x82\x5e\xb1\xdf\x24\x22\xb6\x65\x24\x39\xcc\xf0\xf5\xcc\x1d\x47\xba\xd5\x5b\x2d\x0d\xfe\x80\x1a\x4b\x4f\x51\xcf\x94\x57\x9a\x7e\x15\xe5\x1f\x72\x96\xbe\xde\x5e\x6c\x65\x79\xba\x3f\x87\x1b\xf7\x92\xe2\x6b\x9d\xe6\xd0\x77\xa9\x08\x0d\x4e\x85\x9c\x52\x88\xb1\x53\x43\x8a\x79\x9a\x4b\x83\x2e\x54\x1a\xf7\x65\xa8\x7c\x22\x7b\xd0\x59\x61\x29\x2c\x91\x06\xbf\xa9\xcc\x61\x5b\xb2\xc4\xd3\x29\xc4\xa8\x30\x99\x9a\x71\x6c\x95\x1b\xbb\x52\xbf\xc0\xf6\xfb\x5f\x7f\x4d\x71\xda\xa6\x3b\xf4\x7c\xfc\x5e\xe0\x47\x63\x7f\xf0\x4d\x9e\xaf\x3b\x65\x05\x39\x76\x2c\xa8\x38\x70\x3c\xfc\x1c\x65\xf3\xbf\x01\x00\x00\xff\xff\x87\x95\xb1\x20\xfe\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoCustomerAdminProjectYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoCustomerAdminProjectYaml,
		"ClusterRole.rbac.authorization.k8s.io/customer-admin-project.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoCustomerAdminProjectYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoCustomerAdminProjectYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/customer-admin-project.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoEditYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x3f\x73\x33\x27\x13\xef\xf5\x29\x18\x37\x6f\xf3\xca\x9a\x74\x19\x75\x99\x14\x69\x52\x3d\x99\x49\xbf\x07\xab\x13\x16\xc7\x12\x58\x64\x3b\x9f\x3e\x03\xc7\x49\x48\x77\x67\xc9\x8a\x33\xf7\x24\x6e\x0c\xcb\xb2\x7f\x7e\xfb\xd3\x02\x07\x6d\xeb\xb1\x05\xd6\x64\xbf\x45\x83\xdb\x95\x10\xd2\xc4\xc0\xe8\xbf\x91\xc1\xdf\xd0\xa0\x64\xf2\x21\xc9\xd7\xa2\x03\x96\xfb\x5f\xa1\x41\x93\x05\xe9\xcf\x37\x20\x9f\x21\xf2\x9e\xbc\xfe\x33\x9b\x79\x3e\xfc\x18\x9e\x35\x6d\x06\xcb\xb8\x66\x5a\xa3\xd2\xbc\x15\x4f\xec\x23\x3e\xad\xc0\xe9\xdf\xd1\x07\x4d\x76\xfb\xc1\xfe\xe3\x0f\xab\x83\xb6\x6a\x2b\x7e\x3e\xc7\xb3\xea\x90\x41\x01\x43\x72\x0f\xd6\x12\xe7\x2d\x25\x1a\x72\x68\xc3\x5e\xef\x38\x6d\x57\x18\xa4\xd7\x8e\xb3\x97\x9f\x44\x0c\xe8\x05\xef\x81\x85\x04\x2b\xa4\x47\x60\x14\x60\x95\x48\x91\x89\x8e\x02\x0b\x6a\x5e\x50\x72\x10\xda\x0a\x10\xce\x53\x9a\xfd\xbf\xa4\xd9\xc4\x7e\xa3\x25\x16\xd1\xa9\xb4\x99\xf7\x38\x68\xfd\x2f\x88\x0e\xbb\x06\x7d\xd8\x6b\xf7\xbc\x9a\xc3\x25\x36\xe8\x2d\x32\xf6\xf0\x44\xa6\xde\xd2\x56\x3c\xed\xc0\x04\x7c\x5a\x09\x61\x2a\x70\x2f\xf5\x1b\x22\x0e\xec\xc1\x39\x6d\xdb\x1e\xb7\xb5\xc2\x1d\x44\xc3\x61\x25\x84\x85\x0e\xb7\x39\x99\x95\x8f\x06\xc3\x76\xb5\x16\xe0\xf4\x2f\x9e\xa2\x2b\xd5\x7b\x4a\x0e\x3c\x06\x8a\x5e\x62\x91\x39\x52\xe1\x34\xd8\x00\x33\xc8\xfd\x79\x8e\x6f\x28\xcf\x33\x47\x9e\x77\xe4\x5f\xc1\xab\x4a\xe8\xe9\xed\x7d\x25\xc4\x11\x7d\x53\x6c\xf6\xe0\xe6\xa1\x42\x83\x17\x43\x49\x26\x31\x4a\x93\xcd\xc2\x16\x39\xff\x37\x3a\xf4\x03\x97\x18\x96\x47\x3d\x36\x79\xf8\x9a\x85\x77\xe5\x23\xc9\xee\x74\xdb\x81\xeb\xb3\x42\xab\x1c\x69\xcb\x25\xc7\x44\xba\xc0\x68\xf9\x48\x26\x76\x28\x0d\xe8\xae\x5f\xf2\xe8\x8c\x96\xb9\x4e\x92\x2c\xfb\x14\xa6\xff\x68\x69\x13\x24\x98\x3e\xbc\x80\xd2\x63\x71\x11\xd0\x1f\xb5\x44\x90\x92\xa2\xbd\x94\x5d\x4e\xbe\x37\xe0\x1a\x6d\x95\xb6\x6d\x81\xed\x88\x43\xf0\x46\x77\x9a\x3d\xd8\xb6\xc4\x9f\x78\x16\x1c\xa4\x0c\x02\x03\xc7\x8a\x3d\x86\xda\xf3\xa4\x5a\x9c\x03\xb0\xd6\xe8\x63\xf9\x23\x12\xc3\x94\xe8\xac\x5c\xc1\x35\xc2\xe0\x13\xe9\x9e\xd3\xf8\x3a\x9b\xe3\xda\x57\x86\x75\x97\xd8\x47\x36\x95\x66\x64\x0d\x5c\xe6\xeb\x95\x3d\x05\xd8\x91\x0d\x03\xb5\x14\x3a\x43\xef\xdd\xa9\x32\xd5\x7c\x93\x30\x6d\x40\x1e\x46\x0b\x67\x96\x96\x2a\x9c\xcc\x55\xf3\x9a\xcb\x0c\x8c\xbb\x68\x4e\x6a\xb5\xe0\xa4\xb7\x00\x67\x53\xbb\x4c\xee\xb5\x6d\xc7\x48\xe5\x26\x4b\x96\xc1\x38\x52\x83\x66\xff\xfb\x5d\x20\xd4\xa6\xe8\x5e\xb7\x26\x4f\xf6\x85\x9a\x1e\xd6\x32\x58\x20\x3a\x7c\x63\xb4\xe9\xec\xfd\xc7\x19\xa7\x6d\xeb\x31\x84\xa1\x71\x20\xbf\x92\x3f\x38\x32\x5a\x6a\x1c\x71\xf0\x03\x4e\xde\x68\xc0\x0b\x60\x98\x93\x78\x9f\x3c\x4d\x95\x0e\x3e\xe6\x5b\x47\x13\x55\x8b\xd7\x6d\xe0\xde\xfe\x52\xd0\xd2\xb6\x2d\xd7\xa1\x89\x16\x36\x02\x74\xa9\xa3\x64\x2d\x9a\xa8\x8d\x7a\xae\xef\x5f\x13\x27\x4c\xd2\xe9\xcf\xe7\x30\x12\x6c\x5e\xb1\xd9\x13\x1d\xaa\x95\x7f\x49\x46\xc3\xb9\xf7\xe8\x21\xf2\x79\xf0\x36\xda\x06\x06\xcb\x7a\xc8\x64\x6e\xb1\xd1\x16\xfc\x7b\x1d\xaa\x34\x64\xa7\x7f\x33\x5f\x80\x83\x42\x06\x6d\xae\xca\x56\x00\x1f\x37\xc9\x3b\xec\xbe\xa0\x3d\x68\x7b\x65\x30\x5f\x71\xd3\xe0\xa8\xf1\x75\x36\xec\x74\xa2\xde\xb0\x7e\x6e\x5a\x35\x29\x47\xd2\x25\xfb\xcc\xe3\xc9\x0c\xed\x79\x2e\xa9\x6b\x0a\x8d\x35\xaa\x06\x7f\x3f\x5b\x1e\x81\xfd\x74\x6f\x9c\x80\xfe\xef\xde\xfa\xd2\xbd\x0b\x5a\xbc\x11\x52\xd6\x09\xec\x11\xba\x7e\x78\x2d\xed\xfa\x57\xd7\x48\x3e\x16\x6c\xea\xc7\x40\xb5\xc0\xd0\x2e\xdb\xcf\x3e\x89\xc3\x12\xd8\x87\x8d\x81\xf7\xd1\xad\x6d\xf0\x39\xd7\x48\x1e\xad\x73\x7a\xcd\x4e\x97\x64\xce\x45\x79\xec\xdf\x70\x52\xb4\x26\xb2\x98\xb3\x9b\x9f\x38\x37\xac\x82\x73\x46\xa3\x2a\x9f\x66\x46\xef\xa5\xc7\x6b\xe4\x29\xf2\x2d\xdc\xb2\xce\xb2\xf4\xbd\x3f\xcc\x8d\x8c\x81\xa9\x5b\xef\x29\x7b\xbb\xbf\xbc\x9f\x70\xf1\x05\xbf\x0d\xc6\xce\x19\xb8\xe9\xd0\x79\x92\xe9\x0e\xad\x06\xfd\x70\xb1\xbb\x3e\xb9\x06\x59\xdf\xda\xe5\x95\xe6\xf7\xf0\xda\xf8\xef\x5e\x6b\x0d\x2d\xda\xde\xaf\x59\x5a\xb7\x87\x18\xca\x89\xf6\x00\x57\xcb\x17\x0d\x09\x0c\x86\xe6\x4b\x56\xd4\x2e\x89\x57\x84\xd5\x77\xa5\x69\x74\xaa\x14\x2b\xa0\x66\x22\x3c\xa3\x33\x11\x2b\x73\x72\x34\x1b\xa5\x23\xe5\x3c\x86\xd1\x93\xec\xd1\x58\xfe\x0a\x00\x00\xff\xff\x1c\xe8\x27\x6e\x3a\x17\x00\x00")

func clusterroleRbacAuthorizationK8sIoEditYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoEditYaml,
		"ClusterRole.rbac.authorization.k8s.io/edit.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoEditYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoEditYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/edit.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoKubeStateMetricsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xbb\xae\xdb\x30\x0c\xdd\xfd\x15\x82\xe7\x3a\x45\xb7\xc2\x6b\x87\xee\x1d\xba\x14\x19\x68\x89\x49\xd8\x48\xa4\x4a\x52\xee\xe3\xeb\x8b\xf8\x31\xb4\xd7\x17\xc8\xdd\x68\x1e\xe3\x3c\x78\x04\x95\xbe\xa2\x1a\x09\x8f\x41\x27\x88\x27\x68\x7e\x13\xa5\x3f\xe0\x24\x7c\xba\x7f\xb4\x13\xc9\xfb\xf9\x43\x77\x27\x4e\x63\xf8\x94\x9b\x39\xea\x17\xc9\xd8\x15\x74\x48\xe0\x30\x76\x21\x30\x14\x1c\xc3\xbd\x4d\x38\x98\x83\xe3\x50\xd0\x95\xa2\x75\xda\x32\xda\xd8\x0d\x01\x2a\x7d\x56\x69\xd5\xc6\xf0\xad\xef\xcf\x5d\x08\x8a\x26\x4d\xe3\x03\x0e\x61\x08\x51\xf8\x42\xd7\x02\xd5\x96\x4f\xc3\xa8\xe8\xeb\xcc\x92\x70\x9d\xaa\xa4\x1d\xd6\x99\xe2\xb6\xdd\x99\x7e\x34\x71\xd8\x57\x35\x53\x5c\x42\x44\x61\x57\xc9\x19\x75\x85\x32\x15\x72\x05\xbe\xee\x9c\x8f\xfc\xe6\xc8\x3e\x4b\x6e\x05\x63\x06\x2a\xc7\xd0\x66\x07\x0a\x5a\x85\x5d\x1d\x39\x55\x21\x5e\xbc\xce\xa8\xd3\x92\x30\x93\x79\xff\x2e\xf4\x3f\xc1\xe3\xad\x3f\xff\x7f\x00\xfc\xe5\xc8\x8f\xab\xdb\xd1\x29\x12\x60\x11\xb6\x3d\x7e\xc2\x9a\xe5\x77\x41\xf6\x7f\xb2\x6d\xf8\xb3\x92\x50\xeb\xa1\xd8\xd2\xd7\xa5\xe5\x37\xd2\x4d\xdb\xfa\x65\x8f\x2a\xfc\x5d\xa6\xd5\xea\x36\x3c\xed\xb1\xb9\x58\x84\x4c\x7c\x3d\xa2\x5e\x1e\xa6\xb0\x43\xae\x92\xf6\x7f\xd7\x5a\x5f\x55\xf8\x1b\x00\x00\xff\xff\xcb\xc0\x32\xbf\xe1\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoKubeStateMetricsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoKubeStateMetricsYaml,
		"ClusterRole.rbac.authorization.k8s.io/kube-state-metrics.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoKubeStateMetricsYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoKubeStateMetricsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/kube-state-metrics.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoNamespaceViewerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x6b\xc4\x30\x0c\x85\x77\xff\x0a\x71\x7b\x52\xba\x15\xaf\x1d\xba\x77\xe8\xae\x38\x6a\x22\xe2\x58\x41\x92\x1d\xe8\xaf\x2f\xe7\x1e\xa5\x70\xd0\x5b\xc4\xe3\xf1\x3d\x49\x0f\x0f\xfe\x20\x35\x96\x12\x41\x27\x4c\x23\x56\x5f\x45\xf9\x0b\x9d\xa5\x8c\xdb\x8b\x8d\x2c\x4f\xed\x39\x6c\x5c\xe6\x08\xaf\xb9\x9a\x93\xbe\x4b\xa6\xb0\x93\xe3\x8c\x8e\x31\x00\x14\xdc\x29\xf6\x69\x07\x26\x1a\x1a\xd3\x49\x1a\xb4\x66\xb2\x18\x06\xc0\x83\xdf\x54\xea\x61\x57\x78\x80\xcb\x25\x00\x28\x99\x54\x4d\x74\xf3\x7e\xc3\x16\x00\x1a\xe9\x74\xf3\x33\x9b\x77\x71\xa2\xa7\xb5\xab\x85\xfc\x7e\x27\xce\x3b\xdb\xb5\x88\xd2\xc2\xe6\xfa\xb7\xc0\xfd\xb5\x86\x99\x67\x74\x2e\xcb\x49\xd3\x2a\xb2\x25\x29\x9f\xbc\xd4\x9f\x98\x75\x66\xaf\xfe\x2f\xf1\xf8\xc9\xef\x00\x00\x00\xff\xff\x37\xaa\x36\xb6\x5e\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoNamespaceViewerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoNamespaceViewerYaml,
		"ClusterRole.rbac.authorization.k8s.io/namespace-viewer.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoNamespaceViewerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoNamespaceViewerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/namespace-viewer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoRegistryAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x54\xb1\x92\xd3\x30\x10\xed\xfd\x15\x9a\xf4\x4e\x86\x8e\x71\x4b\x41\x4f\x41\xbf\x96\x1f\x8e\x38\x59\xd2\xec\xae\x72\x13\xbe\x9e\x91\xe2\xe3\x12\xfb\x1c\x02\xc3\x0c\x50\x79\xfd\x56\xbb\xef\xe9\xad\x24\x4a\xee\x33\x58\x5c\x0c\x9d\xe1\x9e\xec\x9e\xb2\x1e\x23\xbb\x6f\xa4\x2e\x86\xfd\xd3\x7b\xd9\xbb\x78\x38\xbd\x6b\x9e\x5c\x18\x3a\xf3\xc1\x67\x51\xf0\xa7\xe8\xd1\x4c\x50\x1a\x48\xa9\x6b\x8c\xa1\x10\xa2\xd6\x12\x29\xbf\xc6\xdc\xb6\x89\x09\x41\x8e\xee\x8b\x96\x66\x72\x16\xc5\xd4\xc6\xe0\xcf\x9d\xd9\x29\x67\xec\x6a\xc9\x5b\xf4\xb9\x07\x07\x28\xaa\x0a\xca\x1a\x73\x1a\x48\x71\x55\x17\x68\x42\x67\x18\xa3\x13\xe5\x73\x4b\xc3\xe4\x42\xc3\xd9\x43\xba\xa6\x35\x94\xdc\x47\x8e\x39\x55\x55\xad\xd9\x95\x0a\x86\xc4\xcc\x16\x33\x26\xb0\x0c\x95\x39\xe6\x93\xb3\x20\x6b\x63\x0e\x15\x3b\x81\xfb\x79\xa1\x65\x90\xa2\x86\x03\x3c\x6e\x42\x1b\xbd\x87\x2d\x9a\x2b\x38\x42\xeb\xd7\x3b\xb9\x04\x89\xd4\x1e\x6b\x74\xd9\x40\x0d\x9f\x2b\xf8\xb6\xc8\xd6\xb8\x89\x46\xdc\x38\xb7\xd6\x5e\xd7\x88\x32\x68\xba\x84\x4b\x74\xa2\x94\x5c\x18\x57\xf8\x1a\x38\x5c\xfb\x70\x95\x50\x1a\xff\x33\x1f\x52\xe4\x8d\xd1\xfd\x21\x0a\x39\x78\x3a\x83\x17\x1c\x2f\x7b\x9d\x37\xb6\xc5\xb5\x7d\x31\xd6\x9c\x1c\x3d\x7a\x17\x86\x1f\x13\x2c\xc0\x5f\x9a\xc6\xe6\xe3\xf0\x6f\xcb\xfe\x0d\xd7\x7d\xb4\xe4\x5f\x30\xb2\x16\x22\x8c\x93\xc3\xb3\xbc\xa6\x25\xf7\x5f\x61\x75\x9d\x9d\x13\xf5\x01\x7a\xc5\x1f\x38\x8a\x8f\x59\x7b\x8f\xfc\xd1\xf3\xbe\x68\x59\x1e\x50\x49\x64\x97\x13\x2a\xb6\x6f\xd9\x99\x38\x16\x05\x3f\x31\x72\x5e\xb5\xe8\x7b\x35\xee\x7b\x14\xbf\x74\x4f\x36\x87\xf5\xb0\x55\xdf\x03\x00\x00\xff\xff\xef\x0a\x90\x9c\x08\x07\x00\x00")

func clusterroleRbacAuthorizationK8sIoRegistryAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoRegistryAdminYaml,
		"ClusterRole.rbac.authorization.k8s.io/registry-admin.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoRegistryAdminYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoRegistryAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/registry-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoRegistryEditorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x52\x3d\x6f\xeb\x30\x0c\xdc\xfd\x2b\x84\xec\x4e\xf0\xb6\x07\xaf\x6f\x78\x7b\x87\xee\x8c\x7c\x75\xd4\xc8\xa2\x40\x52\x29\xdc\x5f\x5f\x58\x71\x81\x7c\x38\x68\x87\x2e\x9d\x7c\x3e\xf3\x8e\x47\x9a\x94\xc3\x33\x44\x03\xa7\xce\xc9\x9e\xfc\x96\x8a\x1d\x58\xc2\x3b\x59\xe0\xb4\x3d\xfe\xd5\x6d\xe0\xdd\xe9\x4f\x73\x0c\xa9\xef\xdc\xbf\x58\xd4\x20\x4f\x1c\xd1\x8c\x30\xea\xc9\xa8\x6b\x9c\xa3\x94\xd8\xaa\x44\xe7\x57\xe7\xae\x6d\x38\x23\xe9\x21\xbc\xd8\x6c\xa6\x93\x1a\xc6\x96\x53\x9c\x3a\xb7\x31\x29\xd8\x54\xc9\x5a\xfb\xb2\x87\x24\x18\x6a\x0a\x2a\xc6\x25\xf7\x64\xb8\xd0\x25\x1a\xd1\x39\xc1\x10\xd4\x64\x6a\xd1\x07\x63\x69\xa4\x44\x68\xd7\xb4\x8e\x72\xf8\x2f\x5c\x72\x8d\xd5\xba\xcd\x2c\x11\x28\x17\xf1\x58\x38\x85\x17\x98\x2e\x58\x4e\xc1\x83\xbc\xe7\x92\x2a\x77\x82\xec\x97\x42\x2f\x20\x43\x85\x3d\x22\xae\xa0\xe7\x18\xe1\xe7\xd0\x95\x1c\x60\xf5\x19\x83\x9e\x41\x26\xf3\x87\x8a\xce\x13\x54\xf8\x56\xc9\xf5\x90\xad\x0b\x23\x0d\xb8\x5a\xdd\x7d\xf6\x5a\xa3\x26\xa0\xf1\x0c\x6f\xd9\x91\x72\x0e\x69\xb8\xe3\xef\x89\xdd\xe5\x1e\x2e\x3e\x18\x0d\xbf\x6c\x0f\x99\xe5\xc1\xaf\xfb\xa1\x16\xba\x8b\x34\x41\x6e\x7a\x7c\xce\xba\x0c\xf6\xad\xdb\x9b\xaf\x57\x33\x79\xac\x78\x3d\x0a\x9b\x85\x5f\xe1\xed\x8b\xb8\x4b\xd5\x8a\xef\x47\x00\x00\x00\xff\xff\x67\x04\xbd\x7e\xf3\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoRegistryEditorYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoRegistryEditorYaml,
		"ClusterRole.rbac.authorization.k8s.io/registry-editor.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoRegistryEditorYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoRegistryEditorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/registry-editor.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoRegistryViewerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\x3f\x4f\xc3\x40\x0c\xc5\xf7\x7c\x0a\x2b\x7b\x5a\xb1\xa1\xac\x0c\xec\x0c\xec\x6e\xfa\x48\x4d\x73\x7f\x64\xfb\x5a\x85\x4f\x8f\x7a\xcd\x40\xdb\x48\x30\x30\xd9\x67\xbd\xf7\x7b\x4f\xc7\x59\xde\xa1\x26\x29\xf6\xa4\x3b\x1e\x36\x5c\xfc\x90\x54\xbe\xd8\x25\xc5\xcd\xf1\xd9\x36\x92\xb6\xa7\xa7\xe6\x28\x71\xdf\xd3\xcb\x54\xcc\xa1\x6f\x69\x42\x13\xe0\xbc\x67\xe7\xbe\x21\xe2\x18\x93\x57\x8b\x5d\x9e\x44\xb7\x98\x94\x11\xed\x20\x1f\x7e\x81\xd9\x6c\x8e\xd0\xa5\x38\xcd\x3d\xb5\xae\x05\x6d\xb5\xac\xc5\x97\x1d\x34\xc2\x51\x5b\x70\xf1\x54\xf2\x9e\x1d\x3f\x7c\x91\x03\x7a\x52\x8c\x62\xae\x73\x77\x12\x9c\xa1\x8d\x96\x09\xd6\x37\x1d\x71\x96\x57\x4d\x25\xd7\x5a\x1d\xb5\x6d\x1d\x12\x78\xc4\x4d\xab\x86\x48\x61\xa9\xe8\x80\x45\x5a\x35\xe6\x0a\x0e\xd7\xf5\xfe\x1a\x38\x67\x89\xe3\xc3\xfd\xe1\xe0\x5c\x45\x27\xe8\x6e\x61\x8f\xf0\x3a\x27\xb1\xeb\x72\x66\x1f\x0e\xff\x55\xd7\xb6\x13\xcf\xd0\x95\xcc\xf5\x80\x3b\xd2\xe5\x47\x2d\xf3\x80\x3f\x03\x3a\xca\x9a\x3e\x31\xf8\x2f\x1d\x17\xd5\x0a\xf7\x3b\x00\x00\xff\xff\xfa\xc3\x11\x26\x87\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoRegistryViewerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoRegistryViewerYaml,
		"ClusterRole.rbac.authorization.k8s.io/registry-viewer.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoRegistryViewerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoRegistryViewerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/registry-viewer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoRouterMetricsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\x31\xae\xc2\x30\x0c\x80\xe1\xdd\xa7\xf0\x05\x9a\xea\x6d\x4f\x59\x19\xd8\x19\xd8\xdd\xd6\x50\xab\x4d\x1c\xd9\x4e\x07\x4e\x8f\x10\x20\x31\xff\x9f\x7e\x6a\x72\x65\x73\xd1\x9a\xd1\x26\x9a\x13\xf5\x58\xd5\xe4\x41\x21\x5a\xd3\xf6\xef\x49\x74\x3c\xfe\x60\x93\xba\x64\x3c\xed\xdd\x83\xed\xa2\x3b\x43\xe1\xa0\x85\x82\x32\x20\x56\x2a\x9c\xd1\xb4\x07\xdb\x50\x38\x4c\x66\x07\xeb\x3b\x7b\x86\x01\xa9\xc9\xd9\xb4\x37\x7f\xd1\xe1\xcd\x92\x36\xae\xbe\xca\x2d\x92\x28\x20\x1a\xbb\x76\x9b\xf9\xd7\x98\x8f\xdf\x17\xe2\xc1\x36\x7d\xe2\x9d\x03\x9e\x01\x00\x00\xff\xff\x65\x21\xd6\x67\xb9\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoRouterMetricsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoRouterMetricsYaml,
		"ClusterRole.rbac.authorization.k8s.io/router-metrics.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoRouterMetricsYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoRouterMetricsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/router-metrics.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSarCreatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xb1\xae\xc2\x40\x0c\x04\x7b\x7f\x85\x95\x3e\x79\x7a\x1d\xba\x96\x82\x9e\x82\xde\xb9\xac\x84\x49\x72\x8e\xec\xbb\x20\xf1\xf5\x08\x94\x92\x76\xb5\xa3\x19\xd9\xf4\x06\x0f\xb5\x92\xd8\x47\xc9\x83\xb4\x7a\x37\xd7\x97\x54\xb5\x32\xcc\xa7\x18\xd4\xfe\xf6\x7f\x9a\xb5\x4c\x89\xcf\x4b\x8b\x0a\xbf\xda\x02\x5a\x51\x65\x92\x2a\x89\x98\x8b\xac\x48\x1c\xe2\x7d\x76\x48\x35\x27\x6f\x0b\x22\x51\xcf\xb2\xe9\xc5\xad\x6d\xf1\xf9\xf5\xdc\x75\xc4\xec\x08\x6b\x9e\x71\x6c\xd1\xc6\x07\x72\x95\x9c\x11\xe1\xd8\x15\xcf\xf8\x19\x42\xcc\x3b\x7c\x3c\xb0\xaf\x0a\xf4\x0e\x00\x00\xff\xff\xee\xa8\xe3\x13\xc3\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSarCreatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSarCreatorYaml,
		"ClusterRole.rbac.authorization.k8s.io/sar-creator.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSarCreatorYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSarCreatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/sar-creator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSelfAccessReviewerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\xe1\xdd\x2e\xba\x15\x5a\x3b\x74\xef\xd0\x9d\x96\x2f\x88\x1a\x5b\x34\x48\xca\x45\xfa\xf5\x85\x95\x0c\x2d\x9a\x64\x12\x04\xf0\xde\x3b\x92\xd7\xfc\x01\xb5\x2c\x25\x92\x8e\x9c\x06\xae\x7e\x14\xcd\xdf\xec\x59\xca\x70\x7a\xb1\x21\xcb\xd3\xf6\x1c\x4e\xb9\x4c\x91\x5e\xe7\x6a\x0e\x7d\x97\x19\x61\x81\xf3\xc4\xce\x31\x10\x71\x29\xe2\x2d\x62\xfb\x97\xe8\x2f\x46\x56\x14\x3b\xe6\x83\xef\x30\x3b\x9b\x63\xe9\xa5\xcc\xe7\x48\x9d\x6b\x45\xd7\x22\xb7\xf4\x75\x84\x16\x38\x5a\x0b\xae\x2e\x75\x9d\xd8\xf1\x2b\x57\x78\x41\x24\xc3\x7c\xe8\x39\x25\x98\xf5\x8a\x2d\xe3\x0b\x1a\xb4\xce\xb0\x18\x7a\xe2\x35\xbf\xa9\xd4\xb5\x75\xeb\xa9\xeb\xda\x73\xbf\x62\x20\x52\x98\x54\x4d\xb8\x46\x76\xbe\xd5\xf1\x13\xc9\x1b\xf5\xe2\xb0\x40\xb4\x41\xc7\xeb\x50\x52\xb0\xe3\xbf\xef\xd6\x49\x1f\x2a\x2e\x8b\x3c\x72\xfc\x04\x00\x00\xff\xff\x05\xc6\xe3\xab\xb7\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSelfAccessReviewerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSelfAccessReviewerYaml,
		"ClusterRole.rbac.authorization.k8s.io/self-access-reviewer.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSelfAccessReviewerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSelfAccessReviewerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/self-access-reviewer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSelfProvisionerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x50\xbd\x4e\xc4\x30\x0c\xde\xf3\x14\x56\xf7\x16\xb1\xa1\x6c\x88\x81\x9d\x81\xdd\x97\x7e\xa7\x0b\xd7\xc6\xc1\x76\x2a\x1d\x4f\x8f\x1a\x75\xa0\x12\x93\x65\xf9\xfb\x35\xd7\xfc\x09\xb5\x2c\x25\x92\x5e\x38\x4d\xdc\xfc\x26\x9a\x7f\xd8\xb3\x94\xe9\xfe\x62\x53\x96\xa7\xed\x39\xdc\x73\x99\x23\xbd\x2d\xcd\x1c\xfa\x21\x0b\xc2\x0a\xe7\x99\x9d\x63\x20\xe2\x52\xc4\x3b\xc5\xf6\x95\xe8\x2c\x23\x15\xc5\x6e\xf9\xea\xbb\x98\x3d\xcc\xb1\x8e\x52\x96\x47\xa4\xc1\xb5\x61\xe8\x94\x13\x68\x86\x25\xcd\xd5\x7b\xb0\x57\x6a\x06\x25\xbf\xb1\x53\xe2\x42\x8a\xef\x06\x73\xaa\x2a\x5f\x48\x6e\x53\xe7\xff\x17\xbf\x5d\xa0\x05\x8e\xde\x82\x9b\x4b\xab\x33\x3b\xfe\xf8\x16\x5e\x11\xc9\xb0\x5c\xc7\xaa\xb2\xe5\xfd\x15\xd0\xa0\x6d\x81\xc5\x30\x12\xd7\xfc\xae\xd2\x6a\xef\x35\xd2\x30\xf4\x71\x38\x9f\x8a\x05\x22\x85\x49\xd3\x84\x03\x7c\xa0\x8e\xb8\x16\x88\x36\xe8\xe5\x38\x26\x05\x3b\xc2\x6f\x00\x00\x00\xff\xff\x05\xa0\x54\x21\x81\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSelfProvisionerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSelfProvisionerYaml,
		"ClusterRole.rbac.authorization.k8s.io/self-provisioner.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSelfProvisionerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSelfProvisionerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/self-provisioner.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoServiceCatalogControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x31\x8f\xe2\x40\x0c\x85\xfb\xfc\x8a\x11\x7d\x40\xd7\x9d\xd2\x5e\x71\xfd\x15\xd7\x3b\x93\x07\x58\x0c\x33\x23\xdb\x93\x95\xf8\xf5\x2b\xc2\xb0\xbb\x2c\x09\x4b\x41\x15\xcb\x76\x92\x67\xbf\xcf\x94\xf9\x3f\x44\x39\xc5\xce\x49\x4f\x7e\x4d\xc5\xf6\x49\xf8\x44\xc6\x29\xae\x0f\xbf\x75\xcd\x69\x33\xfe\x6a\x0e\x1c\x87\xce\xfd\x09\x45\x0d\xf2\x2f\x05\x34\x47\x18\x0d\x64\xd4\x35\xce\x45\x3a\xa2\x73\x0a\x19\xd9\xa3\xf5\x64\x14\xd2\xae\xf5\x29\x9a\xa4\x10\x20\x8d\x94\x00\xed\x9a\xd6\x51\xe6\xbf\x92\x4a\xd6\xf3\x6b\xad\x5b\xad\x1a\xe7\x04\x9a\x8a\x78\xd4\x9c\xc2\x0b\x4c\x1b\xe7\x46\x48\x5f\x93\x5e\x40\x86\x29\x2c\x79\xb8\x86\x99\xcc\xef\xa7\x68\x40\x40\x4d\xee\x60\xd3\x33\xb0\x5e\x82\xb7\xa9\xeb\xee\xdf\x55\x6e\x55\x5b\x67\xbd\x97\xe3\x2f\x33\xd7\xee\x5e\xd2\x01\xa2\x1b\x35\xb2\xa2\x33\x0d\x3e\x90\x2a\x1e\x34\xe4\x40\xf1\xa6\x5c\xf3\x1c\xd5\x28\x7a\xcc\xd5\x7a\x8e\x03\xc7\xdd\xc3\xd2\x96\x23\x05\x3e\x41\x16\xbe\x2a\xd8\x42\x10\x3d\x6e\x17\x5b\xb7\xf9\xd2\xed\xcc\x0a\x98\x13\x7d\x2b\xe5\xc3\xb0\xab\x83\x0b\xc6\xcd\x41\x83\x11\xf1\x3b\x33\x9f\x74\x54\x7a\x5e\x33\x64\x75\x78\xc9\xda\x45\x6e\xbf\x20\x3a\x8b\xf0\xf3\xdc\x9a\x9d\x97\xb7\x28\x37\xa7\x21\x0b\xf4\xc9\x1b\xfa\xf9\x72\xde\x03\x00\x00\xff\xff\xa6\xa4\x88\x4d\x25\x04\x00\x00")

func clusterroleRbacAuthorizationK8sIoServiceCatalogControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoServiceCatalogControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/service-catalog-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoServiceCatalogControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoServiceCatalogControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/service-catalog-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoServicecatalogServiceclassViewerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xbd\x4e\xc6\x30\x0c\x45\xf7\x3c\x85\x5f\x20\x45\x6c\x28\x2b\x03\x3b\x03\xbb\xbf\xd4\x6a\xad\xa6\x71\x64\x3b\xa9\xc4\xd3\xa3\x96\x22\x21\xc4\x76\xfd\x73\xee\xc1\xc6\x1f\xa4\xc6\x52\x13\xe8\x03\xf3\x84\xdd\x57\x51\xfe\x44\x67\xa9\xd3\xf6\x62\x13\xcb\xd3\x78\x0e\x1b\xd7\x39\xc1\x6b\xe9\xe6\xa4\xef\x52\x28\xec\xe4\x38\xa3\x63\x0a\x00\x15\x77\x4a\x60\xa4\x83\x33\x65\x74\x2c\xb2\xc4\x9f\xb1\xa0\x59\x1c\x4c\x07\x69\xd0\x5e\xc8\x52\x88\x80\x8d\xdf\x54\x7a\xb3\x13\x8f\x7f\xd0\xdb\x1b\x00\x94\x4c\xba\x66\xba\xdf\xf2\xb7\xff\x77\x33\xd9\x3f\x97\x56\xb0\x9e\xfb\x41\xfa\xb8\xd1\xc2\xe6\x57\x38\xd0\xf3\x7a\xa5\x85\x3c\x7c\x05\x00\x00\xff\xff\xc4\x46\x1d\x0d\x01\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoServicecatalogServiceclassViewerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoServicecatalogServiceclassViewerYaml,
		"ClusterRole.rbac.authorization.k8s.io/servicecatalog-serviceclass-viewer.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoServicecatalogServiceclassViewerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoServicecatalogServiceclassViewerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/servicecatalog-serviceclass-viewer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoStorageAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x90\x31\x4f\x03\x31\x0c\x85\xf7\xfb\x15\x51\xf7\x2b\x62\x43\xb7\x32\xb0\x33\xb0\xbb\xb9\x47\x1b\x35\xb1\x23\xdb\x39\x54\x7e\x3d\xba\xf4\x06\x4a\xbb\x33\xe5\xc5\xd6\xb3\x3f\x3f\xaa\xe9\x03\x6a\x49\x78\x0a\x7a\xa0\xb8\xa7\xe6\x27\xd1\xf4\x4d\x9e\x84\xf7\xe7\x17\xdb\x27\x79\x5a\x9e\x87\x73\xe2\x79\x0a\xaf\xb9\x99\x43\xdf\x25\x63\x28\x70\x9a\xc9\x69\x1a\x42\x20\x66\xf1\x6e\xb1\xf5\x1b\xc2\xed\x18\xa9\x60\x3b\xa5\x4f\x5f\x87\xd9\xc5\x1c\x65\x14\xce\x97\x29\xec\x5c\x1b\x76\xdd\xf2\x68\x7d\x3b\x40\x19\x8e\x4e\x41\xcd\xa5\xd5\x99\x1c\xbf\x7c\x4c\x05\x53\x30\x17\xa5\x23\x46\x9a\x4b\xe2\x41\x5b\x86\x4d\xc3\x18\xa8\xa6\x37\x95\x56\x3b\xd4\x18\x76\xab\x41\x61\xd2\x34\x62\xab\xd5\xf5\x7a\x73\xb0\x2f\x92\x5b\x81\x0d\x21\x2c\xd0\xc3\xd6\x8e\x0a\x72\x74\x39\x23\xe3\x46\x46\xc9\x19\x71\x05\xed\xc5\x23\xbc\xbf\x39\xd9\x55\x54\xf2\x78\xea\xea\x4a\xdd\xe5\x57\x2f\xde\xa1\x6d\x07\x6c\x81\xdf\x63\x6e\xfd\x98\xc9\xec\xbf\x18\x1f\xc5\x87\x05\xec\xf6\x30\xc9\x98\x29\x95\x3f\xa8\x77\xfb\xaf\xab\x7e\x02\x00\x00\xff\xff\x1c\x9d\x0c\x76\x86\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoStorageAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoStorageAdminYaml,
		"ClusterRole.rbac.authorization.k8s.io/storage-admin.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoStorageAdminYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoStorageAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/storage-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSudoerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xbb\x4e\xeb\x40\x10\x86\xfb\x7d\x8a\x91\xfb\xf8\xe8\x74\x68\x5b\x0a\x3a\x0a\x0a\xfa\x71\x3c\x90\x55\xbc\x33\xab\xb9\x44\x0a\x4f\x8f\xbc\x44\x91\x2d\xa0\xa3\xda\xdb\xff\x7f\xfb\x69\xb0\x95\x57\x52\x2b\xc2\x19\x74\xc2\xe3\x88\xe1\x27\xd1\xf2\x81\x5e\x84\xc7\xf3\x83\x8d\x45\xfe\x5d\xfe\xa7\x73\xe1\x39\xc3\xe3\x12\xe6\xa4\x2f\xb2\x50\xaa\xe4\x38\xa3\x63\x4e\x00\xc8\x2c\xde\x2b\xb6\x1e\x01\xf6\x18\x69\xc4\x76\x2a\x6f\xbe\xc2\xec\x6a\x4e\xf5\x20\xbc\x5c\x33\x0c\xae\x41\x43\xaf\xfc\xf4\x7d\x4c\xa4\x4c\x4e\xdd\x02\xc3\x25\xda\x8c\x4e\x9b\x1e\x63\xa5\x0c\x16\xb3\x90\x26\x8d\x85\x2c\xa7\x03\x60\x2b\x4f\x2a\xd1\xba\xcd\x01\x86\xa1\x2f\x61\xa4\x3b\x97\x04\xa0\x64\x12\x7a\xa4\x67\xac\x74\x4b\x7f\x09\x66\x9c\x6b\xe1\x4d\x62\xf7\xba\xa2\xec\x0e\x5d\x77\x17\xd2\xe9\x16\x29\xb5\x91\x9a\x30\x3a\xfd\x91\x4b\xc5\x75\xec\xf6\xdd\xe6\xbd\x93\x37\xd1\xfb\xc5\x2f\x3e\x9f\x01\x00\x00\xff\xff\x34\xe6\xfa\xcd\xf1\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSudoerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSudoerYaml,
		"ClusterRole.rbac.authorization.k8s.io/sudoer.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSudoerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSudoerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/sudoer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemAggregateToAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xb1\x92\xdb\x38\x0c\xed\xfd\x15\x1a\xf7\x5e\xcf\x75\x37\x6a\xaf\xb8\xfe\x8a\xeb\x21\x12\xd6\x62\x4d\x01\x0c\x08\xda\xeb\x7c\x7d\x86\x94\x6c\xcb\x2b\xef\x66\x33\x93\xc4\xa9\x4c\x80\x20\xf0\xf0\xf8\x0c\x11\x22\xfd\x8f\x9a\x48\xb8\x6d\xb4\x03\xf7\x04\xd9\x9e\x45\xe9\x2b\x18\x09\x3f\xed\xff\x4e\x4f\x24\xdb\xc3\x5f\xab\x3d\xb1\x6f\x9b\x7f\x42\x4e\x86\xfa\x9f\x04\x5c\x0d\x68\xe0\xc1\xa0\x5d\x35\x0d\x30\x8b\xd5\x23\xa9\x98\x4d\x73\x9b\x46\x22\x72\x7a\xa6\x9d\x95\x64\xe9\x94\x0c\x87\x8d\x70\x38\xb5\xcd\xda\x34\xe3\xba\x1e\xb9\x57\x3e\x77\xa8\x8c\x86\x15\x05\x64\x93\x1c\x3d\x18\xb6\xcd\x7a\x07\x21\xd5\x83\x01\x3a\x0c\x53\xd5\xdb\xf8\x4e\xc4\x92\x29\xc4\x48\xdc\x8f\xed\x6d\x3c\xee\x20\x07\x4b\xef\x56\x1c\x1b\x86\xbe\x57\xec\xc1\x70\x63\xb2\x01\x3f\x10\xcf\xa0\x32\x0c\xd8\x36\x63\x1b\xed\x32\x72\xa5\x39\x60\x6a\x57\x9b\x06\x22\xfd\xab\x92\x63\x45\xb7\x69\xd6\xe5\xb0\x62\x92\xac\x0e\x27\x5f\x14\x9f\x2e\x8b\x2d\x98\x81\x7b\xbe\xda\xf8\x8a\xee\x6a\x45\x51\xdb\x89\x1e\x41\xfd\xcc\xa9\xf2\x7a\x5a\x35\xcd\x01\xb5\x9b\x72\x3a\x45\x30\xac\x4b\x8f\x01\x6f\x96\x4e\x42\x40\x57\x5a\xad\xce\x1e\xad\xfe\x06\x4a\xe3\x22\x82\x4d\x00\x46\xa6\xeb\xf2\x58\x9d\x9f\xea\xc7\x09\xef\xa8\x1f\x20\x8e\x5d\x21\xfb\x28\xc4\x36\xf5\x58\x94\x96\x0c\xd9\x0e\x12\xf2\x80\x2e\x00\x0d\xe3\x96\x62\x0c\xe4\xea\x1d\x38\x61\xd3\x02\x53\x3f\xda\xda\x26\x07\x61\x84\x97\xd0\x29\x4e\x25\x12\xea\x81\x1c\x82\x73\x92\xf9\xd6\x77\x6b\xfc\x69\xc4\x75\xc4\x9e\xb8\x9f\x68\x3b\xe0\x19\x7c\xa0\x81\x4c\x81\xfb\x09\x7f\x11\x5f\x8a\x50\x3a\x48\x06\x96\x67\xea\x09\xd2\x5f\x8d\xd9\xe6\x7b\x04\xce\x23\x46\x2c\x5f\xb2\x18\xdc\x73\x5d\x83\x67\x74\x2d\x38\xf8\x81\x76\xaf\x6d\xfc\xbc\x9c\xcb\xbb\x9f\x25\xa6\xa1\xa8\x4f\xb8\x5c\xcd\x22\x1b\xc4\xaa\xd7\x37\xf9\x3c\xe0\x20\x9c\xce\xd2\xf2\x18\x83\x9c\x86\xcb\xcd\xcc\xec\x6d\xe1\xb4\x03\xb7\x5f\x6c\x5c\x55\x3a\xdd\xc2\x25\xdd\xcc\x9e\x6b\xd9\xc0\x70\x97\xc3\x25\x6c\xee\xb8\xc4\x3d\x40\xb3\x65\xf8\x96\xf2\xc4\xfd\x92\xa9\x3a\x40\x85\x0d\x42\x14\x7f\x8e\x1c\xff\xbf\x0f\x80\xda\x4d\xb1\x6f\x47\x93\x0a\xbf\x48\x37\xd2\x3a\x2d\x1e\x80\x0e\x5f\x0d\xb9\x7c\x70\x7f\xb9\xe2\x88\x7b\xc5\x94\xce\x83\x03\xed\x28\xba\x8f\x12\xc8\x11\x2e\x34\xf8\x81\x26\xbf\x33\x80\x1f\xc0\x61\x6d\xe2\x74\xf7\x6b\xea\x29\x69\x8e\xa5\x4c\x97\x7d\x8f\x6f\xc7\xc0\x67\xe7\xcb\xc4\x16\x71\x3f\x3d\x09\xee\x8c\xb0\x05\xa1\x8f\xf9\x5b\x2e\x5e\x2f\x4b\xa8\x41\x1c\x84\x94\xbb\x17\x74\x06\xce\x61\x4a\x8a\x07\xc2\xe3\x7d\xd0\x8b\x22\xef\xbe\x93\x96\x95\x54\x02\xde\x7c\xca\x8a\xe3\xf7\x70\xf3\x2d\x00\x00\xff\xff\x68\x06\x7c\x2a\xcb\x0a\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemAggregateToAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemAggregateToAdminYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-aggregate-to-admin.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemAggregateToAdminYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemAggregateToAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-aggregate-to-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemAggregateToEditYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xb1\x72\xdb\x30\x0c\xdd\xfd\x15\x3a\xef\x8e\xaf\x5b\x4f\x6b\x87\xee\x1d\xba\x43\x24\xac\xa0\xa6\x00\x16\x04\x9d\xb8\x5f\xdf\x23\x25\xdb\x72\xe4\xa4\xe9\x5d\x73\xee\x14\x00\x04\x01\xbc\xc7\x17\xc8\x10\xe9\x3b\x6a\x22\xe1\xb6\xd1\x0e\xdc\x03\x64\x7b\x14\xa5\x5f\x60\x24\xfc\xb0\xff\x9c\x1e\x48\xb6\x87\x4f\xab\x3d\xb1\x6f\x9b\x2f\x21\x27\x43\xfd\x26\x01\x57\x03\x1a\x78\x30\x68\x57\x4d\x03\xcc\x62\xf5\x4a\x2a\x6e\xd3\x5c\x97\x91\x88\x9c\x1e\x69\x67\xa5\x58\x3a\x26\xc3\x61\x23\x1c\x8e\x6d\xb3\x36\xcd\xb8\xae\x57\x6e\xb5\xcf\x1d\x2a\xa3\x61\x9d\x02\xb2\x49\x8e\x1e\x0c\xdb\x66\xbd\x83\x90\xea\xc5\x00\x1d\x86\xa9\xeb\x75\x7e\x27\x62\xc9\x14\x62\x24\xee\x47\x78\x1b\x8f\x3b\xc8\xc1\xd2\xab\x1d\x47\xc0\xd0\xf7\x8a\x3d\x18\x6e\x4c\x36\xe8\xc9\x66\x93\x32\x0c\xd8\x36\x23\x8a\x76\x91\xb8\xd2\x1c\x30\xb5\xab\x4d\x03\x91\xbe\xaa\xe4\x58\x67\xdb\x34\xeb\x72\x57\x31\x49\x56\x87\x53\x2c\x8a\x4f\x67\x63\x0b\x66\xe0\x1e\x2f\x3e\x3e\xa3\xbb\x78\x51\xd4\x76\xa2\x4f\xa0\x7e\x16\x54\x79\x3e\xae\x9a\xe6\x80\xda\x4d\x35\x9d\x22\x18\x56\xd3\x63\xc0\x2b\xd3\x49\x08\xe8\x0a\xd0\x1a\xec\xd1\xea\xdf\x40\x69\x34\x22\xd8\x34\xc0\xc8\x73\x35\x9f\x6a\xf0\x5d\x78\x9c\xf0\x8e\xfa\x01\xe2\x88\x0a\xd9\x47\x21\xb6\x09\x63\xd1\x59\x32\x64\x3b\x48\xc8\x03\xba\x00\x34\x8c\x47\x8a\x31\x90\xab\x2f\xe0\x84\x4d\xcb\x98\xfa\xd6\xd1\x36\x39\x08\xe3\x78\x09\x9d\xe2\xd4\x22\xa1\x1e\xc8\x21\x38\x27\x99\xaf\x63\xd7\xce\xff\x46\x5c\x47\xec\x89\xfb\x89\xb6\x03\x9e\x86\x0f\x34\x90\x29\x70\x3f\xcd\x5f\xb4\x97\x22\x14\x04\xc9\xc0\xf2\x4c\x3d\x41\xfa\x8b\x33\x3b\x7c\x8d\xc0\x79\xc6\x38\xcb\xcf\x2c\x06\xb7\x42\x97\xe4\x19\x5d\x0b\x0e\xfe\x02\xee\x05\xc6\xbf\xab\xb9\x7c\xfb\x59\x61\x1a\x8a\xfa\x84\xcb\xd3\x2c\xaa\x41\xac\x7a\x7d\x51\xcf\x03\x0e\xc2\xe9\x24\x2d\x8f\x31\xc8\x71\x38\xbf\xcc\xcc\xdf\x16\x4e\x3b\x70\xfb\xc5\xc1\x45\xa5\xd3\x2b\x9c\xcb\xcd\xfc\xb9\x96\x0d\x0c\x77\x39\x9c\xd3\xe6\x81\x73\xde\x1d\x34\x5b\x56\x6f\x69\x4f\xdc\x2f\x99\xaa\xeb\x53\xd8\x20\x44\xf1\xa7\xcc\xf1\xff\xf7\x0e\xa3\x76\x53\xee\xcb\xd5\xa4\xc2\x3f\xa4\x1b\x69\x9d\x8c\x3b\x4c\x87\xcf\x86\x5c\x3e\xb7\x1f\xae\x38\xe2\x5e\x31\xa5\xd3\xe2\x40\x7b\x12\xdd\x47\x09\xe4\x08\x17\x1a\x7c\x43\x93\x7f\x58\xc0\x77\xe0\xb0\x82\x38\xde\xfc\x9a\x7a\x4a\x9a\x63\x69\xd3\x65\xdf\xe3\xcb\x35\xf0\xde\xfd\x32\xb1\x45\xdc\x4f\x3f\x08\x6e\xac\xb0\x05\xa1\x1f\xcf\xc4\xef\x00\x00\x00\xff\xff\xfd\x22\xe4\xaa\xad\x09\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemAggregateToEditYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemAggregateToEditYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-aggregate-to-edit.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemAggregateToEditYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemAggregateToEditYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-aggregate-to-edit.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemAggregateToViewYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x31\x73\xdb\x3c\x0c\xdd\xfd\x2b\x74\xd9\x15\xdf\xb7\x7d\xa7\xb5\x43\xf7\x0e\xdd\x21\x12\x66\xd0\x50\x00\x4b\x80\x4a\xdd\x5f\xdf\x13\x25\xdb\x4a\xe5\x24\x3d\x5d\x26\x11\xe0\x03\x1e\x1e\x40\x08\x12\x7d\xc7\xac\x24\xdc\x35\xb9\x07\xf7\x08\xc5\x9e\x24\xd3\x6f\x30\x12\x7e\x7c\xfe\x5f\x1f\x49\x8e\xe3\x7f\x87\x67\x62\xdf\x35\x5f\x62\x51\xc3\xfc\x4d\x22\x1e\x06\x34\xf0\x60\xd0\x1d\x9a\x06\x98\xc5\x6a\x88\x4e\x66\xd3\xbc\x4e\x23\x09\x59\x9f\xe8\x64\x53\x32\x3d\xab\xe1\xd0\x0a\xc7\x73\xd7\x3c\x58\x2e\xf8\x50\x43\xee\xd1\x97\x1e\x33\xa3\x61\xad\x02\x8a\x49\x49\x1e\x0c\x57\x71\x11\x7a\x8c\x0b\xe9\x6b\x78\x2f\x62\x6a\x19\x52\x22\x0e\xb3\xba\xd6\xe3\x09\x4a\x34\x7d\x93\x70\xd6\x0b\x21\x64\x0c\x60\xd8\x9a\xb4\x23\xe1\xcb\x8a\x90\x61\xc0\xae\x99\x45\x74\x1b\xe0\x21\x97\x88\xda\x1d\xda\x06\x12\x7d\xcd\x52\x52\xad\xad\x6d\x1e\xa6\xd8\x8c\x2a\x25\x3b\x5c\x7c\x4e\xf8\x44\x61\x80\xa4\xd5\x44\xf6\x49\x88\x6d\xb6\xd2\x34\x16\x35\x64\x1b\x25\x96\x01\x5d\x04\x1a\x96\x2b\xf1\xf3\x21\x63\x8a\xe4\x6a\xe9\x4e\xd8\xb2\xc4\x88\xf9\xbd\xab\xa3\x3a\x88\x58\x01\x8a\x79\x24\x87\xe0\x9c\x94\x0b\xe7\xe2\x9b\x8c\x11\x73\xbf\x94\x19\xd0\xea\x37\x92\xce\x87\x17\x30\xf7\xf4\x6f\x12\x7b\x62\x4f\x1c\x16\x81\x23\x5e\x98\x22\x0d\x64\x19\x38\xe0\x6c\x4f\x5d\xd5\x04\x0e\xf5\xa8\x06\x56\x6e\x42\x8f\x51\xc2\xcd\x58\x5d\xbe\xa5\x70\x8d\x98\x6b\xf9\x59\xc4\xe0\x9e\xeb\x06\xfe\x24\xb9\x37\x19\xfb\x72\x42\xaa\x6f\xe1\xaf\xac\x1e\x70\x10\x56\x5c\x7a\xe7\x31\x45\x39\x0f\xd7\x5e\xae\xec\xd5\x7c\x97\xf6\x5c\xa3\x56\xf6\xfa\x15\x18\x18\x9e\x4a\xbc\xc2\xd6\x8e\x2b\x6e\x8f\x92\x62\x32\x85\x13\x87\xad\xa0\xba\x71\xc2\x06\x31\x89\xbf\x20\xe7\x97\xbb\x83\xaa\xaf\xee\xed\x76\x65\xe1\x1f\xd2\xcf\xb2\x96\xc3\x8e\xec\xf8\xcb\x90\xa7\x1f\xe4\x67\x0d\x86\x38\x64\x54\xbd\x3c\x7c\xb4\x17\xc9\xcf\x49\x22\x39\xc2\xcd\xa8\xde\x19\xdd\x07\x1b\xbe\x43\x6a\x2d\xe2\xbc\x95\x99\xc4\x7b\xd2\x5c\xd2\xc4\xd5\x17\x1f\xe6\xc2\x76\x30\x2c\x6a\x89\xc3\xf2\xab\xbd\xb3\x42\x9b\x86\x7c\xcc\xf3\x27\x00\x00\xff\xff\xd3\x97\x1b\xc3\xc6\x06\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemAggregateToViewYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemAggregateToViewYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-aggregate-to-view.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemAggregateToViewYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemAggregateToViewYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-aggregate-to-view.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemAuthDelegatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\xab\xfb\x15\xb1\xa1\xac\x0c\xec\x0c\xec\xbe\xdc\x6b\x1b\x9a\xc6\x91\xed\x14\x95\x5f\x8f\xee\x7a\x43\x0b\x15\x63\x14\xbf\xef\xb3\x1f\xb7\xfc\x01\xb5\x2c\x35\x92\x8e\x9c\xb6\xdc\xfd\x20\x9a\xbf\xd9\xb3\xd4\xed\xf1\xc5\xb6\x59\x9e\xce\xcf\xe1\x98\xeb\x14\xe9\xb5\x74\x73\xe8\xbb\x14\x84\x13\x9c\x27\x76\x8e\x81\x88\x6b\x15\x5f\x22\x36\x3f\x89\xee\x31\xd2\x50\xed\x90\x77\x3e\xc3\xec\x62\x8e\xd3\x20\xb5\x5c\x22\x6d\x5c\x3b\x36\x4b\xe4\x91\xbe\x8f\xd0\x0a\xc7\xb2\x05\x77\x97\xde\x26\x76\xdc\xe4\x0a\x8f\x28\xab\xf4\x7e\x7c\x14\x71\x73\xe5\xd6\x72\xdd\x5f\xaf\x1b\x26\xec\xb8\x17\xb7\x40\x54\xf9\x84\x48\xd7\x65\xe2\xac\x1d\x26\x14\xec\xd9\x45\x83\xf6\x02\x8b\x61\x20\x6e\xf9\x4d\xa5\xb7\x45\x30\x2c\x57\xa1\x7a\x4e\xb7\xed\x04\x22\x85\x49\xd7\x84\x75\xcc\xe5\x88\xaa\x38\x67\x7c\xcd\xa6\x33\x74\x5c\x7f\x92\x82\x1d\x8f\xc1\xbf\x5b\xff\xcb\xb5\x3e\x7e\x22\x39\xa7\x04\xb3\xff\xf8\x3f\x01\x00\x00\xff\xff\x53\xf3\x38\xb6\xd6\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemAuthDelegatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemAuthDelegatorYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-auth-delegator.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemAuthDelegatorYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemAuthDelegatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-auth-delegator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemAwsCloudProviderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6e\x2b\x21\x10\x45\x7b\xbe\x02\xb9\xc7\x4f\xaf\x8b\x68\x53\xa4\x4f\x91\x7e\x76\xb9\xb6\x91\xf1\x0c\x9a\x19\x36\x72\xbe\x3e\xda\xb5\x0b\x3b\x4a\x91\x0a\x18\x71\xcf\xb9\x40\xbd\x7e\x40\xad\x0a\xe7\xa8\x13\xcd\x7b\x1a\x7e\x12\xad\x5f\xe4\x55\x78\x7f\x7e\xb1\x7d\x95\x7f\xcb\xff\x70\xae\x5c\x72\x7c\x6d\xc3\x1c\xfa\x2e\x0d\xe1\x02\xa7\x42\x4e\x39\xc4\x48\xcc\xe2\x5b\xc4\xd6\x63\x8c\xcf\x18\xe9\x60\x3b\xd5\x83\xaf\x30\xbb\x9a\xe3\x92\x84\xdb\x35\xc7\x9d\xeb\xc0\x6e\x8b\xfc\xa6\x1f\x13\x94\xe1\xd8\x5a\xd0\x70\x19\xbd\x90\xe3\x21\xd7\x68\x42\xbb\x4b\x9f\xaf\x4f\x22\x6e\xae\xd4\x7b\xe5\xe3\xed\x75\xa9\xe0\x40\xa3\xb9\x85\x18\x99\x2e\xc8\xf1\x56\x26\xd3\xa7\xa5\xb9\xc9\x28\xa9\xab\x2c\xb5\x40\x83\x8e\x06\xcb\x21\x45\xea\xf5\x4d\x65\xf4\x4d\x92\xe2\x6e\xb5\x2a\x4c\x86\xce\xb8\xcf\x58\x0a\x56\xe6\x02\x9d\xee\xa3\x23\x7c\x5b\x3b\xf9\x7c\xfa\x1b\x05\x0b\xd8\x7f\x60\x66\x05\x39\x1e\x48\xeb\xee\xf6\x09\xe1\x3b\x00\x00\xff\xff\x26\x87\xf1\xd6\xbc\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemAwsCloudProviderYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemAwsCloudProviderYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-aws-cloud-provider.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemAwsCloudProviderYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemAwsCloudProviderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-aws-cloud-provider.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemBasicUserYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xb1\x4e\x33\x31\x10\x84\x7b\x3f\xc5\x2a\xfd\xe5\xd7\xdf\x21\xb7\x14\xf4\x14\xf4\x6b\xdf\x84\x98\x38\x5e\x6b\x77\x7d\x28\x3c\x3d\xca\xe5\x24\x08\x4a\x69\xcd\xcc\x37\xe3\xe5\x5e\xde\xa0\x56\xa4\x45\xd2\xc4\x79\xcf\xc3\x8f\xa2\xe5\x8b\xbd\x48\xdb\x9f\x9e\x6c\x5f\xe4\xdf\xf2\x3f\x9c\x4a\x9b\x23\x3d\xd7\x61\x0e\x7d\x95\x8a\x70\x86\xf3\xcc\xce\x31\x10\x71\x6b\xe2\x6b\xc4\xae\x4f\xa2\x7b\x8c\x74\x34\x3b\x96\x83\x5f\x61\x76\x31\xc7\x79\x92\x56\x2f\x91\x76\xae\x03\xbb\x35\xf2\xa8\x7e\x24\x68\x83\x63\x5d\xc1\xc3\x65\xf4\x99\x1d\xbf\x72\x95\x13\xea\x56\x7a\x6f\x4f\x22\x6e\xae\xdc\x7b\x69\xef\xb7\xdf\x4d\x33\x0e\x3c\xaa\x5b\x20\x6a\x7c\x46\xa4\xdb\x98\x98\xd8\x4a\x9e\x86\x41\x83\x8e\x0a\x8b\x61\x22\xee\xe5\x45\x65\xf4\x15\x3e\xd1\xa3\xc3\x04\x22\x85\xc9\xd0\x8c\xcd\x65\xa8\x07\x1b\xe9\x03\xd9\x39\x67\x98\x29\x96\x82\x4f\xfb\x2b\xae\x2d\x3f\xda\x02\x4d\x1b\x21\x2b\xd8\x11\xbe\x03\x00\x00\xff\xff\x7e\x45\x7d\x68\x99\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemBasicUserYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemBasicUserYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-basic-user.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemBasicUserYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemBasicUserYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-basic-user.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemBuildControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x3d\x4e\xc4\x40\x0c\x86\xe1\x7e\x4e\x61\x6d\xbf\x41\x74\x68\x5a\x6e\x40\x41\xef\xec\x18\xc5\x8a\x63\x47\xfe\x41\x0a\xa7\x47\x09\x0d\x48\x94\x2e\xde\xc7\x1f\xee\xfc\x4e\x1e\x6c\xda\xc1\x67\x7c\x4c\x58\xb9\x98\xf3\x17\x26\x9b\x4e\xeb\x4b\x4c\x6c\x4f\x9f\xcf\x6d\x65\x1d\x1d\x5e\xa5\x22\xc9\xdf\x4c\xa8\x6d\x94\x38\x30\xb1\x37\x00\x54\xb5\xbc\x92\x38\x4f\x80\xbf\x8c\xed\xa4\xb1\xf0\x47\x9e\x58\x1c\x91\xb4\xdd\x4d\xe5\xe8\x70\x4b\x2f\xba\x5d\xc9\x7f\xef\x6b\x26\x57\x4a\xba\x56\x60\xa5\xd5\x3e\x30\xe9\x57\xa7\xb8\x51\x87\x1f\xb3\xcf\xc5\x32\xee\x0f\xd3\x74\x13\x21\x6f\x5e\x42\xd1\x41\x4b\xa4\x7d\x07\x00\x00\xff\xff\x24\xb7\xaf\x73\xeb\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemBuildControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemBuildControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-build-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemBuildControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemBuildControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-build-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemBuildStrategyCustomYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xbd\x6a\xec\x40\x0c\x85\xfb\x79\x0a\xe1\xde\x5e\x6e\x77\x99\x36\x45\xfa\x14\xe9\x65\xfb\x24\x3b\xac\x3d\x1a\xf4\xb3\xe0\x3c\x7d\xd8\x89\x8b\x2c\xa4\x12\x42\xe7\xfb\x74\xb8\x95\x77\xa8\x15\xa9\x99\x74\xe6\x65\xe2\xf0\xab\x68\xf9\x62\x2f\x52\xa7\xdb\x7f\x9b\x8a\x5c\xee\xff\xd2\xad\xd4\x35\xd3\xcb\x16\xe6\xd0\x37\xd9\x90\x76\x38\xaf\xec\x9c\x13\x11\xd7\x2a\xde\x11\x7b\xac\x44\xcf\x1a\x69\xa8\x76\x2d\x1f\xfe\x90\xd9\x61\x8e\x7d\x94\xba\x1d\x99\x06\xd7\xc0\xd0\x91\xbf\xde\xc7\x0c\xad\x70\xf4\x16\x1c\x2e\xd1\x56\x76\xfc\xe2\x2a\xef\xc8\xf4\xe3\xcc\x73\x94\x6d\x1d\xcd\x95\x1d\x9f\xc7\xb8\x84\xb9\xec\x49\x63\x83\xe5\x34\x12\xb7\xf2\xaa\x12\xad\x77\x1c\x69\x18\xfa\xe8\xd0\x53\xc5\x44\xa4\x30\x09\x5d\x70\x46\x7b\xc6\x2e\xa7\x90\xe8\x0e\x9d\xcf\xd3\xa2\x60\x47\xfa\x0e\x00\x00\xff\xff\xc8\xa8\xb8\x33\x49\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemBuildStrategyCustomYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemBuildStrategyCustomYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-build-strategy-custom.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemBuildStrategyCustomYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemBuildStrategyCustomYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-build-strategy-custom.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemBuildStrategyDockerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\xe1\xdd\x09\xba\x15\x5a\x3b\x74\xef\xd0\x9d\xb6\xae\x8d\x60\x5b\x14\x48\x2a\x80\xf3\xf5\x45\x54\xa3\x48\x80\x4e\x82\xc8\x7b\x8f\xc7\x35\x7f\x42\x2d\x4b\x89\xa4\x13\xcf\x27\x6e\x7e\x11\xcd\x37\xf6\x2c\xe5\xb4\xbc\xda\x29\xcb\xf9\xfa\x12\x96\x5c\x52\xa4\xb7\xb5\x99\x43\x3f\x64\x45\xd8\xe0\x9c\xd8\x39\x06\x22\x2e\x45\xbc\x23\x76\xff\x12\x3d\x6b\xa4\xa2\xd8\x25\x7f\xf9\x5d\x66\xbb\x39\xb6\x51\xca\xba\x47\x1a\x5c\x1b\x86\x8e\xfc\x77\xbe\x4d\xd0\x02\x47\x6f\xc1\xcd\xa5\xd5\xc4\x8e\x07\xae\xf0\x86\x48\xbf\xce\x38\xb5\xbc\xa6\xd1\x5c\xd9\xf1\xbd\x8f\x49\xe6\x05\x1a\xb4\xad\xb0\x18\x46\xe2\x9a\xdf\x55\x5a\xed\x1d\x47\x1a\x86\xfe\x74\xe8\xa9\x62\x20\x52\x98\x34\x9d\x71\x44\x7b\xc6\xce\x87\xf0\x61\x22\xd5\xf3\x96\x6f\x48\x7f\xab\x2b\x74\x3a\xa8\x59\xc1\x8e\xf0\x13\x00\x00\xff\xff\xb0\x1a\x61\x68\x64\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemBuildStrategyDockerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemBuildStrategyDockerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-build-strategy-docker.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemBuildStrategyDockerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemBuildStrategyDockerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-build-strategy-docker.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x4f\xc4\x30\x0c\x46\xf7\xfc\x0a\xab\x7b\x7b\x62\x43\x59\x19\xd8\x19\xd8\xdd\xd6\x70\xa6\xa9\x1d\xd9\xce\x49\xe5\xd7\xa3\x0b\x37\x70\xe8\xa6\x28\xd2\xf7\x9e\x1f\x56\x7e\x27\x73\x56\xc9\x60\x33\x2e\x13\xb6\x38\xab\xf1\x37\x06\xab\x4c\xdb\xb3\x4f\xac\xa7\xcb\x53\xda\x58\xd6\x0c\x2f\xa5\x79\x90\xbd\x69\xa1\xb4\x53\xe0\x8a\x81\x39\x01\xa0\x88\x46\x47\xfc\xfa\x05\xb8\xd7\x68\x25\xf1\x33\x7f\xc4\x55\xe6\x87\x07\xed\xa3\x4a\x39\x32\x0c\x61\x8d\x86\x8e\x3c\x3a\xdf\x66\x32\xa1\xa0\x5e\x81\x2d\xb4\xd5\x15\x83\xfe\x70\x82\x3b\x65\xf8\x75\xe6\xb9\x71\x59\x47\x0f\xc3\xa0\xcf\x63\xfc\x22\xd9\x58\xbc\x72\xa5\xc2\x42\xc9\x5a\x21\xcf\x69\x04\xac\xfc\x6a\xda\x6a\x8f\x1d\x61\x18\xfa\xd3\xe9\xbb\xd6\x04\x60\xe4\xda\x6c\xa1\xdb\xb4\x6f\xfc\xf4\xdf\x0c\x70\x21\x9b\x6f\x9b\xc5\x08\x83\xd2\x4f\x00\x00\x00\xff\xff\x95\x40\x7b\x7a\x5b\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-build-strategy-jenkinspipeline.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-build-strategy-jenkinspipeline.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemBuildStrategySourceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xbd\x6e\xc3\x30\x0c\x84\x77\x3d\x05\xe1\xdd\x09\xba\x15\x5a\x3b\x74\xef\xd0\x9d\xb6\xaf\x8d\x10\x5b\x14\xf8\x13\xc0\x7d\xfa\x22\x8a\x87\x06\xe8\x44\x10\xbc\xef\xe3\x71\x2b\x9f\x50\x2b\x52\x33\xe9\xc4\xf3\x89\xc3\x2f\xa2\xe5\x87\xbd\x48\x3d\x5d\x5f\xed\x54\xe4\x7c\x7b\x49\xd7\x52\x97\x4c\x6f\x6b\x98\x43\x3f\x64\x45\xda\xe0\xbc\xb0\x73\x4e\x44\x5c\xab\x78\x47\xec\xbe\x12\x3d\x6b\xa4\xa1\xda\xa5\x7c\xf9\x5d\x66\xbb\x39\xb6\x51\xea\xba\x67\x1a\x5c\x03\x43\x47\xfe\x7b\x1f\x13\xb4\xc2\xd1\x5b\x70\xb8\x44\x5b\xd8\xf1\x87\xab\xbc\x21\xd3\xc3\x99\xa7\x28\xeb\x32\x9a\x2b\x3b\xbe\xf7\xd1\x24\x74\x46\xd2\x58\x61\x39\x8d\xc4\xad\xbc\xab\x44\xeb\x1d\x47\x1a\x86\x3e\x3a\xf4\x54\x31\x11\x29\x1e\xf0\x11\xed\x19\x3b\x1f\x42\xa2\x1b\x74\x3a\x4e\xb3\x82\x1d\xe9\x37\x00\x00\xff\xff\x85\xe1\xef\x1f\x49\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemBuildStrategySourceYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemBuildStrategySourceYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-build-strategy-source.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemBuildStrategySourceYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemBuildStrategySourceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-build-strategy-source.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemCertificateSigningControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x4e\xc3\x40\x0c\xc6\xf1\xfd\x9e\xc2\xea\x9e\x20\x36\x74\x2b\x6f\xc0\xc0\xee\x5e\xbe\xb6\x56\x2f\x76\x64\xfb\x90\xca\xd3\xa3\x84\x05\xa4\x8e\x1e\xfe\x3f\x7f\xbc\xc9\x27\x3c\xc4\xb4\x92\x9f\xb9\xcd\x3c\xf2\x66\x2e\xdf\x9c\x62\x3a\xdf\xdf\x62\x16\x7b\xf9\x7a\x2d\x77\xd1\xa5\xd2\x7b\x1f\x91\xf0\x0f\xeb\x28\x2b\x92\x17\x4e\xae\x85\x88\x55\x2d\x8f\x24\xf6\x93\xe8\x3f\x63\x1b\x34\x6e\x72\xc9\x1d\x8b\x47\x24\xd6\xc9\xb4\x3f\x2a\x9d\xd2\x07\x4e\x47\xf2\xec\xfd\x38\xc3\x15\x89\x63\x05\x8f\xb4\xb1\x2d\x9c\xf8\xd3\x29\xaf\xa8\xf4\x6b\xd6\x06\x4f\xb9\x48\xe3\xc4\x14\x72\x55\xd1\xeb\xd4\x4c\xd3\xad\x77\x78\xf1\xd1\x11\x95\x74\xf4\x5e\x7e\x02\x00\x00\xff\xff\x5c\xcd\xa2\xfb\xf9\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemCertificateSigningControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemCertificateSigningControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-certificate-signing-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemCertificateSigningControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemCertificateSigningControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-certificate-signing-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsNodeclientYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x6e\xf3\x30\x0c\x84\x77\x3d\x05\x91\xdd\x09\xfe\xed\x87\xd6\x0e\xdd\x3b\x74\xa7\xed\x4b\x42\x44\x21\x55\x8a\x0a\x90\x3e\x7d\x11\xa7\x05\x62\xc0\xa3\x04\x7e\xf7\xdd\x71\x95\x4f\x78\x13\xd3\x4c\x3e\xf2\xb4\xe7\x1e\x67\x73\xf9\xe6\x10\xd3\xfd\xe5\x7f\xdb\x8b\x1d\x6e\xff\xd2\x45\x74\xce\xf4\x56\x7a\x0b\xf8\x87\x15\xa4\x2b\x82\x67\x0e\xce\x89\x88\x55\x2d\x16\xa4\x3d\x9e\x44\xeb\x18\xab\xd0\x76\x96\x63\x3c\xc2\xda\xbd\x05\xae\x83\x69\xb9\x67\xda\x85\x77\xec\x16\x64\x4b\xdf\x47\xb8\x22\xb0\xb4\xe0\x1e\xd6\xeb\xcc\x81\x17\xae\xf0\x88\xf2\x2b\x5d\x9f\x8f\x66\xd1\xc2\xb9\x56\xd1\xd3\x73\xdd\x30\xe3\xc8\xbd\x44\x4b\x44\xca\x57\x64\x7a\x96\xc9\x13\x3c\xe4\x28\x13\x3f\xd8\xe7\xe8\xd5\x9f\x9c\x54\xf4\xe4\xf8\xea\x68\xd1\xb2\xda\x8c\xa9\x08\x34\x92\xf7\x82\x96\xd3\x40\x5c\xe5\xdd\xad\xd7\xa5\xcb\x40\x1b\x89\x89\xc8\xd1\xac\xfb\x84\x8d\xa3\xb5\xe2\xf0\xa2\x20\xba\xc1\xc7\x3f\xc4\xc1\x81\xf4\x13\x00\x00\xff\xff\xd6\xda\x20\x97\xb8\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsNodeclientYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsNodeclientYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-certificates.k8s.io-certificatesigningrequests-nodeclient.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsNodeclientYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsNodeclientYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-certificates.k8s.io-certificatesigningrequests-nodeclient.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsSelfnodeclientYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x6e\xf3\x30\x0c\x84\x77\x3d\x05\x91\xdd\x09\xfe\xed\x87\xd6\x0e\xdd\x3b\x74\xa7\xed\x73\x22\x44\x21\x55\x92\x0a\x90\x3e\x7d\x11\xa7\x05\xea\x22\xa3\x04\x7e\xf7\xdd\x71\x2b\xef\x30\x2f\x2a\x99\x6c\xe4\x69\xcf\x3d\x4e\x6a\xe5\x93\xa3\xa8\xec\xcf\xff\x7d\x5f\xf4\x70\xfd\x97\xce\x45\xe6\x4c\x2f\xb5\x7b\xc0\xde\xb4\x22\x5d\x10\x3c\x73\x70\x4e\x44\x2c\xa2\xb1\x22\x7e\x7f\x12\x6d\x63\xb4\x41\xfc\x54\x96\xb8\x87\xf9\xcd\x03\x97\x41\xa5\xde\x32\xed\xc2\x3a\x76\x2b\xf2\x4c\xdf\x47\x98\x20\xb0\xb6\xe0\x1e\xda\xdb\xcc\x81\x5f\x5c\xe5\x11\xf5\x5b\xba\x3d\x1f\x55\xc3\xc3\xb8\xb5\x22\xc7\xc7\xba\x61\xc6\xc2\xbd\x86\x27\x22\xe1\x0b\x32\x3d\xca\xe4\x09\x16\x65\x29\x13\xdf\xd9\xc7\xe8\xcd\x5f\x39\x4a\x91\xa3\xe1\xa3\xc3\xc3\xb3\xa3\x2e\xa2\x33\xa6\x5a\x20\x91\xac\x57\x78\x4e\x03\x71\x2b\xaf\xa6\xbd\xad\x7d\x06\x7a\x92\x9a\x88\x0c\xae\xdd\x26\x3c\x39\xda\x6a\x0e\x7f\x34\x44\x57\xd8\xf8\x83\x19\x38\x90\xbe\x02\x00\x00\xff\xff\x1d\x3b\x2d\xef\xc0\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsSelfnodeclientYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsSelfnodeclientYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-certificates.k8s.io-certificatesigningrequests-selfnodeclient.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsSelfnodeclientYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsSelfnodeclientYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-certificates.k8s.io-certificatesigningrequests-selfnodeclient.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x31\x8f\xdb\x30\x0c\x85\x77\xff\x0a\x21\xbb\x13\x74\x2b\xb4\x76\xe8\xde\xa1\x3b\x6d\xbd\xc4\x42\x64\x51\x20\x29\x17\xe9\xaf\x2f\x64\x1b\x68\x93\xe6\x0e\x01\xee\x16\x83\xa6\xfd\xbe\xf7\x44\x8a\x4a\xfc\x09\xd1\xc8\xd9\x3b\x19\x68\x3c\x52\xb5\x89\x25\xfe\x26\x8b\x9c\x8f\xd7\xaf\x7a\x8c\x7c\x5a\xbe\x74\xd7\x98\x83\x77\xdf\x52\x55\x83\xfc\xe0\x84\x6e\x86\x51\x20\x23\xdf\x39\x47\x39\xb3\xad\x12\x6d\xaf\xce\xdd\x63\xb8\x20\xeb\x14\xcf\xd6\x60\x7a\x53\xc3\xdc\x73\x4e\x37\xef\x0e\x26\x15\x87\x55\xf2\xcc\xbe\x0e\x90\x0c\xc3\x9a\x82\xaa\x71\x2d\x81\x0c\xff\xe8\x12\x0d\x48\xbb\xe9\xfd\xef\x03\xb3\xa9\x09\x95\x12\xf3\x65\x3b\x5d\x1f\x70\xa6\x9a\x4c\x3b\xe7\x32\xcd\xf0\x6e\x0b\xe3\x47\xce\x26\x9c\x12\xc4\x93\x19\x8d\x53\x40\x7b\xf6\x7f\xfb\x9d\xd4\x04\xf5\x5d\xef\xa8\xc4\xef\xc2\xb5\xac\xa6\xbd\x3b\xb4\x14\x02\xe5\x2a\x23\xf6\x5e\x69\x23\x55\x43\xb6\x85\x53\x9d\x31\x26\x8a\xb3\x3e\xfd\xd4\xba\x0b\x64\xd8\x95\x29\xaa\xad\xc5\x2f\xb2\x71\x7a\xcd\x2d\x73\x78\xc4\x5c\x60\x1f\xc3\x9d\xd4\xc8\xea\x03\xb5\xac\x90\x56\x6d\x6b\x78\x71\x18\x1c\x3e\xe1\x90\x58\x90\xed\x81\x33\x0a\x5a\x8a\xd7\xa2\xa9\xb1\xd0\x05\xfb\x95\xfe\xdf\x60\x5b\xc7\xb6\xfd\xf9\x5d\xaf\x80\x84\xbd\x7c\x63\xce\x7f\x02\x00\x00\xff\xff\x81\xd6\xb6\xaf\x56\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-attachdetach-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-attachdetach-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerCertificateControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xbb\xae\xdb\x30\x0c\x86\x77\x3f\x85\xe0\xdd\x39\xe8\x56\x68\xed\xd0\xbd\x43\x77\x5a\xfe\xe3\xa8\x51\x44\x95\xa4\x1c\xa4\x4f\x5f\x44\x36\xd0\x5c\x0c\x74\x39\x93\x69\xe3\xbf\x7c\xa6\x44\x25\xfe\x84\x68\xe4\xec\x9d\x8c\x14\x0e\x54\xed\xc4\x12\xff\x90\x45\xce\x87\xf3\x57\x3d\x44\xfe\x58\xbe\x74\xe7\x98\x27\xef\xbe\xa5\xaa\x06\xf9\xc1\x09\xdd\x05\x46\x13\x19\xf9\xce\x39\xca\x99\xad\x59\xf4\xfe\xea\xdc\x73\x0c\x17\x64\x3d\xc5\xa3\xdd\xc3\xf4\xa6\x86\xcb\xc0\x39\xdd\xbc\xeb\x4d\x2a\xfa\x66\xd9\xab\xaf\x23\x24\xc3\xd0\x28\xa8\x1a\xd7\x32\x91\xe1\xc1\x97\x68\x44\xda\x4a\x9f\xe5\x23\xb3\xa9\x09\x95\x12\xf3\xbc\xfe\xdd\x30\xe1\x48\x35\x99\x76\xce\x65\xba\xc0\xbb\x15\xc6\x07\xce\x26\x9c\x12\xc4\x07\x88\xc5\x63\x0c\x64\x18\xfe\x7d\xee\xa4\x26\xa8\xef\x06\x47\x25\x7e\x17\xae\xa5\x75\x0e\xee\x41\xae\xdb\xba\x3a\xe7\x04\xca\x55\x02\x76\x44\x71\xce\x31\xcf\x82\xdf\x15\xda\x40\x16\xc8\xb8\xe9\x26\x24\x18\xda\x38\xc3\xda\x33\x45\x5d\x87\x2b\x59\x38\x7d\x7a\xff\x07\x95\x22\xbc\x50\xfa\x9f\x4e\x8d\xac\xbe\xe0\xae\x87\xf1\xce\xb4\x77\x87\xde\xa1\xb4\x8e\xbf\x10\x8c\x42\x80\xaa\x60\x89\xb8\xbe\xe4\x07\xc1\x6e\x7e\xdf\xbf\xa7\x61\x41\x7e\x5d\xe7\xe6\xbf\x8f\xa5\x6d\xef\x01\xfa\x6f\x00\x00\x00\xff\xff\xf5\x51\x80\x25\xf9\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerCertificateControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerCertificateControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-certificate-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerCertificateControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerCertificateControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-certificate-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xbd\x6a\xc3\x40\x0c\xc7\xf7\x7b\x0a\x91\x25\x50\xb8\x94\x6e\xe5\xd6\x0e\x5d\x3a\x19\xda\x5d\xb6\x15\xe7\xc8\x59\x3a\x24\x5d\x20\x7d\xfa\x12\x3b\xd0\x18\x4a\x47\x89\xdf\xff\x0b\x6b\xfe\x22\xb5\x2c\x9c\x40\x7b\x1c\x0e\xd8\xfc\x24\x9a\xbf\xd1\xb3\xf0\xe1\xfc\x6a\x87\x2c\xcf\x97\x97\x70\xce\x3c\x26\x78\x2b\xcd\x9c\xb4\x93\x42\x61\x26\xc7\x11\x1d\x53\x00\x40\x66\xf1\x45\x62\xb7\x13\x60\x6b\x23\x95\xd8\x4e\xf9\xe8\x37\x33\xbb\x9a\xd3\x1c\x85\xcb\x35\xc1\xce\xb5\xd1\x6e\x91\xfc\x15\xdf\x7a\x52\x26\xa7\xa5\x05\x36\x97\x56\x47\x74\x7a\xd0\x15\xec\xa9\xdc\x43\xb7\x78\x2f\xe2\xe6\x8a\xb5\x66\x9e\xd6\x75\x71\xa4\x23\xb6\xe2\x16\x00\x18\x67\x4a\xb0\x96\x49\x83\xb0\xab\x94\x42\x9a\x86\x75\xa2\x4a\xa1\x88\xd3\xa4\x34\x2d\x5d\xe2\x2f\x12\xb4\x15\xb2\x14\x22\x60\xcd\xef\x2a\xad\x2e\xf9\x11\xf6\x4f\xfb\x00\xa0\x64\xd2\x74\xa0\xcd\xf3\x42\xda\x3f\x3c\x22\xb0\x70\x77\x07\x3f\xbb\x8f\xff\xd8\x9f\x00\x00\x00\xff\xff\x1f\xf0\xc9\xf3\xa3\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-clusterrole-aggregation-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-clusterrole-aggregation-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerCronjobControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x31\x6f\xe3\x30\x0c\x85\x77\xff\x0a\xc2\xbb\x13\xdc\x76\xd0\x7a\xc3\xed\x1d\xba\x53\x36\x93\xa8\x51\x48\x81\xa2\x52\x24\xbf\xbe\x88\xac\xa0\x49\xdc\x02\x29\x3a\x99\x26\xf4\xbe\xc7\xf7\x30\x85\x57\xd2\x1c\x84\x1d\xa8\xc7\x71\x85\xc5\x76\xa2\xe1\x8c\x16\x84\x57\xfb\xbf\x79\x15\x64\x7d\xfc\xd3\xed\x03\x4f\x0e\xfe\xc5\x92\x8d\xf4\x45\x22\x75\x07\x32\x9c\xd0\xd0\x75\x00\xc8\x2c\x56\x25\xf9\xf2\x0b\x70\x8f\x91\x44\x9c\x77\x61\x63\x17\x58\x3e\x65\xa3\xc3\x20\x1c\x4f\x0e\x7a\xd3\x42\x7d\x95\x7c\x65\x5f\x3c\x29\x93\x51\xbd\x02\x8b\x49\x49\x13\x1a\xdd\xe8\x22\x7a\x8a\xcd\xf4\xfe\xb9\x17\xb1\x6c\x8a\x29\x05\xde\xce\xe9\x86\x89\x36\x58\xa2\xe5\x0e\x80\xf1\x40\x0e\xe6\x63\xdc\x28\x6c\x2a\x31\x92\xba\x51\x85\xdf\xc4\x0f\x9f\xab\x4e\x4b\xa4\xec\xba\x01\x30\x85\xff\x2a\x25\x55\xbf\x01\x3c\xda\xb8\xeb\x00\x94\xb2\x14\x1d\xa9\xad\x1b\xe1\x62\x72\x24\xf5\x6d\xbb\x25\xab\xdf\x18\xf2\x3c\xcc\x51\xea\xf8\x5e\x41\xcf\xf2\x97\xec\x51\xe9\x8a\x9a\x28\x52\x1b\x17\x8e\xa9\xf1\x7e\xe1\x7d\xcd\xb6\xce\x86\x56\x1e\xce\x68\xd4\x1f\xb3\x36\x81\x31\x86\x33\xe9\x93\xbc\xbe\x5f\xc2\x92\x4c\x0f\xea\x9b\x26\x6a\x03\x4f\x61\xe8\x48\x6c\xdf\xb7\xbb\x68\xf0\x23\x00\x00\xff\xff\x7a\xd5\x61\x57\x40\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerCronjobControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerCronjobControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-cronjob-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerCronjobControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerCronjobControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-cronjob-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\x31\x6f\xdb\x40\x0c\x85\x77\xfd\x8a\x83\x77\xd9\xe8\x56\x68\xed\xd0\xbd\x43\x77\x4a\x7a\xb6\x0f\x39\x93\x07\x92\xa7\x36\xf9\xf5\x85\x4e\x6a\x9d\xc8\x2e\xd2\xc6\x93\x48\xe1\xf8\xbd\xc7\x07\x52\x8e\xdf\xa1\x16\x85\xbb\xa0\x3d\x0d\x7b\x2a\x7e\x16\x8d\x2f\xe4\x51\x78\xff\xf4\xd9\xf6\x51\x0e\xd3\xa7\xe6\x29\xf2\xd8\x85\x2f\xa9\x98\x43\xbf\x49\x42\x73\x81\xd3\x48\x4e\x5d\x13\x02\x31\x8b\xd7\x11\x9b\xdb\x10\xde\x62\x24\x83\xed\x1c\x8f\x3e\xc3\xec\xd9\x1c\x97\x56\x38\x3d\x77\x61\xe7\x5a\xb0\xab\x23\xf7\xe4\x4b\x0f\x65\x38\xaa\x0b\x2a\x2e\x25\x8f\xe4\x78\x35\x97\xa8\x47\x5a\x45\xdf\x3e\xef\x45\xdc\x5c\x29\xe7\xc8\xa7\x65\xbb\x76\xc4\x91\x4a\x72\x6b\x42\x60\xba\xa0\x0b\x8b\x99\x6e\x10\x76\x95\x94\xa0\xdd\x48\xb8\x08\xb7\x06\x6f\xaf\x7f\x1b\x2d\x09\xd6\x35\x6d\xa0\x1c\xbf\xaa\x94\x5c\x25\xe7\x36\x5b\x2d\xf0\xd3\xc1\x73\x8e\x73\xab\x30\x29\x3a\x60\x7d\xb4\x20\x0d\x55\x77\x82\xf6\xeb\xff\x13\xbc\x7e\x53\xb4\xa5\xf8\x41\x3e\x9c\x1f\x16\x39\x98\x93\x97\x8d\xd6\x12\xdc\xe3\xec\x63\x64\x4a\xf1\x05\xfa\x8f\xfc\xdd\xee\x16\xc7\x32\x62\x33\xfe\x5e\x04\xf7\x30\x59\xc6\x0d\x65\x50\xcc\x26\xaa\x65\x24\xac\xe5\x1f\x76\xae\xec\x0f\xa8\x1c\xfa\xc8\x63\xe4\xd3\x5d\xb5\xbf\x45\xba\xe1\x5c\x8f\x49\x31\xc5\xdf\x41\xbf\x6b\xfe\xe6\x46\xae\x4b\xac\x91\xff\xe7\x3e\x98\xc0\xdb\x43\x7c\x25\x7d\x83\xff\x15\x00\x00\xff\xff\x63\x56\xe0\xf3\x22\x04\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-daemon-set-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-daemon-set-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerDeploymentControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xbd\x0e\xdb\x30\x0c\x84\x77\x3f\x85\xe0\xdd\x09\xba\x15\x5a\x3b\x74\xef\xd0\x9d\xb6\x2f\x89\x10\x59\x14\x48\x2a\x6d\xf2\xf4\x85\x65\x17\xf9\x71\x86\x02\xe9\xe4\xa3\x25\xde\x47\x9e\x4d\x39\xfc\x84\x68\xe0\xe4\x9d\xf4\x34\xec\xa8\xd8\x89\x25\xdc\xc8\x02\xa7\xdd\xf9\xab\xee\x02\xef\x2f\x5f\x9a\x73\x48\xa3\x77\xdf\x62\x51\x83\xfc\xe0\x88\x66\x82\xd1\x48\x46\xbe\x71\x8e\x52\x62\xab\x2d\x3a\x97\xce\x3d\xdb\x70\x46\xd2\x53\x38\xd8\x6c\xa6\x57\x35\x4c\x1d\xa7\x78\xf5\xae\x35\x29\x68\x6b\xcb\x3b\x7c\xe9\x21\x09\x86\x3a\x05\x15\xe3\x92\x47\x32\x3c\xf4\x45\xea\x11\x57\xe8\xf3\xf5\x9e\xd9\xd4\x84\x72\x0e\xe9\xb8\x6c\xd7\x8d\x38\x50\x89\xa6\x8d\x73\x89\x26\x78\xb7\x0c\xe3\x07\x4e\x26\x1c\x23\xc4\x8f\xc8\x91\xaf\x13\x92\x75\xf7\xb7\x8d\x94\x08\xf5\x4d\xe7\x28\x87\xef\xc2\x25\x57\xe4\x5c\x66\xad\x02\xbf\x0d\x69\xce\x71\x2e\x05\xca\x45\x06\xac\x97\xee\x96\xf3\xe1\x05\xd2\xaf\x07\x47\x58\x7d\xc6\xa0\x8b\x58\xd6\xab\xf2\x17\xd9\x70\xfa\x1c\xb8\x57\x23\x2b\x2f\xdc\x15\xf3\xb9\xf9\x21\x24\x8a\xe1\x06\xf9\x9f\x00\x41\x8e\x61\x20\xc5\x6b\x5c\x83\xe0\x6f\x3a\x23\x22\x56\xb9\x09\x31\xd7\xe4\xfe\x2d\xce\xb6\xdd\xf2\x33\x8f\x9f\x7f\xa7\x77\xc6\xb8\x6c\x7f\x81\x87\x9d\x36\x73\xff\x09\x00\x00\xff\xff\x11\x71\xba\xb4\x9d\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerDeploymentControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerDeploymentControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-deployment-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerDeploymentControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerDeploymentControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-deployment-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerDisruptionControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x3f\x6f\xe4\x20\x10\xc5\x7b\x7f\x0a\xe4\xde\xbb\xba\xee\x44\x7b\xc5\xf5\x29\xd2\x8f\x61\x76\x17\x2d\x66\xd0\xcc\xb0\x89\xf3\xe9\x23\xb0\xa5\xfd\x97\x48\x89\x2b\x33\x86\xf7\x7e\x8f\x27\x20\x87\x57\x64\x09\x94\xac\xe1\x11\xdc\x0e\x8a\x9e\x88\xc3\x07\x68\xa0\xb4\x3b\xff\x95\x5d\xa0\xfd\xe5\x4f\x77\x0e\xc9\x5b\xf3\x2f\x16\x51\xe4\x17\x8a\xd8\x4d\xa8\xe0\x41\xc1\x76\xc6\x40\x4a\xa4\x4d\x22\x75\x34\xe6\xde\x86\x32\x26\x39\x85\x83\x56\x33\x99\x45\x71\x1a\x28\xc5\xd9\x9a\x5e\xb9\x60\xdf\x24\x5f\xe1\xcb\x88\x9c\x50\xb1\xa5\x80\xa2\x54\xb2\x07\xc5\x1b\x5d\x84\x11\xe3\x0a\xbd\x3f\x3e\x12\xa9\x28\x43\xce\x21\x1d\x97\xdb\x0d\x1e\x0f\x50\xa2\x4a\x67\x4c\x82\x09\xad\x59\xc2\x58\x47\x49\x99\x62\x44\xb6\x3e\x08\x97\x5c\xf1\xc3\xf5\x6f\xc7\x25\xa2\xd8\x6e\x30\x90\xc3\x7f\xa6\x92\x1b\xb2\x8e\x59\xda\x02\xdf\x15\x53\xed\xb1\x8e\x8c\x42\x85\x1d\xae\x87\x3c\xe6\x48\xf3\x84\xa9\x81\x2f\xc8\xe3\xba\x71\x44\x6d\xdf\x18\x64\x59\xbc\x81\xba\xd3\x46\x0a\x63\x8e\xc1\x81\xe0\x56\x4a\xdf\x7f\x6b\x5a\xeb\xb8\xb6\xb1\xd1\x3f\x53\x0c\x6e\x7e\x66\x64\xf2\xd7\xd2\xc7\xe2\x8f\x9b\x6f\xb0\xf6\xf4\xe0\x2f\x0a\x8a\x87\x12\xb7\x37\xf3\x9b\xe4\xfb\x8a\x2b\x0f\xa0\xe5\xd9\xfe\xac\x72\xbc\x3c\x3f\x14\xc7\x58\xf5\x8d\xd9\x22\xde\x98\x7e\x06\x00\x00\xff\xff\x21\x69\xca\x04\xc3\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerDisruptionControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerDisruptionControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-disruption-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerDisruptionControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerDisruptionControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-disruption-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerEndpointControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xb1\x6e\xf3\x30\x0c\x84\x77\x3f\x85\x90\xdd\x09\xfe\xed\x87\xd6\x0e\xdd\x3b\x74\xa7\xad\x4b\x22\x44\x11\x05\x92\x72\x91\x3e\x7d\x61\xd9\x45\x93\x36\x28\xd2\x49\x47\x4a\xbc\xfb\x44\x2a\xf1\x15\xa2\x91\xb3\x77\x32\xd0\xb8\xa5\x6a\x47\x96\xf8\x4e\x16\x39\x6f\x4f\xff\x75\x1b\x79\x37\xfd\xeb\x4e\x31\x07\xef\x9e\x52\x55\x83\xbc\x70\x42\x77\x86\x51\x20\x23\xdf\x39\x47\x39\xb3\xb5\x11\x9d\x4b\xe7\x6e\x6d\xb8\x20\xeb\x31\xee\x6d\x36\xd3\x8b\x1a\xce\x3d\xe7\x74\xf1\x6e\x63\x52\xb1\x69\x23\xf7\xe2\xeb\x00\xc9\x30\x34\x0a\xaa\xc6\xb5\x04\x32\x5c\xcd\x25\x1a\x90\xd6\xd0\xdb\xe7\x03\xb3\xa9\x09\x95\x12\xf3\x61\xf9\x5d\x1f\xb0\xa7\x9a\x4c\x3b\xe7\x32\x9d\xe1\xdd\x02\xe3\x47\xce\x26\x9c\x12\xc4\x23\x87\xc2\x31\x5b\xff\xd5\xeb\xa4\x26\xa8\xef\x7a\x47\x25\x3e\x0b\xd7\xd2\x02\x7b\xb7\x99\x09\x04\xca\x55\x46\xac\xbd\xc2\x41\x9b\x50\xc8\x14\x47\xcc\xc5\x04\x19\xd6\xeb\x03\xac\x9d\x29\xea\x22\xde\xc8\xc6\xe3\x63\xd6\x9f\x68\xdf\x2c\x47\x01\x19\x9a\x0c\x48\x58\xe5\x8f\xa0\x65\x75\x7f\x4c\xda\x09\xd4\x24\x8e\x86\x70\x37\xf4\x31\xb7\x09\xbf\x41\x97\xb6\x81\x2b\xc4\x8f\x00\x00\x00\xff\xff\xe2\xb8\xe6\x1f\x95\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerEndpointControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerEndpointControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-endpoint-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerEndpointControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerEndpointControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-endpoint-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x6a\x33\x31\x10\x84\x7b\x3d\xc5\x72\x8d\xe1\x87\xf3\x4f\xba\xa0\x36\x45\xfa\x14\xe9\xf7\x74\xe3\xb3\xb0\xac\x15\xab\x95\x83\xf3\xf4\xc1\x3a\x07\x6c\x2e\xd5\xcd\x0d\x9a\xf9\x76\xb8\xc4\x4f\x68\x8d\x92\x3d\xe9\xc4\x61\xcf\xcd\x8e\xa2\xf1\x9b\x2d\x4a\xde\x9f\x5e\xeb\x3e\xca\xff\xcb\x8b\x3b\xc5\x3c\x7b\x7a\x4b\xad\x1a\xf4\x43\x12\xdc\x19\xc6\x33\x1b\x7b\x47\xc4\x39\x8b\xf5\x48\xbd\xfd\x12\x3d\xd7\x48\x41\xae\xc7\x78\xb0\x5b\x59\xbd\x56\xc3\x79\x94\x9c\xae\x9e\x06\xd3\x86\xa1\x47\xfe\xc2\xb7\x09\x9a\x61\xe8\x57\x70\x33\x69\x65\x66\xc3\x43\x2e\xf1\x84\x74\x87\x3e\x3f\x9f\x44\xac\x9a\x72\x29\x31\x2f\xeb\xba\x71\xc6\x81\x5b\xb2\xea\x88\x32\x9f\xe1\x69\x3d\xc6\x07\xc9\xa6\x92\x12\xd4\x2f\xc8\xd0\x18\xc6\x85\x75\xe2\x05\x63\xb8\xd9\xc1\x44\x9d\xb6\x84\xea\xdd\x48\x5c\xe2\xbb\x4a\x2b\x1d\x3b\xd2\xee\xdf\xce\x11\x29\xaa\x34\x0d\x78\x32\x2f\xd0\xe9\x6e\xcc\x48\x30\x74\xb9\xc0\xfa\x37\xc5\xba\x8a\xc2\x16\x8e\x5d\xad\xfb\xba\xfc\xea\xe6\x86\x36\x0c\x5b\x18\x2e\xc8\x7d\xd4\x03\x2f\x28\x7e\x9b\x36\xf5\x3f\x01\x00\x00\xff\xff\x5f\xd3\xe0\xd9\xf6\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-generic-garbage-collector.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-generic-garbage-collector.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\xbf\x8e\x9c\x30\x10\xc6\x7b\x9e\xc2\xa2\x41\x3a\x09\x50\xba\xc8\x6d\x8a\x74\x29\x52\xa4\x1f\xcc\xdc\x62\x9d\xf1\x58\x33\x63\x92\xcd\xd3\x47\x18\x92\xbd\x85\xdb\x24\x8a\x52\x01\x66\xe6\xfb\x7e\xf3\xc7\x90\xfc\x17\x64\xf1\x14\xad\xe1\x01\x5c\x07\x59\x27\x62\xff\x1d\xd4\x53\xec\x5e\xde\x4b\xe7\xa9\x5f\xde\x55\x2f\x3e\x8e\xd6\x7c\x08\x59\x14\xf9\x33\x05\xac\x66\x54\x18\x41\xc1\x56\xc6\x40\x8c\xa4\x25\x45\xd6\x4f\x63\xee\x65\x28\x61\x94\xc9\x3f\xeb\x2a\x26\x57\x51\x9c\x5b\x8a\xe1\x6a\x4d\xad\x9c\xb1\x2e\x29\x6f\xd9\xe7\x01\x39\xa2\x62\xa1\x80\xac\x94\xd3\x08\x8a\xaf\xf2\x02\x0c\x18\x76\xd3\xfb\xf0\x81\x48\x45\x19\x52\xf2\xf1\xb2\x55\xd7\x8e\xf8\x0c\x39\xa8\x54\xc6\x44\x98\xd1\x9a\x0d\xc6\x3a\x8a\xca\x14\x02\xb2\x2d\xf6\x14\x15\x42\x9b\x68\x6c\x57\x53\x71\x10\x90\x2b\xce\x01\xc5\x56\xad\x81\xe4\x3f\x32\xe5\x54\x6c\x5b\xf3\x33\xc4\xc7\x4b\x65\x0c\xa3\x50\x66\x87\xfb\xcf\x9b\x5c\xa2\xf1\x26\xb6\x12\x2c\xc8\xc3\x1e\x75\x41\x2d\xcf\xe0\x65\x7b\xf9\x0a\xea\xa6\xff\x64\xd5\x8b\x82\xe6\x83\xe3\xd6\xc8\xb3\x43\xf3\xd4\x9c\x95\x9b\xa7\xbe\x68\x35\x6f\x53\x3f\xd2\xaa\xeb\xb3\x54\xa2\xf1\x40\x52\x6a\xfe\x7d\xee\x27\x98\x7f\xa1\x4c\xaa\xc9\x4e\x08\x69\x5d\x44\xdb\xdc\x0e\xe5\xfe\xf4\xe0\x2b\xc8\x8b\x77\x28\x7d\x62\xfa\x76\x3d\xd7\x71\x02\x98\x51\xd9\x3b\xd9\xaf\xc0\xbf\x17\xe2\xb2\x28\xcd\xdd\x9f\xe4\xb6\xbe\x3f\x5a\x89\xbf\x6a\x2d\x2e\x18\xf5\xc0\xe4\x18\xd7\xd1\x14\xe0\xb2\x52\xaf\xe6\xf5\x23\x00\x00\xff\xff\xcf\x6f\xfe\xc6\xfc\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-horizontal-pod-autoscaler.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-horizontal-pod-autoscaler.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerJobControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\x31\x6f\x3a\x31\x0c\xc5\xf7\xfb\x14\xd6\xed\x07\xfa\x6f\x7f\x65\xed\xd0\xbd\x43\x77\xe7\xce\x40\x20\xc4\x91\xed\x50\xc1\xa7\xaf\xc8\xa5\xa5\x50\x90\xca\x14\xdb\xca\xfb\xbd\xf7\x30\x87\x77\x12\x0d\x9c\x1c\x88\xc7\x71\x81\xc5\x36\x2c\xe1\x84\x16\x38\x2d\x76\xff\x75\x11\x78\x79\xf8\xd7\xed\x42\x9a\x1c\xbc\xc4\xa2\x46\xf2\xc6\x91\xba\x3d\x19\x4e\x68\xe8\x3a\x00\x4c\x89\xad\x4a\xf4\xbc\x02\x5c\x63\x38\x53\xd2\x4d\x58\xd9\x19\xa6\x47\x35\xda\x0f\x9c\xe2\xd1\x41\x6f\x52\xa8\xaf\x92\x7b\xf6\xc5\x93\x24\x32\xaa\x29\xb0\x18\x97\x3c\xa1\xd1\x0f\x5d\x44\x4f\xb1\x99\x5e\x7f\xf7\xcc\xa6\x26\x98\x73\x48\xeb\xb9\xdd\x30\xd1\x0a\x4b\x34\xed\x00\x12\xee\xc9\xc1\x1c\xc6\x8d\x9c\x4c\x38\x46\x12\xb7\x65\x3f\x5c\xd6\x4e\x4a\x24\x75\xdd\x00\x98\xc3\xab\x70\xc9\xd5\x6b\x00\x8f\x36\x6e\x3a\x00\x21\xe5\x22\x23\xb5\xf3\x96\xfd\x19\x7e\x20\xf1\xed\xb2\x26\xab\x6f\x0c\x3a\x0f\x73\x85\x3a\x7e\x54\xc8\x33\xec\xa5\x1a\x5a\xb9\xb1\x68\xc4\xa7\x38\xab\x90\x30\x86\x13\xc9\x1f\x59\x7d\xff\x1b\x94\x79\xba\x51\x8f\x42\x5f\xdd\x26\x8a\xd4\xc6\xef\xea\xb9\x05\x7a\xd8\xfc\x9e\x0b\x1d\x28\xd9\x63\x9f\x0b\xb3\x45\xff\x0c\x00\x00\xff\xff\x01\x6e\x23\x10\xd3\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerJobControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerJobControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-job-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerJobControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerJobControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-job-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerNamespaceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x31\x6f\x3a\x31\x0c\xc5\xf7\xfb\x14\x11\x0b\xd2\x5f\x3a\xd0\x7f\xab\xb2\x76\xe8\xde\xa1\xbb\x2f\xf7\x80\x88\x10\x47\xb6\x43\x05\x9f\xbe\xca\x1d\x6a\x0b\xc7\xd2\x29\xce\x53\xfc\x7e\xcf\x0e\x95\xf8\x01\xd1\xc8\xd9\x3b\x19\x28\x6c\xa8\xda\x81\x25\x5e\xc9\x22\xe7\xcd\xf1\x45\x37\x91\xb7\xe7\xff\xdd\x31\xe6\xd1\xbb\xd7\x54\xd5\x20\xef\x9c\xd0\x9d\x60\x34\x92\x91\xef\x9c\xa3\x9c\xd9\xa6\x16\x6d\x57\xe7\xee\x6d\xb8\x20\xeb\x21\xee\xac\x99\xe9\x45\x0d\xa7\x9e\x73\xba\x78\xb7\x32\xa9\x58\x4d\x2d\xcf\xf0\x75\x80\x64\x18\xa6\x14\x54\x8d\x6b\x19\xc9\xf0\xab\x2f\xd1\x80\x74\x83\xde\x3f\x1f\x98\x4d\x4d\xa8\x94\x98\xf7\xf3\x74\xfd\x88\x1d\xd5\x64\xda\x39\x97\xe9\x04\xef\xe6\x30\x3e\x70\x36\xe1\x94\x20\xbe\xe9\x5a\x28\xa0\xff\x11\x3b\xa9\x09\xea\xbb\xde\x51\x89\x6f\xc2\xb5\x4c\xc4\xde\xad\x5a\x04\x81\x72\x95\x80\x9b\xf6\x6d\xd0\x28\x67\xc8\x70\xd3\x47\x24\x18\xa6\x72\x0f\x9b\xce\x14\x75\x2e\x3e\xc9\xc2\xe1\xaf\xf6\xdb\x5d\xcc\x94\xe2\x15\x8f\xba\x1a\x59\x7d\xa0\xcf\x8b\x5b\x22\xd6\xff\xd6\x4b\xc6\x2c\x3e\xcf\x3e\x97\xa1\xed\x25\xb4\x4f\x5a\x0e\xf4\x15\x00\x00\xff\xff\x8f\x56\xbc\x57\x54\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerNamespaceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerNamespaceControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-namespace-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerNamespaceControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerNamespaceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-namespace-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerNodeControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7f\x85\x90\xdd\x09\xba\x15\x5a\x3b\x74\xef\xd0\x9d\xb6\x2e\x89\x10\x45\x14\x48\xca\x40\xfa\xf5\x85\x65\x03\x6d\xd2\x14\x68\x3a\xe9\x48\xe8\xde\xf1\xa8\xc4\x77\x88\x46\xce\xde\xc9\x40\xe3\x96\xaa\x1d\x59\xe2\x07\x59\xe4\xbc\x3d\x3d\xeb\x36\xf2\x6e\x7a\xea\x4e\x31\x07\xef\x5e\x52\x55\x83\xbc\x71\x42\x77\x86\x51\x20\x23\xdf\x39\x47\x39\xb3\x35\x8b\xce\xa3\x73\xd7\x18\x2e\xc8\x7a\x8c\x7b\x9b\x61\x7a\x51\xc3\xb9\xe7\x9c\x2e\xde\x6d\x4c\x2a\x36\xcd\x72\x2f\xbe\x0e\x90\x0c\x43\xbb\x82\xaa\x71\x2d\x81\x0c\xdf\x7c\x89\x06\xa4\x35\xf4\xfa\xfb\xc0\x6c\x6a\x42\xa5\xc4\x7c\x58\xda\xf5\x01\x7b\xaa\xc9\xb4\x73\x2e\xd3\x19\xde\x2d\xc7\xf8\x91\xb3\x09\xa7\x04\xf1\x99\x03\xfa\xaf\xb9\x93\x9a\xa0\xbe\xeb\x1d\x95\xf8\x2a\x5c\x4b\x0b\xeb\xdd\x66\x4e\x17\x28\x57\x19\xb1\xee\x66\xef\xcc\x9e\x20\xc3\xba\x0a\x48\x30\x34\x79\x80\xb5\x37\x45\x5d\x44\x21\x1b\x8f\x4d\x2d\xb5\x1e\x08\xd9\xa9\x91\xd5\x9b\xac\xff\xf1\x0a\x87\xfb\xb8\x47\x21\xbf\x16\x6f\x85\xff\x84\xc1\x84\x6c\x37\xa0\x51\x40\x2b\xe8\x47\xc1\xcf\x00\x00\x00\xff\xff\x79\x49\xfd\xb4\xbf\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerNodeControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerNodeControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-node-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerNodeControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerNodeControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-node-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\xbd\x8e\xdb\x30\x0c\xde\xfd\x14\x42\x76\xe7\xd0\xad\xf0\xda\xa1\x7b\x87\xee\xb4\xf4\x5d\x22\x9c\x2c\x0a\x24\xe5\xe2\xfa\xf4\x85\x65\x03\x4d\x52\xb7\x70\x53\x74\x32\x6d\xf9\xfb\x23\x29\x2a\xf1\x2b\x44\x23\xe7\xc1\xc9\x48\xfe\x4c\xd5\xae\x2c\xf1\x3b\x59\xe4\x7c\x7e\xfb\xa8\xe7\xc8\x2f\xf3\x87\xee\x2d\xe6\x30\xb8\x4f\xa9\xaa\x41\xbe\x70\x42\x37\xc1\x28\x90\xd1\xd0\x39\x47\x39\xb3\x35\x88\x2e\xaf\xce\xdd\xd3\x70\x41\xd6\x6b\x7c\xb5\x85\x4c\xdf\xd5\x30\xf5\x9c\xd3\xfb\xe0\x4e\x26\x15\xa7\x06\xd9\x93\xaf\x23\x24\xc3\xd0\x5c\x50\x35\xae\x25\x90\xe1\x06\x97\x68\x44\xda\x44\xef\x7f\x1f\x99\x4d\x4d\xa8\x94\x98\x2f\x6b\xba\x3e\xe0\x95\x6a\x32\xed\x9c\xcb\x34\x61\x70\xab\x99\xc1\x73\x36\xe1\x94\x20\x43\x59\xda\xa1\x86\x6c\xfd\xcc\xa9\x4e\xe8\xc7\x98\x03\xa4\x93\x9a\xa0\x43\xd7\x3b\x2a\xf1\xb3\x70\x2d\x4d\xb5\x77\xa7\xc5\x86\x40\xb9\x8a\xc7\xf6\xed\x27\xc9\xca\xb1\x08\xce\x90\x71\x3b\xf6\x02\x32\xb4\x32\x20\x61\x2b\x2f\xb0\xf6\x4c\x51\xd7\x62\x0d\xdb\xca\x6f\x64\xfe\xfa\xa4\xf6\x8b\x1a\x59\x7d\xb0\xb0\x71\x3f\xc5\xe8\x13\xc5\xe9\x81\xef\x3f\x99\x5f\xa5\xfe\x3d\x01\x87\xe7\x46\xf0\x1b\xeb\x6a\x2c\x74\xc1\x76\x3f\x7e\xd5\xdb\xce\x7d\x22\xd5\xc7\xe1\x1f\xd5\xd8\xcb\x81\x1c\x0a\xc7\xdc\x16\xb8\x77\x0a\x99\xa3\x3f\xbe\x5c\x87\x24\x14\x5e\x60\x3b\x9e\x0f\xa1\x33\x87\x3f\xe6\x3d\x96\x72\x46\x7e\x74\xf0\x37\x4d\xda\x81\xdf\x34\xa5\x34\xa6\x9b\x0d\xfa\x11\x00\x00\xff\xff\x22\x33\xab\xea\x04\x05\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-persistent-volume-binder.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-persistent-volume-binder.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\x4e\x03\x31\x10\x44\xfb\xfb\x0a\x2b\xfd\x05\xd1\x21\xb7\x14\xf4\x14\xf4\x7b\xf6\x24\xb1\xe2\xec\x5a\xbb\xeb\xa0\xf0\xf5\xe8\x9c\x2b\x08\xa2\xa0\x1b\x8f\x3c\x6f\x66\xa9\x95\x0f\xa8\x15\xe1\x18\x74\xa1\xb4\xa7\xee\x27\xd1\xf2\x45\x5e\x84\xf7\xe7\x17\xdb\x17\x79\xba\x3e\x4f\xe7\xc2\x39\x86\xd7\xda\xcd\xa1\xef\x52\x31\x5d\xe0\x94\xc9\x29\x4e\x21\x10\xb3\xf8\x88\xd8\xfa\x0c\xe1\x11\x23\x0d\x6c\xa7\x72\xf0\x15\x66\x37\x73\x5c\x66\xe1\x7a\x8b\x61\xe7\xda\xb1\x1b\x91\xbf\xea\xfb\x02\x65\x38\xc6\x0a\xea\x2e\xbd\x65\x72\xfc\xc8\x55\x5a\x50\xb7\xd2\xc7\xef\x8b\x88\x9b\x2b\xb5\x56\xf8\x78\xbf\x6e\xce\x38\x50\xaf\x6e\x53\x08\x4c\x17\xc4\x70\x1f\x13\x93\xb0\xab\xd4\x0a\x8d\x4d\xf2\x7c\x24\x5d\xe8\x88\x39\xad\x56\x72\xd1\x49\x7b\x85\xc5\x69\x0e\xd4\xca\x9b\x4a\x6f\xa3\x72\x0e\xbb\x75\x83\xc2\xa4\x6b\xc2\xe6\x35\xc9\x6b\xc1\x15\xba\x6c\x4e\x46\x85\x63\xc8\x5a\xcc\x87\xf8\x24\x4f\xa7\xff\x01\x59\x32\x7e\x11\x07\xe6\x3b\x00\x00\xff\xff\x22\xde\xe9\x12\xbd\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-pod-garbage-collector.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-pod-garbage-collector.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6e\xf3\x30\x0c\x84\x77\x3f\x85\x90\xdd\xf9\xf1\x6f\x85\xd6\x0e\xdd\x3b\x74\xa7\xed\x4b\x22\x44\x26\x05\x92\x72\x91\x3e\x7d\x61\xd9\x45\x93\xa2\x43\x27\x51\xa2\xee\xbb\x23\xa9\xa4\x37\xa8\x25\xe1\x18\x74\xa0\xf1\x48\xd5\x2f\xa2\xe9\x83\x3c\x09\x1f\xaf\x4f\x76\x4c\xf2\x6f\xf9\xdf\x5d\x13\x4f\x31\x3c\xe7\x6a\x0e\x7d\x95\x8c\x6e\x86\xd3\x44\x4e\xb1\x0b\x81\x98\xc5\x9b\xc4\xd6\x6b\x08\x8f\x18\x29\x60\xbb\xa4\x93\xaf\x30\xbb\x99\x63\xee\x85\xf3\x2d\x86\x83\x6b\xc5\xa1\x49\x7e\xb3\xaf\x03\x94\xe1\x68\x29\xa8\xba\xd4\x32\x91\xe3\x4e\x97\x69\x40\xde\x4d\x1f\xbf\x0f\x22\x6e\xae\x54\x4a\xe2\xf3\x36\x5d\x3f\xe1\x44\x35\xbb\x75\x21\x30\xcd\x88\x61\x0b\x13\x47\x61\x57\xc9\x19\x1a\xcb\xd2\x17\x15\xc7\xb8\x26\xe8\xbf\x1b\x9d\xd6\x0c\x8b\x5d\x1f\xa8\xa4\x17\x95\x5a\x9a\x6b\x1f\x0e\x6b\x0c\x85\x49\xd5\x11\xfb\x5b\x59\x77\x6a\x0e\xf6\x45\x72\x9d\xb1\x1a\x2e\xd0\x61\x6f\x9f\xe1\xed\xcc\xc9\xb6\x62\x1b\xab\x95\xef\xe4\xe3\xe5\x6f\x2e\x58\xc0\xfe\x03\x3d\x2a\xbe\x48\xa5\x91\xee\xf0\x9f\x01\x00\x00\xff\xff\x40\x27\xf3\xfc\xed\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-pv-protection-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-pv-protection-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xb1\x6e\xeb\x30\x0c\x45\x77\x7f\x85\x90\xdd\x79\x78\x5b\xa1\xb5\x43\xf7\x0e\xdd\x69\xf9\x26\x11\x22\x93\x02\x49\xb9\x48\xbf\xbe\xb0\x9d\xa2\x49\x51\xa0\xed\x64\x5a\x22\xcf\x3d\x14\xd5\xfc\x02\xb5\x2c\x1c\x83\x0e\x94\xf6\xd4\xfc\x24\x9a\xdf\xc8\xb3\xf0\xfe\xfc\x60\xfb\x2c\xff\xe6\xff\xdd\x39\xf3\x18\xc3\x63\x69\xe6\xd0\x67\x29\xe8\x26\x38\x8d\xe4\x14\xbb\x10\x88\x59\x7c\x1d\xb1\xe5\x37\x84\x7b\x8c\x54\xb0\x9d\xf2\xc1\x17\x98\x5d\xcc\x31\xf5\xc2\xe5\x12\xc3\xce\xb5\x61\xb7\x8e\x7c\x17\xdf\x06\x28\xc3\xb1\x5a\x50\x73\x69\x75\x24\xc7\xcd\x5c\xa1\x01\xe5\x1a\x7a\xdf\x3e\x88\xb8\xb9\x52\xad\x99\x8f\xdb\x76\xfd\x88\x03\xb5\xe2\xd6\x85\xc0\x34\x21\x86\x4d\x26\x26\x61\x57\x29\x05\x1a\xeb\x9c\xfa\xaa\xe2\x48\x8b\x42\xff\x79\xd3\x69\x2b\xb0\xd8\xf5\x81\x6a\x7e\x52\x69\x75\x8d\xed\xc3\x6e\xf1\x50\x98\x34\x4d\xb8\x9e\xd5\xe5\x51\xcd\xc1\x3e\x4b\x69\x13\x52\xa1\x3c\x2d\xb1\x33\x74\xb8\xf6\x1c\xe1\xeb\xb7\x64\xdb\x8a\x6d\xb9\xb5\x7c\x25\x4f\xa7\x5f\x46\xc9\xf8\x13\xf8\x0f\x34\xcc\x60\xff\xc2\x4b\x8a\x0f\xaf\xba\x92\x6e\x64\xdf\x03\x00\x00\xff\xff\xe6\x47\xba\x3d\x41\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-pvc-protection-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-pvc-protection-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerReplicasetControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xbd\x6e\xe3\x30\x10\x84\x7b\x3d\x05\xa1\x5e\x36\xae\x3b\xb0\xbd\xe2\xfa\x14\xe9\x57\xd2\xd8\x26\x4c\x73\x89\xdd\xa5\x13\xfb\xe9\x03\x51\x4a\xfc\x13\x23\x08\xe0\x4a\xb3\x22\x67\xbe\xe5\x50\x0e\xaf\x10\x0d\x9c\xbc\x93\x9e\x86\x15\x15\xdb\xb1\x84\x33\x59\xe0\xb4\xda\xff\xd5\x55\xe0\xf5\xf1\x4f\xb3\x0f\x69\xf4\xee\x5f\x2c\x6a\x90\x17\x8e\x68\x0e\x30\x1a\xc9\xc8\x37\xce\x51\x4a\x6c\xd5\xa2\xd3\xe8\xdc\x6d\x0c\x67\x24\xdd\x85\x8d\x4d\x61\x7a\x52\xc3\xa1\xe3\x14\x4f\xde\xb5\x26\x05\x6d\xb5\x3c\xc2\x97\x1e\x92\x60\xa8\x5b\x50\x31\x2e\x79\x24\xc3\x95\x2f\x52\x8f\xb8\x40\x6f\xaf\xf7\xcc\xa6\x26\x94\x73\x48\xdb\xf9\x75\xdd\x88\x0d\x95\x68\xda\x38\x97\xe8\x00\xef\xe6\x65\xfc\xc0\xc9\x84\x63\x84\x78\x41\x8e\x61\x20\x85\x75\x97\xbf\x8d\x94\x08\xf5\x4d\xe7\x28\x87\xff\xc2\x25\x57\xe4\x34\x66\xad\x02\xef\x86\x34\xf5\x38\x8d\x02\xe5\x22\x03\x96\x4b\x97\xc8\xe9\xf0\x08\xe9\x97\x83\x2d\xac\x7e\x63\xd0\x59\xcc\xcf\xab\xf2\x8d\x6c\xd8\x3d\x0f\x5c\xab\x91\x95\x3b\xee\x82\x79\x3e\x7c\x13\x12\xc5\x70\x86\xfc\x12\xd0\xb6\xdf\xf3\x32\x8f\x77\xee\x41\xf0\xd9\xc2\x88\x88\x45\x7e\x95\x94\x6b\x33\x3f\x74\xf4\x88\x82\x23\xd2\x7d\xfd\x57\x9c\x4b\xe6\xb2\xfa\x47\x00\x00\x00\xff\xff\x1f\xfe\xad\x12\x19\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerReplicasetControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerReplicasetControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-replicaset-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerReplicasetControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerReplicasetControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-replicaset-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerReplicationControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xb1\x6e\xf3\x30\x0c\x84\x77\x3f\x85\x90\xdd\x09\xfe\xed\x87\xd6\x0e\xdd\x3b\x74\xa7\xed\x4b\x22\x44\x11\x05\x92\x4a\x91\x3c\x7d\x61\xd9\xad\x93\xb4\x1d\x82\x4c\xa6\x05\xde\x7d\x77\xa4\x1c\xde\x21\x1a\x38\x79\x27\x1d\xf5\x6b\x2a\xb6\x67\x09\x17\xb2\xc0\x69\x7d\xf8\xaf\xeb\xc0\x9b\xd3\xbf\xe6\x10\xd2\xe0\xdd\x4b\x2c\x6a\x90\x37\x8e\x68\x8e\x30\x1a\xc8\xc8\x37\xce\x51\x4a\x6c\x55\xa2\xe3\xaf\x73\xb7\x36\x9c\x91\x74\x1f\xb6\x36\x9a\xe9\x59\x0d\xc7\x96\x53\x3c\x7b\xb7\x32\x29\x58\x55\xc9\x6f\xf8\xd2\x41\x12\x0c\x35\x05\x15\xe3\x92\x07\x32\x5c\xe9\x22\x75\x88\x33\xf4\x76\xbd\x63\x36\x35\xa1\x9c\x43\xda\x4d\xed\xda\x01\x5b\x2a\xd1\xb4\x71\x2e\xd1\x11\xde\x4d\x61\x7c\xcf\xc9\x84\x63\x84\x78\x41\x8e\xa1\xaf\xfc\x76\x79\x6e\xa4\x44\xa8\x6f\x5a\x47\x39\xbc\x0a\x97\x5c\x99\xad\x5b\x8d\x21\x04\xca\x45\x7a\xcc\x6f\x57\x16\x8b\xc3\xc8\x3c\x41\xba\x79\x67\x07\xab\xdf\x18\x74\x1a\xa6\x66\x75\xfc\x20\xeb\xf7\xcf\xa0\x36\x6a\x64\xe5\x8e\x38\x03\x9e\xb1\xdd\x86\x44\x31\x5c\x7e\x94\x79\xc4\x3a\xf3\x70\xa7\xee\x05\x5f\xcd\x07\x44\xcc\xe3\xf7\x61\x72\xbd\xc6\x83\x77\xc1\x09\xc9\xfe\xe6\x2c\x9e\x73\xf4\xcf\x00\x00\x00\xff\xff\x83\x44\x43\xfc\x08\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerReplicationControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerReplicationControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-replication-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerReplicationControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerReplicationControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-replication-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xbd\x6e\xeb\x30\x0c\x85\x77\x3d\x05\xe1\x25\xc0\x05\x9c\xe0\x6e\x85\xd6\x0e\xdd\x3b\x74\xa7\x6d\xa6\x11\xa2\x88\x2a\x7f\x52\xa4\x4f\x5f\x58\x4e\xd1\xb8\xe9\xd0\x8d\xa6\xf5\x7d\xe7\x48\x58\xd3\x0b\x89\x26\x2e\x11\x64\xc0\x71\x8b\x6e\x07\x96\xf4\x81\x96\xb8\x6c\x8f\x0f\xba\x4d\xbc\x3b\xff\x0f\xc7\x54\xa6\x08\x8f\xd9\xd5\x48\x9e\x39\x53\x38\x91\xe1\x84\x86\x31\x00\x60\x29\x6c\x0d\xd1\xf9\x13\x60\xad\xe1\x4a\x45\x0f\x69\x6f\xb3\x4c\x2f\x6a\x74\xea\xb9\xe4\x4b\x84\xce\xc4\xa9\x6b\xc8\x6f\xf1\x3e\x90\x14\x32\x6a\x2d\xd0\x8d\xbd\x4e\x68\x74\xc3\x65\x1c\x28\x5f\x43\xd7\xc7\x07\x66\x53\x13\xac\x35\x95\xd7\xe5\x76\xfd\x44\x7b\xf4\x6c\x1a\x00\x0a\x9e\x28\xc2\x52\x26\x8e\x5c\x4c\x38\x67\x92\x28\xa4\xec\x32\xd2\x9b\xb3\x61\xff\xfd\x23\x88\x67\xd2\x18\x7a\xc0\x9a\x9e\x84\xbd\xb6\xd4\x1e\x36\xff\x36\x01\xe0\x0b\x5b\x2d\xcf\x24\xc3\x75\x91\x93\x5a\x1b\xde\xd1\xc6\xc3\xbd\xa5\xeb\xee\x25\xab\x2a\xba\x53\x43\x73\x5d\x6b\x97\xf7\xf8\x9b\x8e\xce\x54\xec\x07\x3f\x0a\xcd\xfc\x3c\xd6\x56\xec\x46\xfa\x19\x00\x00\xff\xff\x46\xea\x90\xf7\x1c\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-resourcequota-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-resourcequota-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerRouteControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x3f\x4f\x03\x31\x0c\xc5\xf7\x7c\x8a\xa8\xfb\xb5\x62\x43\x59\x19\xd8\x19\xd8\x7d\x77\xaf\x34\x6a\x6a\x47\xb6\x73\xa8\x7c\x7a\x74\x7f\x24\xda\x8a\x01\x36\xe7\x29\xef\xf7\x73\x42\x35\xbf\x43\x2d\x0b\xa7\xa8\x3d\x0d\x7b\x6a\x7e\x12\xcd\x5f\xe4\x59\x78\x7f\x7e\xb6\x7d\x96\xc3\xf4\x14\xce\x99\xc7\x14\x5f\x4a\x33\x87\xbe\x49\x41\xb8\xc0\x69\x24\xa7\x14\x62\x24\x66\xf1\xa5\x62\xf3\x31\xc6\x7b\x8c\x54\xb0\x9d\xf2\xd1\x67\x98\x5d\xcd\x71\xe9\x84\xcb\x35\xc5\x9d\x6b\xc3\x6e\xa9\xfc\xa6\x6f\x3d\x94\xe1\x58\xb6\xa0\xe6\xd2\xea\x48\x8e\x9b\x5e\xa1\x1e\x65\x93\xde\x5f\xef\x45\xdc\x5c\xa9\xd6\xcc\x1f\xeb\xeb\xba\x11\x47\x6a\xc5\x2d\xc4\xc8\x74\x41\x8a\xeb\x32\x69\x10\x76\x95\x52\xa0\x49\xa5\x39\xba\x9f\x20\x68\x2b\xb0\x14\xba\x48\x35\xbf\xaa\xb4\xba\xd8\xba\xb8\x9b\xf5\x0a\x93\xa6\x03\xb6\x8c\x65\xc4\x0c\x9f\xa0\xfd\x16\x95\x6c\xbe\x0c\x9f\xe4\xc3\xe9\x1f\x98\x83\x39\x79\x7b\xa0\xd5\xbf\x43\x30\x81\xfd\xa1\x3e\x28\xc8\x71\x43\x9a\xa7\xf5\x4f\xc3\x77\x00\x00\x00\xff\xff\x87\xde\x60\x28\x0b\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerRouteControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerRouteControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-route-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerRouteControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerRouteControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-route-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x6a\x33\x31\x10\x84\x7b\x3d\x85\x70\x2f\xff\xfc\x5d\x50\x9b\x22\x7d\x8a\xf4\x7b\xba\x71\x2c\x2c\xef\x8a\xdd\xd5\x81\xf3\xf4\xe1\xce\x07\x89\x21\x81\x74\x2b\x8d\xe6\x9b\xd1\x52\xaf\x6f\x50\xab\xc2\x39\xea\x44\xe5\x48\xc3\xcf\xa2\xf5\x83\xbc\x0a\x1f\x2f\x4f\x76\xac\xf2\x6f\xf9\x1f\x2e\x95\xe7\x1c\x9f\xdb\x30\x87\xbe\x4a\x43\xb8\xc2\x69\x26\xa7\x1c\x62\x24\x66\xf1\xcd\x62\xeb\x31\xc6\x47\x8c\x74\xb0\x9d\xeb\xc9\x57\x98\xdd\xcc\x71\x4d\xc2\xed\x96\xe3\xc1\x75\xe0\xb0\x59\x7e\x8a\x1f\x13\x94\xe1\xd8\x5a\xd0\x70\x19\x7d\x26\xc7\x37\x5f\xa3\x09\x6d\x0f\x7d\x7c\x3e\x89\xb8\xb9\x52\xef\x95\xdf\xef\xbf\x4b\x33\x4e\x34\x9a\x5b\x88\x91\xe9\x8a\x1c\xef\x65\x72\x11\x76\x95\xd6\xa0\xd9\xa0\x4b\x2d\x48\x54\x8a\x0c\xf6\xf4\x25\x05\x1d\x0d\x96\x43\x8a\xd4\xeb\x8b\xca\xe8\x5b\x6e\x8a\x87\xb5\x88\xc2\x64\x68\xc1\x7e\xb7\x63\x76\xca\x1a\xb8\x40\xa7\x5d\x2c\x0a\x72\xfc\x0d\x84\x05\xbf\xf9\xd7\xb1\x93\x97\xf3\x36\xdd\x57\x13\x3e\x03\x00\x00\xff\xff\x33\x4f\xed\x2b\xd2\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-service-account-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-service-account-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerServiceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xbd\x6e\xc3\x30\x0c\x84\x77\x3f\x85\x90\xdd\x09\xba\x15\x5a\x3b\x74\xef\xd0\x9d\xb6\x2f\x89\x10\x85\x14\x48\xca\x45\xfa\xf4\x85\x7f\x80\x26\x46\x87\xb6\x93\x69\x42\xf7\xdd\x27\x51\x49\xef\x50\x4b\xc2\x31\x68\x47\xfd\x9e\xaa\x9f\x45\xd3\x27\x79\x12\xde\x5f\x9e\x6d\x9f\xe4\x30\x3e\x35\x97\xc4\x43\x0c\x2f\xb9\x9a\x43\xdf\x24\xa3\xb9\xc2\x69\x20\xa7\xd8\x84\x40\xcc\xe2\x73\xc4\xa6\xdf\x10\x1e\x31\x52\xc0\x76\x4e\x47\x9f\x60\x76\x33\xc7\xb5\x15\xce\xb7\x18\x76\xae\x15\xbb\x39\xf2\x53\x7d\xed\xa0\x0c\xc7\x6c\x41\xd5\xa5\x96\x81\x1c\x77\xb9\x4c\x1d\xf2\x5a\xfa\x78\xbc\x13\x71\x73\xa5\x52\x12\x9f\x96\xdb\xb5\x03\x8e\x54\xb3\x5b\x13\x02\xd3\x15\x31\x2c\x32\xb1\x17\x76\x95\x9c\xa1\xd1\xa0\x63\xea\xd1\x7e\xaf\x1a\xad\x19\x16\x9b\x36\x50\x49\xaf\x2a\xb5\xcc\x7d\x6d\xd8\x4d\x02\x0a\x93\xaa\x3d\xd6\xdd\x1a\x9f\x1a\x46\x68\xb7\x6e\x4f\xf0\xf9\x9b\x93\x2d\xc3\x07\x79\x7f\xfe\x1b\xf1\x60\x4e\x5e\x37\xe0\xe5\x3d\x7e\x07\x62\x19\xb6\x5e\xff\xf1\xc1\x08\xf6\x0d\xa7\x57\x4c\x1a\xd3\x58\x66\xd2\x9d\xdb\x57\x00\x00\x00\xff\xff\xf9\xce\x49\x7c\x63\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerServiceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerServiceControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-service-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerServiceControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerServiceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-service-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x3f\xaf\xdb\x30\x0c\xc4\x77\x7f\x0a\x21\xbb\xf3\xd0\xad\xd0\xda\xa1\x7b\x87\xee\xb4\x7d\x7e\x11\x9e\x2c\x0a\x24\xe5\x22\xf9\xf4\x85\x1c\xb7\xf9\xe3\xb4\x48\x8a\x6e\x14\x61\xfe\xee\x78\xb2\x28\x87\xef\x10\x0d\x9c\xbc\x93\x8e\xfa\x3d\x15\x3b\xb0\x84\x13\x59\xe0\xb4\xff\xf8\xac\xfb\xc0\x6f\xf3\xa7\xe6\x23\xa4\xc1\xbb\x2f\xb1\xa8\x41\xbe\x71\x44\x33\xc1\x68\x20\x23\xdf\x38\x47\x29\xb1\x2d\x23\x5a\x8f\xce\xdd\x62\x38\x23\xe9\x21\x8c\x56\x61\x7a\x54\xc3\xd4\x72\x8a\x47\xef\x76\x26\x05\xbb\x65\xe4\x91\x7c\xe9\x20\x09\x86\xc5\x05\x15\xe3\x92\x07\x32\x5c\xcd\x45\xea\x10\x57\xd1\xdb\xcf\x3b\x66\x53\x13\xca\x39\xa4\xf7\xf3\x76\xed\x80\x91\x4a\x34\x6d\x9c\x4b\x34\xc1\xbb\xb3\x19\xdf\x73\x32\xe1\x18\x21\x5e\x8d\x0c\x63\x89\x0a\x6b\x2f\xed\x46\x4a\x84\xfa\xa6\x75\x94\xc3\x57\xe1\x92\x17\xcd\xd6\xed\xaa\x09\x81\x72\x91\x1e\x6b\x2f\xf3\x50\x15\x66\x48\xb7\x76\x62\x50\x5b\x8a\x1f\x64\xfd\x61\x4b\xa1\x9c\x75\xcb\xb9\xb2\x72\xc7\x7b\x87\xfd\x27\xee\x5b\x3d\x94\x3b\xfc\x39\xe5\x7f\xc2\x8d\x21\x51\x0c\x27\xc8\x93\xc8\xe7\xf2\xeb\x05\x75\xba\x96\x03\x22\xd6\xf2\x57\x0a\x79\x59\xfe\x75\xe3\x97\xeb\x15\xcc\xa1\x3e\x82\x97\x64\x7f\x87\xbf\xd1\xff\xcb\x8d\x3c\xdc\xb7\xbe\x40\x35\x24\x9b\x39\x96\x09\x7d\xa4\x30\xfd\xd9\x4a\xd5\x7f\x8a\x8b\x19\xe9\xfe\xcf\xb9\xe2\x6c\x6c\xff\x0c\x00\x00\xff\xff\x21\x86\xa1\xef\x0d\x04\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-statefulset-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-statefulset-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemControllerTtlControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x4f\xc4\x30\x0c\x85\xf7\xfc\x0a\xeb\xf6\x16\xb1\xa1\xac\x0c\xec\x0c\xec\x6e\xeb\xa3\xd1\xa5\x76\x64\x3b\x45\xc7\xaf\x47\x4d\x8b\xe0\x80\x81\xed\xf9\xc9\xef\x7b\x36\x96\xf4\x42\x6a\x49\x38\x82\x0e\x38\xf6\x58\x7d\x16\x4d\xef\xe8\x49\xb8\xbf\x3c\x58\x9f\xe4\x6e\xbd\x0f\x97\xc4\x53\x84\xc7\x5c\xcd\x49\x9f\x25\x53\x58\xc8\x71\x42\xc7\x18\x00\x90\x59\xbc\x45\x6c\x1b\x01\x6e\x31\x52\x88\x6d\x4e\x67\xdf\x60\x76\x35\xa7\xa5\x13\xce\xd7\x08\x27\xd7\x4a\xa7\x16\xf9\xab\xbe\x0e\xa4\x4c\x4e\xed\x0a\xac\x2e\xb5\x4c\xe8\xf4\x2d\x97\x71\xa0\x7c\x94\xde\xae\x0f\x22\x6e\xae\x58\x4a\xe2\xd7\xfd\xbb\x6e\xa2\x33\xd6\xec\x16\x00\x18\x17\x8a\xb0\x1f\x13\x47\x61\x57\xc9\x99\x34\xba\xe7\xee\x6b\x0c\x5a\x33\x59\x0c\x1d\x60\x49\x4f\x2a\xb5\xb4\xae\x0e\x4e\x5b\xb9\x92\x49\xd5\x91\x0e\x8f\x65\xa2\x0d\xbd\x92\x0e\x87\x95\x93\x79\x13\x05\x7d\x9c\x9b\xda\x5f\x68\xf2\xad\x99\xff\x62\xd3\x4a\xec\x3f\xe0\xa3\xd2\x27\xe9\x17\xfe\x23\x00\x00\xff\xff\x67\x26\xd3\x50\xd9\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemControllerTtlControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemControllerTtlControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-controller-ttl-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemControllerTtlControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemControllerTtlControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-controller-ttl-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemDaemonsetControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x3d\x4e\x03\x41\x0c\xc5\xf1\x7e\x4e\x61\xa5\xcf\x22\x3a\x34\x2d\x37\xa0\xa0\x77\xb2\x0f\x65\x14\x8f\xbd\xf2\x07\x52\x38\x3d\xda\xa5\x01\x89\xd2\xc5\xff\xe7\xc7\xdb\x78\x87\xc7\x30\xed\xe4\x17\xbe\x2e\x5c\x79\x33\x1f\x5f\x9c\xc3\x74\xb9\xbf\xc4\x32\xec\xe9\xf3\xb9\xdd\x87\xae\x9d\x5e\xa5\x22\xe1\x6f\x26\x68\x13\xc9\x2b\x27\xf7\x46\xc4\xaa\x96\x47\x12\xfb\x49\xf4\x97\xb1\x0d\x1a\xb7\xf1\x91\x3b\x16\x8f\x48\xcc\xb3\xa9\x3c\x3a\x9d\xd2\x0b\xa7\x23\xf9\xef\x7d\x5d\xe0\x8a\xc4\xb1\x82\x2b\xad\xb6\x95\x13\xbf\x3a\xe5\x89\x4e\x3f\x66\x5f\x19\xd3\x34\x90\xe7\xab\x69\xba\x89\xc0\x9b\x97\x20\x3a\x69\x89\xb4\xef\x00\x00\x00\xff\xff\x96\xa9\x08\x3b\xef\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemDaemonsetControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemDaemonsetControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-daemonset-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemDaemonsetControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemDaemonsetControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-daemonset-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemDeployerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x8b\xdb\x40\x0c\x85\xef\xfe\x15\x22\xf7\x38\xf4\x56\x7c\xed\x61\xef\x85\xf6\xae\xcc\xbc\xb5\xa7\x3b\x1e\x0d\x92\x26\x4b\xfa\xeb\x8b\x27\x2e\x94\x4d\x0a\x5b\xba\x27\xcb\x46\xef\x7b\xef\x19\x71\x4d\xdf\xa1\x96\xa4\x4c\xa4\x67\x0e\x23\x37\x5f\x44\xd3\x4f\xf6\x24\x65\x7c\xf9\x6c\x63\x92\xd3\xe5\xd3\xf0\x92\x4a\x9c\xe8\x4b\x6e\xe6\xd0\xaf\x92\x31\xac\x70\x8e\xec\x3c\x0d\x44\x5c\x8a\x78\x97\xd8\xf6\x4a\x24\x15\xc5\x96\xf4\xec\x9b\x3c\xc2\x82\xa6\xea\xdd\xe5\x49\xb9\xb8\x91\x2f\x20\x4d\xf3\xe2\xe4\x42\x11\x35\xcb\x95\x5e\x93\x2f\xa9\x10\x53\x55\xf9\x81\xe0\x23\xd1\x37\x43\xa4\xaa\x69\x65\x4d\xf9\xda\xd1\xd4\xf7\xc8\xa0\x97\x14\x40\x1c\x82\xb4\x8d\xf8\x2c\x4a\xdc\x5c\x56\x76\xc4\x1d\xb9\xa2\xb8\x8d\x5d\xf6\xa8\x5d\x3b\x43\x0b\x1c\xbd\xe4\xa6\x6d\x35\xb2\x63\xa2\x83\x6b\xc3\x61\x20\x2a\xbc\x62\x22\xbb\x9a\x63\x9d\x6e\x4c\xe8\xa0\x2d\xc3\xa6\xe1\x48\x5c\xd3\x93\x4a\xab\xbd\xf5\x91\x0e\x9b\x44\x61\xd2\x34\x60\xff\xa6\xa8\x39\x85\x6e\x18\xa4\xb8\x4a\xce\x50\x1b\x88\x2e\xd0\xf3\xbe\x13\x91\xe1\xf8\x38\xde\x0c\xef\xcf\x9c\xec\x36\xdc\x7a\xf5\xf1\x95\x3d\x2c\xff\x63\x75\xb2\xc0\x19\x8f\x0d\x77\x9f\x77\xd1\xab\xc4\x37\xb1\x83\xe2\x77\xca\xbb\x06\xff\x10\x7b\x03\x9f\xb2\xcc\xf7\x11\xdf\x25\xc7\x65\x3b\x9a\xbf\x26\xeb\x89\x1e\x83\x8e\x94\x56\x9e\x31\xfe\x79\xfc\xf7\xfc\xbe\x63\xae\xe0\xd5\x79\x7e\x63\xb4\xff\xc0\x5f\x01\x00\x00\xff\xff\x13\x3e\xac\xd5\x97\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemDeployerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemDeployerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-deployer.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemDeployerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemDeployerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-deployer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemDeploymentControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x3d\x4e\x03\x41\x0c\xc5\xf1\x7e\x4e\x61\xa5\xcf\x22\x3a\x34\x2d\x37\xa0\xa0\x77\xb2\x0f\x65\x14\xaf\x3d\xf2\x07\xd2\x72\x7a\x94\xa5\x01\x89\xd2\xc5\xff\xe7\xc7\x73\xbc\xc3\x63\x98\x76\xf2\x0b\x5f\x17\xae\xbc\x99\x8f\x2f\xce\x61\xba\xdc\x5f\x62\x19\xf6\xf4\xf9\xdc\xee\x43\xd7\x4e\xaf\x52\x91\xf0\x37\x13\xb4\x0d\xc9\x2b\x27\xf7\x46\xc4\xaa\x96\x47\x12\x8f\x93\xe8\x2f\x63\x13\x1a\xb7\xf1\x91\x0f\x2c\xf6\x48\x6c\x67\x53\xd9\x3b\x9d\xd2\x0b\xa7\x23\xf9\xef\x7d\x5d\xe0\x8a\xc4\xb1\x82\x2b\xad\xe6\xca\x89\x5f\x9d\xf2\x86\x4e\x3f\x66\x5f\x31\xc5\xf6\x0d\x9a\xe7\xab\x69\xba\x89\xc0\x9b\x97\x20\x3a\x69\x89\xb4\xef\x00\x00\x00\xff\xff\x23\xac\x6f\x67\xf0\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemDeploymentControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemDeploymentControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-deployment-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemDeploymentControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemDeploymentControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-deployment-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemDeploymentconfigControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xbd\x4e\xc3\x50\x0c\xc5\xf1\xfd\x3e\x85\xd5\xbd\x41\x6c\xe8\xae\xbc\x01\x03\xbb\x9b\x9c\xd2\xab\x3a\x76\xe4\x0f\xa4\xf0\xf4\xa8\x61\x01\x89\xd1\xc3\xff\xe7\xc3\xdb\x78\x87\xc7\x30\xed\xe4\x17\x9e\x27\xae\xbc\x99\x8f\x2f\xce\x61\x3a\xdd\x5f\x62\x1a\xf6\xf4\xf9\xdc\xee\x43\x97\x4e\xaf\x52\x91\xf0\x37\x13\xb4\x15\xc9\x0b\x27\xf7\x46\xc4\xaa\x96\x47\x12\x8f\x93\xe8\x2f\x63\x1b\x34\x6e\xe3\x9a\x0f\x2c\xf6\x48\xac\x67\x53\xd9\x3b\x9d\xd2\x0b\xa7\x23\xf9\xef\x7d\x5d\xe0\x8a\xc4\xb1\x82\x2b\xad\xb6\x85\x13\xbf\x3a\xe5\x15\x9d\x7e\xcc\xbe\x60\x13\xdb\x57\x68\xce\xa6\xd7\xf1\x71\x9e\x4d\xd3\x4d\x04\xde\xbc\x04\xd1\x49\x4b\xa4\x7d\x07\x00\x00\xff\xff\xa8\x1d\x9d\x14\xf6\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemDeploymentconfigControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemDeploymentconfigControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-deploymentconfig-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemDeploymentconfigControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemDeploymentconfigControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-deploymentconfig-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemDiscoveryYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xbd\x6e\xc3\x30\x0c\x84\x77\x3d\x05\x91\xb1\x80\xe5\x24\x53\xa1\xb5\x6b\xa7\x00\xed\x4e\xc7\x6c\xa2\xc6\x21\x0d\x91\x52\x90\x3e\x7d\xe1\xbf\xfc\xa0\xdd\xee\x3b\xf0\x8e\x94\xb0\x8f\x9f\x94\x34\x0a\x07\x48\x0d\xee\x3d\x66\x3b\x4a\x8a\x3f\x68\x51\xd8\x9f\x5e\xd5\x47\xa9\xcb\xc6\x9d\x22\xb7\x01\xde\xba\xac\x46\x69\x27\x1d\xb9\x33\x19\xb6\x68\x18\x1c\x00\x32\x8b\x8d\x11\x1d\x10\xe0\xb9\x46\x7a\x62\x3d\xc6\x2f\x1b\xca\xf4\xaa\x46\xe7\x4a\xb8\xbb\x06\x58\x59\xca\xb4\x1a\x23\xff\xad\xcf\x0d\x25\x26\xa3\xf1\x0a\xcc\x26\xb9\x6f\xd1\xe8\x21\xc7\x78\xa6\x00\x53\x67\x68\xa3\xee\xa5\x50\xba\xba\x94\x3b\xd2\xe0\x2a\x60\xe1\x1d\xa9\xe4\xb4\xa7\x8f\xdd\xfb\x78\x5d\x05\x75\x99\xde\xfc\x04\xf5\xcb\x84\xd8\xc7\x9b\x78\xf0\xf4\xae\x16\x57\x6e\xa3\xf2\x30\x3b\x3c\x76\xc0\xb2\x9d\x58\x2f\x78\x38\x50\xba\xcd\xde\x79\x49\xcc\x8e\xff\xd6\xe5\xa4\xd9\xa9\xb6\x7e\xed\xd7\xbe\x6f\xaa\xb2\x99\xcb\xf5\xbe\x73\x90\xf5\xa4\xfd\x85\xba\xae\x3a\xb1\x5c\xf8\x8f\xb1\x6c\x71\x00\x85\x52\x33\x7f\xc1\x81\xcc\xfd\x06\x00\x00\xff\xff\xda\x9e\x75\xd5\xfd\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemDiscoveryYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemDiscoveryYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-discovery.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemDiscoveryYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemDiscoveryYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-discovery.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemDisruptionControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x3d\x4e\xc4\x40\x0c\x86\xe1\x7e\x4e\x61\x6d\xbf\x41\x74\x68\x5a\x6e\x40\x41\xef\xdd\x31\x5a\x2b\x8e\x3d\xf2\x0f\x52\x38\x3d\x4a\x68\x40\xa2\x74\xf1\xbc\xfe\x70\xf2\x3b\x79\xb0\x69\x07\xbf\xe1\x7d\xc1\xca\x87\x39\x7f\x61\xb2\xe9\xb2\xbe\xc4\xc2\xf6\xf4\xf9\xdc\x56\xd6\xd1\xe1\x55\x2a\x92\xfc\xcd\x84\xda\x46\x89\x03\x13\x7b\x03\x40\x55\xcb\x93\xc4\x71\x02\xfc\xcd\xd8\x24\x8d\x07\x7f\xe4\x11\x8b\x3d\x92\xb6\xab\xa9\xec\x1d\x2e\xe9\x45\x97\x93\xfc\xf7\xbe\x6e\xe4\x4a\x49\xe7\x0a\xac\xb4\x9a\x03\x93\x7e\x39\xc5\x8d\x3a\xfc\x34\xfb\xe0\xf0\x9a\x07\xbd\xde\x4d\xd3\x4d\x84\xbc\x79\x09\x45\x07\x2d\x91\xf6\x1d\x00\x00\xff\xff\x9b\x6a\x2f\xec\xf0\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemDisruptionControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemDisruptionControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-disruption-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemDisruptionControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemDisruptionControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-disruption-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemEndpointControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x3d\x4e\xc4\x40\x0c\x86\xe1\x7e\x4e\x61\x6d\xbf\x41\x74\x68\x5a\x6e\x40\x41\xef\xdd\x31\x5a\x2b\x8e\x3d\xf2\x0f\x52\x38\x3d\x4a\x68\x40\xa2\x74\xf1\x3e\xfe\x70\xf2\x3b\x79\xb0\x69\x07\xbf\xe1\x7d\xc1\xca\x87\x39\x7f\x61\xb2\xe9\xb2\xbe\xc4\xc2\xf6\xf4\xf9\xdc\x56\xd6\xd1\xe1\x55\x2a\x92\xfc\xcd\x84\xda\x46\x89\x03\x13\x7b\x03\x40\x55\xcb\x33\x89\xe3\x04\xf8\xcb\xd8\x24\x8d\x07\x7f\xe4\x81\xc5\x1e\x49\xdb\xd5\x54\xf6\x0e\x97\xf4\xa2\xcb\x99\xfc\xf7\xbe\x6e\xe4\x4a\x49\xe7\x0a\xac\xb4\x9a\x03\x93\x7e\x75\x8a\x1b\x75\xf8\x31\x3b\xe9\x98\xc6\x9a\xd7\xbb\x69\xba\x89\x90\x37\x2f\xa1\xe8\xa0\x25\xd2\xbe\x03\x00\x00\xff\xff\xb1\xc9\xfc\x31\xee\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemEndpointControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemEndpointControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-endpoint-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemEndpointControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemEndpointControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-endpoint-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemGarbageCollectorControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x3d\x4e\xc6\x40\x0c\x05\xfb\x3d\x85\xf5\xf5\x09\xa2\x43\xdb\x72\x03\x0a\x7a\x67\x63\x92\x55\x1c\x3b\xf2\x0f\x52\x38\x3d\x4a\x68\x40\xa2\x9c\x62\xe6\x3d\x3c\xfa\x3b\x99\x77\x95\x0a\x36\x61\x1b\x31\x63\x55\xeb\x5f\x18\x5d\x65\xdc\x5e\x7c\xec\xfa\xf4\xf9\x5c\xb6\x2e\x73\x85\x57\x4e\x0f\xb2\x37\x65\x2a\x3b\x05\xce\x18\x58\x0b\x00\x8a\x68\xdc\x8a\x5f\x08\xf0\x37\xa3\x07\x89\xaf\xfd\x23\xae\x98\x9f\x1e\xb4\x0f\x2a\x7c\x56\x78\x84\x25\x3d\x6e\xe5\xbf\xf9\x9c\xc8\x84\x82\xee\x17\x98\xa1\x79\xcc\x18\xf4\xcb\x13\xdc\xa9\xc2\x4f\xb3\x2e\x68\x13\x2e\x34\x34\x65\xa6\x16\x6a\x43\x53\x09\xbb\xc8\x8a\x25\x93\x57\x90\x64\x2e\xdf\x01\x00\x00\xff\xff\x37\xc4\xdf\x7e\xf7\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemGarbageCollectorControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemGarbageCollectorControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-garbage-collector-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemGarbageCollectorControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemGarbageCollectorControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-garbage-collector-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemGcControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x3d\x6e\x84\x40\x0c\x86\xe1\x7e\x4e\x61\xd1\x43\x94\x2e\x9a\x36\x37\x48\x91\xde\x80\x13\x46\x18\x1b\xf9\x27\x12\x39\xfd\x0a\xb6\xd9\x95\xb6\x74\xf1\x3e\xfe\x70\x6f\xdf\x64\xde\x54\x2a\xd8\x88\xd3\x80\x19\x8b\x5a\xfb\xc7\x68\x2a\xc3\xfa\xe1\x43\xd3\xb7\xbf\xf7\xb2\x36\x99\x2b\x7c\x72\x7a\x90\x7d\x29\x53\xd9\x28\x70\xc6\xc0\x5a\x00\x50\x44\xe3\x4a\xfc\x3c\x01\x9e\x19\xdd\x49\x7c\x69\x3f\x71\x62\x7e\x78\xd0\xd6\xab\xf0\x51\xa1\x0b\x4b\xea\xae\xe4\xd5\xfb\x1c\xc9\x84\x82\xae\x15\x98\xa1\xb9\xcf\x18\xf4\xd0\x09\x6e\x54\xe1\x6e\xd6\xdf\xa9\x9f\x54\xc2\x94\x99\xac\x58\x32\x79\x05\x49\xe6\x72\x0b\x00\x00\xff\xff\x98\x79\x60\xf7\xe8\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemGcControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemGcControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-gc-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemGcControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemGcControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-gc-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemHeapsterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x4e\x03\x31\x0c\x86\xf7\x7b\x8a\xa8\xfb\x15\xb1\xa1\xac\x0c\xec\x0c\xec\xbe\xcb\xdf\x5e\xd4\x5c\x1c\xd9\x4e\xa1\x3c\x3d\xba\x5c\x06\xaa\x22\x31\xc5\x8e\xf2\x7f\x9f\xad\x50\x89\x1f\x10\x8d\x9c\xbd\x93\x89\xe6\x23\x55\x5b\x58\xe2\x37\x59\xe4\x7c\xbc\xbc\xe8\x31\xf2\xd3\xf5\x79\xb8\xc4\x1c\xbc\x7b\x4d\x55\x0d\xf2\xce\x09\xc3\x0a\xa3\x40\x46\x7e\x70\x8e\x72\x66\x6b\x11\xdd\x5a\xe7\xee\x31\x5c\x90\x75\x89\x27\xdb\x60\x7a\x53\xc3\x3a\x72\x4e\x37\xef\x0e\x26\x15\x87\x16\xf9\x4b\x5f\x27\x48\x86\xa1\x4d\x41\xd5\xb8\x96\x40\x86\x5f\xb9\x44\x13\x52\x97\xde\x3f\x9f\x98\x4d\x4d\xa8\x94\x98\xcf\xfb\x76\x63\xc0\x89\x6a\x32\x1d\x9c\xcb\xb4\xc2\xbb\x7d\x18\xbf\x80\xca\xb6\xd8\x20\x35\x41\xfd\x30\x3a\x2a\xf1\x4d\xb8\x96\x86\x1e\xdd\x61\x73\x09\x94\xab\xcc\xe8\x77\xb8\x22\x37\xd4\xd8\x60\x5a\x68\x46\x6f\x39\xf4\xaa\x70\xd8\x8a\x2b\x64\xea\xa9\x33\xac\x9d\x29\xea\x5e\x7c\x92\xcd\xcb\xa3\x11\x5f\x86\xbc\x7d\x8c\x3e\x9a\x03\x4a\xe2\xdb\xda\xf5\xff\xc3\x7f\x02\x00\x00\xff\xff\x6f\x85\x61\xbe\xe6\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemHeapsterYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemHeapsterYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-heapster.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemHeapsterYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemHeapsterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-heapster.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemHpaControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x3d\x4e\xc4\x40\x0c\x86\xe1\x7e\x4e\x61\xa5\x4f\x10\x1d\x9a\x96\x1b\x50\xd0\x3b\x89\x51\x46\x71\xec\x91\x7f\x90\xc2\xe9\x51\x42\xc3\x4a\x5b\xba\x78\x1f\x7f\xd8\xdb\x27\x99\x37\x95\x0a\x36\xe3\x32\x61\xc6\xa6\xd6\x7e\x30\x9a\xca\xb4\xbf\xf9\xd4\xf4\xe5\xfb\xb5\xec\x4d\xd6\x0a\xef\x9c\x1e\x64\x1f\xca\x54\x0e\x0a\x5c\x31\xb0\x16\x00\x14\xd1\xb8\x13\xbf\x4e\x80\x47\x46\x3b\x89\x6f\xed\x2b\x2e\xcc\x4f\x0f\x3a\x46\x15\x3e\x2b\x0c\x61\x49\xc3\x9d\x3c\x7b\x9f\x33\x99\x50\xd0\xbd\x02\x33\x34\xfb\x8a\x41\xff\x3a\xc1\x83\x2a\xfc\x99\x75\xeb\x38\x2e\x2a\x61\xca\x4c\x56\x2c\x99\xbc\x82\x24\x73\xf9\x0d\x00\x00\xff\xff\xf2\x66\x9f\x0b\xe9\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemHpaControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemHpaControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-hpa-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemHpaControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemHpaControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-hpa-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemImageAuditorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\xe1\xdd\x2e\xba\x15\x5a\x3b\x74\xef\xd0\x9d\xb6\xd9\x98\x88\x2c\x0a\x24\x95\x22\xfd\xfa\x22\x74\x86\x06\xc8\xc4\xd3\xe1\xee\xf4\xb0\xf1\x17\xa9\xb1\xd4\x0c\x3a\xe3\x32\x61\xf7\x4d\x94\x7f\xd1\x59\xea\x74\x7e\xb3\x89\xe5\xe5\xf2\x9a\xce\x5c\xd7\x0c\xef\xa5\x9b\x93\x7e\x4a\xa1\xb4\x93\xe3\x8a\x8e\x39\x01\x60\xad\xe2\x51\xb1\xdb\x13\xe0\x71\x46\x1a\x55\xdb\xf8\xdb\x6f\x63\x76\x35\xa7\x7d\x94\x5a\xae\x19\x06\xd7\x4e\x43\x54\x9e\x7d\xdf\x67\xd2\x4a\x4e\x41\x81\xdd\xa5\xb7\x15\x9d\xfe\xf5\x2a\xee\x94\xe1\xd8\xcc\xbc\xe3\x89\x46\xec\x2b\xbb\x68\xd2\x5e\xc8\x72\x1a\x01\x1b\x7f\xa8\xf4\x16\x6c\x23\x0c\x43\x9c\x08\x3f\xa0\x25\x00\x25\x93\xae\x0b\xdd\xa3\x91\xb1\x04\x70\x21\x9d\xef\xde\x89\x3c\x6e\x61\x3b\x44\x43\x5f\xb6\x50\x07\x5d\xc8\x9f\x30\xff\x02\x00\x00\xff\xff\x52\x51\x0f\xef\x5f\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemImageAuditorYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemImageAuditorYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-image-auditor.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemImageAuditorYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemImageAuditorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-image-auditor.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemImageBuilderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xbd\x8e\x14\x31\x10\x84\x73\x3f\x45\x69\x62\x76\x56\x64\x68\x52\x82\xcb\x91\x20\xef\xb1\x7b\x77\x9a\xf3\xd8\x56\x77\x7b\xd1\xf2\xf4\x68\x3d\x17\xf0\x27\x8e\xe0\x22\xcb\x52\xf5\x57\x3f\xd4\xe4\x0b\xab\x49\x2d\x0b\x74\xa5\x38\x53\xf7\xad\xaa\x7c\x27\x97\x5a\xe6\xe7\x0f\x36\x4b\x3d\xdf\xde\x87\x67\x29\x69\xc1\xc7\xdc\xcd\x59\x3f\xd5\xcc\x61\x67\xa7\x44\x4e\x4b\x00\xa8\x94\xea\xe3\xc4\x1e\x5f\xa0\x36\x2e\xb6\xc9\xc5\x1f\xe7\x89\x2d\xaa\x34\x1f\x2e\x4f\x4a\xc5\x0d\xbe\x31\x54\xae\x9b\xc3\x2b\xd6\x2e\x39\xbd\x43\xeb\xb6\x81\x4a\x42\xeb\x39\x43\x76\xba\xb2\xe1\xa2\x75\x1f\x48\xe0\x9b\xf8\x26\x05\x84\xa6\xf5\x2b\x47\x9f\x81\xcf\xc6\x09\x4d\x65\x27\x95\x7c\x1f\x0a\x18\xeb\x4d\x22\x83\x62\xac\xfd\xe1\x75\xa9\x7a\x58\xd8\x3c\x48\x7f\x2b\xda\x57\xd6\xc2\xce\xa3\x2f\x75\xaf\xbd\x25\x72\x5e\x30\xb9\x76\x9e\x02\x50\x68\xe7\x05\x76\x37\xe7\x7d\x19\xe1\x4e\x03\xca\x1a\xb4\x67\xb6\x25\x9c\x40\x4d\x9e\xb4\xf6\x36\x56\x38\x61\x9a\xc6\x33\xc4\xf3\xcf\x93\x04\x40\xd9\x6a\xd7\xc8\x2f\xd2\xa3\xad\x2b\xd3\x6e\xe7\x4c\x77\x56\x0b\xc0\x8d\x75\x7d\x11\x5c\xd9\xc7\x7b\xe4\x7a\x33\xaf\x5f\x4d\xa2\xf2\xbf\xe0\xa3\xef\x2b\xf0\x63\xe8\x73\x62\x27\xc9\xbf\xe1\x5f\xc9\xfe\xff\xf8\x3f\xa7\xf9\x11\x00\x00\xff\xff\x8d\xf5\x64\x0d\xc9\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemImageBuilderYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemImageBuilderYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-image-builder.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemImageBuilderYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemImageBuilderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-image-builder.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemImagePrunerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\x31\x8f\xdb\x30\x0c\x85\x77\xff\x0a\x21\xbb\x73\xe8\x56\x78\xed\xd0\xbd\x43\x77\xda\x7e\xe7\x13\x4e\x22\x05\x92\x3a\x34\xfd\xf5\x85\x15\xb7\xd7\x4b\x83\x26\x01\x92\xc9\x34\x45\x7e\xef\x89\xa0\xa8\xc4\xef\x50\x8b\xc2\x43\xd0\x91\xa6\x3d\x55\x7f\x11\x8d\x3f\xc9\xa3\xf0\xfe\xf5\xb3\xed\xa3\x3c\xbd\x7d\xea\x5e\x23\xcf\x43\xf8\x92\xaa\x39\xf4\x9b\x24\x74\x19\x4e\x33\x39\x0d\x5d\x08\xc4\x2c\xde\x5a\x6c\xfd\x0d\xe1\x23\x46\x0a\xd8\x5e\xe2\xb3\xaf\x30\x3b\x98\x23\xf7\xc2\xe9\x30\x84\x9d\x6b\xc5\xae\xb5\x9c\x93\xaf\x23\x94\xe1\x68\x2e\xa8\xba\xd4\x32\x93\xe3\xaf\x3e\xa6\x8c\x21\x1c\x99\x43\xcc\xb4\xa0\x2f\x5a\x19\xda\x69\x4d\xb0\xa1\xeb\x03\x95\xf8\x55\xa5\x96\x66\xad\x0f\xbb\xb5\x4d\x61\x52\x75\xc2\x96\x2b\x32\x5b\x0b\x14\x25\xc5\xa9\xa9\x4f\xc2\xae\x92\x12\x74\x3d\x7a\x83\x8e\x5b\xf1\x02\x6f\xdf\x14\xcd\xaf\xc3\xa7\x98\xa3\x2b\xf1\x82\x13\xd4\x7f\x10\x7d\x18\x6b\x4c\xf3\x87\xd9\xfd\x4b\x6e\x35\x93\xf0\x73\x5c\xec\x3d\x71\xbb\xe1\x35\x5b\xec\x82\xd8\x8c\x92\xe4\x90\xc1\xfe\xae\x78\xb5\xcc\xca\x6f\x01\x7e\x38\x78\xdd\x38\x3b\xa3\x40\xc8\xc2\x06\x7f\x00\xfa\x8f\xf9\xfb\xb3\xb7\xad\xb9\xd5\xf7\x36\xf9\xb6\xb5\x17\x46\xdf\x6a\x4e\xe0\x33\x12\x1c\xf7\xc1\xfe\x0e\x5d\x41\xf9\xb1\x97\x38\x4a\x3c\x99\x93\xd7\x13\xa5\xe3\xeb\xee\x7e\x05\x00\x00\xff\xff\x2a\x12\x09\xee\x95\x04\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemImagePrunerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemImagePrunerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-image-pruner.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemImagePrunerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemImagePrunerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-image-pruner.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemImagePullerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\xc5\xc1\x7b\x1c\x74\x2b\xb4\x76\xc8\xde\xa1\x3b\x63\x33\x31\x1b\x5b\x14\x48\x2a\x45\xfa\xf5\x85\xd5\x0c\x1d\x3a\x11\x04\xee\xf8\x1e\xa9\xca\x07\x9b\x8b\x96\x0c\x3b\xd3\x34\x52\x8b\x45\x4d\xbe\x29\x44\xcb\x78\x7b\xf5\x51\xf4\x78\x7f\x49\x37\x29\x73\xc6\xdb\xda\x3c\xd8\xde\x75\xe5\xb4\x71\xd0\x4c\x41\x39\x01\x54\x8a\x46\xaf\xf8\xbe\x02\x5a\xb9\xf8\x22\x97\xd8\xeb\x33\xfb\x64\x52\xa3\x53\x4e\x46\x25\x1c\xb1\x30\x4c\xae\x4b\x20\x14\xb5\xad\x2b\x64\xa3\x2b\x3b\x2e\xa6\x1b\xbe\x24\x16\x29\x20\x54\xd3\x4f\x9e\x62\xec\x47\xff\x13\x6c\x67\xb6\xc2\xc1\xdd\x93\x5a\x68\xab\x33\x05\x67\x0c\x61\x8d\x87\x04\x14\xda\x38\xc3\x1f\x1e\xbc\xe5\x0e\x39\xec\x3c\xb6\x64\x6d\x65\xcf\xe9\x00\xaa\x72\x32\x6d\xb5\xcb\x1f\x30\x0c\x7d\xf4\xec\xf8\xf7\x93\x04\x18\xbb\x36\x9b\xf8\x19\xfd\x95\x0e\x63\xda\xfc\xb8\xd2\x83\xcd\x13\x70\x67\x3b\x3f\x03\x57\x8e\xf4\x13\x00\x00\xff\xff\xbf\x59\x01\xfb\x65\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemImagePullerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemImagePullerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-image-puller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemImagePullerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemImagePullerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-image-puller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemImagePusherYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x6e\xf3\x30\x0c\x84\x77\x3d\xc5\xc1\x7b\x1c\xfc\xdb\x0f\xad\x1d\xb2\x77\xe8\xce\xd8\x4c\xcc\xc6\x16\x05\x92\x4a\x91\x3e\x7d\x61\x25\x43\x87\x4e\x07\x09\x77\xbc\xef\xa8\xca\x07\x9b\x8b\x96\x0c\x3b\xd3\x34\x52\x8b\x45\x4d\xbe\x29\x44\xcb\x78\xfb\xef\xa3\xe8\xf1\xfe\x2f\xdd\xa4\xcc\x19\x6f\x6b\xf3\x60\x7b\xd7\x95\xd3\xc6\x41\x33\x05\xe5\x04\x50\x29\x1a\x3d\xe2\xfb\x13\xd0\xca\xc5\x17\xb9\xc4\x1e\x9f\xd9\x27\x93\x1a\xbd\xe5\x64\x54\xc2\x11\x0b\xc3\xe4\xba\x04\x42\x51\x9b\x2f\xa0\x32\xa3\xb6\x75\x85\x6c\x74\x65\xc7\xc5\x74\xc3\x97\xc4\x22\xa5\x9f\x04\x08\xd5\xf4\x93\xa7\x18\xfb\xc7\x5f\xbc\xed\xcc\x56\x38\xb8\x63\x53\x0b\x6d\x75\xa6\xe0\x8c\x21\xac\xf1\x90\x80\x42\x1b\x67\xf8\xc3\x83\xb7\xdc\xab\x0e\x7b\x3d\x5b\xb2\xb6\xb2\xe7\x74\x00\x55\x39\x99\xb6\xda\xb7\x1c\x30\x0c\x5d\xba\x77\xfc\x3d\x2c\x01\xc6\xae\xcd\x26\x7e\x59\x9f\xe8\x61\x4c\x9b\x1f\x57\x7a\xb0\x79\x02\xee\x6c\xe7\x97\xe1\xca\xd1\xf5\x89\x95\x7e\x02\x00\x00\xff\xff\x98\xbb\x72\x73\x7f\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemImagePusherYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemImagePusherYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-image-pusher.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemImagePusherYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemImagePusherYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-image-pusher.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemImageSignerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8e\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\xe1\xdd\x0e\xba\x15\x5a\x3b\x74\xef\xd0\x9d\xb6\xaf\x8e\x10\x59\x34\x48\x2a\x80\xfb\xf5\x85\xd5\x0c\x49\xd1\x31\x93\x28\xe2\xdd\xe3\xf1\x96\x3e\xa1\x96\xa4\x44\xd2\x91\xa7\x81\xab\x9f\x45\xd3\x37\x7b\x92\x32\x5c\x5e\x6d\x48\x72\xba\xbe\x84\x4b\x2a\x73\xa4\xb7\x5c\xcd\xa1\x1f\x92\x11\x56\x38\xcf\xec\x1c\x03\x11\x97\x22\xde\x22\x76\x7c\x89\x1e\x35\xb2\xa1\xd8\x39\x7d\xf9\x21\xb3\xdd\x1c\x6b\x2f\x25\xef\x91\x3a\xd7\x8a\xae\x45\xfe\x3b\x5f\x47\x68\x81\xa3\xb5\xe0\xea\x52\xb7\x99\x1d\x77\xb9\xc2\x2b\x22\xfd\x3a\x63\x5a\x79\x41\x6f\x69\x29\xd0\xa0\x35\xc3\x62\xe8\x89\xb7\xf4\xae\x52\xb7\x56\xad\xa7\xae\x6b\x4f\x63\x1f\x9a\x05\x22\x85\x49\xd5\x09\x37\xb4\x31\x76\x37\xba\x82\x57\x3b\x65\xde\xa1\xc7\xfe\x0a\x1d\x6f\xec\x02\x7f\xc2\xad\xb4\x14\xf6\xaa\xf8\x23\x9f\x14\xec\x68\xe3\x8c\x0c\x47\xf8\x09\x00\x00\xff\xff\xd5\xc9\x60\xa0\xb9\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemImageSignerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemImageSignerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-image-signer.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemImageSignerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemImageSignerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-image-signer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemJobControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x3d\x6e\x84\x40\x0c\x86\xe1\x7e\x4e\x61\xd1\x43\x94\x2e\x9a\x36\x37\x48\x91\xde\x80\x23\x26\x18\x1b\xf9\x27\x12\x39\xfd\x0a\xb6\xd9\x95\xb6\x74\xf1\x3e\xfe\x70\x6f\xdf\x64\xde\x54\x2a\xd8\x88\xd3\x80\x19\x8b\x5a\xfb\xc7\x68\x2a\xc3\xfa\xe1\x43\xd3\xb7\xbf\xf7\xb2\x36\x99\x2b\x7c\x72\x7a\x90\x7d\x29\x53\xd9\x28\x70\xc6\xc0\x5a\x00\x50\x44\xe3\x4a\xfc\x3c\x01\x9e\x19\xdd\x49\x7c\x69\x3f\x71\x62\x7e\x78\xd0\xd6\xab\xf0\x51\xa1\x0b\x4b\xea\xae\xe4\xd5\xfb\x1c\xc9\x84\x82\xae\x15\x98\xa1\xb9\xcf\x18\xf4\xd0\x09\x6e\x54\xe1\x6e\xd6\x5f\x1d\xfb\x49\x25\x4c\x99\xc9\x8a\x25\x93\x57\x90\x64\x2e\xb7\x00\x00\x00\xff\xff\xc1\xeb\xd2\xc4\xe9\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemJobControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemJobControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-job-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemJobControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemJobControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-job-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemKubeAggregatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x4e\x03\x31\x0c\x86\xf7\x3c\x85\xd5\x3d\x45\x6c\x28\x2b\x03\x3b\x03\xbb\xef\xce\xbd\x5a\x4d\xed\xc8\x76\x8a\xca\xd3\xa3\x4b\x6f\xa0\x12\x53\xe2\xc8\xdf\xff\xfd\xc1\xc6\x5f\x64\xce\x2a\x05\x6c\xc2\xf9\x88\x3d\xce\x6a\xfc\x83\xc1\x2a\xc7\xcb\x9b\x1f\x59\x5f\x6e\xaf\xe9\xc2\xb2\x14\x78\xaf\xdd\x83\xec\x53\x2b\xa5\x2b\x05\x2e\x18\x58\x12\x00\x8a\x68\x0c\xc4\xb7\x11\xe0\x39\x46\x1b\x89\x9f\xf9\x14\x5b\x98\xdf\x3d\xe8\x9a\x55\xea\xbd\xc0\x21\xac\xd3\x61\x20\xff\xe9\xfb\x44\x26\x14\x34\x5a\x60\x0f\xed\x6d\xc1\xa0\x3f\x5c\xc5\x89\xea\x2e\x7d\x5e\x9f\x54\xc3\xc3\xb0\x35\x96\xf5\xf1\xbb\xbc\xd0\x09\x7b\x0d\x4f\x00\x82\x57\x2a\xf0\x28\x53\x36\x32\xe3\xba\x1a\xad\x18\x6a\xc9\x7a\x25\x2f\x29\x03\x36\xfe\x30\xed\x6d\x18\x32\x1c\x36\xa5\x91\x6b\xb7\x99\xf6\x37\x92\xa5\x29\xcb\x08\xcd\xe0\x64\x37\x9e\x69\x1b\x6e\x64\xd3\xbe\xb3\x52\x8c\xb3\xb2\x3f\x2e\xdf\x18\xf3\x39\xfd\x06\x00\x00\xff\xff\x23\xe2\xae\xd8\x7e\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemKubeAggregatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemKubeAggregatorYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-kube-aggregator.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemKubeAggregatorYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemKubeAggregatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-kube-aggregator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemKubeControllerManagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x31\x8b\xe3\x30\x10\x85\x7b\xff\x0a\x91\x26\x70\xe0\x1c\xd7\x1d\x6e\xaf\xb8\xfe\x8a\xeb\xc7\xf2\x4b\x22\x22\xcf\x88\xd1\xc8\x21\xfb\xeb\x17\xcb\x61\xd7\x21\x1b\xc8\x2e\x6c\x37\x1e\xfc\xbe\xf7\xf4\x18\x4a\xe1\x3f\x34\x07\xe1\xce\x69\x4f\x7e\x47\xc5\x8e\xa2\xe1\x85\x2c\x08\xef\x4e\xbf\xf3\x2e\xc8\xcf\xe9\x57\x73\x0a\x3c\x74\xee\x4f\x2c\xd9\xa0\xff\x24\xa2\x19\x61\x34\x90\x51\xd7\x38\x47\xcc\x62\x55\x92\xe7\x4f\xe7\x6e\x31\x92\xc0\xf9\x18\xf6\x36\xc3\xf2\x25\x1b\xc6\x56\x38\x5e\x3a\xb7\x31\x2d\xd8\x54\xc9\x47\xf6\xa5\x87\x32\x0c\x35\x05\x15\x93\x92\x06\x32\xac\x74\x91\x7a\xc4\xab\xe9\xed\xef\xbd\x88\x65\x53\x4a\x29\xf0\x61\x79\x5d\x3b\x60\x4f\x25\x5a\x6e\x9c\x63\x1a\xd1\xb9\x25\x4c\x37\x2b\x5b\x2f\x6c\x2a\x31\x42\xdb\x91\x98\x0e\xd0\x46\x4b\x44\xee\x9a\xd6\x51\x0a\x7f\x55\x4a\xaa\x4e\xad\xdb\xcc\xd6\x8a\x2c\x45\x3d\xae\x3b\x4c\xe0\x4a\x9e\xa0\xfd\x75\xe7\x15\x64\xa8\x63\x22\xf3\xc7\x3a\x2d\x6f\x78\x12\xca\x43\x92\xb0\x70\x5b\x97\xe1\x15\x6f\xb3\x4e\xc1\x83\xbc\x97\xf2\xc8\xf7\x29\x8b\x77\xe8\x0a\x30\x20\xe2\x6b\x19\xe7\x5e\x73\x22\x8f\x4f\x46\x3e\xc0\xbe\xb5\x92\x47\xad\xcf\x17\x07\xb6\xe0\xd7\x17\x7f\xef\x6a\x72\x02\x2b\xa6\x80\xf3\x93\x5d\x6f\x7f\x6c\xef\x31\xcb\x72\xa5\x8e\x21\x5b\x1d\xce\xf5\x3e\x5e\x03\x00\x00\xff\xff\xf1\xf8\x9e\xe4\x90\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemKubeControllerManagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemKubeControllerManagerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-kube-controller-manager.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemKubeControllerManagerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemKubeControllerManagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-kube-controller-manager.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemKubeDnsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x31\x6f\x33\x31\x08\x86\x77\xff\x0a\x94\xdd\xf9\xf4\x6d\x95\xd7\x0e\xdd\x3b\x74\xe7\xce\xa4\x41\x71\xc0\x02\x9c\x2a\xfd\xf5\xd5\x39\x37\x34\x52\x37\x63\xf1\x3c\xef\x0b\x76\xfe\x20\x73\x56\x29\x60\x0b\xae\x47\x1c\x71\x56\xe3\x6f\x0c\x56\x39\x5e\x5e\xfc\xc8\xfa\xef\xf6\x3f\x5d\x58\x6a\x81\xd7\x36\x3c\xc8\xde\xb5\x51\xba\x52\x60\xc5\xc0\x92\x00\x50\x44\x63\x22\xbe\x8d\x00\xcf\x1a\xed\x24\x7e\xe6\x53\x6c\x32\xbf\x7b\xd0\x35\xab\xb4\x7b\x81\x43\xd8\xa0\xc3\x44\xfe\x8a\x1f\x0b\x99\x50\xd0\x6c\x81\x23\x74\xf4\x8a\x41\xbf\xb8\x86\x0b\xb5\x3d\xf4\x79\x7d\x51\x0d\x0f\xc3\xde\x59\x3e\x1f\xd7\xe5\x4a\x27\x1c\x2d\x3c\x01\x08\x5e\xa9\xc0\xa3\x4c\xd9\xc8\x5c\xc5\x93\x8d\x46\x5e\x52\x06\xec\xfc\x66\x3a\xfa\x54\x67\x38\x6c\x59\x46\xae\xc3\x56\xda\xff\x48\x6a\x57\x96\x69\xcb\xe0\x64\x37\x5e\x69\x1b\x6e\x64\xcb\xbe\xd3\xd8\x63\x3e\xbe\x30\xd6\x73\xfa\x09\x00\x00\xff\xff\x0f\xbd\xc8\xb1\x6f\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemKubeDnsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemKubeDnsYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-kube-dns.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemKubeDnsYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemKubeDnsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-kube-dns.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemKubeSchedulerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\x3f\x8f\xdb\x30\x0c\xc5\x77\x7f\x0a\x21\xbb\x13\x74\x2b\xbc\x76\xe8\xd6\xa1\x43\x77\x5a\x7a\x49\x84\x93\x45\x81\xa4\xdc\xa6\x9f\xbe\xf0\x9f\x2b\xee\x8c\xa4\x4d\xdd\x8d\xa6\xcd\xdf\x7b\x7c\xb6\x45\x25\x7e\x83\x68\xe4\xdc\x39\xe9\xc9\x1f\xa9\xda\x95\x25\xfe\x24\x8b\x9c\x8f\x2f\x1f\xf5\x18\xf9\x34\x7e\x68\x5e\x62\x0e\x9d\xfb\x94\xaa\x1a\xe4\x2b\x27\x34\x03\x8c\x02\x19\x75\x8d\x73\x94\x33\xdb\x3c\xa2\xd3\xa5\x73\xef\x31\x5c\x90\xf5\x1a\xcf\x36\xc1\xf4\xa6\x86\xa1\xe5\x9c\x6e\x9d\x3b\x98\x54\x1c\xe6\x91\x7b\xf2\xb5\x87\x64\x18\x66\x17\x54\x8d\x6b\x09\x64\x78\x33\x97\xa8\x47\x5a\x45\xdf\x3f\xde\x33\x9b\x9a\x50\x29\x31\x5f\x96\xed\xda\x80\x33\xd5\x64\xda\x38\x97\x69\x40\xe7\x16\x33\xdd\x34\xd9\xaa\xbf\x22\xd4\x04\x69\xa4\x26\x68\xd7\xb4\x8e\x4a\xfc\x2c\x5c\xcb\x2c\xd0\xba\xc3\xa4\x28\x50\xae\xe2\xb1\xf6\x30\x22\xcf\xc0\x11\xd2\xaf\x3d\x2f\x20\xc3\x5c\x16\x32\x7f\x9d\xab\xc5\xfa\x93\xd0\x1c\x0a\xc7\x47\xdc\x3f\x23\xbe\xd0\xf0\x8a\xd9\xac\xf5\xac\x4c\x40\xc2\x6a\xff\x02\xfb\x8f\x35\x32\x07\x6c\xd8\xaf\xc0\x14\x75\x29\xbe\xcf\xe4\xa7\x70\x85\xc3\xdf\x9d\xee\x01\xf7\x31\x87\x98\x2f\xfa\x5b\xe5\xb4\x76\x76\xc4\xff\xc6\xeb\x49\x8d\xac\x6e\x2c\xef\x4b\x52\x50\x52\xf4\xf3\x5f\xe1\x39\x9b\x70\x4a\x90\xc5\xaf\x42\xc6\xe8\xf7\xe6\x4c\xa5\x2c\x18\xfc\x30\xe4\xe9\x20\xd0\x87\xea\x8a\xed\x97\xf2\x8f\x2a\x1b\xec\x14\x0f\xce\x35\xed\xe7\x16\x4e\xd1\xdf\xee\xa6\x1f\xa2\x4a\x2d\x53\x60\x7d\x0d\x97\xdd\x0a\x77\xdf\xed\x74\x62\xaa\x21\xdb\xc8\xa9\x0e\xf0\x89\xe2\xa0\x77\x6f\x3d\xa7\xfa\x2b\x00\x00\xff\xff\xb8\x28\xa1\xe1\x86\x05\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemKubeSchedulerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemKubeSchedulerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-kube-scheduler.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemKubeSchedulerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemKubeSchedulerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-kube-scheduler.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemKubeletApiAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x31\x4f\xc3\x30\x10\x85\x77\xff\x0a\xab\x4b\x25\xa4\xb4\x62\x43\x5e\x19\xd8\x19\xd8\x2f\xf1\xb5\x3d\xd5\xb9\xb3\xee\xce\x85\xf2\xeb\x51\x92\x4a\xa4\x88\x05\x26\xfb\x3d\xf9\x7d\xef\x19\x2a\xbd\xa1\x1a\x09\xa7\xa8\x3d\x0c\x3b\x68\x7e\x12\xa5\x4f\x70\x12\xde\x9d\x9f\x6c\x47\xb2\xbf\x3c\x86\x33\x71\x4e\xf1\xb9\x34\x73\xd4\x57\x29\x18\x46\x74\xc8\xe0\x90\x42\x8c\xc0\x2c\x3e\x47\x6c\x92\x31\xde\x63\xa4\x22\xdb\x89\x0e\x3e\xc1\xec\x6a\x8e\x63\x27\x5c\xae\x29\x6e\x5c\x1b\x6e\xe6\xc8\x6f\xf5\xad\x47\x65\x74\x9c\x57\x40\x73\x69\x35\x83\xe3\x2a\x57\xa0\xc7\x72\x2b\xbd\x7f\xde\x8b\xb8\xb9\x42\xad\xc4\xc7\xe5\x77\x5d\xc6\x03\xb4\xe2\x16\x62\x64\x18\x31\xc5\x65\x4c\x9a\x92\x05\xbd\x83\x4a\x1d\xe4\x91\x38\x68\x2b\x68\x29\x74\x11\x2a\xbd\xa8\xb4\x3a\x77\x74\x71\x33\x95\x2a\x9a\x34\x1d\xf0\xe6\xb1\x64\x9c\x90\x17\xd4\xfe\x66\x1d\xd1\xe7\xb3\x90\x2d\x97\x77\xf0\xe1\xf4\x6f\x5c\x55\xf9\xb8\xfe\x21\xbd\x2f\x72\x5c\xa9\x11\x5d\x69\xb0\x95\xb3\x00\xbf\xb5\x55\x1c\xd6\xd2\xc1\x7f\x4c\xd8\x3e\x6c\xc3\x57\x00\x00\x00\xff\xff\x68\x2d\x3c\x58\x2e\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemKubeletApiAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemKubeletApiAdminYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-kubelet-api-admin.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemKubeletApiAdminYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemKubeletApiAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-kubelet-api-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemMasterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xbd\x6a\xc3\x50\x0c\x85\xf7\xfb\x14\x22\x4b\xa0\x60\x97\x6e\xe5\xae\x1d\xba\x74\x32\xb4\xbb\x1c\xab\x44\xc4\x96\x2e\xfa\x09\xa4\x4f\x5f\xec\x76\x88\xa1\x74\xd4\xe1\x9c\x4f\x1f\x36\xfe\x20\x73\x56\xa9\x60\x23\x9e\x7a\xcc\x38\xab\xf1\x17\x06\xab\xf4\x97\x67\xef\x59\x1f\xaf\x4f\xe5\xc2\x32\x55\x78\x99\xd3\x83\x6c\xd0\x99\xca\x42\x81\x13\x06\xd6\x02\x80\x22\x1a\xdb\xc4\xd7\x13\x60\x8f\xd1\x46\xe2\x67\xfe\x8c\x15\xe6\x37\x0f\x5a\x3a\x95\xf9\x56\xe1\x10\x96\x74\xd8\x26\x7f\xbd\xcf\x91\x4c\x28\x68\xb3\xc0\x0c\xcd\x36\x61\xd0\xdd\x4e\x70\xa1\x0a\x3f\xcc\xba\xe0\x6a\x57\x2c\x67\xf2\x5a\x3a\xc0\xc6\xaf\xa6\xd9\x36\xa9\x0e\x8e\x0f\xc7\x02\x60\xe4\x9a\x76\xa2\x5d\x78\x25\x1b\xef\x82\x0e\x44\x65\xf8\x2d\xbe\x0f\x6f\xff\x75\xbf\x03\x00\x00\xff\xff\x40\x1f\x40\xcf\x43\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemMasterYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemMasterYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-master.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemMasterYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemMasterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-master.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemNamespaceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x3d\x4e\xc5\x40\x0c\x06\xfb\x3d\x85\x95\x3e\x41\x74\x68\x5b\x6e\x40\x41\xef\x24\x46\x59\xc5\xb1\x57\xfe\x41\x0a\xa7\x47\x09\x0d\x4f\x7a\xe5\x14\x33\xdf\x87\xbd\x7d\x92\x79\x53\xa9\x60\x33\x2e\x13\x66\x6c\x6a\xed\x07\xa3\xa9\x4c\xfb\x9b\x4f\x4d\x5f\xbe\x5f\xcb\xde\x64\xad\xf0\xce\xe9\x41\xf6\xa1\x4c\xe5\xa0\xc0\x15\x03\x6b\x01\x40\x11\x8d\x5b\xf1\x0b\x01\x1e\x33\xda\x49\x7c\x6b\x5f\x71\xc5\xfc\xf4\xa0\x63\x54\xe1\xb3\xc2\x10\x96\x34\xdc\xca\xb3\xf9\x9c\xc9\x84\x82\xee\x17\x98\xa1\xd9\x57\x0c\xfa\xe7\x09\x1e\x54\xe1\xaf\x59\x2f\xf0\x8e\x0b\x8d\x8b\x4a\x98\x32\x93\x15\x4b\x26\xaf\x20\xc9\x5c\x7e\x03\x00\x00\xff\xff\x26\xbb\x59\x58\xef\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemNamespaceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemNamespaceControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-namespace-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemNamespaceControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemNamespaceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-namespace-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemNodeAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8e\x31\x4f\xc4\x30\x0c\x85\xf7\xfc\x0a\xeb\x96\x93\x90\xda\x13\x1b\xca\xca\xc0\xce\xc0\xee\xb6\xe6\x1a\x5d\x6a\x47\xb6\x73\x50\x7e\x3d\x6a\x7b\x12\x05\xb1\xc0\x94\xbc\x27\x7d\x9f\x1f\x96\xf4\x42\x6a\x49\x38\x82\x76\xd8\xb7\x58\x7d\x14\x4d\x1f\xe8\x49\xb8\xbd\x3c\x58\x9b\xe4\x74\xbd\x0f\x97\xc4\x43\x84\xc7\x5c\xcd\x49\x9f\x25\x53\x98\xc8\x71\x40\xc7\x18\x00\x90\x59\x7c\x45\x6c\x89\x00\xdf\x35\x52\x88\x6d\x4c\xaf\xbe\xc8\x6c\x36\xa7\xa9\x11\xce\x73\x84\x83\x6b\xa5\xc3\x8a\xfc\x76\xbe\x76\xa4\x4c\x4e\xeb\x0a\xac\x2e\xb5\x0c\xe8\xb4\xe3\x18\x27\x8a\xb0\x39\x23\xcb\x40\x0d\x0e\x53\xe2\xa0\x35\x93\xc5\xd0\x00\x96\xf4\xa4\x52\xcb\x3a\xac\x81\xc3\x02\x29\x99\x54\xed\xe9\xd6\x2d\x98\x05\x80\x2b\x69\x77\xab\xce\xe4\xeb\x9b\x93\x6d\x9f\x37\xf4\x7e\xfc\xb7\xae\xa8\xbc\xcf\x7f\xa0\x4f\x59\xce\xbb\x34\x91\x6b\xea\x6d\xd7\x6c\xc2\xaf\x6c\x85\xfa\x7d\x74\xf4\x1f\x13\x8e\x77\xc7\xf0\x19\x00\x00\xff\xff\x24\x5b\x84\xcd\xee\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemNodeAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemNodeAdminYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-node-admin.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemNodeAdminYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemNodeAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-node-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapAutoapproverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8f\xb1\x6e\xf3\x30\x0c\x84\x77\x3d\x05\x5f\xc0\x09\xfe\xed\x87\xd6\x0e\xdd\x3b\x74\xa7\xe5\xab\x43\x44\x16\x55\x92\x72\xd1\x3e\x7d\x91\xc4\x4b\x81\x8e\x9d\xf8\x0d\x47\xdc\x77\xdc\xe5\x15\xe6\xa2\x2d\x93\xcd\x5c\x4e\x3c\xe2\xa2\x26\x5f\x1c\xa2\xed\x74\xfd\xef\x27\xd1\xf3\xfe\x2f\x5d\xa5\x2d\x99\x9e\xea\xf0\x80\xbd\x68\x45\xda\x10\xbc\x70\x70\x4e\x44\x8d\x37\x64\xf2\x4f\x0f\x6c\xb9\xe9\x82\x69\x56\x0d\x0f\xe3\x3e\xf1\x08\xe5\xde\x4d\x77\x58\xb2\x51\xe1\x39\x4d\xc4\x5d\x9e\x4d\x47\xf7\xdb\xfb\x44\x05\x16\xf2\x26\x85\x03\x7e\xb4\x26\x22\x83\xeb\xb0\x82\x5f\x42\xb2\x36\x69\xab\xe1\x7d\xc0\xc3\x13\xd1\x0e\x9b\x8f\xdc\x82\x8a\xc0\x1d\x57\xc4\xfd\x56\xf1\x07\x7c\x70\x94\xcb\x9f\xf7\x9f\x1f\x03\xb9\xfe\x14\x29\x06\x3e\x44\x46\x5f\x6e\xf8\x1d\x00\x00\xff\xff\xda\xcd\x1b\x43\x70\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapAutoapproverYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapAutoapproverYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-node-bootstrap-autoapprover.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapAutoapproverYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapAutoapproverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-node-bootstrap-autoapprover.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapperYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\xdd\x79\x78\x5b\xe1\xb5\x43\xf7\x0e\xdd\x69\xfb\xc6\x21\xa2\x88\x2a\x49\xa5\x48\xbf\xbe\x88\xdc\xa2\x0d\x90\x49\x14\x70\x0f\xcf\x95\xb8\xca\x1b\xcc\x45\xcb\x48\x36\xf1\xbc\xe7\x16\x47\x35\xf9\xe4\x10\x2d\xfb\xd3\x93\xef\x45\xff\x5d\xfe\xa7\x93\x94\x65\xa4\xe7\xdc\x3c\x60\xaf\x9a\x91\xce\x08\x5e\x38\x78\x4c\x44\x5c\x8a\x46\x47\xfc\x76\x25\xba\x5f\xa3\x15\xc5\x8f\x72\x88\xdb\x32\xbf\x7a\xe0\x3c\x68\xc9\xd7\x91\x76\x61\x0d\xbb\x8e\x3c\xd2\xb7\x09\x56\x10\xe8\x2d\xb8\x85\xb6\xba\x70\xe0\x0f\x97\x79\x42\xfe\x96\xde\xc7\x27\xd5\xf0\x30\xae\x55\xca\xba\xbd\x6e\x58\x70\xe0\x96\xc3\x13\x51\xe1\x33\x46\xda\xca\x8c\x45\x17\x0c\xbf\x00\x2c\x59\xcb\xf0\x31\x0d\xc4\x55\x5e\x4c\x5b\xed\x8e\x81\x66\x58\xc8\x41\x66\xbe\x59\xb6\xef\x49\x44\x06\xd7\x66\x33\x1e\x84\x64\x2d\x52\x56\xc3\x7b\x83\x77\xf1\x05\x36\xfd\xe4\x0c\x1c\xe8\xe3\x8a\xe8\x67\x16\xdf\x86\x0f\x8e\xf9\x98\xbe\x02\x00\x00\xff\xff\xbf\x42\xa0\x81\xa0\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapperYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapperYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-node-bootstrapper.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapperYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapperYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-node-bootstrapper.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemNodeProblemDetectorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x85\x90\xdd\x09\xde\xf6\xa0\xb5\x43\xf7\x0e\xdd\x69\xfb\x26\x11\x22\x93\x02\x49\x05\x48\xbf\xbe\x90\xe3\x21\x09\x3a\xb4\x9b\x44\xe8\x9c\x7b\x45\xaa\xf9\x13\x6a\x59\x38\x45\x1d\x69\xda\x53\xf3\xb3\x68\xfe\x22\xcf\xc2\xfb\xcb\x7f\xdb\x67\x39\x5c\xff\x85\x4b\xe6\x39\xc5\xb7\xd2\xcc\xa1\x1f\x52\x10\x16\x38\xcd\xe4\x94\x42\x8c\xc4\x2c\xbe\x22\xd6\xaf\x31\x3e\x6b\xa4\x82\xed\x9c\x8f\xde\x65\x76\x33\xc7\x32\x08\x97\x5b\x8a\x3b\xd7\x86\xdd\x8a\xfc\x14\xdf\x46\x28\xc3\xb1\xb6\xa0\xe6\xd2\xea\x4c\x8e\x07\xae\xd0\x88\xb2\x85\x3e\x3f\x1f\x45\xdc\x5c\xa9\xd6\xcc\xa7\xfb\xef\x86\x19\x47\x6a\xc5\x2d\xc4\xc8\xb4\x20\xc5\x7b\x99\xc4\x32\x63\xa8\x2a\x63\xc1\x32\xcc\x70\x4c\x2e\x1a\xb4\x15\x58\x0a\x43\xa4\x9a\xdf\x55\x5a\x5d\x73\x86\xb8\xeb\xc1\x0a\x93\xa6\x13\xb6\x59\x37\x74\xed\x15\x3a\x6e\xa3\x13\xfc\x0f\xec\xc1\x9c\xbc\xbd\x28\x2a\xf9\x74\xfe\x9d\x04\x57\xb0\xbf\xe0\x93\x82\x1c\x0f\xa6\x7e\xba\xaf\x30\x7c\x07\x00\x00\xff\xff\xe8\x49\xb2\x2d\xfa\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemNodeProblemDetectorYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemNodeProblemDetectorYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-node-problem-detector.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemNodeProblemDetectorYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemNodeProblemDetectorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-node-problem-detector.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemNodeProxierYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xb1\x4e\xc4\x40\x0c\x44\xfb\xfd\x8a\xd5\xf5\x09\xa2\x43\xdb\x52\xd0\x53\xd0\x3b\xc9\xa0\x58\x97\xd8\x2b\xdb\x1b\x38\xbe\x1e\x65\xb9\x02\x24\x3a\x8f\xe5\xf7\x3c\x54\xf9\x0d\xe6\xac\x52\xb2\x4d\x34\x8f\xd4\x62\x55\xe3\x2f\x0a\x56\x19\xaf\x4f\x3e\xb2\x3e\x1c\x8f\xe9\xca\xb2\x94\xfc\xbc\x35\x0f\xd8\xab\x6e\x48\x3b\x82\x16\x0a\x2a\x29\x67\x12\xd1\xe8\x88\x9f\x31\xe7\xbf\x1a\xad\x10\x5f\xf9\x3d\x4e\x99\xdf\x3c\xb0\x0f\x2a\xdb\xad\xe4\x4b\x58\xc3\xa5\x23\xff\xbd\x6f\x13\x4c\x10\xe8\x2d\xa8\x85\xb6\xba\x50\xe0\x17\x27\xb4\xa3\xe4\x1f\x67\x11\x5d\x30\x54\xd3\x4f\x86\x25\x6b\x1b\xbc\xa4\x21\x53\xe5\x17\xd3\x56\x7b\xb5\x21\x5f\x4e\xcc\xe0\xda\x6c\xc6\x7d\x07\x59\xaa\xb2\x84\xf7\xe4\xb0\x83\x67\x9c\xe1\x80\x4d\xf7\x9b\x8d\x3d\xfa\xf0\x41\x31\xaf\xe9\x3b\x00\x00\xff\xff\x2e\x2e\x4d\xba\x3a\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemNodeProxierYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemNodeProxierYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-node-proxier.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemNodeProxierYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemNodeProxierYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-node-proxier.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemNodeReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\xbd\x6e\xc3\x30\x0c\x84\x77\x3d\x05\xe1\xdd\x0e\xba\x15\x5a\x3b\x74\xef\xd0\x9d\x96\xaf\xb5\x10\x5b\x14\x48\x2a\x45\xfa\xf4\x85\x9d\xa0\x48\x7f\x96\x4c\x12\x0f\xf8\xbe\x3b\xae\xf9\x15\x6a\x59\x4a\x24\x1d\x39\x0d\xdc\x7c\x16\xcd\x9f\xec\x59\xca\x70\x7c\xb4\x21\xcb\xe1\xf4\x10\x8e\xb9\x4c\x91\x9e\x96\x66\x0e\x7d\x91\x05\x61\x85\xf3\xc4\xce\x31\x10\x71\x29\xe2\x3b\x62\xdb\x49\xf4\x53\x23\x15\xc5\xe6\xfc\xe6\x9b\xcc\xce\xe6\x58\x7b\x29\xcb\x39\x52\xe7\xda\xd0\xed\xc8\x7f\xf5\x6d\x84\x16\x38\xf6\x15\xdc\x5c\x5a\x9d\xd8\x71\xc3\x15\x5e\x11\xe9\xe2\x8c\x45\x26\xf4\x0a\x9e\xa0\x41\xdb\x02\x8b\xa1\x27\xae\xf9\x59\xa5\xd5\x7d\x59\x4f\xdd\x46\x29\x4c\x9a\x26\x5c\xb3\x8d\xb3\x40\x74\x82\x8e\xd7\xe8\x1d\xbe\xbf\x4b\xb6\xcb\xe7\x83\x3d\xcd\x77\xe8\x0e\x2b\x5c\x73\xb2\x9b\xc4\x2a\xd2\xdf\x96\x3b\x94\xe6\xec\xbf\x76\x26\x05\x3b\xbe\x65\x5f\x01\x00\x00\xff\xff\xc2\x82\x37\xce\xd0\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemNodeReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemNodeReaderYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-node-reader.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemNodeReaderYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemNodeReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-node-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemNodeYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xbd\xae\x9b\x40\x10\x85\x7b\x9e\x62\xe5\xde\xb6\xd2\x45\xb4\x29\xd2\xa7\x48\x3f\x5e\x8e\xf1\xc4\xb0\x43\x66\x66\xb9\xba\x79\xfa\x08\xb0\x14\x62\x43\x84\xad\xdc\x0e\xb4\x3b\xdf\x39\xf3\xb7\xd4\xf1\x77\xa8\xb1\xa4\x32\xe8\x89\xe2\x81\xb2\x5f\x44\xf9\x17\x39\x4b\x3a\x5c\x3f\xdb\x81\xe5\xd8\x7f\x2a\xae\x9c\xaa\x32\x7c\x69\xb2\x39\xf4\x9b\x34\x28\x5a\x38\x55\xe4\x54\x16\x21\x50\x4a\xe2\x63\x88\x0d\xbf\x21\xfc\x8d\x91\x0e\xc9\x2e\x7c\xf6\x01\x66\xef\xe6\x68\xf7\x92\x9a\xf7\x32\xec\x5c\x33\x76\x63\xc8\x92\x7c\x3e\x41\x13\x1c\xa3\x0b\xca\x2e\xb9\xab\xc8\x31\x8b\x4b\xd4\xa2\x0c\x13\xb3\x4c\x52\xa1\xd0\xdc\xc0\xca\x62\x1f\xa8\xe3\xaf\x2a\xb9\x1b\x2d\xed\x47\x4b\x48\xce\x71\x9e\x5a\x11\x82\xc2\x24\x6b\xc4\xed\x9a\xcb\x15\x49\xd1\x33\xde\xac\x08\xa1\x87\x9e\x6e\x27\x51\x41\x8e\x65\xf0\x7d\xc9\x1e\xb9\x8d\x44\x6a\x2c\x9f\x7e\x20\x3a\xc5\x08\xb3\x3f\x22\xfb\xb0\x72\xb0\x41\x7d\xb7\x7b\xd4\x32\x68\xcf\x11\x77\x84\x1a\x3e\x39\x61\x9b\x3e\xde\xc8\xe3\x65\x1b\x71\xa8\xec\xb2\xa1\x0f\x20\x57\x68\x70\x23\x77\x23\x68\xf8\x9a\x3a\xff\x04\xf3\x68\x4e\x9e\xef\xd0\xaf\xf1\xd0\x23\xf9\x7a\xfa\xaf\x41\x3b\xa9\xfe\x63\x83\x1e\x69\x33\x83\xb3\x82\x0e\x1a\x9b\x81\x8b\x25\x7c\x36\xc7\x23\x7a\x8e\xc3\x6a\xbc\x3e\xcf\x51\xd2\x99\xeb\x96\xba\xdb\xb2\x20\x2a\xee\xfb\xb1\x3d\xb1\xe1\xbd\x33\x47\xf2\x5e\x9a\xdc\x22\x36\xc4\xad\x2d\x1e\x6d\x91\x30\x17\xa5\x1a\xab\x7b\x3f\x91\xc8\x9d\xe2\xa5\x7d\x1c\xa3\xcd\xb6\x91\xaa\x4e\x78\x5b\x7c\x84\x3a\x9f\x87\x97\x0e\xb6\x6a\x6c\x7e\x89\xeb\xc4\xa9\x56\xfc\xcc\xb0\x7f\x0c\xfa\xca\x80\xfe\x0e\x00\x00\xff\xff\x77\xff\xc7\xc7\x45\x06\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemNodeYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemNodeYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-node.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemNodeYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemNodeYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-node.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOauthTokenDeleterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x6b\xc4\x30\x0c\x46\x77\xff\x0a\x91\x3d\x29\xdd\x8a\xd7\x0e\xdd\x3b\x74\x57\x92\xaf\x9c\x49\x22\x05\x49\x3e\xb8\xfe\xfa\x12\x5f\x28\x77\xd0\xc9\xd8\xd6\x7b\x7a\xbc\x97\x2f\x98\x17\x95\x4c\x36\xf2\x34\x70\x8d\x8b\x5a\xf9\xe1\x28\x2a\xc3\xf2\xe6\x43\xd1\x97\xeb\x6b\x5a\x8a\xcc\x99\xde\xd7\xea\x01\xfb\xd4\x15\x69\x43\xf0\xcc\xc1\x39\x11\xb1\x88\x46\x43\xfc\xb8\x12\x3d\x6b\x74\x87\xf8\xa5\x7c\xc7\x21\xf3\x9b\x07\xb6\x5e\x65\xbd\x65\xea\xc2\x2a\xba\x86\xfc\xb7\xbe\x8e\x30\x41\xa0\x55\x70\x0d\xad\xfb\xcc\x81\x07\x4e\x78\x43\xa6\xbb\x33\xeb\x81\xf7\xa1\x0b\xa4\x9f\xb1\x22\x60\xc9\xea\x0a\xcf\xa9\x27\xde\xcb\x87\x69\xdd\x5b\x61\x4f\x5d\xd7\x8e\x86\x3c\x05\x26\x22\x83\x6b\xb5\x09\xe7\x68\x9b\xe1\x69\x82\x7b\x73\xfb\xc3\xeb\xd9\x8b\xbf\x8f\x2b\x6c\x3c\xb9\x7b\x42\xfa\x0d\x00\x00\xff\xff\xe8\x32\xcc\x35\x64\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOauthTokenDeleterYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOauthTokenDeleterYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-oauth-token-deleter.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOauthTokenDeleterYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOauthTokenDeleterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-oauth-token-deleter.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4f\x73\xa3\x3a\x0c\xbf\xe7\x53\x30\xb9\xa7\xcc\xbb\xbd\xe1\xfa\x0e\xef\xbe\x87\xbd\x0b\xa3\x12\x37\xc6\xf2\x4a\x72\xb3\xd9\x4f\xbf\x83\x81\x96\x42\x29\x21\xed\x34\xa7\x28\x92\xac\x9f\xfe\x59\x32\x10\xec\x4f\x64\xb1\xe4\x8b\x8c\x4b\x30\x0f\x10\xf5\x48\x6c\xff\x80\x5a\xf2\x0f\xa7\x7f\xe5\xc1\x52\xfe\xfc\xcf\xee\x64\x7d\x55\x64\xff\xb9\x28\x8a\xfc\x83\x1c\xee\x1a\x54\xa8\x40\xa1\xd8\x65\x19\x78\x4f\x9a\x8e\x48\xfb\x37\xcb\xde\x9a\xa1\x80\x5e\x8e\xf6\x51\x5b\x63\x72\x11\xc5\xe6\x40\xde\x5d\x8a\x6c\xaf\x1c\x71\x9f\x8e\xbc\x07\x1f\x4b\x64\x8f\x8a\xc9\x0b\x88\x4a\x31\x54\xa0\x38\x3a\xe7\xa0\x44\xd7\x83\x2e\x07\x00\x75\xcd\x58\x83\xe2\x41\xe9\x00\x55\x63\xfd\xc8\x84\x87\x06\x8b\xac\x73\xab\x78\x71\xb5\x98\x9f\xd9\x71\x74\x28\xc5\xee\x90\x41\xb0\xff\x33\xc5\x90\x80\x0f\xd9\x7e\x9f\x7e\x96\x83\xde\x65\x19\xa3\x50\x64\x83\xfd\x11\x26\x87\xa5\xf5\x95\xf5\xb5\xbc\x30\x5a\xea\x19\xb9\xec\x75\x0c\x23\x28\x26\xb2\x42\x87\x6f\x48\x43\xce\xa1\x69\x81\x12\xb3\x46\x4d\xbf\xce\x4a\x47\x04\x50\x73\x4c\x54\x97\xb2\x44\x9e\x13\xf3\x2b\xdc\x77\x64\xc0\x0d\x3c\x30\x06\x45\x18\x9f\x2d\x9e\xe5\x55\x2c\xb1\x7c\x42\xa3\x73\x69\x2f\x48\xd9\x7c\xe5\xcf\x03\x5f\x72\x54\xd0\x44\xb6\x7a\x59\xf1\x31\x50\x35\x68\x06\x72\xd6\x5c\xc6\x3e\xcc\x84\x82\xee\x71\x70\xec\x43\xbd\xa9\xce\xf5\x7e\xdf\xd8\x1f\x8c\xa2\x6c\x53\xad\x27\x78\xb3\xaa\x7f\x5c\xe0\x32\x5a\x57\xad\xe0\x26\x1d\x43\xfe\xd1\xf6\x7d\x39\x66\xe4\x67\x2c\x8f\x44\xa7\x91\xe4\xbe\x2d\x7b\x75\x44\x92\x3b\xaa\xbf\x35\x79\xb9\xf5\xa2\xe0\xd5\x0e\x91\x2c\x09\x4b\xeb\x81\x2f\x63\x57\x8d\x23\x8f\x9b\x3a\x6b\x43\x1e\x2a\x54\xb0\x6e\x52\xb6\x3e\xe1\x33\xf3\xd7\xd8\x7d\x42\x7f\xb2\xd3\xce\xec\xe6\x65\x4b\x61\x65\xbb\xf4\xb6\xf7\x65\xf9\x6a\x84\x20\x2b\x38\x15\x06\x47\x97\x06\xbd\x8e\xdb\x73\xc6\xcd\xc5\x80\x7b\x3f\x7b\xdf\x36\x48\xb7\x07\xc3\xe4\x5c\x09\xe6\xb4\x14\xd4\xb4\x99\xe6\x1a\x83\x85\x6d\x13\xe9\x86\xb4\xf7\x37\xe9\xdd\xd4\x2b\x68\xfc\xdc\x8c\xb2\x0d\xd4\xb8\xe2\x52\xd2\x11\x65\x84\xa6\x23\xa7\xdc\x06\x42\x78\x59\xac\x23\xfe\x9c\x91\x0b\x1a\x46\x9d\x09\x14\xea\xfb\x4e\xb6\x8d\x79\xb8\x47\xee\x25\x77\x70\x41\x5e\xc0\x5c\x1a\x29\xb7\xd6\x39\x10\xeb\xb6\x75\x1b\x98\xda\x4d\xbd\xf6\x4a\xe8\xb4\x26\xa6\x47\x25\x1e\x02\x9a\x15\x71\x09\xf7\x57\x24\x85\x15\x54\x08\xc1\x59\xac\x4c\xf7\x9e\x1e\x84\xe9\xe4\xe7\x6a\xc8\x14\x75\x2d\xaf\x49\xe7\xbe\xed\x7d\xbd\x9b\xb9\x89\xa2\xd4\x1c\x8e\x94\xd0\xae\x2f\xff\x06\x88\x2f\xb8\x3b\x9f\x44\x5b\x69\x29\xc5\x26\x38\x58\x05\x08\x4c\xed\x5b\x1b\xab\x41\x5f\xde\x9c\x1e\xef\xcd\x81\xd7\x2d\x16\x33\xd1\xbc\x53\x73\xe0\x6f\x45\x2f\xfd\x3b\xf7\x90\x79\xd4\x33\xf1\xc9\xfa\xba\xff\x8e\x9b\x47\xdc\xab\xa4\xa7\xb9\xbd\x73\x4f\x5f\xfd\x08\x73\x74\xd7\xe5\x32\xed\xca\xf1\xf0\x89\xd2\xef\xd3\xdb\x6f\xc2\xa6\xaf\x9c\xc5\x2f\xc8\x85\x8f\xc7\x79\xce\xfe\x06\x00\x00\xff\xff\x69\xe5\xfd\xec\xc2\x10\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToAdminYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-aggregate-to-admin.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToAdminYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-aggregate-to-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToEditYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\xcd\x92\xdb\x30\x08\xbe\xe7\x29\x34\xb9\x67\x3d\xbd\x75\x7c\xed\xa1\xf7\x1e\x7a\xc7\x32\xeb\xb0\x91\x85\x2a\xd0\xa6\xe9\xd3\x77\x22\x3b\x1d\xc7\x3f\xe3\xec\xcf\xd4\xa7\x10\x04\x7c\xf0\x81\xb0\x20\xd0\x4f\x8c\x42\xec\x4b\x13\x2b\xb0\x4f\x90\xf4\xc8\x91\xfe\x80\x12\xfb\xa7\xd3\x57\x79\x22\x2e\x5e\xbf\xec\x4e\xe4\xeb\xd2\x7c\x73\x49\x14\xe3\x0f\x76\xb8\x6b\x51\xa1\x06\x85\x72\x67\x0c\x78\xcf\x9a\x5d\xe4\xfa\xd7\x98\xfb\x30\x1c\xd0\xcb\x91\x9e\xf5\x1a\x4c\x2e\xa2\xd8\x1e\xd8\xbb\x4b\x69\xf6\x1a\x13\xee\xb3\xcb\x1c\x7c\xaa\x30\x7a\x54\xcc\x59\x40\x52\x4e\xa1\x06\xc5\x81\x9f\x83\x0a\x5d\x0f\xba\x5c\x00\x34\x4d\xc4\x06\x14\x0f\xca\x07\xac\x49\x07\x11\x3c\xb4\x58\x9a\x2e\xab\xf2\x5f\xa6\xe5\xc4\x65\x17\x93\x43\x29\x77\x07\x03\x81\xbe\x47\x4e\x21\xc3\x1e\xcc\x7e\x9f\x7f\xaa\x44\xae\xbe\x2b\x75\x67\x4c\x44\xe1\x14\x2d\xf6\xa6\xd9\xc6\xb2\x7f\xa6\x46\x26\x8a\xe2\x8c\xd5\x91\xf9\x34\x38\xb9\x8a\xaf\x18\xab\xde\xdd\x46\x04\xc5\x2c\xd6\xe8\xf0\x4e\xb4\xec\x1c\xda\x6b\xd1\x59\xd9\xa0\xe6\x5f\x47\xd2\x09\x01\xd4\x1e\xb3\xd4\x71\x98\xc5\x73\x56\x7e\xb8\x22\x29\x1c\x37\xf7\xa9\x4e\xf0\x3f\x09\xea\xc6\x15\x79\x51\xf0\x4a\xb7\x4a\x96\x0e\x2b\xf2\x10\x2f\xc3\x54\xad\x63\x8f\xb3\xbc\x7e\x02\x0f\x35\x2a\x90\x1b\xb5\xad\x27\x7c\x12\xfe\x91\xb8\x2f\xe8\x4f\xe4\x47\x01\xf3\x38\x5e\x85\x57\xc2\xf3\x62\xda\x10\x82\xac\x44\xaf\x31\x38\xbe\xb4\xe8\x75\x38\x94\x13\x6d\x21\x16\xdc\x3c\x67\xff\x6b\x16\xdf\x51\x4c\x64\xe7\x2a\xb0\xa7\xa5\xa2\xc6\x23\x34\xb5\xb8\x45\x78\xd3\xb4\xbc\x87\xf6\xfe\xfe\xcc\x52\xaf\xa0\x49\x3e\x74\xb9\xa8\x85\x06\x57\x52\xca\x36\xa2\x11\xa1\xed\xc4\xb1\xb6\x85\x10\xc8\x37\x13\xfd\x54\x51\x08\xda\x88\x3a\x39\x50\x68\xb6\xdd\x67\x6f\xe4\x61\x0b\xee\xa5\x70\x70\xc1\xb8\x80\xb9\xb4\x48\xde\xdb\xe7\xc0\x51\xe7\x5b\xb2\x04\x11\x22\xbf\xa0\xd5\x15\x90\xde\x6a\xa6\x8a\xa5\xb8\xbf\x12\x2b\xac\x44\x85\x10\x1c\x61\x6d\xbb\x37\xc8\xed\x30\x7b\x7e\xac\x47\x91\x93\xae\xf1\x96\x6d\xb6\x1d\xdf\xc7\xd3\x2c\x6c\x12\xe5\xf6\x70\xe4\x8c\xf6\x78\x7b\xdf\x00\xf1\x09\x77\x43\xb1\x0d\x0e\x56\x01\x43\x64\x8b\x22\x58\xdf\xec\xe5\xce\x7b\xf8\xe5\xba\xe9\xba\xd5\x6e\x47\x96\x1b\xb5\x0f\x7f\x2b\xfa\xeb\x13\xbb\xcb\xc6\xa3\x9e\x39\x9e\xc8\x37\xfd\xeb\x74\x5a\x71\x6f\x12\xd8\x91\xa5\x8d\xa7\xee\xe1\xc7\x8f\xe3\x4d\xd7\xfb\x78\x4a\x87\xeb\x21\x49\xff\x45\x5b\x9f\xd5\xbf\x01\x00\x00\xff\xff\x83\xed\x24\x63\x11\x0d\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToEditYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToEditYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-aggregate-to-edit.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToEditYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToEditYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-aggregate-to-edit.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToViewYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xbd\x8e\xdb\x30\x0c\xde\xfd\x14\x42\x76\x27\xe8\x56\x78\xed\xd0\xbd\x43\x77\x5a\xe6\x29\xbc\xc8\xa2\x2a\x52\x09\xd2\xa7\x2f\xa2\x38\x85\x63\x27\xf0\xe1\x7c\xc8\x64\x85\xe2\xf7\xc3\x4f\x91\x20\xd2\x6f\x4c\x42\x1c\x1a\x93\x5a\xb0\x5b\xc8\xba\xe7\x44\x7f\x41\x89\xc3\xf6\xf0\x5d\xb6\xc4\xbb\xe3\xb7\xea\x40\xa1\x6b\xcc\x0f\x9f\x45\x31\xfd\x62\x8f\x55\x8f\x0a\x1d\x28\x34\x95\x31\x10\x02\x6b\x81\xc8\xe5\xa7\x31\xf7\x34\x1c\x31\xc8\x9e\xde\xf4\x42\x26\x67\x51\xec\x6b\x0e\xfe\xdc\x98\x8d\xa6\x8c\x9b\x02\x79\x24\x9f\x5b\x4c\x01\x15\x8b\x0b\xc8\xca\x39\x76\xa0\x38\xc2\x79\x68\xd1\x0f\xa2\xcf\x07\x00\xe7\x12\x3a\x50\xac\x95\xeb\x23\xe1\x69\xc4\x10\xa0\xc7\xc6\x5c\x5d\x35\xff\x9d\x36\x33\x48\x95\xb2\x47\x69\xaa\xda\x40\xa4\x9f\x89\x73\x2c\xb2\xb5\xd9\x6c\xca\xa7\xcd\xe4\xbb\xbb\x51\x2b\x63\x12\x0a\xe7\x64\x71\x68\x2d\x3d\x96\xc3\x1b\x39\x99\x15\x76\x27\x6c\xf7\xcc\x87\xd1\xce\x65\x79\xc4\xd4\x0e\x70\x87\x5a\xbe\x9e\xe4\xba\x38\x81\xda\xfd\x7a\x47\xb2\xf3\xec\x3e\x27\xf5\x11\x8d\x77\x0c\x07\x0a\x93\x59\x4a\xa4\xcf\x9c\x43\x8c\xb2\x40\xda\x61\xf4\x7c\xee\x31\xe8\x38\xcf\x59\x75\x27\x16\x3c\xae\x8a\xf1\x33\x66\x86\x40\x1f\x1a\x52\xd0\xbc\xee\x60\xa9\x07\x87\x0b\x96\x4a\x8f\x68\x42\xe8\xaf\xcb\x69\xb5\x87\x18\x29\xb8\x59\x7d\x56\x50\x70\x2f\xb5\xfb\x25\x11\xc5\xc4\xef\x68\x75\x41\x75\xe8\x7a\x20\xf5\x8c\xf7\x4f\x66\x85\x05\x56\x88\xd1\x13\x76\xf6\xfa\x58\xde\x36\x0b\x72\xdd\x50\x89\xb3\x2e\x05\x59\x7a\x5e\x25\xf3\x15\x27\xa5\xd8\x47\x0f\x8b\x82\x31\xb1\x45\x11\xec\x6e\xfd\x72\x87\x1e\x3f\x02\xb7\x1a\x05\x51\x08\x76\xd2\xf9\xa2\x37\xd5\xf3\xaa\x5b\x33\x8d\x7b\xfc\x27\xca\x32\xdc\xe7\x65\xf2\x7f\x01\x00\x00\xff\xff\x80\x58\xcf\x88\xe0\x07\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToViewYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToViewYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-aggregate-to-view.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToViewYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToViewYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-aggregate-to-view.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\xe1\xdd\x09\xde\xf6\xa0\xb5\x43\xf7\x0e\xdd\x69\x99\x89\x85\x28\xa4\x41\x52\x29\xd2\xaf\x2f\x2c\x07\x6d\x1d\xa4\x53\x3b\x91\x12\x79\xef\x21\x25\x9c\xf3\x2b\xa9\x65\xe1\x08\x3a\x60\xda\x61\xf5\x49\x34\xbf\xa3\x67\xe1\xdd\xe9\xbf\xed\xb2\xec\x2f\xff\xc2\x29\xf3\x18\xe1\xa9\x54\x73\xd2\x17\x29\x14\xce\xe4\x38\xa2\x63\x0c\x00\xc8\x2c\xde\x24\xb6\x1c\x01\xb6\x36\x32\x13\xdb\x94\x0f\xbe\x98\xd9\xd5\x9c\xce\xbd\x70\xb9\x46\xe8\x5c\x2b\x75\x4d\xf2\x08\x5f\x07\x52\x26\xa7\x36\x05\x56\x97\x3a\x8f\xe8\xf4\x4d\xc7\x78\xa6\x08\xab\x67\xfc\xe4\xc4\x24\xec\x2a\xa5\x90\xc6\xa1\xe6\x32\xf6\x49\xf8\x90\x8f\x7d\x9a\x90\x8f\xd4\x7f\x95\x83\xd6\x42\x16\x43\x0f\x38\xe7\x67\x95\x3a\xb7\x0d\x7a\xe8\xba\x16\x9a\x7a\xb3\x40\x00\x50\x32\xa9\x9a\xe8\xd6\xda\x7a\x56\x80\x05\x80\x0b\xe9\x70\xab\x1c\xc9\x5b\x2c\xd9\xd6\xe4\x0d\x3d\x4d\x7f\x06\xdb\x67\x36\x47\xf6\x8c\x4e\x5b\x70\x52\x5a\xee\x7e\x0d\xba\xdb\x67\xa4\x42\x3f\xda\xde\xe9\xe9\x42\xec\xf6\x70\xac\x25\x9d\xdb\x4b\x2c\xd9\xfa\xa7\xe1\x23\x00\x00\xff\xff\x0f\x1c\x32\x4b\x8b\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-build-config-change-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-build-config-change-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x3d\x8f\xdb\x30\x0c\xdd\xfd\x2b\x84\xec\xb9\x43\xb7\xc2\x6b\x87\xee\x1d\xba\xd3\xf2\x4b\xc2\x8b\x2c\x0a\x14\xe5\x43\xf2\xeb\x0b\xcb\xc6\xd5\xf9\xc0\x5d\xd0\x74\x12\x4d\x93\xef\x3d\x3d\xd2\xa6\xc4\xbf\xa1\x99\x25\xb6\x4e\x3b\xf2\x2f\x54\xec\x20\xca\x67\x32\x96\xf8\x72\xfc\x9e\x5f\x58\x5e\xc7\x6f\xcd\x91\x63\xdf\xba\x1f\xa1\x64\x83\xfe\x92\x80\x66\x80\x51\x4f\x46\x6d\xe3\x1c\xc5\x28\x56\x5b\xf2\xf4\xe8\xdc\x25\x8c\x24\xc4\x7c\xe0\x9d\x4d\x60\xf9\x94\x0d\xc3\x56\x62\x38\xb5\x6e\x63\x5a\xb0\xa9\x2d\xf7\xe8\x4b\x07\x8d\x30\x54\x15\x54\x4c\x4a\xea\xc9\xb0\xea\x8b\x34\xa0\x75\x33\x66\xfb\xc1\xd3\x7a\x89\xa6\x12\x02\xb4\xed\x0a\x87\x7e\xfb\x37\xd1\x68\x09\xc8\x6d\xb3\x75\x94\xf8\xa7\x4a\x49\x55\xf3\xd6\x6d\x36\xf5\xa8\xf5\x17\x92\x1b\xe7\x14\x59\x8a\x7a\x2c\xa5\xb5\x26\x37\xce\x8d\xd0\x6e\xc9\xf5\x08\x30\xd4\x70\x0f\xab\x67\xe0\x3c\x07\x89\xcc\x1f\x6a\x34\x5f\xa0\x86\xef\x35\xf9\xbc\x8c\xd7\x1d\x47\x0a\x7c\x86\x5e\x29\x5a\xb8\x9e\x66\xf0\x12\x77\xbc\xbf\x02\x9f\xee\xf8\x1f\xb4\xfb\x92\x4d\x86\x75\xa6\x17\x7f\x84\xae\x33\x6f\x88\x47\x8e\x39\x71\x42\xe0\x88\xf5\x2b\x49\xc6\x03\x9f\xd1\xdf\x76\xcd\x6c\x97\xa2\xbd\xe2\x33\x47\x78\xa0\x3d\xbe\xd0\x5d\x6b\xb2\x29\x68\xb8\xe3\xc8\xc7\xd4\xef\x53\x5c\x61\x65\x78\x85\x3d\x0d\x33\xcf\x67\xa0\xf4\x34\x52\x92\xeb\xad\x5e\x1c\xfb\x6c\xc1\x1f\x42\x9e\xbe\xd3\x9c\xc8\xe3\xe1\x35\xba\xf1\x4a\x47\xf6\x20\xef\xa5\xc4\x7f\xf0\xac\xba\x5d\x94\xed\xf4\xc5\x80\x27\x0f\x96\xca\x24\x81\xfd\x29\x97\xee\x0d\xde\x14\x23\xe3\xfd\xbe\x3d\x0f\xdd\x00\x23\x6e\x84\xaf\xec\xbd\xf9\x47\xfc\x09\x00\x00\xff\xff\xd1\xbf\x6a\x80\x9c\x05\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-build-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-build-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x31\x6f\x3a\x31\x0c\xc5\xf7\xfb\x14\x16\x7b\x40\xff\xed\xaf\xac\x1d\xba\x77\xe8\x6e\x82\x81\x88\x9c\x9d\xda\xce\x49\xf4\xd3\x57\x97\xa3\x2d\x20\x06\x3a\x25\xb1\xf2\x7e\xef\x3d\x63\xcd\xef\xa4\x96\x85\x23\xe8\x16\xd3\x1a\x9b\x1f\x45\xf3\x27\x7a\x16\x5e\x9f\xfe\xdb\x3a\xcb\x66\xfa\x37\x9c\x32\xef\x22\xbc\x94\x66\x4e\xfa\x26\x85\x86\x91\x1c\x77\xe8\x18\x07\x00\x64\x16\xef\x12\x9b\x9f\x00\xb7\x18\xa9\xc4\x76\xcc\x7b\x9f\x61\x76\x36\xa7\x31\x08\x97\x73\x84\x95\x6b\xa3\x55\x97\x3c\xb2\x6f\x5b\x52\x26\xa7\x9e\x02\x9b\x4b\xab\x3b\x74\xba\xd2\x31\x8e\x14\x61\x61\xc6\x1f\x9f\x98\x84\x5d\xa5\x14\xd2\x98\x96\xcc\xe1\xa3\x89\x63\x50\x4a\xc2\x29\x97\xdc\x1d\xc2\xef\xbf\x41\x5b\x21\x8b\x43\x00\xac\xf9\x55\xa5\xd5\x5e\x25\xc0\x6a\xb6\x51\x32\x69\x9a\xe8\x32\x4b\xc2\xfb\x7c\x18\xb1\xda\x00\x30\x91\x6e\x2f\xf3\x03\x79\x3f\x4b\x36\x7f\x8e\x64\x94\x94\xfc\xef\x98\x00\xbd\xcf\xcd\x6a\x1f\xe4\x5c\xba\x7f\x4f\xbb\xc4\x36\xe6\xe8\xed\xce\x72\x59\xec\x73\x99\x69\x22\xbe\x8f\x9c\x94\x66\xfd\x7c\xad\xe8\xe9\x78\x0d\xfd\x0a\x00\x00\xff\xff\x94\x20\xe5\x07\x65\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-cluster-quota-reconciliation-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-cluster-quota-reconciliation-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x91\xbf\x6e\xf3\x30\x0c\xc4\x77\x3d\x05\xe1\xdd\xf9\xf0\x6d\x85\xd6\x0e\xdd\x3b\x74\xa7\xed\x4b\x22\x44\x21\x05\x8a\x4a\x91\x3e\x7d\x61\xa7\x7f\xd2\xc6\x05\xba\x74\x12\x05\xea\x7e\xc7\xa3\xb8\xa4\x27\x58\x4d\x2a\x91\x6c\xe0\x71\xc3\xcd\xf7\x6a\xe9\x85\x3d\xa9\x6c\x0e\x77\x75\x93\xf4\xdf\xe9\x7f\x38\x24\x99\x22\xdd\xe7\x56\x1d\xf6\xa8\x19\xe1\x08\xe7\x89\x9d\x63\x20\x62\x11\xf5\x45\x52\xe7\x2b\xd1\x57\x8c\x16\x48\xdd\xa7\xad\xcf\xb0\x7a\xae\x8e\x63\xaf\x92\xcf\x91\x3a\xb7\x86\x6e\x91\xac\xd9\xb7\x01\x26\x70\x2c\x53\x70\x73\x6d\x65\x62\xc7\x95\x4e\xf8\x88\x48\x17\x66\xfc\xf0\x89\xa3\x8a\x9b\xe6\x0c\x8b\x13\xb6\xdc\xb2\xf7\xa6\x19\x43\x92\x29\xc9\xae\xf6\x9f\xfd\x60\x2d\xa3\xc6\xd0\x13\x97\xf4\x60\xda\xca\x12\xa1\xff\x79\x1d\x81\xc8\x50\xb5\xd9\x88\xf7\xa7\x57\xe8\x40\x74\x82\x0d\x6f\x9d\xd1\xc0\x8e\x5b\x78\xd7\xdd\x52\xe6\x28\xb5\xf0\x88\x6f\x8c\x1d\x7c\x39\x73\xaa\x97\xe2\x99\x7d\xdc\xff\xd1\xc0\xbf\x35\x5b\x0b\x80\x13\xc4\xd7\x17\x30\x97\x65\x21\xcd\xd5\xe5\x17\xc3\x6b\x00\x00\x00\xff\xff\x44\x77\x7f\x67\x7d\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-default-rolebindings-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-default-rolebindings-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\xbd\x6e\xeb\x30\x0c\x85\x77\x3f\x05\x91\xdd\x09\xee\x76\xa1\xb5\x43\xf7\x0e\xdd\x19\xf9\xb4\x11\xa2\x88\x02\x49\xa5\x48\x9f\xbe\x88\x62\xd4\xfd\x49\x81\x0c\x99\x7c\x4c\x80\xdf\x77\x4c\x73\x4d\xcf\x50\x4b\x52\x02\xe9\x96\xe3\x9a\x9b\xef\x44\xd3\x3b\x7b\x92\xb2\xde\xff\xb7\x75\x92\xcd\xf1\xdf\xb0\x4f\x65\x0a\xf4\x90\x9b\x39\xf4\x49\x32\x86\x03\x9c\x27\x76\x0e\x03\x11\x97\x22\xde\x57\xec\xfc\x4a\xf4\x1d\x23\x15\xc5\x76\xe9\xc5\xcf\x30\x3b\x99\xe3\x30\x4a\xc9\xa7\x40\x2b\xd7\x86\x55\x5f\xb9\xa6\x6f\x5b\x68\x81\xa3\xb7\xe0\xe6\xd2\xea\xc4\x8e\x2f\x7b\x85\x0f\x08\x74\x61\x86\x4f\x4f\x88\x52\x5c\x25\x67\x68\x98\x50\xb3\x9c\xa0\xe3\x32\x1b\xb4\x65\x58\x18\x46\xe2\x9a\x1e\x55\x5a\xed\xb5\x47\x5a\x9d\x91\x0a\x93\xa6\x11\xf3\xac\xca\x64\x03\xd1\x11\xba\x9d\x27\x51\xc1\x8e\x1e\x27\x64\xcc\xf1\x15\xde\x9f\x39\xd9\x25\x54\xf6\xb8\xeb\xe9\xad\xa7\x9b\x6c\x8a\x9a\x53\xec\x9f\xbf\xf4\xfd\xe1\x9f\xa5\x77\xe3\xfd\x6a\x7e\xb9\xf2\x7d\xaa\x6f\x2c\x72\xc6\x75\xe1\xec\xb9\x89\x8e\x23\x8a\xff\xfd\x23\x96\x63\xcf\xd0\x8f\x00\x00\x00\xff\xff\xcf\x7c\xfc\x88\xda\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-deployer-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-deployer-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x52\xbb\x8e\xe3\x30\x0c\xec\xfd\x15\x42\x7a\x27\xb8\xee\xa0\xf6\x8a\xeb\xaf\xb8\x9e\x91\x27\x89\x10\x59\x14\x48\x2a\x8b\xe4\xeb\x17\x56\xbc\xc9\xe6\xb1\xc5\x62\x91\xca\x63\x4a\x9c\x19\x0d\x49\x25\xfe\x87\x68\xe4\xec\x9d\xac\x29\x2c\xa9\xda\x8e\x25\x9e\xc8\x22\xe7\xe5\xfe\xb7\x2e\x23\xaf\x0e\xbf\xba\x7d\xcc\x83\x77\x7f\x52\x55\x83\xfc\xe3\x84\x6e\x84\xd1\x40\x46\xbe\x73\x8e\x72\x66\x6b\x2d\x3a\xfd\x3a\x77\x4b\xc3\x05\x59\x77\x71\x63\x13\x99\x1e\xd5\x30\xf6\x9c\xd3\xd1\xbb\x85\x49\xc5\xa2\xb5\x3c\x93\xaf\x6b\x48\x86\xa1\xb9\xa0\x6a\x5c\xcb\x40\x86\x4f\x7d\x99\x46\x78\x77\xe6\xf4\x17\x1d\x1f\x38\x9b\x70\x4a\x10\x3f\xa0\x24\x3e\x8e\xc8\x16\x38\x6f\xe2\xb6\xbf\x9e\x75\x52\x13\xd4\x77\xbd\xa3\x12\xff\x0a\xd7\xd2\xec\xf7\x6e\x31\x51\x0b\x94\xab\x04\xcc\x35\x41\x49\x31\x34\x63\x57\x06\xed\x9c\x3b\x40\xd6\xf3\x9d\x20\x20\x43\x83\x03\x12\x66\xb8\x85\xb5\x6f\x8a\x7a\x06\x85\x2c\xec\x1a\x3a\xbf\xa7\xc1\xb7\x56\xfc\x81\x95\x95\x06\x4a\xb8\x35\xf4\x21\x3d\xeb\x3c\x67\x9f\xaa\x45\x6f\xa6\xf4\xa8\x79\x1f\xa3\xae\xd4\xc8\xea\x5d\x00\xaf\xd0\xd9\xc4\x4c\x29\x9e\x1e\xc2\x7e\x81\xd6\xf3\xf0\x2e\x73\xfb\xc6\x88\x70\x40\xb6\xaf\xb7\xe3\x61\x03\xde\x03\x00\x00\xff\xff\x99\xba\x1d\x1b\x89\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-deploymentconfig-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-deploymentconfig-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\xe1\xdd\x0e\xde\xf6\xa0\xb5\x43\xf7\x0e\xdd\x69\x89\x49\x84\xc8\xa4\x40\x52\x01\xdc\xaf\x2f\xac\x04\x45\x03\x74\x22\x08\xdc\x7b\xee\xc1\x56\x3e\x49\xad\x08\x47\xd0\x15\xd3\x82\xdd\xaf\xa2\xe5\x0b\xbd\x08\x2f\xb7\xff\xb6\x14\x39\xdd\xff\x85\x5b\xe1\x1c\xe1\xad\x76\x73\xd2\x0f\xa9\x14\x36\x72\xcc\xe8\x18\x03\x00\x32\x8b\x8f\x8a\x1d\x2f\xc0\x2b\x46\x1a\xb1\x5d\xcb\xd9\x0f\x98\xed\xe6\xb4\xcd\xc2\x75\x8f\x30\xb9\x76\x9a\x46\xe5\xaf\xf9\xbe\x92\x32\x39\x0d\x0b\xec\x2e\xbd\x65\x74\xfa\xd5\x63\xdc\x28\xc2\x83\x19\x7f\x76\x62\x12\x76\x95\x5a\x49\xe3\xe0\x09\x3b\xd6\xb9\x49\x9e\x0f\x8a\x25\xac\xa4\x41\x7b\x25\x8b\x61\x06\x6c\xe5\x5d\xa5\xb7\x21\x3f\xc3\x34\x8d\x83\xad\xd9\x8b\x7a\x00\x50\x32\xe9\x9a\xe8\x99\xcc\xd4\xaa\xec\x1b\xb1\x27\xe1\x73\xb9\xd8\x69\xa0\x03\xc0\x9d\x74\x7d\x86\x2e\xe4\xe3\x3e\xdc\xc3\x77\x00\x00\x00\xff\xff\xce\xaa\x3f\x4f\x73\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-horizontal-pod-autoscaler.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-horizontal-pod-autoscaler.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\xb1\x6e\xf3\x30\x0c\x84\x77\x3d\x05\xe1\xdd\xf9\xf1\x6f\x85\xd6\x0e\xdd\x3b\x74\x67\xec\x6b\x22\x44\x12\x05\x8a\x4a\x91\x3e\x7d\x11\x39\x68\x9b\xc2\xde\xda\x89\xb4\xc5\xbb\xfb\x48\x2e\xe1\x05\x5a\x83\x64\x4f\xba\xe7\x69\xc7\xcd\x8e\xa2\xe1\x9d\x2d\x48\xde\x9d\x1e\xea\x2e\xc8\xbf\xf3\x7f\x77\x0a\x79\xf6\xf4\x18\x5b\x35\xe8\xb3\x44\xb8\x04\xe3\x99\x8d\xbd\x23\xe2\x9c\xc5\xba\xa4\x5e\x3f\x89\xee\x6d\xa4\x20\xd7\x63\x78\xb5\xab\x59\xbd\x54\x43\x1a\x25\xc7\x8b\xa7\xc1\xb4\x61\xe8\x92\xb5\xf8\xb6\x87\x66\x18\x3a\x05\x37\x93\x56\x66\x36\x7c\xd3\x65\x4e\xf0\xb4\x78\xfa\xcf\x1c\x3f\x49\x36\x95\x18\xa1\x3e\x24\x3e\x60\x0c\xa9\x88\xda\xf8\xf5\xdf\x69\x8b\xa8\xde\x8d\xc4\x25\x3c\xa9\xb4\xd2\xd1\x47\x1a\x86\x5e\xba\xec\x8e\xdc\x11\x29\xaa\x34\x9d\x70\x1b\xed\x33\xd5\x14\x9c\xaa\x23\x3a\x43\xf7\xb7\x97\x49\xc1\x86\xde\x1e\x60\xbd\xc6\x50\x97\x66\xd9\xa1\xb7\x6f\x6c\xd3\xf1\x17\x10\x36\xc3\x67\x44\x6c\x71\x94\x1e\xfe\x47\x44\xfd\x28\xcb\xd1\xd7\xe9\xd6\x23\x7e\x78\xe1\x8c\xbc\xa1\x5f\xdd\xe0\x23\x00\x00\xff\xff\x99\xc6\x03\x41\xcf\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-image-import-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-image-import-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x31\x8f\xdb\x30\x0c\x85\x77\xff\x0a\x21\xbb\x13\x74\x2b\xbc\x76\xe8\xde\xa1\x3b\x6d\x33\x0e\x2f\x12\x29\x90\x54\xda\xdc\xaf\x2f\xac\x18\x77\x49\x5c\x20\x48\x70\x93\x65\x91\xef\x7b\x4f\x94\x20\xd3\x6f\x54\x23\xe1\x2e\x68\x0f\xc3\x16\x8a\x1f\x44\xe9\x1d\x9c\x84\xb7\xc7\xef\xb6\x25\xd9\x9d\xbe\x35\x47\xe2\xb1\x0b\x3f\x62\x31\x47\xfd\x25\x11\x9b\x84\x0e\x23\x38\x74\x4d\x08\xc0\x2c\x5e\x25\x36\xff\x86\x70\x8b\x91\x8c\x6c\x07\xda\xfb\x0c\xb3\xb3\x39\xa6\x56\x38\x9e\xbb\xb0\x71\x2d\xb8\xa9\x92\xff\xd9\x97\x1e\x95\xd1\xb1\xa6\x80\xe2\x52\xf2\x08\x8e\x57\x3a\x86\x84\x5d\xb8\x30\xbb\x0f\x9f\x6e\x10\x76\x95\x18\x51\x3b\x4a\x30\x61\xeb\x4a\xd3\x84\xda\x7e\x16\x1a\x2d\x11\xad\x6b\xda\x00\x99\x7e\xaa\x94\x5c\xb3\xb7\x61\xb3\xa9\x9f\xaa\xbb\x89\xde\x84\xa0\x68\x52\x74\xc0\xa5\xb5\xf6\x98\x2b\x42\xb2\x26\x84\x13\x6a\xbf\x54\x22\x99\xd7\xc5\x1f\xf0\xe1\xb0\x36\xc1\xbf\x8e\x3c\xcf\xdd\xd6\xd4\x11\x30\x09\x1b\xfa\x1d\x73\xc2\x0b\xf2\x32\x84\x35\x13\x72\xb6\xc7\x70\xcc\x51\xce\x09\xf9\x45\xfa\x1d\xce\x1c\x1c\xf7\x25\x3e\x9f\xb6\xaf\x83\x59\x01\x07\x15\x7e\x93\xfe\x49\xd8\x72\x67\x73\xc6\x07\x57\xf6\x79\xfe\x41\x78\x4f\xd3\x6b\x46\x7d\xa1\x38\x3e\x70\xaa\x3d\x8b\xc9\x8e\xd8\x1c\xd8\x69\x86\xde\x18\x0e\x8a\x5f\x62\x64\xbb\xa1\x98\x4b\xba\xde\x19\x65\x38\xa2\x5e\xef\xbc\x21\x1f\x89\x2d\x53\xc6\x48\x8c\xd7\x25\xc9\x4e\x89\xde\x71\x5c\xab\x2e\x6e\x4f\xe4\xbe\x0b\x88\xa7\xf5\x73\x5b\xf4\xf3\x32\x2f\x2f\xe1\x63\xea\xff\x02\x00\x00\xff\xff\x6a\x60\x95\x4b\x96\x04\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-image-trigger-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-image-trigger-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\x31\x6f\xe3\x30\x0c\x85\x77\xff\x0a\x21\xbb\x12\xdc\x76\xd0\x7a\xc3\xed\x37\xdc\xce\xc8\xaf\xb1\x10\x59\x34\x48\xca\x6d\xfa\xeb\x0b\x2b\x46\xdb\xd4\x29\x50\x14\x9d\xfc\x64\x89\xef\x7b\x24\x69\x4a\xff\x21\x9a\xb8\x04\x27\x47\x8a\x7b\xaa\x36\xb0\xa4\x67\xb2\xc4\x65\x7f\xfe\xad\xfb\xc4\x87\xf9\x57\x77\x4e\xa5\x0f\xee\x4f\xae\x6a\x90\x7f\x9c\xd1\x8d\x30\xea\xc9\x28\x74\xce\x51\x29\x6c\xad\x44\x97\xa3\x73\xb7\x36\x3c\xa1\xe8\x90\x1e\x6c\x31\xd3\x8b\x1a\x46\xcf\x25\x5f\x82\xdb\x99\x54\xec\x5a\xc9\x3d\x7c\x3d\x42\x0a\x0c\x2d\x05\x55\xe3\x3a\xf5\x64\x78\x57\x57\x68\x44\x70\x57\xcf\xf0\xca\x09\x91\x8b\x09\xe7\x0c\x09\xa9\x9c\x04\xaa\xde\xd8\x0b\x57\x83\x7f\xbb\xeb\xa4\x66\x68\xe8\xbc\xa3\x29\xfd\x15\xae\x53\x8b\xef\xdd\x6e\xb1\x16\x28\x57\x89\x58\xff\x29\xa2\xc0\x74\xd5\x32\xa7\x88\xe5\x30\x43\x8e\xeb\x8b\x13\xac\x7d\x73\xd2\xab\x78\x24\x8b\xc3\xd6\x1d\x4f\x86\xb2\xcc\x5c\xb7\x94\x35\xed\xf7\x8c\x5b\x7f\x37\xd3\xde\x02\xda\x9b\x0f\xfe\x51\x40\x86\x26\x7b\x64\xac\x72\x43\x9d\x1a\x75\x51\xd7\x35\xfc\x4c\x94\x43\xac\x6a\x3c\xfa\x81\x1b\xe6\x7e\xac\x15\xf8\xa5\x45\x61\x46\xb1\xcf\x3b\xdc\x74\xf1\x12\x00\x00\xff\xff\x02\x7d\x52\xfb\x04\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-ingress-to-route-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-ingress-to-route-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x3d\x6e\x2b\x31\x0c\x84\xfb\x3d\x05\xb1\xfd\xfa\xe1\x75\x81\xda\x14\xe9\x53\xa4\xa7\xe5\x89\x2d\x58\x16\x05\x92\x72\xe0\x9c\x3e\x58\xf9\x3f\x4e\x80\x54\xa2\xc0\x99\x6f\x38\x5c\xd3\x1b\xd4\x92\x94\x40\xba\xe4\xb8\xe0\xe6\x1b\xd1\xf4\xc9\x9e\xa4\x2c\xb6\x4f\xb6\x48\xf2\x6f\xff\x7f\xd8\xa6\xb2\x0a\xf4\x9c\x9b\x39\xf4\x55\x32\x86\x1d\x9c\x57\xec\x1c\x06\x22\x2e\x45\xbc\x5b\x6c\xfe\x12\xdd\x63\xa4\xa2\xd8\x26\xbd\xfb\x0c\xb3\x83\x39\x76\x93\x94\x7c\x08\x34\xba\x36\x8c\xdd\xf2\x53\x7c\x5b\x42\x0b\x1c\xfd\x0a\x6e\x2e\xad\xae\xd8\x71\xe3\x2b\xbc\x43\xa0\x23\x33\x5c\x72\x42\x94\xe2\x2a\x39\x43\xc3\xac\xb0\xca\x11\x93\x21\x36\x4d\x7e\x98\x38\x67\x89\x3d\x62\xba\x0a\x07\x6d\x19\x16\x86\x89\xb8\xa6\x17\x95\x56\x7b\x97\x89\xce\xb6\xbb\x1a\x03\x91\xc2\xa4\x69\xc4\x49\xa6\x5c\xd6\xb8\x92\x6d\x20\xda\x43\x97\xa7\x6d\x54\xb0\xa3\x8f\x6b\x78\x7f\x8f\x5d\x1e\xf3\xc6\xf1\x11\x7e\x29\xf1\x0d\x7b\x66\xe5\x64\x77\xd0\x79\xfc\x60\x8f\x9b\xbf\xe1\xb1\x47\xf1\xdf\x2f\xae\x9d\x74\x83\xff\x0a\x00\x00\xff\xff\xd8\xc9\x05\xc8\x37\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-namespace-security-allocation-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-namespace-security-allocation-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x31\x6f\xb2\x31\x0c\x84\xf7\xf7\x57\x58\xec\x2f\xe8\xdb\x3e\x65\xed\xd0\xbd\x43\x77\x13\x0c\x58\x04\x3b\xb2\x1d\x2a\xf8\xf5\x55\x02\xa2\x14\x75\x68\xa7\x38\x97\xdc\x73\x27\x63\xe5\x77\x32\x67\x95\x04\xb6\xc6\xbc\xc4\x16\x7b\x35\xbe\x60\xb0\xca\xf2\xf0\xdf\x97\xac\xab\xd3\xbf\xe9\xc0\xb2\x49\xf0\x52\x9a\x07\xd9\x9b\x16\x9a\x8e\x14\xb8\xc1\xc0\x34\x01\xa0\x88\xc6\xb0\x78\xbf\x02\x7c\xc7\x68\x25\xf1\x3d\x6f\xa3\xc3\xfc\xec\x41\xc7\x59\xa5\x9c\x13\x2c\xc2\x1a\x2d\x86\xe5\xa7\xf8\xb6\x26\x13\x0a\x1a\x2d\xb0\x85\xb6\xba\xc1\xa0\x07\x9f\xe0\x91\x12\x5c\x99\xe9\x9e\x93\xb2\x4a\x98\x96\x42\x96\xd4\x78\xc7\x32\xf7\x8f\x5e\x31\xd3\xfc\xf5\x36\x59\x2b\xe4\x69\x9a\x01\x2b\xbf\x9a\xb6\x3a\xea\xcf\xb0\xe8\x68\x23\xd7\x66\x99\x6e\xda\x1d\xe0\x13\xc0\x89\x6c\x7d\xd3\x77\x14\xe3\x2c\xec\xd7\xe1\x03\x23\xef\xff\xca\x5c\x6d\x59\xb0\xf0\x85\x9e\x75\x0f\x8c\xf6\x14\x79\xdd\xc2\xef\x22\xe8\x44\x12\x4f\xfe\x6c\xd4\xfd\x7d\xac\xa3\xec\x03\xf4\x33\x00\x00\xff\xff\xa1\xa5\x2c\x10\x12\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-origin-namespace-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-origin-namespace-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x91\x31\x4f\xf3\x30\x10\x86\xf7\xfc\x0a\xab\x7b\x5a\x7d\xdb\x27\xaf\x0c\xec\x0c\xec\x57\xe7\x85\x5a\x75\x7c\xd6\xdd\x39\xa8\xfc\x7a\x14\x27\x82\x52\xc1\x40\x10\x53\xde\x5c\x74\xcf\xfb\xc4\xa6\x12\x1f\x21\x1a\x39\x7b\x27\x47\x0a\x7b\xaa\x76\x62\x89\xaf\x64\x91\xf3\xfe\xfc\x5f\xf7\x91\x0f\xd3\xbf\xee\x1c\xf3\xe0\xdd\x5d\xaa\x6a\x90\x07\x4e\xe8\x46\x18\x0d\x64\xe4\x3b\xe7\x28\x67\xb6\xb6\xa2\xf3\xab\x73\x9f\x31\x5c\x90\xf5\x14\x9f\x6c\x86\xe9\x45\x0d\x63\xcf\x39\x5d\xbc\xdb\x99\x54\xec\xda\xca\x57\xf5\xf5\x08\xc9\x30\x34\x0b\xaa\xc6\xb5\x0c\x64\xb8\xda\xcb\x34\xc2\xbb\x85\xe9\xdf\x7b\x7c\xe0\x6c\xc2\x29\x41\x7c\x99\x7a\x41\xb8\x84\x04\xe9\x3f\xc6\x9d\xd4\x04\xf5\x5d\xef\xa8\xc4\x7b\xe1\x5a\x9a\x79\xef\x76\x33\x55\xa0\x5c\x25\x60\x9d\x95\xf9\x88\xd4\x90\x6d\xe2\x54\x47\x68\xe7\xdc\x04\x39\xae\x9f\x83\x80\x0c\x2d\x0e\x48\x58\xe3\x33\xac\x3d\x53\xd4\x25\x2c\xee\x2d\xbe\x90\x85\xd3\xc6\xee\x83\x1a\x59\xbd\x51\x58\xd9\x9b\x88\x21\x51\x1c\x6f\x78\x7f\x24\xbf\x54\xfd\xfe\x0f\x78\xd8\x76\x05\x3f\x50\xc7\x84\x6c\xdf\xb7\x94\x46\xba\x12\x7f\x0b\x00\x00\xff\xff\xe9\x9b\xd4\x7d\x4a\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-pv-recycler-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-pv-recycler-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\x3f\x4f\x03\x31\x0c\xc5\xf7\xfb\x14\x51\xf7\x6b\xc5\x86\xb2\x32\xb0\x33\xb0\xbb\xe9\x2b\x8d\x9a\xb3\x83\xed\x9c\x54\x3e\x3d\xba\x6b\xa1\x2d\x62\x40\xc7\x96\x3f\xfe\xfd\xfc\xa4\x47\x35\xbf\x42\x2d\x0b\xc7\xa0\x5b\x4a\x6b\x6a\x7e\x10\xcd\x1f\xe4\x59\x78\x7d\x7c\xb4\x75\x96\xcd\xf8\xd0\x1d\x33\xef\x62\x78\x2a\xcd\x1c\xfa\x22\x05\xdd\x00\xa7\x1d\x39\xc5\x2e\x04\x62\x16\x9f\x11\x9b\xae\x21\xdc\x6b\xa4\x82\xed\x90\xf7\x3e\xc9\xec\x64\x8e\xa1\x17\x2e\xa7\x18\x56\xae\x0d\xab\x19\xf9\x6d\x7d\xdb\x42\x19\x8e\x39\x05\x35\x97\x56\x77\xe4\xb8\xe1\x98\x06\xc4\x70\x76\xc6\xef\x3d\x31\x09\xbb\x4a\x29\xd0\xa8\x30\x69\x9a\xf0\xde\xc4\xa9\xbf\x7e\x74\xda\x0a\x2c\x76\x7d\xa0\x9a\x9f\x55\x5a\x9d\xb3\xf7\x61\x35\x79\xbf\xa8\xcb\xdb\x9d\xc4\x36\xe6\xe4\xcd\xba\x10\x46\xe8\xf6\x32\x72\x8e\xb6\x44\x77\xef\x29\xd9\xfc\x6f\x16\x83\x8e\x39\x61\x31\x9f\x84\xf7\xf9\x6d\xa0\xfa\x8f\x04\x49\xe1\x8b\x71\x45\x2d\x39\xcd\x5d\x5f\x7b\x59\x6c\xc3\x08\xfe\x99\x25\x29\xa6\x52\xa6\x63\x25\x4f\x87\xdb\xa6\x3e\x03\x00\x00\xff\xff\x38\x4d\x1a\x8b\xfc\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-resourcequota-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-resourcequota-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xc1\x4e\xc3\x30\x0c\x86\xef\x7d\x8a\xa8\xf7\x6e\xe2\x86\x72\xe5\xc0\x9d\x03\x77\xb7\x35\x34\x5a\x66\x47\xb6\xd3\x69\x3c\x3d\x6a\x36\x60\xed\xd8\x04\x1a\x9c\x92\x28\xf6\xf7\x7f\xb2\x0c\x29\x3c\xa3\x68\x60\xf2\x4e\x5a\xe8\x56\x90\x6d\x60\x09\x6f\x60\x81\x69\xb5\xb9\xd7\x55\xe0\xf5\x78\x57\x6d\x02\xf5\xde\x3d\xc4\xac\x86\xf2\xc4\x11\xab\x2d\x1a\xf4\x60\xe0\x2b\xe7\x80\x88\xad\xb4\xe8\xf4\x74\x6e\x8e\xe1\x84\xa4\x43\x78\xb1\x09\xa6\x7b\x35\xdc\x36\x4c\x71\xef\x5d\x6d\x92\xb1\x2e\x2d\xdf\xc5\xe7\x16\x85\xd0\xb0\x58\x40\x36\xce\xa9\x07\xc3\x93\x3e\x82\x2d\x7a\x77\x60\xfa\xcf\x1c\xdf\x31\x99\x70\x8c\x28\x5e\x7b\x6a\xbe\x9e\x95\xe4\x88\xea\xab\xc6\x41\x0a\x8f\xc2\x39\x15\xe3\xc6\xd5\x75\x39\x08\x6d\xc7\xb2\x99\x29\x57\xce\x09\x2a\x67\xe9\xf0\x58\xdc\x1d\xe6\x70\x2c\xd6\xca\xb9\x11\xa5\xfd\xf8\x14\x04\xc3\x72\x7d\x45\x2b\xe7\x41\xfb\xc6\xd0\x81\xd5\x34\xb7\x84\x76\x39\xb0\xc7\x88\x8b\xec\x18\x74\x26\x31\x5d\x77\x60\xdd\x70\xa3\x0e\xa1\x4d\xc3\xd7\x04\x1d\xfe\xab\xd0\x22\x37\x71\xbf\x88\x9b\x81\x7f\xc4\x50\x94\x31\x9c\x69\x9f\x09\xfe\xc2\xea\xd2\x28\x6e\x62\x72\xff\xe7\xb8\xb5\x1a\x58\x5e\x50\xaf\xae\xe7\x82\x82\x23\xd2\x95\x05\x4c\xc5\xe7\x04\xfa\x1e\x00\x00\xff\xff\x73\xab\x62\xa9\x62\x04\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-sdn-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-sdn-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xb1\x4e\x03\x31\x0c\x06\xe0\xfd\x9e\xc2\xea\x9e\x56\x6c\x28\x2b\x03\x3b\x03\xbb\x9b\x1a\x6a\x35\xb5\x23\xdb\x39\x54\x9e\x1e\x35\x3d\xa0\x54\x0c\xb0\xf9\x7c\xfa\x3f\xff\xc1\xc6\xcf\x64\xce\x2a\x19\x6c\x8b\x65\x8d\x3d\xf6\x6a\xfc\x8e\xc1\x2a\xeb\xc3\xbd\xaf\x59\x37\xf3\xdd\x74\x60\xd9\x65\x78\xa8\xdd\x83\xec\x49\x2b\x4d\x47\x0a\xdc\x61\x60\x9e\x00\x50\x44\x63\x44\xfc\xfc\x09\xf0\x93\xd1\x46\xe2\x7b\x7e\x89\x33\xe6\x27\x0f\x3a\x26\x95\x7a\xca\xb0\x0a\xeb\xb4\x1a\x91\xdf\xce\xf7\x2d\x99\x50\xd0\x68\x81\x3d\xb4\xb7\x1d\x06\x5d\xe5\x04\x8f\x94\xe1\x62\xe6\xaf\x3b\xb9\xa8\x84\x69\xad\x64\xd9\xc9\x66\x2e\x94\x58\x5e\x8d\xdc\x13\xb7\xf4\xfd\x77\xb2\x5e\xc9\xf3\x94\x00\x1b\x3f\x9a\xf6\x36\x1e\x90\x60\x75\xc6\x8d\x5c\xbb\x15\x5a\x76\x8b\xe4\x13\xc0\x4c\xb6\x5d\xb6\x95\x3d\xc6\x70\xe9\x36\xc6\x37\x8c\xb2\xff\x1f\xba\xf1\xc0\xe8\x37\xf6\x42\xfe\x09\xa2\x99\x24\x6e\xf2\xc5\xe8\xb3\x52\x1b\x95\xae\xd0\x8f\x00\x00\x00\xff\xff\x0a\x42\x86\x15\xfb\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-service-ingress-ip-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-service-ingress-ip-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xcf\xb1\x4e\x03\x31\x0c\x06\xe0\xfd\x9e\x22\xea\x7e\x45\x6c\x28\x2b\x03\x3b\x03\xbb\x9b\xfb\x69\xa3\xa6\x76\x64\x3b\x87\xca\xd3\xa3\x4b\x0f\x28\x08\x21\x06\xa6\x38\x8e\xfc\xfd\x0e\xd5\xfc\x04\xb5\x2c\x1c\x83\xee\x28\x6d\xa9\xf9\x41\x34\xbf\x92\x67\xe1\xed\xf1\xce\xb6\x59\x6e\xe6\xdb\xe1\x98\x79\x8a\xe1\xbe\x34\x73\xe8\xa3\x14\x0c\x27\x38\x4d\xe4\x14\x87\x10\x88\x59\xbc\x8f\xd8\x72\x0d\xe1\x2b\x23\x15\x6c\x87\xfc\xec\x0b\x66\x67\x73\x9c\x46\xe1\x72\x8e\x61\xe3\xda\xb0\xe9\x23\x3f\xc5\xb7\x1d\x94\xe1\xe8\x5b\x50\x73\x69\x75\x22\xc7\xd5\x1c\xd3\x09\x31\x5c\xcc\xf8\x91\x13\x93\xb0\xab\x94\x02\x8d\x06\x9d\x73\xc2\xd8\x4f\xde\x8f\x09\xea\xe3\xe7\xfb\xa0\xad\xc0\xe2\x30\x06\xaa\xf9\x41\xa5\xd5\xfe\x85\x31\x6c\x16\x5e\x61\xd2\x34\x61\xed\xad\x96\x0d\x21\xcc\xd0\xdd\xda\x2d\xd9\xbc\x17\x97\xed\x7a\xf9\x42\x9e\x0e\x7f\x45\x93\xc2\xbf\x99\x49\xf1\x4e\x4d\x28\x58\xcb\x3d\xfc\x3f\x12\x31\x83\x7f\x09\xac\x5d\xba\xe2\xdf\x02\x00\x00\xff\xff\x68\x5a\xf5\x8c\x26\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-service-serving-cert-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-service-serving-cert-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\x4e\x33\x31\x10\x84\x7b\x3f\xc5\x2a\xfd\xe5\xd7\xdf\x21\xb7\x14\xf4\x14\xf4\x1b\xdf\x40\xac\x38\x5e\x6b\x77\x7d\x28\x3c\x3d\x8a\xef\x04\x44\x20\x44\xe5\xf1\xae\xe6\x9b\x59\x6e\xf9\x09\x6a\x59\x6a\x24\x3d\x70\xda\x73\xf7\xa3\x68\x7e\x63\xcf\x52\xf7\xa7\x3b\xdb\x67\xf9\xb7\xfc\x0f\xa7\x5c\xe7\x48\xf7\xa5\x9b\x43\x1f\xa5\x20\x9c\xe1\x3c\xb3\x73\x0c\x44\x5c\xab\xf8\xb0\xd8\xf5\x4b\x74\x8b\x91\x86\x6a\xc7\xfc\xec\x57\x98\x5d\xcc\x71\x9e\xa4\x96\x4b\xa4\x9d\x6b\xc7\x6e\x58\x7e\x8a\xef\x07\x68\x85\x63\xb4\xe0\xee\xd2\xdb\xcc\x8e\x2f\xbe\xca\x67\x44\x5a\x99\xf1\x23\x27\x26\xa9\xae\x52\x0a\x34\x1a\x74\xc9\x09\x9c\x92\xf4\xea\xd3\xe7\x26\x68\x2f\xb0\x18\x26\xe2\x96\x1f\x54\x7a\x1b\xe5\x27\xda\x5d\xc1\x0a\x93\xae\x09\xdb\xec\x96\x62\x81\x68\x81\x1e\xb6\x65\x52\xb0\x63\xc8\x19\x05\x9b\x7c\x81\x8f\xb7\x64\x5b\x45\x63\x4f\xc7\xa1\xd6\x33\x86\x7c\x1d\xc3\x3f\x75\xc0\x82\xdf\xa2\xbf\xe1\xdf\x03\x00\x00\xff\xff\xfe\x87\x5d\x48\xdd\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xbf\x4e\x33\x31\x10\xc4\xfb\x7b\x8a\x55\xfa\xcb\xa7\xaf\x43\x6e\x29\xe8\x29\xe8\x37\xbe\x81\x58\x71\xbc\xd6\xee\xfa\x50\x78\x7a\x14\x5f\x04\x84\x10\x04\xa2\xf2\xf8\xcf\xcc\x6f\xd6\x5c\xd3\x03\xd4\x92\x94\x40\xba\xe1\xb8\xe6\xe6\x5b\xd1\xf4\xc2\x9e\xa4\xac\x77\x37\xb6\x4e\xf2\x6f\xfe\x3f\xec\x52\x99\x02\xdd\xe6\x66\x0e\xbd\x97\x8c\x61\x0f\xe7\x89\x9d\xc3\x40\xc4\xa5\x88\x77\x8b\x1d\xb7\x44\xe7\x31\x52\x51\x6c\x9b\x1e\xfd\x18\x66\x07\x73\xec\x47\x29\xf9\x10\x68\xe5\xda\xb0\xea\x96\xaf\xf0\x6d\x03\x2d\x70\xf4\x16\xdc\x5c\x5a\x9d\xd8\xf1\xc1\x57\x78\x8f\x40\x4b\x66\x78\xe3\x84\x28\xc5\x55\x72\x86\x06\x83\xce\x29\x82\x63\x94\x56\x7c\xac\x2d\xe7\xd1\x10\x15\x6e\xe3\xfb\xb3\x41\x5b\x86\x85\x61\x24\xae\xe9\x4e\xa5\xd5\x3e\xc9\x48\xab\x23\x45\x61\xd2\x34\xe2\x74\x76\x1e\x69\x03\xd1\x0c\xdd\x9c\x2e\xa3\x82\x1d\x5d\x3e\xc1\xfb\x9a\x93\x2d\x62\xa9\xdf\xe5\x33\x7b\xdc\xfe\x14\xd7\xdb\x5e\xc5\x4c\xc8\xb8\x46\xac\x1d\xf3\x17\x76\x1f\xf5\x13\xfc\x02\xf3\x8b\x44\xcc\xf8\xee\xcf\x2e\x0a\xbf\x06\x00\x00\xff\xff\x85\x81\x4c\xb5\xa3\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-pull-secrets-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-pull-secrets-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xbd\x6e\x2a\x41\x0c\x85\xfb\x79\x0a\x8b\x7e\x41\xb7\xbb\x9a\x36\x45\xfa\x14\xe9\xbd\xc3\x89\x98\x30\x6b\xaf\x6c\x0f\x11\x79\xfa\x88\x05\x92\x10\x28\x2d\x9f\x9f\x4f\x87\xe7\xfa\x0a\xf3\xaa\x92\xc9\x46\x2e\x6b\xee\xb1\x53\xab\x9f\x1c\x55\x65\xbd\xff\xef\xeb\xaa\x9b\xc3\xbf\xb4\xaf\xb2\xcd\xf4\xd4\xba\x07\xec\x45\x1b\xd2\x84\xe0\x2d\x07\xe7\x44\xc4\x22\x1a\x8b\xc5\x4f\x27\xd1\x6d\x8c\xce\x10\xdf\xd5\xb7\x38\x85\xf9\xd1\x03\xd3\xa0\xd2\x8e\x99\x56\x61\x1d\xab\xc5\xf2\xa8\xbe\x8f\x30\x41\x60\xa1\xe0\x1e\xda\xe7\x2d\x07\x7e\xf9\x84\x27\x64\x3a\x67\xe6\xef\x9e\x5c\x54\xc2\xb4\x35\x58\x0e\x4c\x73\xe3\xc0\x50\xc5\x83\xa5\x60\xf8\x79\x26\xeb\x0d\x9e\xd3\x40\x3c\xd7\x67\xd3\x3e\x2f\xfc\x03\x3d\x9a\x21\x11\x19\x5c\xbb\x15\x5c\x54\xde\xc7\x77\x94\xe0\x52\xe0\x6e\x38\x54\x7c\x78\x22\x3a\xc0\xc6\x8b\xa2\x18\x38\x70\x9f\x7f\x85\xba\x99\xe6\xbe\xe0\x2a\xbb\xa2\xfb\xc6\x83\xa3\xff\x29\x39\x8f\x92\xbe\x02\x00\x00\xff\xff\x97\x7e\x7e\xa9\xcc\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-template-instance-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-template-instance-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\x91\x5d\x0e\xba\x15\x5a\x3b\x74\xef\xd0\x9d\xb6\x19\x84\x88\x4c\x0a\x24\x15\x20\xf9\xfa\x22\x4e\xd3\xd6\x45\x46\x02\xf7\xee\xf1\xb0\xf1\x27\x99\xb3\x4a\x01\x1b\x71\x1a\xb0\xc7\x51\x8d\xaf\x18\xac\x32\x9c\x5e\x7d\x60\xdd\x9f\x5f\xd2\x89\x65\x2e\xf0\x56\xbb\x07\xd9\x87\x56\x4a\x0b\x05\xce\x18\x58\x12\x00\x8a\x68\xac\x88\xdf\x4e\x80\x6d\x8d\x36\x12\x3f\xf2\x21\x6e\x65\x7e\xf1\xa0\x25\xab\xd4\x4b\x81\x5d\x58\xa7\xdd\x8a\x3c\xd3\xf7\x91\x4c\x28\x68\xfd\x02\x7b\x68\x6f\x33\x06\xfd\xe1\x04\x17\x2a\x70\xef\x2c\x3f\x9e\x32\xa9\x84\x69\xad\x64\x25\x68\x69\x15\x83\x32\x8b\x07\xca\x44\xf9\xc0\x82\x95\xaf\x64\xf9\x37\x96\xac\x57\xf2\x92\x32\x60\xe3\x77\xd3\xde\xd6\x25\x19\x1e\xf8\x66\x44\x02\x30\x72\xed\x36\xd1\xbf\xd8\x43\xe2\x7b\x0f\x8c\xee\x09\xe0\x4c\x36\x7e\xa7\xee\xef\xa7\xaf\x00\x00\x00\xff\xff\x71\x22\x52\x14\x76\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-template-instance-finalizer-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-template-instance-finalizer-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\x31\x8f\xdb\x30\x0c\x85\x77\xff\x0a\x21\xbb\x73\xe8\x56\x68\xed\xd0\xbd\x43\x77\x5a\x79\x49\xd4\xc8\xa4\x41\x52\x3e\xdc\xfd\xfa\x22\x4a\x52\xa4\x77\xc6\x39\xc0\xdd\x64\x1a\x20\xdf\xf7\xf8\x24\xd1\x94\x7f\x43\x2d\x0b\xc7\xa0\x03\xa5\x2d\x55\x3f\x8a\xe6\x57\xf2\x2c\xbc\x3d\x7d\xb7\x6d\x96\xa7\xf9\x5b\x77\xca\xbc\x8b\xe1\x47\xa9\xe6\xd0\x5f\x52\xd0\x8d\x70\xda\x91\x53\xec\x42\x20\x66\xf1\x36\x62\xe7\xdf\x10\xfe\x97\x91\x09\x6c\xc7\xbc\xf7\xb3\x98\xbd\x98\x63\xec\x85\xcb\x4b\x0c\x1b\xd7\x8a\x4d\x1b\x59\xc2\xd7\x01\xca\x70\x34\x17\x54\x5d\xea\xb4\x23\xc7\xdd\x1c\xd3\x88\x18\x2e\x9a\xf1\x1f\x27\x26\x61\x57\x29\x05\x1a\x1d\xe3\x54\xc8\xd1\x1b\x74\xce\x09\xfd\xa0\x72\x82\x76\x5a\x0b\x2c\x76\x7d\xa0\x29\xff\x54\xa9\x53\xb3\xde\x87\xa5\x04\xba\x10\x14\x26\x55\x13\xae\x5d\x56\x87\x3f\x48\x4e\x29\xc1\x4c\x31\x67\x3c\x5b\x17\xc2\x0c\x1d\xae\x1d\x49\x41\x8e\x35\xfd\xfb\x68\xbe\x92\x72\xdb\x7a\x05\x70\xc9\xe2\xd6\x9c\xd9\x9c\x38\x61\x99\x71\x2e\x77\x28\xb8\x96\x07\x78\xfb\x5e\x8e\xe4\xab\x1d\x3c\xed\x33\x53\xc9\xaf\xd0\x37\x66\x3e\x89\x5b\x59\x95\xcc\xf2\x81\x57\xb6\xfe\x2c\xfb\x0d\xf3\x16\x64\xc9\x76\x29\x9e\xc9\xd3\xf1\x3d\x65\xb3\x59\xb8\x20\x48\x0a\x7f\xf8\xbc\x1e\xd2\x4c\xc2\xfb\x7c\x18\x69\xb2\x2b\xa2\x3d\x9b\x05\xd3\x0f\xa9\xa9\xd4\xc5\x8d\xdf\x0d\xb7\xc6\x95\x04\x1f\x16\x5b\x72\x82\x19\xfc\x41\x54\x53\x4b\xfd\xee\x8a\xfd\x0d\x00\x00\xff\xff\x3e\x70\x8a\x41\x1c\x05\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-template-service-broker.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-template-service-broker.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xbd\x6e\xeb\x30\x0c\x46\x77\x3f\x85\x90\xdd\x09\xee\x76\xa1\xb5\x43\xf7\x0e\xdd\x15\x99\x49\x88\xc8\xa4\x40\x52\x69\xd3\xa7\x2f\x24\x07\xf9\x41\x8d\xb6\x30\x3a\x09\x22\xc0\x73\x3e\x91\x0a\x19\x5f\x41\x14\x99\xbc\x93\x6d\x88\xeb\x50\xec\xc0\x82\x1f\xc1\x90\x69\x7d\xfc\xaf\x6b\xe4\xcd\xe9\x5f\x77\x44\x1a\xbc\x7b\x4a\x45\x0d\xe4\x85\x13\x74\x23\x58\x18\x82\x05\xdf\x39\x17\x88\xd8\x5a\x8b\xd6\xab\x73\x8f\x18\xce\x40\x7a\xc0\x9d\x55\x98\x9e\xd5\x60\xec\x99\xd2\xd9\xbb\x95\x49\x81\x55\x6b\x99\xd3\x97\x2d\x08\x81\x41\x4b\x11\x8a\x71\xc9\x43\x30\xb8\xeb\xa3\x30\x82\x77\x13\xd3\x5f\x3d\x3e\x32\x99\x70\x4a\x20\xbe\x10\x0e\x09\x69\xdf\xdf\x6a\x9d\x94\x04\xea\xbb\xde\x85\x8c\xcf\xc2\x25\xb7\xd8\xbd\x5b\x55\xa4\x80\x72\x91\x08\x97\x1a\xd0\x90\x19\xc9\xb4\xdd\x04\x72\xc2\xd8\xe2\xdd\x78\xba\xd1\x18\x12\x74\xce\x9d\x40\xb6\x97\xbe\x3d\x58\x3b\xa7\xc8\xbf\x73\xcd\xd3\xe7\xb9\x39\x58\x3c\xfc\x6c\xa8\xd5\xac\x0f\x2b\xf8\xea\x1d\x20\x27\x3e\x8f\x40\x16\x99\x76\xb8\x5f\xac\xac\xae\x69\x6a\xef\x06\x54\xff\x95\x7e\x67\xbb\x0d\xee\xfa\x76\x05\x5b\x3e\xce\x65\x8f\xfd\xab\xed\xc1\x09\xa6\x6f\x72\xc7\x49\xa8\x13\xe8\xad\xcd\x6e\x31\x27\x0a\xd4\x1c\xb3\x5b\xf8\x0c\x00\x00\xff\xff\x03\x22\x63\x61\xc5\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-unidling-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-unidling-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemOpenshiftTemplateservicebrokerClientYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4b\xc4\x30\x10\x85\xef\xf9\x15\xc3\x1e\x85\x6e\xf1\x26\xb9\x7a\xf5\x54\xd0\xfb\xb4\x7d\xba\xa1\xe9\x4c\x99\x4c\x0a\xeb\xaf\x97\x4d\x55\x5c\xf0\x34\x09\xbc\xf7\xbd\x8f\xb7\xf4\x06\x2b\x49\x25\x92\x8d\x3c\x9d\xb9\xfa\x45\x2d\x7d\xb2\x27\x95\xf3\xf2\x54\xce\x49\xfb\xfd\x31\x2c\x49\xe6\x48\xcf\xb9\x16\x87\x0d\x9a\x11\x56\x38\xcf\xec\x1c\x03\x11\x8b\xa8\xb7\x4a\xb9\x7d\x89\xee\x31\xba\x41\xca\x25\xbd\xfb\x0d\x56\xae\xc5\xb1\x76\x2a\xf9\x1a\xe9\xe4\x56\x71\x6a\x95\xff\xe6\xeb\x08\x13\x38\x9a\x05\x57\xd7\xba\xcd\xec\xf8\xd3\x13\x5e\x11\xe9\x60\xc6\xdf\x9d\xe8\x58\xb7\xcc\x8e\x02\xdb\xd3\x84\xd1\x74\x81\x75\x53\x4e\x10\x0f\x56\x33\x4a\x0c\x1d\x89\xca\x80\xa2\xd5\x26\xbc\x0e\x2f\x4d\xbd\xa3\xfe\x08\x97\xfe\x87\x71\xaf\xff\x10\x88\x76\xd8\xf8\x9d\x9e\x91\xe1\x68\xcf\x0f\x78\xbb\x5b\x3d\xee\xe1\x1a\xbe\x02\x00\x00\xff\xff\xda\xb9\x46\x3d\x63\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftTemplateservicebrokerClientYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemOpenshiftTemplateservicebrokerClientYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-openshift-templateservicebroker-client.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemOpenshiftTemplateservicebrokerClientYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemOpenshiftTemplateservicebrokerClientYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-openshift-templateservicebroker-client.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemPersistentVolumeProvisionerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xbf\x6e\xf3\x30\x0c\xc4\x77\x3f\x85\x90\xdd\xf9\xf0\x6d\x85\xd6\x0e\xdd\x3b\x74\x67\xe4\x6b\x2c\x44\x16\x05\x92\x72\x91\x3e\x7d\x61\xd9\xe8\x9f\x24\xed\xd0\x4e\xa2\x44\xdc\xef\x78\x14\x95\xf8\x04\xd1\xc8\xd9\x3b\x39\x50\xd8\x53\xb5\x91\x25\xbe\x92\x45\xce\xfb\xd3\x9d\xee\x23\xff\x9b\xff\x77\xa7\x98\x07\xef\xee\x53\x55\x83\x3c\x72\x42\x37\xc1\x68\x20\x23\xdf\x39\x47\x39\xb3\x35\x89\x2e\x57\xe7\xbe\x62\xb8\x20\xeb\x18\x9f\x6d\x81\xe9\x59\x0d\x53\xcf\x39\x9d\xbd\xdb\x99\x54\xec\x9a\xe4\x96\x7d\x3d\x40\x32\x0c\x6d\x0a\xaa\xc6\xb5\x0c\x64\xf8\xa4\xcb\x34\xc1\xbb\x95\xe9\xcb\x12\x45\x0d\xd9\xfa\x99\x53\x9d\xd0\x17\xe1\x39\x2e\xf1\x20\x9d\xd4\x04\xf5\x5d\xef\xa8\xc4\x07\xe1\x5a\xda\xac\xbd\xdb\x2d\x1c\x81\x72\x95\x80\xed\xed\x83\xb4\x82\xb4\x73\x6e\x86\x1c\xb6\x76\x10\x90\xa1\x95\x03\x12\xb6\xf2\x08\x6b\x67\x8a\xba\x16\x2f\x64\x61\xfc\x9d\x61\x48\x14\xa7\x0b\xd7\x2b\xfe\xba\x8d\x9f\xac\xd4\x58\xe8\x88\xed\x23\xaf\x6d\xb7\x7e\x48\xa4\x7a\x19\xf2\x2f\x71\x30\x23\xdb\xf7\x4b\x7b\x47\x96\x86\xbc\x99\xe5\x2d\x00\x00\xff\xff\xb1\x16\xee\x9b\x9b\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemPersistentVolumeProvisionerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemPersistentVolumeProvisionerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-persistent-volume-provisioner.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemPersistentVolumeProvisionerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemPersistentVolumeProvisionerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-persistent-volume-provisioner.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemRegistryYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\x3f\x4f\x03\x31\x0c\xc5\xf7\xfb\x14\x51\xf7\x6b\xc5\x86\xb2\x32\xb0\x33\xb0\xbb\x77\x8f\xab\xd5\x4b\x1c\x6c\xa7\x52\xf9\xf4\xe8\x52\x40\xfd\xc7\xd6\x29\xb6\xe3\xf7\x7e\x76\x42\x85\xdf\xa1\xc6\x92\x63\xd0\x2d\x0d\x6b\xaa\xbe\x13\xe5\x2f\x72\x96\xbc\xde\x3f\xdb\x9a\x65\x73\x78\xea\xf6\x9c\xc7\x18\x5e\xe6\x6a\x0e\x7d\x93\x19\x5d\x82\xd3\x48\x4e\xb1\x0b\x81\x72\x16\x6f\x12\x5b\xd2\x10\x2e\x6d\xa4\x20\xdb\x8e\x3f\x7c\x31\xb3\xa3\x39\x52\x2f\x79\x3e\xc6\xb0\x72\xad\x58\x35\xc9\x3d\x7c\xdd\x42\x33\x1c\x6d\x0a\xaa\x2e\xb5\x8c\xe4\x38\xd3\x65\x4a\x88\xe1\xe4\x19\x15\x13\x9b\xeb\xb1\xd3\x3a\xc3\x62\xd7\x07\x2a\xfc\xaa\x52\x4b\x1b\xab\x0f\xab\x45\xa2\x30\xa9\x3a\xe0\xa7\x36\x73\x62\x57\xca\x13\xac\xe5\xbf\xd7\x9f\x55\x9c\x96\xd2\x01\xba\xfd\xeb\x35\xff\xc7\xb5\x0f\x9c\x68\xc2\xc5\xae\xb7\xb0\xd6\x63\x67\xa1\x2b\x28\x39\x4d\x57\xa0\x11\x33\x1c\x2d\x9c\xf0\x08\x64\xe3\xdc\xa7\xdb\xc6\x30\x28\xfc\x6a\x84\xc7\x70\x6f\x60\xb7\x90\xe5\x3c\xfd\xeb\xa3\xf6\x4c\x54\x0a\xe7\xeb\x37\x1d\x14\x0b\xe3\x3b\x00\x00\xff\xff\xa2\x0f\x4a\xc7\xf3\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemRegistryYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemRegistryYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-registry.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemRegistryYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemRegistryYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-registry.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemReplicasetControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x3d\x4e\x03\x41\x0c\xc5\xf1\x7e\x4e\x61\xa5\xcf\x22\x3a\x34\x2d\x37\xa0\xa0\x77\x76\x1f\xca\x28\x5e\x7b\xe4\x0f\xa4\x70\x7a\x94\xa5\x01\x89\xd2\xc5\xff\xe7\xc7\x73\xbc\xc3\x63\x98\x76\xf2\x0b\xaf\x0b\x57\x5e\xcd\xc7\x17\xe7\x30\x5d\x6e\x2f\xb1\x0c\x7b\xfa\x7c\x6e\xb7\xa1\x5b\xa7\x57\xa9\x48\xf8\x9b\x09\xda\x8e\xe4\x8d\x93\x7b\x23\x62\x55\xcb\x23\x89\xc7\x49\xf4\x97\xb1\x09\x8d\xeb\xf8\xc8\x07\x16\xf7\x48\xec\x67\x53\xb9\x77\x3a\xa5\x17\x4e\x47\xf2\xdf\xfb\xba\xc0\x15\x89\x63\x05\x57\x5a\xcd\x8d\x13\xbf\x3a\xe5\x1d\x9d\x7e\xcc\xee\x98\x32\x56\x0e\xe4\x79\x35\x4d\x37\x11\x78\xf3\x12\x44\x27\x2d\x91\xf6\x1d\x00\x00\xff\xff\xa1\xc9\xa6\xb0\xf0\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemReplicasetControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemReplicasetControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-replicaset-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemReplicasetControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemReplicasetControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-replicaset-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemReplicationControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x3d\x4e\xc4\x40\x0c\x86\xe1\x7e\x4e\x61\x6d\xbf\x41\x74\x68\x5a\x6e\x40\x41\xef\x4d\x8c\xd6\x5a\xc7\x1e\xf9\x07\x29\x9c\x1e\x65\x68\x40\xa2\x74\xf1\xbc\xfe\x70\xf0\x3b\x79\xb0\x69\x07\xbf\xe1\xba\x60\xe5\xdd\x9c\xbf\x30\xd9\x74\x79\xbc\xc4\xc2\xf6\xf4\xf9\xdc\x1e\xac\x5b\x87\x57\xa9\x48\xf2\x37\x13\x6a\x3b\x25\x6e\x98\xd8\x1b\x00\xaa\x5a\x4e\x12\xe7\x09\xf0\x37\x63\x83\x34\xee\xfc\x91\x67\x2c\x8e\x48\xda\xaf\xa6\x72\x74\xb8\xa4\x17\x5d\x26\xf9\xef\x7d\xdd\xc8\x95\x92\xe6\x0a\xac\xb4\x1a\x1b\x26\xfd\x72\x8a\x3b\x75\xf8\x69\x76\xa7\x21\xbc\x4e\x7b\x5d\x4d\xd3\x4d\x84\xbc\x79\x09\x45\x07\x2d\x91\xf6\x1d\x00\x00\xff\xff\x79\xb4\x32\x54\xf1\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemReplicationControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemReplicationControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-replication-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemReplicationControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemReplicationControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-replication-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemRouterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xbd\x6e\xc3\x30\x0c\x84\x77\x3d\x85\x90\xdd\x09\xba\x15\x5a\x3b\x74\xef\xd0\x9d\x96\xaf\x88\x1a\x87\x34\x48\xca\x41\xfa\xf4\x85\x95\x0c\xf9\x1b\x9a\x6e\x36\xa1\xfb\xee\x74\x14\x4d\xe5\x13\x6a\x45\x38\x45\xed\x29\xaf\xa9\xfa\x56\xb4\xfc\x90\x17\xe1\xf5\xee\xd5\xd6\x45\x36\xf3\x4b\xd8\x15\x1e\x52\x7c\x1b\xab\x39\xf4\x43\x46\x84\x3d\x9c\x06\x72\x4a\x21\x46\x62\x16\x6f\x12\x5b\x7e\x63\xbc\xc6\xc8\x04\xb6\x6d\xf9\xf2\x05\x66\x47\x73\xec\x3b\xe1\xf1\x98\xe2\xca\xb5\x62\xd5\x24\x8f\xec\x6b\x0f\x65\x38\x5a\x0a\xaa\x2e\x75\x1a\xc8\x71\xa1\x63\xda\x23\xc5\x13\x33\xa9\x54\x87\x06\xad\x23\x2c\x85\x2e\xd2\x54\xde\x55\xea\xd4\x42\x75\x71\xb5\x08\x14\x26\x55\x33\xce\x33\xf0\x30\x49\x61\xb7\x10\xe3\x0c\xed\xcf\xe3\xb1\x98\xb7\x8f\x03\x79\xde\xfe\x0d\x65\xd0\xb9\x64\x3c\x49\x5a\x6e\x0c\xf6\x92\x2f\x1b\xbf\x87\xbb\xec\xc0\x8a\xb9\xe0\x70\x63\x90\x15\xe4\x78\x0c\xbe\xdd\xe4\x83\xd0\xb5\xff\x46\x76\xca\x19\x66\x4f\xf1\x5b\x05\x5d\x6c\x9d\x5f\x6d\xf8\xde\xa4\x9d\xf9\x4f\xc3\xcf\xe0\x37\xe6\xe4\xf5\xc6\xe5\xf4\x5e\xc2\x6f\x00\x00\x00\xff\xff\xef\x9c\x2d\x13\xe7\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemRouterYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemRouterYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-router.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemRouterYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemRouterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-router.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemScopeImpersonationYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xb1\x6e\xc3\x30\x0c\x05\x77\x7d\x05\x91\xdd\x0e\xba\x15\x5a\x3b\x74\xef\xd0\x9d\xb6\x5f\x11\x21\x36\x29\x90\x54\xd0\xf4\xeb\x8b\xa8\x01\xea\x02\xcd\x28\x40\x77\xbc\xc7\xb5\xbc\xc3\xbc\xa8\x64\xb2\x89\xe7\x91\x5b\x9c\xd4\xca\x17\x47\x51\x19\xcf\xcf\x3e\x16\x3d\x5e\x9e\xd2\xb9\xc8\x92\xe9\x65\x6d\x1e\xb0\x37\x5d\x91\x36\x04\x2f\x1c\x9c\x13\x11\x8b\x68\x74\xc4\x6f\x4f\xa2\xbf\x1a\xad\x10\x3f\x95\x8f\xb8\xc9\xfc\xea\x81\x6d\x50\x59\xaf\x99\x0e\x61\x0d\x87\x8e\xfc\x77\xbe\x4d\x30\x41\xa0\x57\x70\x0b\x6d\x75\xe1\xc0\x8e\x13\xde\x90\xe9\xc7\x99\x7d\xd6\x8a\xa1\x6c\x15\xe6\x2a\xdd\x91\xac\xad\xf0\x9c\x06\xe2\x5a\x5e\x4d\x5b\xed\x85\x43\x2f\x84\x44\x99\xf7\x4b\x13\x91\xc1\xb5\xd9\x8c\xfb\xb7\xe6\x30\x7c\x86\xb1\x1f\xbb\xdd\xc7\xc7\xd3\x12\xd1\x05\x36\xdd\xc9\xdf\x0c\xa4\xef\x00\x00\x00\xff\xff\x12\x85\x0e\x74\x67\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemScopeImpersonationYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemScopeImpersonationYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-scope-impersonation.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemScopeImpersonationYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemScopeImpersonationYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-scope-impersonation.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemSdnManagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xbd\x6e\xeb\x30\x0c\x85\x77\x3f\x85\xe0\xdd\xb9\xb8\x5b\xa1\xb5\x43\xf7\x0e\xdd\x69\xfb\x34\x16\x62\x93\x02\x49\x25\x48\x9f\xbe\xb0\xec\x02\x4d\x90\x4c\x9d\x48\x09\xe7\xe7\x13\x44\x39\x7d\x40\x2d\x09\xc7\xa0\x3d\x0d\x07\x2a\x3e\x89\xa6\x2f\xf2\x24\x7c\x38\xbd\xd8\x21\xc9\xbf\xf3\xff\xe6\x94\x78\x8c\xe1\x75\x2e\xe6\xd0\x77\x99\xd1\x2c\x70\x1a\xc9\x29\x36\x21\x10\xb3\x78\xb5\xd8\x7a\x0c\xe1\x36\x46\x32\xd8\xa6\xf4\xe9\x6b\x98\x5d\xcd\xb1\x74\xc2\xf3\x35\x86\xd6\xb5\xa0\xad\x96\x47\xf5\xa5\x87\x32\x1c\x95\x82\x8a\x4b\xc9\x23\x39\x7e\xf9\x98\x16\xc4\xb0\x65\x46\x1b\xb9\x5b\x88\xe9\x08\x6d\xb4\xcc\xb0\xd8\x74\x81\x72\x7a\x53\x29\xb9\x92\x75\xa1\x6d\xeb\x60\xf8\x45\xf4\x74\x83\xd6\x84\xa0\x30\x29\x3a\x60\x17\x4f\x62\x6e\xa5\x67\xb8\xfd\xb8\xd6\x42\xcb\x34\x60\xbd\x39\x43\xfb\x5d\x3a\x28\xc8\x51\xd7\x11\x33\xf6\xf5\x08\xaf\x73\x4e\xb6\x2d\x17\xf2\x61\xfa\x23\xd5\xb0\xfd\xc2\x2e\x7e\xce\xb1\x96\x3f\x6e\xba\x0b\x64\x19\xef\x9f\xf3\x04\xfc\x3b\x00\x00\xff\xff\xe1\x6d\x86\x66\x30\x02\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemSdnManagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemSdnManagerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-sdn-manager.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemSdnManagerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemSdnManagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-sdn-manager.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemSdnReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x31\x4f\xc3\x40\x0c\x85\xf7\xfc\x8a\x53\xf6\x14\xb1\xa1\xac\x0c\xec\x0c\xec\x4e\xf2\x68\x4e\x4d\xed\x93\xed\x6b\x29\xbf\x1e\xe5\x12\x24\x5a\x8a\x04\x95\x98\xec\x28\x7e\xdf\x7b\x27\x9b\x52\x7c\x81\x5a\x14\x6e\x83\x76\xd4\x6f\x28\xfb\x28\x1a\xdf\xc9\xa3\xf0\x66\xf7\x60\x9b\x28\x77\x87\xfb\x6a\x17\x79\x68\xc3\xe3\x94\xcd\xa1\xcf\x32\xa1\xda\xc3\x69\x20\xa7\xb6\x0a\x81\x98\xc5\x8b\xc4\xe6\xcf\x10\xce\x31\x92\xc0\x36\xc6\x57\x9f\x61\x76\x32\xc7\xbe\x11\x9e\x4e\x6d\xa8\x5d\x33\xea\x22\xb9\x66\x9f\x3b\x28\xc3\x51\x52\x50\x76\xc9\x69\x20\xc7\x17\x1d\xd3\x1e\x6d\x58\x98\xad\x0d\xdc\x28\x68\x80\x56\x9a\x27\x58\x5b\x35\x81\x52\x7c\x52\xc9\xa9\x04\x6b\x42\x5d\x97\xc2\xf0\xa3\xe8\xee\x2c\x59\x15\x82\xc2\x24\x6b\x8f\x75\x18\x5b\x85\xd9\x3a\x9b\x64\x8a\x7d\x84\x95\x3f\xa3\x98\x5b\xee\x18\x6e\x9f\xbc\x39\x89\x25\xea\xcb\xc4\x01\xda\xad\x90\x2d\xbc\xd4\x29\xda\xd2\x1c\xc9\xfb\xf1\x87\x64\x17\x01\xce\x98\x4d\x60\x19\x6e\xa5\xe3\xcd\xc1\xf3\x9e\xed\x8a\xcb\xb7\x07\xde\x60\xb0\x42\x22\x6f\xd7\xab\xf9\x27\x9f\x3f\x2d\xb0\x5f\xee\x75\x1d\xbe\xe2\xf8\xab\x2d\xe0\x00\xf6\x0b\x71\xaf\x20\x47\x69\x53\x09\x3a\x77\xcb\x75\x56\x1f\x01\x00\x00\xff\xff\x82\x4f\xdf\x4f\x55\x03\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemSdnReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemSdnReaderYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-sdn-reader.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemSdnReaderYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemSdnReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-sdn-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8e\xbd\x4e\x04\x31\x0c\x84\xfb\x3c\x85\x75\xfd\x1e\xa2\x43\x69\x29\xe8\x29\xe8\xbd\xc9\x68\xcf\xba\x6c\x12\xd9\xce\x21\x78\x7a\x74\xcb\x22\x81\xf8\xa9\xa8\xf2\x69\x94\xcf\x33\xdc\xe5\x09\x6a\xd2\x6a\x24\x9d\x39\x1d\x79\xf8\xa9\xa9\xbc\xb2\x4b\xab\xc7\xf3\x9d\x1d\xa5\xdd\x5c\x6e\xc3\x59\x6a\x8e\x74\x5f\x86\x39\xf4\xb1\x15\x84\x15\xce\x99\x9d\x63\x20\x2a\x3c\xa3\xd8\x95\xe8\x8f\x33\xbc\x2c\x8a\x85\x1d\x93\xb7\x89\xf3\x2a\x35\xd2\xc1\x75\xe0\x10\x88\x2a\xaf\x88\x64\x2f\xe6\x58\xa3\x41\x2f\x92\x30\x25\x76\x2e\x6d\x89\xdf\xcd\xa0\xa3\xc0\x62\x98\x88\xbb\x3c\x68\x1b\x7d\xab\x9f\x68\x57\x77\x73\xaf\x0e\x44\x0a\x6b\x43\x13\xbe\x7e\x93\x6a\xce\x35\xc1\x3e\x87\xb3\xd4\x2c\x75\xb9\x66\x17\xe8\xbc\x1b\x49\xc1\x8e\x0d\x47\xcf\x1f\x98\x51\xb0\xe3\x02\xdf\xde\x22\xf6\x0e\xcf\xec\xe9\xb4\x51\xdf\xe8\x87\xad\xee\xd7\xa2\x5f\x57\xf6\x96\xbb\xc2\xe0\xff\xb4\xe5\x2d\x00\x00\xff\xff\x99\xd3\x2e\xf1\xef\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToAdminYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-service-catalog-aggregate-to-admin.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToAdminYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-service-catalog-aggregate-to-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToEditYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8e\xbd\x4e\x04\x31\x0c\x84\xfb\x3c\x85\x75\xfd\x1e\xa2\x43\x69\x29\xe8\x29\xe8\xbd\xc9\x68\xcf\xba\x5c\x12\xd9\xce\x21\x78\x7a\xb4\xcb\x22\x81\xf8\xa9\xa8\xf2\x69\x94\xcf\x33\xdc\xe5\x09\x6a\xd2\x6a\x24\x9d\x39\x1d\x79\xf8\xa9\xa9\xbc\xb2\x4b\xab\xc7\xf3\x9d\x1d\xa5\xdd\x5c\x6f\xc3\x59\x6a\x8e\x74\x5f\x86\x39\xf4\xb1\x15\x84\x0b\x9c\x33\x3b\xc7\x40\x54\x78\x46\xb1\x95\xe8\x8f\x33\xbc\x2c\x8a\x85\x1d\x93\xb7\x09\x59\x3c\xd2\xc1\x75\xe0\x10\x88\x2a\x5f\x10\xc9\x5e\xcc\x71\x89\x06\xbd\x4a\xc2\x94\xd8\xb9\xb4\x25\x7e\x13\x83\x8e\x02\x8b\x61\x22\xee\xf2\xa0\x6d\xf4\xad\x7c\xa2\xdd\xdc\xc5\xbd\x38\x10\x29\xac\x0d\x4d\xf8\xfa\x4d\xaa\x39\xd7\x04\xfb\x1c\xce\x52\xb3\xd4\x65\xcd\xae\xd0\x79\x37\x92\x82\x1d\x1b\x8e\x9e\x3f\x30\xa3\x60\xc7\x05\xbe\xbd\x45\xec\x1d\x9e\xd9\xd3\x69\xa3\xbe\xd1\x0f\x5b\xdd\xd7\xa2\x5f\x57\xf6\x96\xbb\xc2\xe0\xff\xb4\xe5\x2d\x00\x00\xff\xff\x01\xa2\x4e\x5b\xed\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToEditYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToEditYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-service-catalog-aggregate-to-edit.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToEditYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToEditYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-service-catalog-aggregate-to-edit.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToViewYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\xb1\x4e\x04\x31\x0c\x44\xfb\x7c\x85\x75\x7d\x16\xd1\xa1\xb4\x14\xf4\x14\xf4\xde\xec\x28\x67\x5d\x36\x59\xd9\xce\x9e\xe0\xeb\xd1\x1d\x5b\x80\x90\xae\xf2\x68\xe4\x37\x8f\x37\xf9\x80\x9a\xf4\x96\x48\x67\xce\x13\x0f\x3f\x77\x95\x2f\x76\xe9\x6d\xba\xbc\xd8\x24\xfd\x69\x7f\x0e\x17\x69\x4b\xa2\xd7\x3a\xcc\xa1\xef\xbd\x22\xac\x70\x5e\xd8\x39\x05\xa2\xca\x33\xaa\xdd\x12\x3d\x98\xe1\x52\x14\x85\x1d\xd1\x7b\xdc\x05\xd7\x44\x27\xd7\x81\x53\x20\x6a\xbc\x22\x91\x7d\x9a\x63\x4d\x06\xdd\x25\x23\x66\x76\xae\xbd\xa4\x7f\x60\xd0\x51\x61\x29\x44\xe2\x4d\xde\xb4\x8f\xed\x2e\x8f\x74\x90\x07\x78\x88\x03\x91\xc2\xfa\xd0\x8c\xbf\x6f\xd2\xcc\xb9\x65\xd8\xef\x72\x96\xb6\x48\x2b\xb7\x6e\x87\xce\x07\x51\xe0\xf7\x5b\xc5\x7e\xc2\x95\x3d\x9f\xc3\x77\x00\x00\x00\xff\xff\x2e\x49\x85\x6b\x40\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToViewYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToViewYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-service-catalog-aggregate-to-view.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToViewYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToViewYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-service-catalog-aggregate-to-view.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemStatefulsetControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x4e\xc3\x50\x0c\x85\xe1\xfd\x3e\x85\xd5\xbd\x41\x6c\xe8\xae\xbc\x01\x03\xbb\xdb\xb8\xea\x55\x1d\x3b\xb2\x8f\x91\xc2\xd3\xa3\x84\x05\xa4\x8e\x1e\xfe\xcf\x87\xd7\xf1\x29\x91\xc3\xad\x53\x5c\xf8\x3a\x71\xe1\xee\x31\xbe\x19\xc3\x6d\x7a\xbc\xe5\x34\xfc\xe5\xeb\xb5\x3d\x86\xcd\x9d\xde\xb5\x12\x12\x1f\xae\xd2\x16\x01\xcf\x0c\xee\x8d\x88\xcd\x1c\x47\x92\xfb\x49\xf4\x9f\xf1\x55\x2c\xef\xe3\x86\x1d\xcb\x2d\x21\xcb\xd9\x4d\xb7\x4e\x27\x44\xc9\xe9\x48\x9e\xbd\xaf\x8b\x84\x09\xe4\x58\xc1\x05\xaf\x75\x66\xc8\x9f\xce\x78\x91\x4e\xbf\x66\x4f\x30\xe4\x56\x9a\x82\xf3\xd5\x0d\xe1\xaa\x12\x2d\x4a\x25\x3b\x59\xa9\xb6\x9f\x00\x00\x00\xff\xff\xda\xc1\x0e\x28\xf1\x00\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemStatefulsetControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemStatefulsetControllerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-statefulset-controller.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemStatefulsetControllerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemStatefulsetControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-statefulset-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemVolumeSchedulerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xbf\x6e\xf3\x30\x0c\xc4\x77\x3f\x85\x90\xdd\xf9\xf0\x6d\x85\xd6\x0e\xdd\x3b\x74\xa7\xed\x4b\x2c\x44\x16\x05\xfe\x71\x91\x3e\x7d\x61\xd9\x43\x83\x14\xe8\xe4\x33\xa9\xbb\x1f\x29\x51\x4d\x1f\x10\x4d\x5c\x62\x90\x81\xc6\x33\xb9\xcd\x2c\xe9\x8b\x2c\x71\x39\xdf\x5e\xf4\x9c\xf8\xdf\xfa\xbf\xbb\xa5\x32\xc5\xf0\x9a\x5d\x0d\xf2\xce\x19\xdd\x02\xa3\x89\x8c\x62\x17\x02\x95\xc2\xd6\x2c\xba\xfd\x86\xf0\x18\xc3\x15\x45\xe7\x74\xb1\x2d\x4c\xef\x6a\x58\x7a\x2e\xf9\x1e\xc3\xc9\xc4\x71\x6a\x96\xdf\xf0\x3e\x40\x0a\x0c\x6d\x0a\x72\x63\xaf\x13\x19\x7e\xf8\x32\x0d\xc8\x07\xf4\xf1\xf8\xc0\x6c\x6a\x42\xb5\xa6\x72\xdd\xb7\xeb\x27\x5c\xc8\xb3\x69\x17\x42\xa1\x05\x31\xec\xc3\xc4\x95\xb3\x2f\xe8\x75\x9c\x31\x79\x86\x74\xe2\x19\x1a\xbb\x3e\x50\x4d\x6f\xc2\x5e\x1b\xa2\x0f\xa7\x8d\x29\x50\x76\x19\x71\xd4\xea\x76\x81\x6a\x28\xb6\xc7\x6c\xe9\x2b\x64\x38\xda\x57\x58\xfb\xe6\xa4\xbb\xa8\x64\xe3\xdc\xd4\xbe\x4d\x93\x9f\xad\xf8\xc4\x53\x63\xa1\x2b\x8e\x87\x78\x66\x1f\xfd\x31\x93\xea\x9f\xe0\x9d\xf1\x1d\x00\x00\xff\xff\x29\x55\xb2\xcd\xf3\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemVolumeSchedulerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemVolumeSchedulerYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-volume-scheduler.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemVolumeSchedulerYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemVolumeSchedulerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-volume-scheduler.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoSystemWebhookYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xbd\x6e\xc3\x30\x0c\x84\x77\x3d\x05\xe1\x3d\x0e\xba\x15\x5a\x3b\x74\xef\xd0\x9d\xb6\x2f\xb1\x60\x5b\x34\xf8\x93\x22\x7d\xfa\x22\xaa\x87\x06\xe8\x44\x12\xb8\xfb\xf8\xf1\x5e\x3e\xa1\x56\xa4\x66\xd2\x81\xc7\x9e\xc3\x67\xd1\xf2\xcd\x5e\xa4\xf6\xcb\xab\xf5\x45\xce\xb7\x97\xb4\x94\x3a\x65\x7a\x5b\xc3\x1c\xfa\x21\x2b\xd2\x06\xe7\x89\x9d\x73\x22\xe2\x5a\xc5\x5b\xc5\x1e\x27\xd1\x33\x46\x76\x54\x9b\xcb\xc5\x1f\x30\xbb\x9b\x63\x3b\x49\x5d\xef\x99\x3a\xd7\x40\xd7\x2a\xff\xbd\x8f\x01\x5a\xe1\x68\x16\x1c\x2e\xb1\x4f\xec\xf8\xd3\xab\xbc\x21\xd3\x2f\x33\x7f\x61\x98\x45\x96\xa4\xb1\xc2\x72\x3a\x11\xef\xe5\x5d\x25\xf6\x66\x75\xa2\xae\x6b\x63\x88\xb2\x4e\x4f\x52\x89\x48\x61\x12\x3a\xe2\x88\xb6\xcc\x28\xf5\x52\xae\x76\x3e\xb8\x96\x88\x6e\xd0\xe1\x88\x8c\x0a\x76\xb4\xf5\x0a\x4f\x3f\x01\x00\x00\xff\xff\xe7\xd0\x73\xf3\x4b\x01\x00\x00")

func clusterroleRbacAuthorizationK8sIoSystemWebhookYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoSystemWebhookYaml,
		"ClusterRole.rbac.authorization.k8s.io/system-webhook.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoSystemWebhookYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoSystemWebhookYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/system-webhook.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterroleRbacAuthorizationK8sIoViewYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x3d\x73\xf3\x36\x0c\xde\xf5\x2b\x78\xd9\x6d\x5f\xb7\x9e\xb7\x5e\x87\x2e\x9d\xde\xf6\xba\x43\x24\x22\x21\xa6\x08\x96\x04\xed\xa6\xbf\xfe\x3d\x52\x94\xad\x58\x76\x9c\x53\x72\xf1\x62\x11\x04\x01\x3c\x0f\xf1\x41\xe8\xba\x80\x1d\x08\xb1\xfb\x91\x2c\xee\x1b\xa5\xb4\x4d\x51\x30\xfc\x60\x8b\x7f\xa1\x45\x2d\x1c\x62\x96\x6f\xd4\x00\xa2\xfb\x3f\xa1\x45\x5b\x04\xf9\x17\x5a\xd0\x5b\x48\xd2\x73\xa0\xff\x8b\x99\xed\xe1\xd7\xb8\x25\xde\x4d\x96\x71\x23\xbc\x39\x12\x9e\xf6\xea\x49\x42\xc2\xa7\x06\x3c\xfd\x83\x21\x12\xbb\xfd\x3b\xe7\x8f\xbf\x34\x07\x72\x66\xaf\x7e\xbf\xc4\xd3\x0c\x28\x60\x40\x20\xbb\x07\xe7\x58\xca\x91\x1a\x0d\x7b\x74\xb1\xa7\x67\xc9\xc7\x0d\x46\x1d\xc8\x4b\xf1\xf2\x9b\x4a\x11\x83\x3a\xf5\xac\x34\x38\x95\xa3\x51\x6d\x12\xe5\x58\x14\x1a\x12\x05\xee\x55\x05\x8c\x9c\x82\xc6\xa8\x4e\x24\x3d\xb9\x8a\x50\x7a\x54\x3e\xf0\x0b\x6a\xd9\xaa\xbf\x7b\x7c\x2d\x26\xf2\xc9\x62\x26\xa2\x0e\x28\x51\x71\x50\x03\x0e\x2d\x86\xd8\x93\xdf\x36\xf7\xb8\x49\x2d\x06\x87\x82\x23\x45\x49\x38\x79\x03\x82\x67\x6e\x94\xb2\x33\x7e\xdf\xaa\xb7\xcc\x12\x25\x80\xf7\xe4\xba\x91\xba\x8d\xc1\x67\x48\x56\x62\xa3\x94\x83\x01\xf7\x25\xa8\x26\x24\x8b\x71\xdf\x6c\x14\x78\xfa\x23\x70\xf2\xf5\x02\x9f\xb2\x83\x33\xce\x51\xa6\xd9\x3d\x53\x37\x80\x8f\x65\x89\xce\x78\x26\x27\xe3\xca\xe7\x7b\x8a\x82\x4e\x8e\x6c\xd3\x80\xda\x02\x0d\x75\x8b\xcd\xf8\x11\xd0\x5b\xd2\x05\x9f\x66\x27\x81\xad\xc5\xf0\xde\xd6\x2e\x6a\xb0\x58\x14\x22\x86\x23\x69\x04\xad\x39\x4d\x3e\xab\x2c\x2f\x8e\x18\xda\x1a\x66\x87\x52\xfe\x2d\xc5\xf1\xe3\x94\x93\xf1\x63\x10\x5b\x72\x86\x5c\x57\x01\x1e\x71\xf2\x64\x69\x20\x09\xe0\x3a\x1c\xd7\x99\xc1\xe8\x41\x63\xdc\x45\x01\x49\x17\xa0\x3b\xcb\xdd\x65\x31\xdb\xbc\x87\x70\xae\x31\xc6\xf2\x6f\x62\x81\x5b\xa2\x8b\xf2\x17\xc1\xbd\xc0\x58\x67\x13\x7c\xc9\x85\x2b\xab\x06\x70\x60\x17\xb1\x72\x67\xd0\x5b\x7e\x1d\xce\x5c\xce\xd6\xb3\xfb\xad\xf4\x9c\x4f\xcd\xd6\xf3\x2c\x10\x10\x7c\x4e\xf6\xac\x36\x17\x9c\xf5\xd6\x20\x49\xc2\xf9\x38\xb9\x6e\x09\xa8\x94\x25\x3b\x01\xeb\xd9\x4c\x9a\x63\xe6\xae\x70\xd5\x16\xf1\xb2\xba\x02\xbb\x17\x6e\x47\x58\xf5\x63\x85\x75\xfc\x4f\xd0\xe5\x8e\xf9\x55\x17\x43\xae\x0b\x18\xe3\x94\xf8\x28\x27\x0e\x07\xcf\x96\x34\xe1\xe2\xaa\xde\xb9\xba\x07\x15\xbe\x02\x6a\x09\xe2\x75\x09\xd3\xb3\x31\x14\x43\x2a\x2d\xbd\x4d\xa6\x1b\x03\x5b\xe1\xa1\xa2\x25\xd7\xd5\x59\x73\xa3\x84\x16\x84\xac\xad\xcd\x8d\x6a\x13\x59\xb3\x9d\x0f\xa7\x1b\x1d\x2a\xeb\x8c\x9d\x38\x2e\x04\xbb\x13\xb6\x3d\xf3\x61\xb6\xf3\x4d\x11\x4d\x7d\x6f\x4d\x3d\x7c\xc0\xc7\x0b\xba\x03\xb9\x2b\x2c\x65\x80\xdd\x8b\x3c\xb7\xa6\x07\x46\x2f\xf9\x3e\xe7\x73\x21\xfd\x4c\x8a\x7e\x22\x98\xf3\x20\xb9\x11\xd0\x67\xc7\xc0\x46\xd1\x00\x1d\x3e\x08\xa9\xe8\x44\x09\x08\xc3\xf8\x79\x2d\x1d\xc6\x07\xc6\x42\xbe\x10\x08\x74\xdf\x1a\xee\x97\x50\x34\x3d\xe5\xde\xf7\x5a\xb5\x6e\xb8\xba\x67\xb7\xcc\xf2\x07\x56\xc1\x7b\x4b\x68\xea\x03\x7b\xf1\x30\x58\x0f\x2a\x70\x92\x47\x44\x16\x9d\xef\x72\xf3\x15\x37\x25\x38\x78\x0b\x0f\x1d\xfa\xc0\x3a\x4f\x32\x33\xe9\xc7\x37\xa7\xe7\x4d\x60\x92\x91\x8b\x02\x4e\x5f\x69\x7e\x53\x4f\xb5\xfc\xa9\xaa\xb9\xa6\x7b\x9e\x44\x29\xd6\x7a\x5e\x61\xbc\xbe\xba\x35\x08\x58\xbe\x3f\x18\xab\xda\x5b\x06\xab\x70\xf6\xcc\x7e\x1c\xc0\xcf\x00\x00\x00\xff\xff\xb3\xd3\x32\xf0\x79\x0e\x00\x00")

func clusterroleRbacAuthorizationK8sIoViewYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterroleRbacAuthorizationK8sIoViewYaml,
		"ClusterRole.rbac.authorization.k8s.io/view.yaml",
	)
}

func clusterroleRbacAuthorizationK8sIoViewYaml() (*asset, error) {
	bytes, err := clusterroleRbacAuthorizationK8sIoViewYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRole.rbac.authorization.k8s.io/view.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoAdmin0Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\xb1\x4e\x04\x31\x0c\x44\xfb\x7c\x85\x7f\x20\x0b\x74\x28\x1d\x50\xd0\x1f\x12\xbd\x93\xf5\x71\x66\xb3\x76\x64\x3b\x57\xf0\xf5\x08\xb1\x12\x42\x48\x74\x23\xcd\x9b\x79\x38\xf8\x95\xcc\x59\xa5\x80\x55\x6c\x0b\xce\xb8\xa8\xf1\x07\x06\xab\x2c\xdb\xbd\x2f\xac\x37\xd7\xbb\xb4\xb1\xac\x05\x9e\xfa\xf4\x20\x3b\x69\xa7\x47\x96\x95\xe5\x2d\xed\x14\xb8\x62\x60\x49\x00\x82\x3b\x15\xc0\x75\x67\xc9\xb7\xc9\xb4\xd3\x89\xce\x5f\x05\x0e\x7e\x36\x9d\xe3\x1f\x49\x02\xf8\xe3\xf8\x7d\x99\x7c\xd6\x77\x6a\xe1\x25\xe5\x83\x7d\x21\xbb\x72\xa3\x87\xd6\x74\x4a\xfc\xe0\x5e\x8f\xec\x03\x1b\x15\xd0\x41\xe2\x17\x3e\x47\x46\x71\xae\x9d\xb2\x7f\x2f\x73\x35\xdd\xc8\xd2\x67\x00\x00\x00\xff\xff\xf1\x9a\x69\xaf\x08\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoAdmin0YamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoAdmin0Yaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/admin-0.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoAdmin0Yaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoAdmin0YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/admin-0.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\xbd\x6e\xc3\x30\x0c\x84\x77\x3d\x05\x5f\xc0\x2e\xba\x15\xda\xda\x0e\xd9\x1d\x20\x3b\x2d\xd1\x0e\x63\x99\x14\x24\xca\x43\x9e\x3e\x08\xf2\x33\x24\x40\xc6\x3b\x7c\x77\x1f\x66\x3e\x50\xa9\xac\xe2\xa1\x8c\x18\x7a\x6c\x76\xd4\xc2\x67\x34\x56\xe9\x97\x9f\xda\xb3\x7e\x6d\xdf\x6e\x61\x89\x1e\xfe\x53\xab\x46\x65\xd0\x44\x7f\x2c\x91\x65\x76\x2b\x19\x46\x34\xf4\x0e\x40\x70\x25\x0f\x18\x57\x16\x57\x34\xd1\x40\xd3\xb5\xc6\xcc\xbb\xa2\x2d\x7f\x50\x38\x80\x37\xc3\xcb\x61\x6d\xe3\x89\x82\x55\xef\xba\x3b\xbb\xa7\xb2\x71\xa0\xdf\x10\xb4\x89\x3d\xf1\x48\x13\xb6\xf4\xc8\x35\x63\x20\x0f\x4b\x1b\xa9\xab\xb7\x41\x17\xd0\x30\xe9\xec\x2e\x01\x00\x00\xff\xff\x42\x69\x1c\x35\xfe\x00\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoAdminYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/admin.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoAdminYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoAsbAccessYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x4e\x04\x31\x0c\x45\xfb\x9c\x22\x17\xc8\x20\x3a\x94\x0e\x28\xe8\x17\x89\xde\xf1\x78\x59\x33\x19\x3b\xb2\x9d\x29\x38\x3d\x42\x20\x24\x04\xda\xf6\x7f\xbd\xf7\x60\xf0\x0b\x99\xb3\x4a\xcd\xd6\x00\x17\x98\x71\x51\xe3\x77\x08\x56\x59\xb6\x3b\x5f\x58\x6f\x8e\xdb\xb4\xb1\xac\x35\x3f\xf6\xe9\x41\x76\xd2\x4e\x0f\x2c\x2b\xcb\x6b\xda\x29\x60\x85\x80\x9a\x72\x16\xd8\xa9\x66\xf0\x56\x00\x91\xdc\x93\x69\xa7\x13\x9d\x3f\x3f\x18\xfc\x64\x3a\xc7\x95\x4e\xca\xf9\x4f\xe6\x3f\xab\xcf\xf6\x46\x18\x5e\x53\xf9\x06\x9e\xc9\x0e\x46\xba\x47\xd4\x29\xf1\x8b\xc1\xce\xf4\x33\xf9\x00\xa4\x9a\x75\x90\xf8\x85\xcf\x51\x40\x9c\x5b\xa7\xe2\x5f\x82\xd2\x4c\x37\xb2\xf4\x11\x00\x00\xff\xff\x06\x1c\x96\x1e\x17\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoAsbAccessYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoAsbAccessYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/asb-access.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoAsbAccessYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoAsbAccessYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/asb-access.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoAsbAuthYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x4e\x04\x31\x0c\x45\xfb\x9c\xc2\x17\xc8\x20\x3a\x94\x0e\x28\xe8\x17\x89\xde\xc9\x78\x59\x33\x59\x3b\xb2\x9d\x2d\x38\x3d\x5a\x31\x05\xd2\x48\x74\x96\xfc\xdf\x7b\x38\xf8\x83\xcc\x59\xa5\x80\x55\x6c\x0b\xce\xb8\xa8\xf1\x37\x06\xab\x2c\xdb\x93\x2f\xac\x0f\xb7\xc7\xb4\xb1\xac\x05\x5e\xfb\xf4\x20\x3b\x69\xa7\x17\x96\x95\xe5\x33\x5d\x29\x70\xc5\xc0\x92\x00\x04\xaf\x54\x00\xbd\xe6\xbb\x26\x99\x76\x3a\xd1\xf9\xfe\xc1\xc1\x6f\xa6\x73\xfc\x53\x49\x00\x87\xc8\xd1\xe9\xb3\x7e\x51\x0b\x2f\x29\xef\xf3\x77\xb2\x1b\x37\x7a\x6e\x4d\xa7\xc4\x5f\x62\xbf\x7d\x60\xa3\x02\x3a\x48\xfc\xc2\xe7\xc8\x28\xce\xb5\x53\xf6\x5f\x32\x57\xd3\x8d\x2c\xfd\x04\x00\x00\xff\xff\x2d\x68\x72\x31\x0c\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoAsbAuthYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoAsbAuthYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/asb-auth.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoAsbAuthYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoAsbAuthYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/asb-auth.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoAuthDelegatorOpenshiftTemplateServiceBrokerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcf\xc1\x4a\x04\x31\x0c\xc6\xf1\x7b\x9f\xa2\x2f\xd0\x11\x6f\xd2\x9b\x7a\xf0\xbe\x82\xf7\x4c\xe7\xdb\xdd\x38\x9d\xa6\x24\xe9\x82\x3e\xbd\x0c\x2e\x8a\x08\x7a\x0d\xe4\x9f\x5f\xa8\xf3\x0b\xd4\x58\x5a\x8e\x3a\x53\x99\x68\xf8\x59\x94\xdf\xc9\x59\xda\xb4\xde\xd9\xc4\x72\x73\xb9\x0d\x2b\xb7\x25\xc7\xc7\x3a\xcc\xa1\x07\xa9\x78\xe0\xb6\x70\x3b\x85\x0d\x4e\x0b\x39\xe5\x10\x63\xa3\x0d\x39\xee\x89\xb4\xa0\xe2\x44\x2e\x9a\xa4\xa3\xd9\x99\x8f\x9e\x1c\x5b\xaf\xe4\x48\x06\xbd\x70\x41\x9a\x55\x56\x68\x50\xa9\x38\xe0\xb8\x17\xa8\xf3\x93\xca\xe8\x7f\x68\x42\x8c\xbf\x30\x5f\xb7\xed\xcd\x1c\x5b\xfe\x49\x08\x36\xe6\x57\x14\xb7\x1c\xd2\x75\xf7\xf9\x53\x70\x5f\x8a\x8c\xe6\xdf\xf4\xce\xbb\x0d\x7a\x9d\x58\xa7\x82\x1c\xff\x7f\xe1\x23\x00\x00\xff\xff\x3b\x12\x35\xfa\x48\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoAuthDelegatorOpenshiftTemplateServiceBrokerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoAuthDelegatorOpenshiftTemplateServiceBrokerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/auth-delegator-openshift-template-service-broker.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoAuthDelegatorOpenshiftTemplateServiceBrokerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoAuthDelegatorOpenshiftTemplateServiceBrokerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/auth-delegator-openshift-template-service-broker.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoAzureClusterReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x31\x4e\xc6\x30\x0c\x46\xf7\x9c\xc2\x17\x48\x11\x1b\xca\x06\x0c\xec\x3f\x12\xbb\x9b\xb8\xd4\xb4\xb5\x23\xc7\xe9\xd0\xd3\x23\x28\x62\x00\xa9\xb3\x9f\xdf\xfb\xb0\xf2\x1b\x59\x63\x95\x04\x36\x62\x1e\xb0\xfb\xac\xc6\x07\x3a\xab\x0c\xcb\x43\x1b\x58\xef\xf6\xfb\xb0\xb0\x94\x04\xcf\x6b\x6f\x4e\x76\xd3\x95\x9e\x58\x0a\xcb\x7b\xd8\xc8\xb1\xa0\x63\x0a\x00\x82\x1b\x25\xc0\xa3\x1b\xc5\x7c\xa2\xd1\x08\x0b\x59\x30\x5d\xe9\x46\xd3\x17\x85\x95\x5f\x4c\x7b\xbd\x28\x06\x80\x7f\xc1\x5f\xff\x1f\x73\xeb\xe3\x07\x65\x6f\x29\xc4\x9f\xa7\x57\xb2\x9d\x33\x3d\xe6\xac\x5d\xfc\x7a\xd7\x79\x6c\x15\x33\x25\xd0\x4a\xd2\x66\x9e\x3c\x7e\xb3\xe1\x33\x00\x00\xff\xff\xee\xf9\x42\x8f\x1e\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoAzureClusterReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoAzureClusterReaderYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/azure-cluster-reader.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoAzureClusterReaderYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoAzureClusterReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/azure-cluster-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoBasicUsersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xbd\x4e\xc3\x50\x0c\x05\xe0\xdd\x4f\x61\x75\x6f\x10\x1b\xba\x23\x0c\xec\x1d\xd8\x9d\x5c\x03\xa6\x89\x1d\xf9\x07\x09\x9e\x1e\xf5\x0e\x2c\x54\x48\x1d\x2d\xf9\x7c\xe7\xd0\x2e\x2f\xec\x21\xa6\x0d\x7d\xa6\x65\xa2\xca\x77\x73\xf9\xa6\x14\xd3\xe9\xfc\x10\x93\xd8\xdd\xe7\x3d\x9c\x45\x7b\xc3\xa7\xb5\x22\xd9\x4f\xb6\xf2\xa3\x68\x17\x7d\x83\x8d\x93\x3a\x25\x35\x40\x24\x55\xcb\x91\x8c\xcb\x89\x57\xc9\x9a\xd9\x95\x93\x87\x4c\x95\x56\x7b\xa7\xe4\x86\x87\xf4\xe2\x03\x20\x2a\x6d\xdc\x70\xa6\x90\xe5\x58\xc1\x1e\xe0\xb6\xf2\x89\x5f\x47\xc7\x2e\xcf\x6e\xb5\xff\xb3\x17\x10\xff\xcc\xbd\xc2\x42\xd4\xfc\xc1\x4b\x46\x83\xe3\x4d\xec\x78\xfc\x05\xe3\x2b\x92\xb7\x76\x49\xb0\xa6\x2c\x94\xdc\xe1\x27\x00\x00\xff\xff\x3d\x7e\xb8\x13\x58\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoBasicUsersYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoBasicUsersYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/basic-users.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoBasicUsersYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoBasicUsersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/basic-users.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoBootstrapAutoapproverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x31\x4e\xc5\x30\x0c\x80\xe1\x3d\xa7\xc8\x05\x52\xc4\x86\x3c\xc2\xc0\xfe\x24\xd8\xdd\xc4\xe5\x99\xb6\x76\x64\x3b\x95\xe0\xf4\x88\x85\x01\x54\xa4\xb7\xff\xd2\xf7\x63\xe7\x57\x32\x67\x15\xc8\x36\x63\x9d\x70\xc4\x55\x8d\x3f\x31\x58\x65\x5a\x1f\x7c\x62\xbd\x3b\xee\xd3\xca\xd2\x20\x3f\x6d\xc3\x83\xec\xa2\x1b\x3d\xb2\x34\x96\xb7\xb4\x53\x60\xc3\x40\x48\x39\x0b\xee\x04\x79\x56\x0d\x0f\xc3\x5e\x70\x84\x62\xef\xa6\x07\x59\x32\xdd\xe8\x42\xcb\x77\x87\x9d\x9f\x4d\x47\xff\xc7\x4c\x39\xff\x21\x7f\x04\xff\xf0\xa0\x1d\x44\x1b\x95\x13\xcd\xc7\xfc\x4e\x35\x1c\x52\xb9\x89\x7b\x71\xb2\xdf\x8e\x93\x1d\x5c\x09\x6b\xd5\x21\x01\xda\x49\xfc\xca\x4b\x14\x96\xc5\x10\x4e\x0e\xbe\x02\x00\x00\xff\xff\x1a\x17\x4c\x2b\x5b\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoBootstrapAutoapproverYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoBootstrapAutoapproverYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/bootstrap-autoapprover.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoBootstrapAutoapproverYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoBootstrapAutoapproverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/bootstrap-autoapprover.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoClusterAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\x3f\x4b\x04\x41\x0c\x05\xf0\x7e\x3e\x45\xb8\x7e\x57\xec\x64\x4a\x2d\xec\xaf\xb0\xcf\xee\xe4\xce\x78\x33\xc9\x30\x49\x04\xfd\xf4\x72\x7b\x22\x88\x7f\xe0\xca\xc0\xcb\x8f\xf7\xb0\xf3\x13\x0d\x63\x95\x0c\x63\xc1\x75\xc6\xf0\x67\x1d\xfc\x8e\xce\x2a\xf3\xe9\xce\x66\xd6\x9b\xd7\xdb\x74\x62\x29\x19\x1e\x6a\x98\xd3\xd8\x6b\xa5\x7b\x96\xc2\x72\x4c\x8d\x1c\x0b\x3a\xe6\x04\x80\x22\xea\xdb\xa7\x9d\x4f\xf8\x95\x8c\x85\x86\x90\xd3\x26\x63\xb8\x46\x2f\xe8\x94\x61\xe7\x23\x68\x97\x00\x2a\x2e\x54\x3f\x85\xef\xf1\x45\xd5\xcd\x07\xf6\xce\x72\xbc\x34\x9e\x0a\x1d\x30\xaa\x5b\x02\x10\x6c\x94\x61\xbd\x94\x9c\xb0\x34\x96\x34\xb4\xd2\x9e\x0e\x5b\xbd\xce\x8f\x43\xa3\xff\x33\x35\x01\xfc\x58\xfa\x07\x6c\xb1\xbc\xd0\xea\x96\xd3\x74\x95\xbc\x05\xbf\x4c\x7b\x33\xa7\x96\x1b\x9e\x65\x4b\x1f\x01\x00\x00\xff\xff\x37\xcb\xbd\x03\x90\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoClusterAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoClusterAdminYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/cluster-admin.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoClusterAdminYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoClusterAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/cluster-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoClusterAdminsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xbf\x4a\x04\x41\x0c\xc7\xf1\x3e\x4f\x11\xae\xbf\x15\x3b\x99\x52\x0b\xfb\x03\xed\xb3\x3b\x51\xe3\xed\x26\x4b\xfe\x08\xfa\xf4\xe2\x1e\x58\x9c\x87\x70\xe5\xc0\xe4\xf3\xfb\xd2\x2a\xcf\xec\x21\xa6\x0d\x7d\xa4\x69\xa0\xca\x37\x73\xf9\xa2\x14\xd3\xe1\x78\x17\x83\xd8\xcd\xc7\x2d\x1c\x45\x7b\xc3\x87\xb9\x22\xd9\x0f\x36\xf3\xbd\x68\x17\x7d\x85\x85\x93\x3a\x25\x35\x40\x24\x55\xcb\xed\x32\x7e\x9e\x78\x91\xac\x91\x5d\x39\x79\x93\xa9\xd2\x6a\xed\x94\xdc\x70\x97\x5e\xbc\x03\x44\xa5\x85\x1b\x4e\xa7\xad\x3d\xf5\x45\x34\xc0\x6d\xe6\x03\xbf\x6c\x33\xab\x3c\xba\xd5\xfa\x4f\x32\x20\xfe\x29\xbe\x2c\x43\xd4\xf8\xce\x53\x46\x83\xfd\x55\xf2\xf6\xf1\xd7\x8c\xcf\x48\x5e\xda\x59\xf4\x75\xe2\x53\xb0\x9f\x83\xa7\xc6\xef\x00\x00\x00\xff\xff\xd4\x01\x79\x1d\xa7\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoClusterAdminsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoClusterAdminsYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/cluster-admins.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoClusterAdminsYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoClusterAdminsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/cluster-admins.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoClusterReader0Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x4e\x03\x41\x0c\x45\xfb\x39\xc5\x5c\x60\x17\xe8\xd0\x74\x40\x41\x1f\x24\x7a\xc7\xfb\xc3\x9a\xec\xda\x23\xdb\x93\x82\xd3\x23\x44\x44\x83\xa0\xfd\x7a\xef\x3f\xea\xf2\x0a\x0f\x31\x6d\xd5\x8f\xc4\x33\x8d\x5c\xcd\xe5\x83\x52\x4c\xe7\xf3\x7d\xcc\x62\x37\x97\xbb\x72\x16\x5d\x5a\x7d\xda\x46\x24\xfc\x60\x1b\x1e\x45\x17\xd1\xb7\xb2\x23\x69\xa1\xa4\x56\x6a\x55\xda\xd1\x2a\x7f\x43\x93\x83\x16\xf8\x74\x5b\xdc\x36\x1c\x70\xfa\x22\xa8\xcb\xb3\xdb\xe8\xff\xd4\x4a\xad\xbf\x62\x7f\x7c\x97\x18\xc7\x77\x70\x46\x2b\xd3\x55\x7a\x81\x5f\x84\xf1\xc0\x6c\x43\xf3\xc7\xeb\x6e\x3b\x72\xc5\x88\xeb\x14\x9d\x18\xad\x5a\x87\xc6\x2a\xa7\x9c\x76\xa4\x0b\x47\xf9\x0c\x00\x00\xff\xff\x1b\x4d\x98\x31\x12\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoClusterReader0YamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoClusterReader0Yaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/cluster-reader-0.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoClusterReader0Yaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoClusterReader0YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/cluster-reader-0.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoClusterReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\xb1\x8e\xc2\x30\x10\x44\x7b\x7f\xc5\xfe\x40\x72\xba\xee\xe4\xee\xa0\xa0\x0f\x12\xfd\xc6\xde\xc0\x12\xc7\x6b\xad\xd7\x29\xf8\x7a\x84\x88\x68\x10\x94\xa3\x99\x37\x0f\x0b\x9f\x48\x2b\x4b\xf6\xa0\x23\x86\x1e\x9b\x5d\x44\xf9\x86\xc6\x92\xfb\xf9\xaf\xf6\x2c\x3f\xeb\xaf\x9b\x39\x47\x0f\xfb\xd4\xaa\x91\x0e\x92\x68\xc7\x39\x72\x3e\xbb\x85\x0c\x23\x1a\x7a\x07\x90\x71\x21\x0f\xe1\x39\xea\x94\x30\x92\x3a\x95\x44\x03\x4d\x8f\x1e\x0b\x1f\x54\x5a\xf9\xe2\x72\x00\x6f\xaa\x4f\xcf\xb5\x8d\x57\x0a\x56\xbd\xeb\x36\xe8\x48\xba\x72\xa0\xff\x10\xa4\x65\x7b\x71\x2a\xcd\x48\xb7\x58\x0b\x06\xf2\x10\x69\xc2\x96\xcc\xdd\x03\x00\x00\xff\xff\x01\x2a\xc4\x06\x02\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoClusterReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoClusterReaderYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/cluster-reader.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoClusterReaderYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoClusterReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/cluster-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoClusterReadersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xbb\x4e\x04\x31\x0c\x85\xe1\x3e\x4f\x61\x6d\xbf\x83\xe8\x50\x4a\x28\xe8\xb7\xa0\xf7\x4c\x0e\x60\x76\xc6\x1e\xd9\x0e\x12\x3c\x3d\x22\x48\x14\xdc\x24\xca\x48\xf1\x77\x7e\xde\xe5\x0e\x1e\x62\x5a\xc9\x67\x5e\x26\xee\xf9\x68\x2e\xaf\x9c\x62\x3a\x9d\xaf\x62\x12\xbb\x78\xbe\x2c\x67\xd1\x56\xe9\x66\xed\x91\xf0\x93\xad\xb8\x16\x6d\xa2\x0f\x65\x43\x72\xe3\xe4\x5a\x88\x58\xd5\x72\x5c\xc6\xfb\x93\x7e\x24\xfb\x0c\x57\x24\x86\xcc\x3d\xad\xef\x8d\x13\x95\x0e\xe9\x1d\x87\x42\xa4\xbc\xa1\xd2\xf2\xb1\x75\x74\x70\x83\x47\x71\x5b\x71\xc2\xfd\xd8\xd9\xe5\xd6\xad\xef\x7f\x34\x17\xa2\x6f\xc9\xbf\xd0\x25\xfa\xfc\x84\x25\xa3\x96\xe3\xbf\xe8\xf1\xf1\x13\x8d\x97\x48\x6c\xf5\x6b\xf6\x5b\x00\x00\x00\xff\xff\x20\x70\xec\x10\x62\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoClusterReadersYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoClusterReadersYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/cluster-readers.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoClusterReadersYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoClusterReadersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/cluster-readers.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoClusterStatusBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xce\x3d\x4b\xc4\x40\x10\xc6\xf1\x7e\x3f\xc5\x70\x7d\x22\x76\xb2\xa5\x16\xf6\x57\xd8\x4f\xb2\xa3\x8e\x97\xcc\x84\x79\x11\xf4\xd3\x4b\x56\x11\xc4\x17\x10\xae\x5c\xd8\xf9\xfd\x1f\xdc\xf8\x8e\xcc\x59\xa5\x82\x4d\x38\x8f\x98\xf1\xa8\xc6\xaf\x18\xac\x32\x9e\xae\x7c\x64\xbd\x78\xbe\x2c\x27\x96\x56\xe1\x66\x49\x0f\xb2\xa3\x2e\x74\xcd\xd2\x58\x1e\xca\x4a\x81\x0d\x03\x6b\x01\x40\x11\x8d\x7e\xe9\xfb\x13\x7e\x24\x73\x22\x13\x0a\xea\x32\x66\x68\x6e\x0d\x83\x2a\x1c\xc2\x92\x0e\x05\x40\x70\xa5\x0a\xf3\x7b\x6b\xf0\xc0\x48\x1f\xa6\x8f\x9e\xe9\x42\x47\xba\xef\xb9\x8d\x6f\x4d\x73\xfb\x63\x7a\x01\xf8\xb6\xfc\x97\x42\xf1\x9c\x9e\x68\x0e\xaf\x65\xf8\x17\xdd\x3f\x7e\xa2\xfe\xe2\x41\x6b\xdd\x2f\x48\x82\x67\x0c\x6a\xe7\x00\x53\xbe\x92\x6f\x01\x00\x00\xff\xff\xc2\x9f\xc4\x05\xba\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoClusterStatusBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoClusterStatusBindingYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/cluster-status-binding.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoClusterStatusBindingYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoClusterStatusBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/cluster-status-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoCustomerAdminClusterGroupYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcd\x31\x0e\xc2\x30\x0c\x85\xe1\xdd\xa7\xc8\x05\x52\xc4\x86\x32\xc2\xc0\xde\x81\xdd\x4d\x4c\x31\x6d\xe2\x2a\x76\x18\x38\x3d\x2a\x8c\x08\x10\xab\xf5\xfb\x7d\xb8\xf0\x89\xaa\xb2\x94\xe0\xea\x80\xb1\xc3\x66\x17\xa9\x7c\x47\x63\x29\xdd\xb4\xd3\x8e\x65\x73\xdb\xc2\xc4\x25\x05\x77\x98\x9b\x1a\xd5\x5e\x66\xda\x73\x49\x5c\x46\xc8\x64\x98\xd0\x30\x80\x73\x05\x33\x05\x17\x9b\x9a\x64\xaa\x1e\x53\xe6\xe2\xe3\xeb\xc7\x8f\x55\xda\x02\x55\x66\xea\xe9\xbc\xd6\xb8\xf0\x71\xbd\x7d\x91\xc1\xb9\x37\xf8\x87\x03\xda\x86\x2b\x45\xd3\x00\xfe\x2f\xe2\x19\x7e\x18\x57\x78\x04\x00\x00\xff\xff\x35\xad\xe8\x6f\x29\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoCustomerAdminClusterGroupYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoCustomerAdminClusterGroupYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-cluster-group.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoCustomerAdminClusterGroupYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoCustomerAdminClusterGroupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-cluster-group.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\xb1\x4e\x03\x41\x0c\x44\xfb\xfd\x0a\xff\xc0\x1d\xa2\x43\xdb\x01\x05\x7d\x90\xe8\x1d\x9f\x8f\x98\xec\xda\x2b\xdb\x9b\x82\xaf\x47\x88\x40\x83\x04\xed\xe8\xcd\xbc\xc1\x21\x2f\xec\x21\xa6\x15\xfc\x88\xb4\xe2\xcc\x93\xb9\xbc\x63\x8a\xe9\x7a\xbe\x8b\x55\xec\xe6\x72\x5b\xce\xa2\x5b\x85\xc7\x36\x23\xd9\x0f\xd6\xf8\x41\x74\x13\x7d\x2d\x9d\x13\x37\x4c\xac\x05\x40\xb1\x73\x05\x9a\x91\xd6\xd9\x17\xdc\xba\xe8\x42\xa6\xe9\xd6\xda\x77\x50\xdc\x1a\x1f\x78\xff\x2c\xe0\x90\x27\xb7\x39\xfe\x90\x17\x80\x5f\xee\x1f\xd5\xd7\x60\xcc\xe3\x1b\x53\x46\x2d\xcb\x95\x7d\x66\xbf\x08\xf1\x3d\x91\x4d\xcd\xff\x9f\x5d\x89\x18\x48\x5c\xc1\x06\x6b\x9c\x64\xcf\x45\x74\x77\x2c\x1f\x01\x00\x00\xff\xff\xa9\x86\x42\x21\x25\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerAdminYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-controller-admin.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerAdminYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-controller-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerProjectAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x31\x4e\x04\x31\x0c\x45\xfb\x9c\x22\x17\xc8\x20\x3a\x94\x0e\x28\xe8\x17\x89\xde\xeb\xf1\xb0\x66\x13\x3b\xb2\x9d\x2d\x38\x3d\x1a\x31\x1d\x02\x2a\x17\xfe\x4f\xef\xc1\xe0\x37\x32\x67\x95\x9a\xed\x0c\xb8\xc0\x8c\x8b\x1a\x7f\x42\xb0\xca\x72\x7d\xf0\x85\xf5\xee\x76\x9f\xae\x2c\x6b\xcd\xcf\x6d\x7a\x90\x9d\xb4\xd1\x13\xcb\xca\xf2\x9e\x3a\x05\xac\x10\x50\x53\xce\x02\x9d\x6a\xc6\xe9\xa1\x9d\xac\xc0\xda\x59\x0a\xaa\x84\x69\x6b\x64\x65\x98\x7e\x10\xc6\xf7\x23\x99\x36\x3a\xd1\xb6\x83\x30\xf8\xc5\x74\x8e\x3f\x22\x52\xce\x3f\x1a\x7e\x53\x1e\x9e\xe4\xf3\xbc\x5f\xaf\xa9\x1c\xf0\x2b\xd9\x8d\x91\x1e\x11\x75\x4a\xfc\x9f\x7c\x2c\x7c\x00\x52\xcd\x3a\x48\xfc\xc2\x5b\x14\x96\xcd\x20\x7d\x05\x00\x00\xff\xff\x3f\x74\xb5\xb9\x3e\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerProjectAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerProjectAdminYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-controller-project-admin.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerProjectAdminYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerProjectAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-controller-project-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerSaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\x4e\x04\x31\x0c\x85\xe1\x3e\xa7\xf0\x05\x32\x88\x0e\xa5\x03\x0a\xfa\x45\xa2\xf7\x7a\x3c\xac\xd9\x8c\x1d\xd9\xce\x14\x9c\x1e\x21\xe8\x90\x80\xfe\x7f\xef\xc3\x21\x2f\xec\x21\xa6\x0d\xfc\x8c\xb4\xe0\xcc\x8b\xb9\xbc\x63\x8a\xe9\x72\xbd\x8b\x45\xec\xe6\xb8\x2d\x57\xd1\xb5\xc1\x63\x9f\x91\xec\x27\xeb\xfc\x20\xba\x8a\xbe\x96\x9d\x13\x57\x4c\x6c\x05\x40\x71\xe7\x06\x34\x23\x6d\x67\xaf\xb8\xee\xa2\x95\x4c\xd3\xad\x77\xf6\x1a\x58\xdc\x3a\x9f\x78\xfb\xac\x71\xc8\x93\xdb\x1c\xbf\xc8\x05\xe0\x07\xfc\xb7\x53\x62\x9e\xdf\x98\x32\x5a\xa9\xdf\xfb\x67\xf6\x43\x88\xef\x89\x6c\x6a\xfe\xe3\xe2\xab\x88\x81\xc4\x0d\x6c\xb0\xc6\x45\xb6\xac\xa2\x9b\x63\xf9\x08\x00\x00\xff\xff\xc3\x5d\x2f\x65\x36\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerSaYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerSaYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-controller-sa.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerSaYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerSaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-controller-sa.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoKubeStateMetricsClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x4e\xc4\x40\x0c\x45\xfb\x39\x85\x2f\x90\x20\x3a\x34\x1d\x50\xd0\x07\x89\xde\x99\x38\xc4\x24\xb1\x47\xb6\x27\x05\xa7\x5f\xad\x76\xb5\xcd\x4a\xa9\xdf\x7f\xff\x61\xe5\x1f\x32\x67\x95\x0c\x36\x62\xe9\xb1\xc5\xa2\xc6\xff\x18\xac\xd2\xaf\x6f\xde\xb3\xbe\x1c\xaf\x69\x65\x99\x32\x7c\x6e\xcd\x83\x6c\xd0\x8d\x3e\x58\x26\x96\xdf\xb4\x53\xe0\x84\x81\x39\x01\x08\xee\x94\x61\x6d\x23\x75\x1e\x18\xd4\xed\x14\xc6\xc5\x93\xe9\x46\x03\xcd\xd7\x0d\x56\xfe\x32\x6d\xf5\xa4\x97\x00\x9e\x72\x67\xef\xde\xc6\x3f\x2a\xe1\x39\x75\x77\xf1\x9b\xec\xe0\x42\xef\xa5\x68\x93\x38\x73\x6f\xc8\x2b\x16\xca\xa0\x95\xc4\x17\x9e\xe3\x81\x2f\x01\x00\x00\xff\xff\xb8\xed\x5f\x61\x20\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoKubeStateMetricsClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoKubeStateMetricsClusterRoleBindingYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/kube-state-metrics-cluster-role-binding.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoKubeStateMetricsClusterRoleBindingYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoKubeStateMetricsClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/kube-state-metrics-cluster-role-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoRouterMetricsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x4e\x03\x41\x0c\x45\xfb\x39\x85\x2f\x90\x45\x74\x68\x3a\xa0\xa0\x0f\x12\xbd\x33\xfb\xc3\x9a\xec\xda\x23\xdb\x93\x82\xd3\x23\xa4\x68\x1b\x44\xda\xff\xf5\xde\xe3\x2e\x1f\xf0\x10\xd3\x4a\x7e\xe2\x36\xf1\xc8\xc5\x5c\xbe\x39\xc5\x74\xba\x3c\xc5\x24\xf6\x70\x7d\x2c\x17\xd1\xb9\xd2\xeb\x3a\x22\xe1\x47\x5b\xf1\x22\x3a\x8b\x7e\x96\x0d\xc9\x33\x27\xd7\x42\xa4\xbc\xa1\x92\xdb\x48\xf8\x61\x43\xba\xb4\x28\x6e\x2b\x8e\x38\xff\xfe\xdc\xe5\xcd\x6d\xf4\x3b\xad\x42\xf4\x27\xf5\x9f\x39\xc6\xe9\x0b\x2d\xa3\x96\xc3\x0d\x7a\x87\x5f\xa5\xe1\xb9\x35\x1b\x9a\x3b\xd7\xdd\x36\xe4\x82\x11\xb7\x29\x3a\x37\x54\xb2\x0e\x8d\x45\xce\xb9\x2b\x7f\x02\x00\x00\xff\xff\xc2\x73\x04\x05\x10\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoRouterMetricsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoRouterMetricsYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/router-metrics.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoRouterMetricsYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoRouterMetricsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/router-metrics.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoRouterRouterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xb1\x4a\x04\x41\x0c\x86\xfb\x3c\x45\x5e\xe0\x56\xec\x64\x3a\xb5\xb0\x3f\xc1\x3e\x37\x93\xd3\xb8\xb3\x93\x21\xc9\x2c\xe8\xd3\xcb\xe2\xb2\x85\xc2\x35\x09\x81\xfc\xdf\xf7\x53\x97\x37\x36\x17\x6d\x09\xed\x42\x79\xa2\x11\x1f\x6a\xf2\x4d\x21\xda\xa6\xf9\xc1\x27\xd1\xbb\xf5\x1e\x66\x69\x25\xe1\x73\x1d\x1e\x6c\x67\xad\xfc\x24\xad\x48\x7b\x87\x85\x83\x0a\x05\x25\x40\x6c\xb4\x70\x42\xd3\x11\x6c\xa7\x63\x55\x86\x6d\x9c\xf9\xba\xfd\x50\x97\x17\xd3\xd1\x6f\xf8\x00\xf1\x9f\xee\xa0\xfb\x97\x07\x2f\xe9\x97\x0e\x3e\x2e\x9f\x9c\xc3\x13\x9c\xf6\xcc\x2b\xdb\x2a\x99\x1f\x73\xd6\xd1\xe2\x4f\xa9\xfd\xf4\x4e\x99\x13\x16\xbe\xd2\xa8\x01\x3f\x01\x00\x00\xff\xff\xbe\xfd\xa4\xf9\x05\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoRouterRouterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoRouterRouterRoleYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/router-router-role.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoRouterRouterRoleYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoRouterRouterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/router-router-role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSdnClusterReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xb1\x4a\x04\x41\x0c\x40\xfb\xf9\x8a\xfc\xc0\xac\xd8\xc9\x74\x6a\x61\x7f\x82\x7d\x6e\x26\xe7\xc5\xdd\x4d\x86\x24\xb3\x85\x5f\x2f\x8b\x8b\x88\xc2\x75\x81\xbc\xbc\x17\xec\xfc\x46\xe6\xac\x52\xc0\xce\x58\x27\x1c\x71\x55\xe3\x4f\x0c\x56\x99\xe6\x07\x9f\x58\xef\xb6\xfb\x34\xb3\xb4\x02\xcf\xcb\xf0\x20\x3b\xe9\x42\x4f\x2c\x8d\xe5\x3d\xad\x14\xd8\x30\xb0\x24\x00\xc1\x95\x0a\x78\x93\x5c\xbf\xc1\x6c\x84\x8d\x2c\x99\x2e\x74\xa2\xcb\xce\x60\xe7\x17\xd3\xd1\x6f\xf4\x12\xc0\xbf\xdc\x8f\xfd\x8f\xd9\xc7\xf9\x83\x6a\x78\x49\xf9\x38\x7a\x25\xdb\xb8\xd2\x63\xad\x3a\x24\x7e\x7f\x75\xcc\xde\xb1\x52\x01\xed\x24\x7e\xe5\x4b\xe4\x7d\xf5\x15\x00\x00\xff\xff\xaa\x02\xb7\x96\x09\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSdnClusterReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSdnClusterReaderYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/sdn-cluster-reader.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSdnClusterReaderYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSdnClusterReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/sdn-cluster-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSdnReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xc1\x4a\xc4\x40\x0c\x86\xef\xf3\x14\x79\x81\x56\xbc\xc9\xdc\xd4\x83\xf7\x15\xbc\x67\x67\xb2\x36\xb6\x4d\x86\x24\x53\xd0\xa7\x97\x42\xc1\x82\xb0\xb7\xc0\x47\xbe\xef\xc7\xc6\x1f\x64\xce\x2a\x19\xec\x8a\x65\xc4\x1e\x93\x1a\xff\x60\xb0\xca\x38\x3f\xf9\xc8\xfa\xb0\x3d\xa6\x99\xa5\x66\x78\x5d\xba\x07\xd9\x45\x17\x7a\x61\xa9\x2c\x9f\x69\xa5\xc0\x8a\x81\x39\x01\x08\xae\x94\xc1\xab\x0c\x46\x58\xc9\x92\xe9\x42\x17\xba\xed\x0c\x1b\xbf\x99\xf6\x76\xa7\x93\x00\xfe\x65\xfe\xac\xdf\x1e\xb4\xe6\x93\xdc\xfb\xf5\x8b\x4a\x78\x4e\xc3\xf1\xf7\x4e\xb6\x71\xa1\xe7\x52\xb4\x4b\x9c\x07\x1d\xb7\x37\x2c\x94\x41\x1b\x89\x4f\x7c\x8b\x61\x47\xbf\x01\x00\x00\xff\xff\x44\x90\x58\xfb\x04\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSdnReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSdnReaderYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/sdn-reader.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSdnReaderYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSdnReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/sdn-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSelfAccessReviewersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xce\x31\x4b\x04\x41\x0c\x05\xe0\x7e\x7e\x45\xb8\x7e\x57\xec\x64\x4a\x2d\xec\xaf\xb0\xcf\xce\xbc\xd3\x78\xbb\x99\x25\xc9\x9c\xe8\xaf\x97\xdb\x46\x44\x59\x10\x2c\x03\x79\xdf\x7b\xbc\xca\x13\xcc\xa5\x69\x26\x9b\xb8\x8c\xdc\xe3\xa5\x99\x7c\x70\x48\xd3\xf1\x7c\xe7\xa3\xb4\x9b\xcb\x6d\x3a\x8b\xd6\x4c\x0f\x73\xf7\x80\x1d\xdb\x8c\x7b\xd1\x2a\xfa\x9c\x16\x04\x57\x0e\xce\x89\x88\x55\x5b\x6c\x49\xbf\x9e\xf4\x2b\xd9\x27\x98\x22\xb0\xc9\xdc\xa3\xf5\xb5\x72\x20\xd3\x21\xac\xe3\x90\x88\x94\x17\x64\x72\xcc\xa7\x81\x4b\x81\xfb\x60\xb8\x08\xde\x60\x9e\xac\xcd\x38\xe2\xb4\xb5\xad\xf2\x68\xad\xaf\x3b\xcb\x13\xd1\x8f\xe1\xbb\x05\xc9\xfb\xf4\x8a\x12\x9e\xd3\xf0\xa7\x82\xed\xf1\x8b\x7e\xf7\xc0\x92\xaf\x09\x68\x48\xe1\x40\xfd\x0f\xb0\xeb\x77\xf2\x33\x00\x00\xff\xff\xa8\xe0\xff\xa0\xbf\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSelfAccessReviewersYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSelfAccessReviewersYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/self-access-reviewers.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSelfAccessReviewersYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSelfAccessReviewersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/self-access-reviewers.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSelfProvisionersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xbd\x4e\xc4\x40\x0c\x04\xe0\x7e\x9f\xc2\xba\xfe\x82\xe8\xd0\x96\x50\xd0\x5f\x41\xef\x24\x73\x60\x2e\xb1\x57\xb6\xf7\x24\x78\x7a\x94\x34\x14\xfc\x48\x57\x8e\xe4\xf9\x3c\xdc\xe4\x05\x1e\x62\x5a\xc9\x47\x9e\x06\xee\xf9\x66\x2e\x9f\x9c\x62\x3a\x5c\x1e\x62\x10\xbb\xbb\xde\x97\x8b\xe8\x5c\xe9\x69\xe9\x91\xf0\x93\x2d\x78\x14\x9d\x45\x5f\xcb\x8a\xe4\x99\x93\x6b\x21\x62\x55\xcb\xbd\x19\x5b\xa4\x5f\xc9\x3e\xc2\x15\x89\x5d\xe6\x9e\xd6\xdb\xcc\x89\x4a\x87\xf4\x8e\x43\x21\x52\x5e\x51\x29\xb0\x9c\x8f\xcd\xed\x2a\xdb\x3c\x78\x14\xb7\x05\x27\x9c\xf7\x4f\x4d\x9e\xdd\x7a\xfb\x67\x75\x21\xfa\x31\xfa\x4f\xbc\x44\x1f\xdf\x31\x65\xd4\x72\xbc\x09\xdf\x0f\xbf\xd9\x8f\x48\xac\x75\x6b\x40\x53\x26\x4e\xcc\xd5\xb6\x58\xbe\x02\x00\x00\xff\xff\xe1\x11\x81\x95\x6a\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSelfProvisionersYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSelfProvisionersYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/self-provisioners.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSelfProvisionersYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSelfProvisionersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/self-provisioners.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8d\xbd\x4e\x03\x31\x0c\x80\xf7\x3c\x85\x5f\x20\x87\xd8\x50\x36\x60\x60\x2f\x12\xbb\xe3\x33\xc5\x5c\x6a\x47\x8e\xd3\x81\xa7\x47\xa8\x37\x81\x84\x6e\xff\x7e\xb0\xcb\x1b\xfb\x10\xd3\x02\x5e\x91\x16\x9c\xf1\x61\x2e\x5f\x18\x62\xba\x6c\x0f\x63\x11\xbb\xbb\xde\xa7\x4d\x74\x2d\xf0\xdc\xe6\x08\xf6\x93\x35\x7e\x12\x5d\x45\xcf\xe9\xc2\x81\x2b\x06\x96\x04\xa0\x78\xe1\x02\x83\xfd\x2a\xc4\x99\x30\xb0\xd9\x39\x93\x69\xb8\xb5\xc6\x9e\xeb\x2e\xb9\x35\x3e\xf1\xfb\x8f\x83\x5d\x5e\xdc\x66\xff\xe7\x9f\x00\xfe\xec\x0f\xdc\xd2\x98\xf5\x93\x29\x46\x49\x79\x0f\xbc\xde\xe0\x47\x22\x9b\x1a\x47\x1a\x37\x64\x74\x24\x2e\xb0\xcd\xca\xf9\x17\x9c\xbe\x03\x00\x00\xff\xff\x58\xc3\x44\x94\x43\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerBindingYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-controller-binding.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerBindingYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-controller-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerNamespaceViewerBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x31\x4e\x04\x31\x0c\x45\xfb\x9c\xc2\x17\xc8\x20\x3a\x94\x0e\x28\xe8\x17\x89\xde\xe3\x31\x8b\x99\xac\x1d\x39\xce\x20\x71\x7a\xb4\x30\xa2\x58\x24\xb4\xfd\xfb\xef\x3f\x6c\xf2\xc2\xde\xc5\xb4\x80\xcf\x48\x13\x8e\x78\x33\x97\x4f\x0c\x31\x9d\xd6\xbb\x3e\x89\xdd\x6c\xb7\x69\x15\x5d\x0a\x3c\xd6\xd1\x83\xfd\x60\x95\x1f\x44\x17\xd1\x63\x3a\x71\xe0\x82\x81\x25\x01\x28\x9e\xb8\x40\x67\xdf\x84\x38\x13\x06\x56\x3b\x66\x32\x0d\xb7\x5a\xd9\xf3\x19\xe8\x0d\x89\xf3\x26\xfc\xc1\x9e\xe7\xdd\xe2\x56\xf9\xc0\xaf\x67\x09\x36\x79\x72\x1b\xed\x9f\xa0\x04\xf0\xa7\xe7\xf7\xfe\xf2\x23\xf5\x31\xbf\x33\x45\x2f\x29\xef\xb3\xe7\x9f\xc2\x7b\x22\x1b\x1a\x57\x84\xef\xc8\xb7\xb6\xc0\x3a\x66\xce\x17\x70\xfa\x0a\x00\x00\xff\xff\x24\xf6\x3d\x2f\x4a\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerNamespaceViewerBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerNamespaceViewerBindingYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-controller-namespace-viewer-binding.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerNamespaceViewerBindingYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerNamespaceViewerBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-controller-namespace-viewer-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoServiceCatalogNamespaceViewerBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xb1\x4e\xc5\x30\x0c\x45\xf7\x7c\x85\x7f\x20\x45\x6c\x28\x1b\x30\xb0\x17\x89\xdd\x49\x4d\x31\x4d\xe3\xc8\x71\x8a\xc4\xd7\xa3\x42\xc5\xd0\xa7\xf7\xd6\xab\x7b\xee\x3d\x58\xf9\x8d\xb4\xb1\x94\x00\x1a\x31\x0d\xd8\xed\x43\x94\xbf\xd1\x58\xca\xb0\x3c\xb4\x81\xe5\x6e\xbb\x77\x0b\x97\x29\xc0\x73\xee\xcd\x48\x47\xc9\xf4\xc4\x65\xe2\x32\xbb\x95\x0c\x27\x34\x0c\x0e\xa0\xe0\x4a\x01\x1a\xe9\xc6\x89\x7c\x42\xc3\x2c\xb3\xdf\xd3\x56\x31\x91\xdf\x98\xbe\x48\x7d\x3c\x50\x95\x4c\x23\xbd\xef\x24\x56\x7e\x51\xe9\xf5\x86\x85\x03\xb8\x90\xf8\xff\x3c\x7f\xb8\xd6\xe3\x27\x25\x6b\xc1\xf9\x03\x7b\xfd\xd3\x7a\x4c\x49\x7a\xb1\xab\xb6\x58\x79\x8f\x48\x8f\xc6\xef\x6a\x80\xa5\x47\xf2\xa7\xae\xfb\x09\x00\x00\xff\xff\x6d\x8e\x8b\xa3\x3e\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoServiceCatalogNamespaceViewerBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoServiceCatalogNamespaceViewerBindingYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-namespace-viewer-binding.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoServiceCatalogNamespaceViewerBindingYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoServiceCatalogNamespaceViewerBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-namespace-viewer-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoServiceCatalogSarCreatorBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xb1\x4e\x03\x31\x0c\x86\xf7\x3c\x85\x5f\x20\x87\xd8\x50\x36\x60\x60\x2f\x12\xbb\xe3\x33\xc5\x5c\x1a\x47\xb6\xd3\x81\xa7\x47\x15\x27\x55\x02\xd1\xd5\xfa\x3f\x7f\x1f\x0e\x79\x63\x73\xd1\x5e\xc0\x2a\xd2\x82\x33\x3e\xd4\xe4\x0b\x43\xb4\x2f\xdb\x83\x2f\xa2\x77\xe7\xfb\xb4\x49\x5f\x0b\x3c\xb7\xe9\xc1\x76\xd0\xc6\x4f\xd2\x57\xe9\xc7\x74\xe2\xc0\x15\x03\x4b\x02\xe8\x78\xe2\x02\xce\x76\x16\xe2\x4c\x18\xd8\xf4\x98\x1d\x2d\x93\x31\x86\x5a\xae\x3b\x65\xda\xf8\xc0\xef\x17\x08\x87\xbc\x98\xce\x71\x23\x20\x01\xfc\xf1\x5f\x75\xd7\xf7\xc9\x67\xfd\x64\x0a\x2f\x29\xef\xc4\xeb\x4f\xcc\x23\x91\xce\x1e\xff\x36\xe2\x90\xcb\x89\x6d\x5f\xf8\x40\xe2\x02\xdb\xac\x9c\x7f\x6d\xd3\x77\x00\x00\x00\xff\xff\x78\x61\x5a\x48\x34\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoServiceCatalogSarCreatorBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoServiceCatalogSarCreatorBindingYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-sar-creator-binding.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoServiceCatalogSarCreatorBindingYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoServiceCatalogSarCreatorBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-sar-creator-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoServicecatalogServiceclassViewerBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x42\x17\x90\x8b\x6e\x85\xc6\x76\xe8\xee\xa1\x3b\x2d\xb1\x0e\x63\x59\x34\x48\xca\x41\x72\xfa\xc0\x41\x82\x0c\x01\x02\x78\xfc\xc0\x7f\x78\x0f\x16\xfa\x43\x51\xe2\x1a\xbd\x0c\x90\x3a\x68\x76\x60\xa1\x0b\x18\x71\xed\xa6\x2f\xed\x88\x3f\xd6\x4f\x37\x51\xcd\xd1\xff\x94\xa6\x86\xd2\x73\xc1\x6f\xaa\x99\xea\xe8\x66\x34\xc8\x60\x10\x9d\xf7\x15\x66\x8c\x5e\x51\x56\x4a\x98\xc0\xa0\xf0\x18\x1e\xb3\x80\x6a\x58\x09\x4f\x28\x61\xb8\xc3\xc2\x05\x7b\xfc\xdf\x58\x58\xe8\x57\xb8\x2d\x6f\x3a\x9c\xf7\x2f\x19\x3b\xac\x4e\xdb\x70\xc4\x64\x1a\x5d\xd8\xa5\xbb\x1d\x9f\xa2\xb3\x1a\xce\x71\x23\xb0\x1a\x25\x30\xcc\xee\x1a\x00\x00\xff\xff\x25\x6f\x9c\x07\x48\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoServicecatalogServiceclassViewerBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoServicecatalogServiceclassViewerBindingYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/servicecatalog-serviceclass-viewer-binding.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoServicecatalogServiceclassViewerBindingYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoServicecatalogServiceclassViewerBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/servicecatalog-serviceclass-viewer-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemAuthDelegatorBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\xc1\x4a\xc5\x30\x10\x45\xf7\xf9\x8a\xfc\x40\x2a\xee\x24\x3b\x75\xe1\xfe\x09\xee\xa7\xc9\xb5\x8e\x4d\x33\x61\x32\x79\xa0\x5f\x2f\xc5\x82\xe0\x83\x6e\x2f\xe7\xdc\x43\x8d\xdf\xa0\x9d\xa5\x46\xaf\x33\xa5\x89\x86\x7d\x88\xf2\x37\x19\x4b\x9d\xd6\x87\x3e\xb1\xdc\x5d\xef\xdd\xca\x35\x47\xff\x5c\x46\x37\xe8\x45\x0a\x9e\xb8\x66\xae\x8b\xdb\x60\x94\xc9\x28\x3a\xef\x2b\x6d\x88\xbe\x7f\x75\xc3\x16\xf7\xa7\x90\x51\xb0\x90\x89\x86\xf9\xe0\x55\x0a\x2e\x78\xdf\x71\x6a\xfc\xa2\x32\xda\x49\xda\x79\x7f\x53\x3e\x0f\xb9\x3e\xe6\x4f\x24\xeb\xd1\x85\xc3\x7d\x85\x5e\x39\xe1\x31\x25\x19\xd5\xfe\xf4\xdf\x39\x24\x32\x2a\xb2\x04\x6a\xbc\x4f\xd0\x83\xe8\x8d\x12\xa2\x5f\xc7\x8c\xf0\x8f\x75\x3f\x01\x00\x00\xff\xff\x1c\xdf\x70\xb0\x38\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemAuthDelegatorBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemAuthDelegatorBindingYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-auth-delegator-binding.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemAuthDelegatorBindingYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemAuthDelegatorBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-auth-delegator-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemAwsCloudProviderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\xab\xfb\x1d\x62\x43\xd9\x80\x81\xbd\x48\xec\xbe\xc4\x2d\xa6\xb9\x38\xb2\x9d\x43\xf0\xeb\x11\x77\x15\x12\xa2\x42\x1d\xa3\xf8\x7d\xef\x7d\xd8\xf8\x85\xd4\x58\x6a\x04\x9d\x30\x8d\xd8\xfd\x55\x94\x3f\xd1\x59\xea\x78\xba\xb3\x91\xe5\x66\xb9\x0d\x27\xae\x39\xc2\x63\xe9\xe6\xa4\x7b\x29\xf4\xc0\x35\x73\x3d\x86\x99\x1c\x33\x3a\xc6\x00\x80\xb5\x8a\xaf\x49\xfb\x7e\xc2\x45\x64\x9f\x48\x2b\x39\xad\x64\xec\x2e\xbd\x65\x74\x8a\xb0\x73\xed\xb4\x0b\x00\x05\x27\x2a\x67\xc2\xef\xf3\x49\xc4\xcd\x15\x5b\xe3\x7a\xdc\x16\x0f\x99\x0e\xd8\x8b\x5b\x00\xa8\x38\x53\x04\xfb\x30\xa7\x39\xe2\xbb\x0d\xa9\x48\xcf\x43\x53\x59\x38\x93\x06\x95\x42\x7b\x3a\xac\x53\x1b\x3f\xa9\xf4\xf6\x8f\x76\x00\xf8\x63\x7d\x45\x89\xf5\xe9\x8d\x92\x5b\x0c\xc3\x39\xff\x4c\xba\x70\xa2\xfb\x94\xa4\x57\xff\x41\x5c\xc8\x6e\x5f\xd6\x30\x51\x5c\xd5\x87\xad\x27\x7c\x05\x00\x00\xff\xff\x84\xa5\x2d\x26\xa8\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemAwsCloudProviderYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemAwsCloudProviderYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-aws-cloud-provider.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemAwsCloudProviderYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemAwsCloudProviderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-aws-cloud-provider.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemBasicUserYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xcf\x31\x4b\x04\x41\x0c\x05\xe0\x7e\x7e\x45\xb8\x7e\x57\xec\x64\x4a\x2d\xec\xaf\xb0\xcf\xec\xe4\xce\x78\xb3\xc9\x30\x49\x04\xfd\xf5\x72\xab\xcd\xa9\x1c\x08\x96\x81\xbc\x8f\xf7\xb0\xf3\x13\x0d\x63\x95\x0c\xa3\xe0\x32\x63\xf8\xb3\x0e\x7e\x47\x67\x95\xf9\x74\x67\x33\xeb\xcd\xeb\x6d\x3a\xb1\xd4\x0c\x0f\x2d\xcc\x69\xec\xb5\xd1\x3d\x4b\x65\x39\xa6\x95\x1c\x2b\x3a\xe6\x04\x80\x22\xea\x5b\xd2\xce\x27\xfc\x4a\x46\xa1\x21\xe4\xb4\xc9\x18\xae\xd1\x2b\x3a\x65\xd8\xf9\x08\xda\x25\x80\x86\x85\xda\x97\x70\xf9\x5e\x54\xdd\x7c\x60\xef\x2c\xc7\xcf\xc6\x53\xa5\x03\x46\x73\x4b\x00\x82\x2b\x65\xb0\x37\x73\x5a\x73\x41\xe3\x65\x0a\xa3\x91\x86\x36\xda\xd3\x61\xab\xd8\xf9\x71\x68\xf4\x2b\x73\x13\xc0\x8f\xb5\x57\x70\x8b\xf2\x42\x8b\x5b\x4e\xd3\x9f\xf4\xed\xf1\xbb\x7b\x4e\x90\x38\x2f\xe8\x54\xff\x03\x0c\xb9\x24\x3f\x02\x00\x00\xff\xff\xcb\xa6\x3c\x94\xf1\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemBasicUserYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemBasicUserYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-basic-user.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemBasicUserYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemBasicUserYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-basic-user.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyDockerBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xb1\x4e\xc4\x40\x0c\x04\xd0\x7e\xbf\xc2\xba\x3e\x41\x74\x68\x4b\x28\xe8\xaf\xa0\xf7\x66\x87\xc3\x24\xb1\x23\xaf\x17\xe9\xf8\x7a\x94\x88\x0a\x10\x82\xd2\x92\x67\x9e\x86\x37\x79\x82\x37\x31\xcd\xe4\x85\xa7\x91\x7b\xbc\x98\xcb\x3b\x87\x98\x8e\xf3\x5d\x1b\xc5\x6e\xde\x6e\xd3\x2c\x5a\x33\x3d\x2c\xbd\x05\xfc\x6c\x0b\xee\x45\xab\xe8\x25\xad\x08\xae\x1c\x9c\x13\x11\xab\x5a\x1c\xc9\xb6\x9f\xf4\x63\x65\x2f\x70\x45\xe0\x68\xe6\x1e\xd6\xb7\xca\x81\x4c\xa7\xf0\x8e\x53\x22\x52\x5e\x91\xa9\x5d\x5b\x60\xcd\xa5\xcb\x52\x87\x16\xce\x81\xcb\x75\xa8\x36\xcd\xf0\xa1\x7c\xea\x6e\x0b\xce\x78\x3e\xf0\x4d\x1e\xdd\xfa\xf6\xcb\x90\x44\xf4\x6d\xc7\x9f\xbc\xd4\x7a\x79\xc5\x14\x2d\xa7\xe1\x5f\xd0\xf1\xf8\x95\xd8\x13\xd0\x90\x89\x03\x35\x7d\x04\x00\x00\xff\xff\x9b\x9e\xdd\x25\x83\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyDockerBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyDockerBindingYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-build-strategy-docker-binding.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyDockerBindingYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyDockerBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-build-strategy-docker-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\xab\xfb\x1d\x62\x43\x19\x61\x60\xef\xc0\xee\x5c\x1e\xc5\xbd\x9c\x13\xc5\x0e\x52\xf9\xf5\xa8\x27\x26\x40\x95\x3a\x5a\xf2\x7b\xdf\xfb\xb8\xc9\x1b\xba\x49\xd5\x48\x3d\xf1\x32\xf3\xf0\x8f\xda\xe5\x8b\x5d\xaa\xce\xeb\x93\xcd\x52\x1f\x3e\x1f\xc3\x2a\x9a\x23\xbd\x94\x61\x8e\x7e\xac\x05\xcf\xa2\x59\xf4\x14\x36\x38\x67\x76\x8e\x81\x88\x55\xab\xef\x49\xbb\x9e\xf4\x6f\xe5\x48\xe8\x0a\xc7\xde\xcc\xc3\xeb\x68\x99\x1d\x91\x0e\xde\x07\x0e\x81\x48\x79\x43\x24\xbb\x98\x63\x8b\x69\x48\xc9\x93\x79\x67\xc7\xe9\x32\x9d\xa1\xab\xa8\x35\x69\x28\xa2\x98\xd2\xcf\x8c\x5e\x0b\x8e\x78\xdf\x57\x34\x79\xed\x75\xb4\x1b\x46\x81\xe8\x8f\xd0\x7d\xe0\x60\x23\x9d\xb1\xb8\xc5\x30\xdd\x45\xdc\x1f\x7f\xb3\xae\x09\xa8\xcb\xc2\x8e\x1c\xbe\x03\x00\x00\xff\xff\x55\xcc\xcd\xd9\x95\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineBindingYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-build-strategy-jenkinspipeline-binding.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineBindingYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-build-strategy-jenkinspipeline-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategySourceBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\x3f\x4b\x04\x41\x0c\x05\xf0\x7e\x3e\x45\xb8\x7e\x57\xec\x64\x4a\x2d\xec\xaf\xb0\xcf\xec\xc4\x33\xde\x6e\xb2\xe4\x8f\x70\x7e\x7a\xb9\xc1\x4a\x45\xb4\x0c\xe4\xbd\x1f\x0f\x77\x7e\x22\x73\x56\xa9\x60\x0d\x97\x19\x33\x5e\xd4\xf8\x1d\x83\x55\xe6\xf3\x9d\xcf\xac\x37\x6f\xb7\xe5\xcc\xd2\x2b\x3c\xac\xe9\x41\x76\xd4\x95\xee\x59\x3a\xcb\xa9\x6c\x14\xd8\x31\xb0\x16\x00\x14\xd1\x18\x49\xbf\x9e\xf0\x63\x65\x36\x32\xa1\xa0\xd1\x8c\x19\x9a\x7b\xc7\xa0\x0a\x87\xb0\xa4\x43\x01\x10\xdc\xa8\x82\x5f\x3c\x68\xab\x2d\x79\xed\x93\x87\x61\xd0\xe9\x32\xb9\xa6\x2d\x34\xb5\x4f\xdd\x74\xa5\x23\x3d\x0f\x7c\xe7\x47\xd3\xdc\x7f\x19\x52\x00\xbe\xed\xf8\x93\x57\x3c\xdb\x2b\x2d\xe1\xb5\x4c\xff\x82\xc6\xe3\x57\xe2\x9a\x20\x09\x5e\x30\xa8\x97\x8f\x00\x00\x00\xff\xff\x2a\x95\x90\xd0\x83\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategySourceBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategySourceBindingYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-build-strategy-source-binding.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategySourceBindingYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategySourceBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-build-strategy-source-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x3f\x4f\x03\x31\x0c\xc5\xf7\x7c\x0a\xab\xfb\x1d\x62\x43\xd9\x80\x81\xbd\x48\xec\xbe\xc4\x6d\x43\x73\x76\x64\x3b\x95\xe0\xd3\xa3\xde\x55\x20\xc4\x9f\xa1\x8b\x25\xff\xfb\xbd\xa7\x87\xad\xbc\x90\x5a\x11\x8e\xa0\x13\xa6\x11\xbb\x1f\x44\xcb\x3b\x7a\x11\x1e\x8f\x77\x36\x16\xb9\x39\xdd\x86\x63\xe1\x1c\xe1\xb1\x76\x73\xd2\xad\x54\x7a\x28\x9c\x0b\xef\xc3\x4c\x8e\x19\x1d\x63\x00\x40\x66\xf1\xe5\xd3\xce\x2d\xfc\x8a\xec\x13\x29\x93\xd3\x42\xc6\xee\xd2\x5b\x46\xa7\x08\x1b\xd7\x4e\x9b\x00\x50\x71\xa2\x7a\x21\x7c\x3f\x9f\x44\xdc\x5c\xb1\xb5\xc2\xfb\xd5\xf1\x90\x69\x87\xbd\xba\x05\x00\xc6\x99\x22\xd8\x9b\x39\xcd\x31\x09\xbb\x4a\xad\xa4\x11\xdd\x31\x1d\x32\x9d\xeb\xf0\x35\x0f\x2a\x95\xb6\xb4\x5b\xac\xb7\xf2\xa4\xd2\xdb\x3f\x31\x04\x80\x1f\x29\x5c\x21\x6a\x7d\x7a\xa5\xe4\x16\xc3\x70\xe1\x3d\x93\x9e\x4a\xa2\xfb\x94\xa4\xb3\x7f\x22\xff\x02\xac\x7b\x6b\x98\x28\x2e\xf9\x0c\xab\x78\xf8\x08\x00\x00\xff\xff\x69\xac\xd9\xdc\xcd\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-attachdetach-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-attachdetach-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerCertificateControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x4d\x4b\x34\x41\x0c\x84\xef\xfd\x2b\xc2\xde\x67\x5f\xde\x9b\xf4\x4d\x3d\x78\x5f\xc1\x7b\xa6\x27\xb3\xc6\xed\x49\x9a\x24\xbd\xa0\xbf\x5e\x9c\x59\x14\xf1\x03\x3c\xe6\xa3\x9e\x2a\x0a\x1b\x3f\x90\x39\xab\x64\xb0\x11\xcb\x1e\x7b\x3c\xaa\xf1\x0b\x06\xab\xec\x4f\x57\xbe\x67\xfd\x77\xfe\x9f\x4e\x2c\x53\x86\xdb\xda\x3d\xc8\x0e\x5a\xe9\x86\x65\x62\x39\xa6\x85\x02\x27\x0c\xcc\x09\x00\x45\x34\x56\xa5\xbf\x8d\xf0\x2d\xb2\x8f\x64\x42\x41\x2b\x19\x7b\x68\x6f\x13\x06\x65\xd8\x85\x75\xda\x25\x80\x8a\x23\xd5\x0b\xe1\xf3\xfb\xa8\x1a\x1e\x86\xad\xb1\x1c\xb7\xc4\xc3\x44\x33\xf6\x1a\x9e\x00\x04\x17\xca\xe0\xcf\x1e\xb4\xe4\xa2\x12\xa6\xb5\x92\xe5\x42\x16\x3c\x73\xc1\xa0\xe1\x63\x9d\x4c\x2b\x1d\x68\x5e\x93\x37\xbe\x33\xed\xed\x97\x16\x12\xc0\x97\x12\xfe\xee\xe9\x7d\x7c\xa2\x12\x9e\xd3\x70\xc1\xdd\x93\x9d\xb9\xd0\x75\x29\xda\x25\xde\x89\x3f\xe8\xb7\xb3\x37\x2c\x94\xd7\x72\x86\xcd\x3a\xbd\x06\x00\x00\xff\xff\x89\x47\xe7\xd1\xca\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerCertificateControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerCertificateControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-certificate-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerCertificateControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerCertificateControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-certificate-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xc1\x4a\x03\x41\x0c\x86\xef\xf3\x14\xa1\xf7\xad\x78\x93\xb9\xa9\x07\xef\x15\xbc\x67\x67\xd3\x35\x76\x9a\x0c\x49\xa6\xa0\x4f\x2f\xdd\x2d\x8a\x28\x22\x78\x1c\xe6\xcf\x97\x2f\x3f\x36\x7e\x22\x73\x56\xc9\x60\x23\x96\x2d\xf6\x78\x56\xe3\x37\x0c\x56\xd9\x1e\x6e\x7c\xcb\x7a\x75\xba\x4e\x07\x96\x29\xc3\x7d\xed\x1e\x64\x3b\xad\x74\xc7\x32\xb1\xcc\xe9\x48\x81\x13\x06\xe6\x04\x80\x22\x1a\xcb\xa4\x9f\x9f\xf0\x23\xb2\x8f\x64\x42\x41\x0b\x19\x7b\x68\x6f\x13\x06\x65\xd8\x84\x75\xda\x24\x80\x8a\x23\xd5\x0b\xe1\x6b\x7c\x54\x0d\x0f\xc3\xd6\x58\xe6\xd5\x78\x98\x68\x8f\xbd\x86\x27\x00\xc1\x23\x65\xf0\x57\x0f\x3a\xe6\xa2\x12\xa6\xb5\x92\xe5\xb2\x6a\x9b\x56\x1a\x70\x9e\x8d\xe6\xc5\x65\xf8\x8c\xa4\xf3\xdf\x8e\xf6\xcb\x15\x8d\x1f\x4c\x7b\xfb\xa5\x91\x04\xf0\xad\x90\xff\xed\xf7\x3e\xbe\x50\x09\xcf\x69\xb8\xa0\x1f\xc9\x4e\x5c\xe8\xb6\x14\xed\x12\x1f\xf4\x3f\xb0\xd6\xa8\x37\x2c\x94\x97\x02\x87\x55\x29\xbd\x07\x00\x00\xff\xff\x3d\x0a\xd4\x6c\xee\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-clusterrole-aggregation-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-clusterrole-aggregation-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerCronjobControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x4f\x4b\x43\x41\x0c\xc4\xef\xfb\x29\x42\xef\xaf\xe2\x4d\xf6\xa6\x1e\xbc\x57\xf0\x9e\xdd\x97\xd6\xb4\xdb\x64\x49\xb2\x05\xfd\xf4\xe2\x6b\x51\xc4\x22\x78\xcc\x9f\xf9\xcd\x30\xd8\xf9\x85\xcc\x59\x25\x83\x15\xac\x6b\x1c\xf1\xaa\xc6\xef\x18\xac\xb2\x3e\xdc\xf9\x9a\xf5\xe6\x74\x9b\x0e\x2c\x73\x86\xc7\x36\x3c\xc8\x36\xda\xe8\x81\x65\x66\xd9\xa5\x23\x05\xce\x18\x98\x13\x00\x8a\x68\x2c\x4a\xff\x1c\xe1\x2a\x72\x14\x32\xa1\xa0\x85\x8c\x23\x74\xf4\x19\x83\x32\xac\xc2\x06\xad\x12\x40\xc3\x42\xed\x42\xf8\xf9\x5e\x54\xc3\xc3\xb0\x77\x96\xdd\x39\xf1\x34\xd3\x16\x47\x0b\x4f\x00\x82\x47\xca\xe0\x6f\x1e\x74\xcc\x55\x25\x4c\x5b\x23\xcb\xd5\x54\xf6\x5a\xa6\xef\x55\x32\x6d\xb4\xa1\xed\x92\xba\xf3\x93\xe9\xe8\x7f\x34\x90\x00\x7e\x15\xf0\x3f\x3f\x1f\x65\x4f\x35\x3c\xa7\xe9\x82\x7a\x26\x3b\x71\xa5\xfb\x5a\x75\x48\x7c\xd1\xae\x68\xcf\x27\xef\x58\x29\x2f\x85\x4c\x67\xcb\xf4\x11\x00\x00\xff\xff\xb9\x3e\xeb\x2d\xbe\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerCronjobControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerCronjobControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-cronjob-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerCronjobControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerCronjobControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-cronjob-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xcf\x4a\x73\x41\x0c\xc5\xf7\xf3\x14\xa1\xfb\xdb\x8f\x6f\x27\xb3\x53\x17\xee\x2b\xb8\xcf\x9d\x49\x6b\xec\xdc\x64\x48\x32\x05\x7d\x7a\xf1\xb6\x28\x62\x11\x5c\xe6\xcf\xf9\x9d\xc3\xc1\xce\x4f\x64\xce\x2a\x19\x6c\xc6\xb2\xc5\x11\xcf\x6a\xfc\x86\xc1\x2a\xdb\xe3\x8d\x6f\x59\xff\x9d\xfe\xa7\x23\x4b\xcd\x70\xdf\x86\x07\xd9\x4e\x1b\xdd\xb1\x54\x96\x43\x5a\x28\xb0\x62\x60\x4e\x00\x28\xa2\xb1\x2a\xfd\x63\x84\xab\xc8\x31\x93\x09\x05\xad\x64\x1c\xa1\xa3\x57\x0c\xca\xb0\x09\x1b\xb4\x49\x00\x0d\x67\x6a\x17\xc2\xf7\xf7\x59\x35\x3c\x0c\x7b\x67\x39\x9c\x13\x4f\x95\xf6\x38\x5a\x78\x02\x10\x5c\x28\x83\xbf\x7a\xd0\x92\x8b\x4a\x98\xb6\x46\x96\x2b\xd2\xa2\x32\x39\xc5\xf4\xb5\x4d\xa6\x8d\x76\xb4\x5f\x83\x77\x7e\x30\x1d\xfd\x97\x12\x12\xc0\x8f\x0e\xfe\x6c\xe9\x63\x7e\xa1\x12\x9e\xd3\x74\xa1\x3d\x92\x9d\xb8\xd0\x6d\x29\x3a\x24\x3e\x81\xd7\xe5\xe7\xab\x77\x2c\x94\xd7\x66\xa6\xb3\x71\x7a\x0f\x00\x00\xff\xff\x98\xc5\xbd\xff\xc7\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-daemon-set-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-daemon-set-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerDeploymentControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xcd\x4a\x03\x41\x10\x84\xef\xf3\x14\x4d\xee\x1b\xf1\x26\x73\x53\x0f\xde\x23\x78\xef\x9d\xad\xc4\x31\xb3\xdd\x43\x4f\x4f\x20\x3e\xbd\xb8\x1b\x14\x31\x08\x1e\xfb\xa7\xbe\x2a\x8a\x6b\x7e\x81\xb5\xac\x12\xc9\x46\x4e\x5b\xee\xfe\xaa\x96\xdf\xd9\xb3\xca\xf6\x78\xd7\xb6\x59\x6f\x4e\xb7\xe1\x98\x65\x8a\xf4\x58\x7a\x73\xd8\x4e\x0b\x1e\xb2\x4c\x59\x0e\x61\x86\xf3\xc4\xce\x31\x10\xb1\x88\xfa\xa2\x6c\x9f\x23\x5d\x45\xf6\x11\x26\x70\x2c\x64\xee\xae\xbd\x4e\xec\x88\xb4\x71\xeb\xd8\x04\xa2\xc2\x23\xca\x85\xf0\xf3\x7d\x54\xf5\xe6\xc6\xb5\x66\x39\xac\x89\x87\x09\x7b\xee\xc5\x5b\x20\x12\x9e\x11\xa9\x9d\x9b\x63\x8e\x49\xc5\x4d\x4b\x81\xc5\x09\xb5\xe8\x79\x86\xf8\xf0\xbd\x0d\xa6\x05\x3b\xec\x97\xe0\x35\x3f\x99\xf6\xfa\x47\x09\x81\xe8\x57\x07\xff\xb6\x6c\x7d\x7c\x43\xf2\x16\xc3\x70\xa1\x3d\xc3\x4e\x39\xe1\x3e\x25\xed\xe2\x5f\xc0\xeb\xf2\xf5\xda\x2a\x27\xc4\xa5\x99\x61\x35\x0e\x1f\x01\x00\x00\xff\xff\x30\x52\xb9\x6a\xc7\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerDeploymentControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerDeploymentControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-deployment-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerDeploymentControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerDeploymentControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-deployment-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerDisruptionControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x4f\x4b\x43\x41\x0c\xc4\xef\xfb\x29\x42\xef\xaf\xe2\x4d\xf6\xa6\x1e\xbc\x57\xf0\x9e\xb7\x9b\xd6\xd8\x6d\xb2\x24\xd9\x82\x7e\x7a\xe9\x6b\x51\xc4\x22\x78\xcc\x9f\xf9\xcd\x30\xd8\xf9\x85\xcc\x59\x25\x83\xcd\x58\xd6\x38\xe2\x55\x8d\x3f\x30\x58\x65\xbd\xbf\xf3\x35\xeb\xcd\xf1\x36\xed\x59\x6a\x86\xc7\x36\x3c\xc8\x36\xda\xe8\x81\xa5\xb2\xec\xd2\x81\x02\x2b\x06\xe6\x04\x80\x22\x1a\x8b\xd2\x4f\x23\x5c\x45\x8e\x99\x4c\x28\x68\x21\xe3\x08\x1d\xbd\x62\x50\x86\x55\xd8\xa0\x55\x02\x68\x38\x53\xbb\x10\x7e\xbe\xcf\xaa\xe1\x61\xd8\x3b\xcb\xee\x9c\x78\xaa\xb4\xc5\xd1\xc2\x13\x80\xe0\x81\x32\xf8\xbb\x07\x1d\x72\x51\x09\xd3\xd6\xc8\x72\x65\xb7\xd1\x4f\xf6\xd3\xf7\x36\x99\x36\xda\xd0\x76\x09\xde\xf9\xc9\x74\xf4\x3f\x4a\x48\x00\xbf\x3a\xf8\xb7\xa5\x8f\xf9\x8d\x4a\x78\x4e\xd3\x85\xf6\x4c\x76\xe4\x42\xf7\xa5\xe8\x90\xf8\x02\x5e\x97\x9f\xaf\xde\xb1\x50\x5e\x9a\x99\xce\xc6\xe9\x33\x00\x00\xff\xff\xa1\x4c\xed\xb4\xc7\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerDisruptionControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerDisruptionControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-disruption-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerDisruptionControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerDisruptionControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-disruption-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerEndpointControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xcf\x4a\x73\x41\x0c\xc5\xf7\xf3\x14\xa1\xfb\xdb\x8f\x6f\x27\xb3\x53\x17\xee\x2b\xb8\xcf\x9d\x49\x6b\xec\x34\x19\x92\x4c\x41\x9f\x5e\xbc\xb7\x28\x62\x11\x5c\xe6\xcf\xf9\x9d\xc3\xc1\xce\x4f\x64\xce\x2a\x19\x6c\xc6\xb2\xc5\x11\xcf\x6a\xfc\x86\xc1\x2a\xdb\xe3\x8d\x6f\x59\xff\x9d\xff\xa7\x23\x4b\xcd\x70\xdf\x86\x07\xd9\x4e\x1b\xdd\xb1\x54\x96\x43\x3a\x51\x60\xc5\xc0\x9c\x00\x50\x44\x63\x51\xfa\xc7\x08\x57\x91\x63\x26\x13\x0a\x5a\xc8\x38\x42\x47\xaf\x18\x94\x61\x13\x36\x68\x93\x00\x1a\xce\xd4\x2e\x84\xef\xef\xb3\x6a\x78\x18\xf6\xce\x72\x58\x13\x4f\x95\xf6\x38\x5a\x78\x02\x10\x3c\x51\x06\x7f\xf5\xa0\x53\x2e\x2a\x61\xda\x1a\x59\x26\xa9\x5d\x59\x62\xfa\xda\x25\xd3\x46\x3b\xda\x2f\xb1\x3b\x3f\x98\x8e\xfe\x4b\x05\x09\xe0\x47\x03\x7f\x34\xf4\x31\xbf\x50\x09\xcf\x69\xba\xb0\x1e\xc9\xce\x5c\xe8\xb6\x14\x1d\x12\x9f\xb8\x6b\xe2\xf5\xe6\x1d\x0b\xe5\xa5\x93\x69\x35\x4d\xef\x01\x00\x00\xff\xff\xe3\x70\xd5\xfb\xc1\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerEndpointControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerEndpointControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-endpoint-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerEndpointControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerEndpointControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-endpoint-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x3d\x4f\x03\x31\x0c\x86\xf7\xfc\x0a\xab\xfb\x1d\x62\x43\xd9\x80\x81\xbd\x48\xec\x4e\xce\x3d\x4c\x73\x76\xe4\x38\x95\xe0\xd7\xa3\xde\x55\x48\x88\x8f\xa1\xa3\xad\xd7\x8f\x5f\x3d\x58\xf9\x85\xac\xb1\x4a\x04\x4b\x98\x47\xec\xfe\xaa\xc6\x1f\xe8\xac\x32\x1e\xef\xda\xc8\x7a\x73\xba\x0d\x47\x96\x29\xc2\x63\xe9\xcd\xc9\xf6\x5a\xe8\x81\x65\x62\x99\xc3\x42\x8e\x13\x3a\xc6\x00\x80\x22\xea\xeb\x65\x3b\x8f\xf0\x2b\xb2\x27\x32\x21\xa7\x95\x8c\xdd\xb5\xd7\x09\x9d\x22\xec\xdc\x3a\xed\x02\x40\xc1\x44\xe5\x42\xf8\x1e\x4f\xaa\xde\xdc\xb0\x56\x96\x79\x6b\x3c\x4c\x74\xc0\x5e\xbc\x05\x00\xc1\x85\x22\xb4\xf7\xe6\xb4\xc4\xac\xe2\xa6\xa5\x90\xc5\x99\x84\x8c\xf3\x30\xa3\x25\x9c\x69\xc8\xe7\x75\x76\xb5\x60\x5a\x68\x4f\x87\xb5\x7c\xe5\x27\xd3\x5e\xff\x11\x11\x00\x7e\x78\xb8\xea\x6d\xeb\xe9\x8d\xb2\xb7\x18\x86\x0b\xf1\x99\xec\xc4\x99\xee\x73\xd6\x2e\xfe\x05\xfd\x1b\xb1\x25\x5a\xc5\x4c\x71\xb5\x34\x6c\x05\xc2\x67\x00\x00\x00\xff\xff\x61\x80\x9f\xc6\xd3\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-generic-garbage-collector.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-generic-garbage-collector.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xd0\xbd\x6a\x2b\x41\x0c\x05\xe0\x7e\x9e\x42\xb8\x5f\x5f\x6e\x17\xa6\x4b\x52\xa4\x77\x20\xbd\x76\x56\x6b\x2b\x1e\x4b\x83\xa4\x31\x24\x4f\x1f\xbc\x6b\x02\x21\x3f\x45\x48\x39\xa0\xf9\xce\xe1\x60\xe3\x27\x32\x67\x95\x0c\x36\x62\xd9\x62\x8f\x83\x1a\xbf\x62\xb0\xca\xf6\x78\xe3\x5b\xd6\x7f\xe7\xff\xe9\xc8\x32\x65\xb8\xaf\xdd\x83\x6c\xa7\x95\xee\x58\x26\x96\x7d\x3a\x51\xe0\x84\x81\x39\x01\xa0\x88\xc6\xf2\xd3\x2f\x4f\xf8\x92\xec\x23\x99\x50\xd0\x22\x63\x0f\xed\x6d\xc2\xa0\x0c\x9b\xb0\x4e\x9b\x04\x50\x71\xa4\x7a\x15\x3e\x9e\x8f\xaa\xe1\x61\xd8\x1a\xcb\x7e\x6d\x3c\x4c\x34\x63\xaf\xe1\x09\x40\xf0\x44\x19\xfc\xc5\x83\x4e\xb9\xa8\x84\x69\xad\x64\x79\x89\x57\x09\xac\x43\xd3\x69\xb8\x84\x7a\xc1\x4a\x96\x4c\x2b\xed\x68\x5e\xca\x37\x7e\x30\xed\xed\x87\x21\x12\xc0\xa7\x1d\x7e\x15\xeb\x7d\x7c\xa6\x12\x9e\xd3\x70\x15\x1f\xc9\xce\x5c\xe8\xb6\x14\xed\x12\xef\xe8\xf7\xc4\x7a\xe1\x0d\x0b\xe5\x65\xa5\x61\x2d\xf0\x47\xa2\x36\x12\x3f\xf0\x1c\x03\xcb\x6c\x98\xde\x02\x00\x00\xff\xff\x0a\x5c\x58\xb4\x29\x02\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-horizontal-pod-autoscaler.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-horizontal-pod-autoscaler.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerJobControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x3f\x4f\x43\x31\x0c\xc4\xf7\x7c\x0a\xab\xfb\x2b\x62\x43\xd9\x80\x81\xbd\x48\xec\x4e\x9e\x5b\xdc\xa6\x76\x64\x3b\x95\xe0\xd3\x23\x5e\x2b\x10\x7f\x84\x18\x2f\xca\xfd\xee\xce\xd8\xf9\x89\xcc\x59\x25\x83\x15\xac\x6b\x1c\xf1\xac\xc6\xaf\x18\xac\xb2\x3e\xdc\xf8\x9a\xf5\xea\x74\x9d\x0e\x2c\x73\x86\xfb\x36\x3c\xc8\x36\xda\xe8\x8e\x65\x66\xd9\xa5\x23\x05\xce\x18\x98\x13\x00\x8a\x68\x2c\x4e\x7f\x97\xf0\x2b\x72\x14\x32\xa1\xa0\x85\x8c\x23\x74\xf4\x19\x83\x32\xac\xc2\x06\xad\x12\x40\xc3\x42\xed\x42\xf8\xfa\xbd\xa8\x86\x87\x61\xef\x2c\xbb\x73\xe3\x69\xa6\x2d\x8e\x16\x9e\x00\x04\x8f\x94\xc1\x5f\x3c\xe8\x98\xab\x4a\x98\xb6\x46\x96\xf7\x5a\xa6\x4f\x99\x4c\x1b\x6d\x68\xbb\x34\xee\xfc\x60\x3a\xfa\x1f\xeb\x13\xc0\x8f\xf1\xff\xcf\xf2\x51\xf6\x54\xc3\x73\x9a\x2e\x98\x47\xb2\x13\x57\xba\xad\x55\x87\xc4\x07\xe9\x9b\xef\xfc\xec\x1d\x2b\xe5\xe5\x08\xd3\x39\x2a\xbd\x05\x00\x00\xff\xff\x7b\x27\x53\x30\xb2\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerJobControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerJobControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-job-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerJobControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerJobControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-job-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerNamespaceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xb1\x4e\x33\x41\x0c\x84\xfb\x7d\x0a\x2b\xfd\xdd\xaf\xbf\x43\xdb\x01\x05\x7d\x90\xe8\x7d\x7b\x4e\x30\xd9\xb3\x57\xb6\x37\x12\x3c\x3d\xca\x25\x22\x42\x44\x48\x94\x1e\x79\xbe\x19\x0d\x36\x7e\x21\x73\x56\xc9\x60\x13\x96\x11\x7b\xbc\xaa\xf1\x07\x06\xab\x8c\x87\x3b\x1f\x59\xff\x1d\xff\xa7\x03\xcb\x9c\xe1\xb1\x76\x0f\xb2\xad\x56\x7a\x60\x99\x59\xf6\x69\xa1\xc0\x19\x03\x73\x02\x40\x11\x8d\xd5\xe9\xa7\x13\x6e\x22\xfb\x44\x26\x14\xb4\x92\xb1\x87\xf6\x36\x63\x50\x86\x4d\x58\xa7\x4d\x02\xa8\x38\x51\xbd\x10\xbe\xbf\x4f\xaa\xe1\x61\xd8\x1a\xcb\xfe\xdc\x78\x98\x69\x87\xbd\x86\x27\x00\xc1\x85\x32\xf8\xbb\x07\x2d\xb9\xa8\x84\x69\xad\x64\xf9\xa4\x7b\xc3\x42\xc3\x55\x4c\xa6\x95\xb6\xb4\x5b\x7b\x37\x7e\x32\xed\xed\x97\x0d\x12\xc0\x8f\x09\xfe\x9a\xe8\x7d\x7a\xa3\x12\x9e\xd3\x70\x81\x3d\x93\x1d\xb9\xd0\x7d\x29\xda\x25\xbe\x78\x37\xdd\x70\x95\xf3\x3a\xcb\x70\x8e\x4d\x9f\x01\x00\x00\xff\xff\x5a\x99\x63\x82\xc4\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerNamespaceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerNamespaceControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-namespace-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerNamespaceControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerNamespaceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-namespace-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerNodeControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xcf\x4e\x33\x31\x0c\xc4\xef\x79\x0a\xab\xf7\xed\xa7\xef\x86\x72\x03\x0e\xdc\x8b\xc4\xdd\x9b\xb8\xc5\x34\xb5\x23\xdb\xa9\x04\x4f\x8f\xd8\xad\x40\xfc\x11\x12\xc7\x89\x32\xbf\x99\x31\x76\x7e\x20\x73\x56\xc9\x60\x33\x96\x2d\x8e\x78\x54\xe3\x17\x0c\x56\xd9\x1e\xaf\x7c\xcb\xfa\xef\xfc\x3f\x1d\x59\x6a\x86\xdb\x36\x3c\xc8\x76\xda\xe8\x86\xa5\xb2\x1c\xd2\x89\x02\x2b\x06\xe6\x04\x80\x22\x1a\x8b\xd3\xdf\x24\xfc\x88\x1c\x33\x99\x50\xd0\x42\xc6\x11\x3a\x7a\xc5\xa0\x0c\x9b\xb0\x41\x9b\x04\xd0\x70\xa6\x76\x21\x7c\xfe\x3e\xab\x86\x87\x61\xef\x2c\x87\xb5\xf1\x54\x69\x8f\xa3\x85\x27\x00\xc1\x13\x65\xf0\x67\x0f\x3a\xe5\xa2\x12\xa6\xad\x91\x65\xd1\x4a\xd3\x87\x4e\xa6\x8d\x76\xb4\x5f\x2a\x77\xbe\x33\x1d\xfd\x97\xf9\x09\xe0\xdb\xfa\x3f\x84\xf9\x98\x9f\xa8\x84\xe7\x34\x5d\x38\xf7\x64\x67\x2e\x74\x5d\x8a\x0e\x89\x77\xd4\x57\xe3\xfa\xee\x1d\x0b\xe5\xe5\x0e\xd3\x1a\x96\x5e\x03\x00\x00\xff\xff\x39\x3c\x7a\x76\xb5\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerNodeControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerNodeControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-node-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerNodeControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerNodeControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-node-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x3d\x4f\x73\x31\x0c\x85\xf7\xfc\x0a\xab\xfb\xed\xab\x77\x43\xd9\x80\x81\xbd\x48\xec\xbe\x89\x5b\x4c\x73\xed\xc8\x76\x2a\xc1\xaf\x47\xbd\xad\x90\x10\x1f\x03\x63\xa4\x93\xe7\x1c\x3f\xd8\xf9\x89\xcc\x59\x25\x83\xcd\x58\xb6\x38\xe2\x59\x8d\xdf\x30\x58\x65\x7b\xbc\xf1\x2d\xeb\xbf\xd3\xff\x74\x64\xa9\x19\xee\xdb\xf0\x20\xdb\x69\xa3\x3b\x96\xca\x72\x48\x0b\x05\x56\x0c\xcc\x09\x00\x45\x34\xd6\x9f\x7e\x7e\xc2\xb7\xc8\x31\x93\x09\x05\xad\x64\x1c\xa1\xa3\x57\x0c\xca\xb0\x09\x1b\xb4\x49\x00\x0d\x67\x6a\x57\xc2\xe7\xf8\xac\x1a\x1e\x86\xbd\xb3\x1c\x2e\x8b\xa7\x4a\x7b\x1c\x2d\x3c\x01\x08\x2e\x94\xc1\x5f\x3d\x68\xc9\x45\x25\x4c\x5b\x23\xcb\xfd\x7c\xa2\x07\x49\x4c\x27\x6d\x63\xa1\x69\x66\xa9\x64\xc9\xb4\xd1\x8e\xf6\xeb\xf6\xce\x0f\xa6\xa3\xff\xe2\x21\x01\x7c\xd1\xf0\x97\x56\x1f\xf3\x0b\x95\xf0\x9c\xa6\x2b\xf0\x91\xec\xc4\x85\x6e\x4b\xd1\x21\xf1\xc1\xfc\x91\x70\x09\x78\xc7\x42\x79\x55\x34\x5d\xea\xd3\x7b\x00\x00\x00\xff\xff\xac\x5f\xb6\xaa\xd0\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-persistent-volume-binder.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-persistent-volume-binder.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xcf\x4e\x33\x31\x0c\xc4\xef\x79\x0a\xab\xf7\xed\xa7\xef\x86\x72\x03\x0e\xdc\x8b\xc4\xdd\x49\xdc\x25\x34\x6b\x47\xb6\x53\x09\x9e\x1e\x75\xb7\x42\x42\x54\x48\x1c\xfd\x67\x7e\x33\x1a\xec\xf5\x85\xd4\xaa\x70\x04\x4d\x98\xf7\x38\xfc\x55\xb4\x7e\xa0\x57\xe1\xfd\xe9\xce\xf6\x55\xfe\x9d\xff\x87\x53\xe5\x12\xe1\xb1\x0d\x73\xd2\x83\x34\x7a\xa8\x5c\x2a\xcf\x61\x21\xc7\x82\x8e\x31\x00\x20\xb3\xf8\xaa\xb4\xcb\x08\x37\x91\x23\x91\x32\x39\xad\x64\x1c\x2e\xa3\x17\x74\x8a\xb0\x73\x1d\xb4\x0b\x00\x0d\x13\xb5\x2b\xe1\xfb\x7b\x12\x71\x73\xc5\xde\x2b\xcf\x5b\xe2\xa9\xd0\x11\x47\x73\x0b\x00\x8c\x0b\x45\xb0\x77\x73\x5a\x62\x16\x76\x95\xd6\x48\x63\x97\x32\xcd\xa8\x09\x67\x9a\xf2\x65\x95\x5d\x34\xa8\x34\x3a\xd0\x71\x0d\xde\xeb\x93\xca\xe8\xbf\x94\x10\x00\x7e\x74\xf0\x67\x4b\x1b\xe9\x8d\xb2\x5b\x0c\xd3\x95\xf6\x4c\x7a\xae\x99\xee\x73\x96\xc1\xfe\x05\xbc\x2d\xdf\xae\xd6\x31\x53\x5c\x9b\x99\x36\xe3\xf0\x19\x00\x00\xff\xff\x35\x74\x4f\x7d\xc7\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-pod-garbage-collector.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-pod-garbage-collector.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x3f\x4f\x03\x31\x0c\xc5\xf7\x7c\x0a\xab\xfb\x15\xb1\xa1\x6c\xc0\xc0\x5e\x24\x76\x5f\xce\x2d\xa6\xa9\x1d\xd9\xce\x49\xf0\xe9\x51\xef\x2a\x10\xe2\xcf\xc0\x18\xe5\xf9\xf7\x9e\x7e\xd8\xf8\x89\xcc\x59\x25\x83\x8d\x58\xb6\xd8\xe3\x59\x8d\xdf\x30\x58\x65\x7b\xbc\xf1\x2d\xeb\xd5\x7c\x9d\x8e\x2c\x53\x86\xfb\xda\x3d\xc8\x76\x5a\xe9\x8e\x65\x62\x39\xa4\x13\x05\x4e\x18\x98\x13\x00\x8a\x68\x2c\x97\x7e\x7e\xc2\x8f\xc8\x3e\x92\x09\x05\x2d\x64\xec\xa1\xbd\x4d\x18\x94\x61\x13\xd6\x69\x93\x00\x2a\x8e\x54\x2f\x84\xaf\xf1\x51\x35\x3c\x0c\x5b\x63\x39\xac\x8b\x87\x89\xf6\xd8\x6b\x78\x02\x10\x3c\x51\x06\x7f\xf5\xa0\x53\x2e\x2a\x61\x5a\x2b\x59\x6e\xf3\xd0\x4c\x83\xca\x79\xc1\xf0\xf9\x91\x4c\x2b\xed\x68\xbf\x6c\x6f\xfc\x60\xda\xdb\x1f\x1e\x12\xc0\x37\x0d\xff\x69\xf5\x3e\xbe\x50\x09\xcf\x69\xb8\x00\x1f\xc9\x66\x2e\x74\x5b\x8a\x76\x89\x0f\xe6\xaf\x84\x35\xe0\x0d\x0b\xe5\x45\xd1\xb0\xd6\xa7\xf7\x00\x00\x00\xff\xff\x53\x24\x69\xeb\xd0\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-pv-protection-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-pv-protection-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xbb\x4e\x03\x41\x0c\x45\xfb\xf9\x0a\x2b\xfd\x06\xd1\xa1\xe9\x80\x82\x3e\x48\xf4\xde\x59\x27\x98\x4c\xec\x91\xed\x59\x09\xbe\x1e\x65\x37\x02\x21\x1e\x05\xa5\xe5\xeb\xe3\xa3\x8b\x8d\x9f\xc8\x9c\x55\x32\xd8\x88\x65\x8b\x3d\x9e\xd5\xf8\x0d\x83\x55\xb6\xc7\x1b\xdf\xb2\x5e\xcd\xd7\xe9\xc8\x32\x65\xb8\xaf\xdd\x83\x6c\xa7\x95\xee\x58\x26\x96\x43\x3a\x51\xe0\x84\x81\x39\x01\xa0\x88\xc6\x72\xe9\xe7\x11\x7e\x44\xf6\x91\x4c\x28\x68\x21\x63\x0f\xed\x6d\xc2\xa0\x0c\x9b\xb0\x4e\x9b\x04\x50\x71\xa4\x7a\x21\x7c\x8d\x8f\xaa\xe1\x61\xd8\x1a\xcb\x61\x35\x1e\x26\xda\x63\xaf\xe1\x09\x40\xf0\x44\x19\xfc\xd5\x83\x4e\xb9\xa8\x84\x69\xad\x64\xb9\xcd\x65\x68\xa6\x41\xe5\xac\x30\x7c\x6e\x92\x69\xa5\x1d\xed\x17\xf9\xc6\x0f\xa6\xbd\xfd\x51\x44\x02\xf8\xd6\xc3\xbf\xde\x7a\x1f\x5f\xa8\x84\xe7\x34\x5c\x88\x8f\x64\x33\x17\xba\x2d\x45\xbb\xc4\x07\xf4\x77\xc4\x9a\xf0\x86\x85\xf2\xd2\xd2\xb0\x0a\xa4\xf7\x00\x00\x00\xff\xff\xde\xc0\x95\xfc\xd3\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-pvc-protection-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-pvc-protection-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicasetControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xcf\x4a\x34\x41\x0c\xc4\xef\xfd\x14\x61\xef\x33\x1f\xdf\x4d\xfa\xa6\x1e\xbc\xaf\xe0\x3d\xd3\x93\x5d\xe3\xf6\x24\x4d\x92\x5e\xd0\xa7\x17\x67\x16\x45\x5c\x04\x8f\xf9\x53\xbf\x2a\x0a\x1b\x3f\x91\x39\xab\x64\xb0\x09\xcb\x88\x3d\x9e\xd5\xf8\x0d\x83\x55\xc6\xd3\x8d\x8f\xac\xff\xce\xff\xd3\x89\x65\xce\x70\x5f\xbb\x07\xd9\x5e\x2b\xdd\xb1\xcc\x2c\xc7\xb4\x50\xe0\x8c\x81\x39\x01\xa0\x88\xc6\xaa\xf4\x8f\x11\xae\x22\xfb\x44\x26\x14\xb4\x92\xb1\x87\xf6\x36\x63\x50\x86\x5d\x58\xa7\x5d\x02\xa8\x38\x51\xbd\x10\xbe\xbf\x4f\xaa\xe1\x61\xd8\x1a\xcb\x71\x4b\x3c\xcc\x74\xc0\x5e\xc3\x13\x80\xe0\x42\x19\xfc\xd5\x83\x96\x5c\x54\xc2\xb4\x56\xb2\x6c\xd4\x2a\x17\x74\x8a\xe1\x6b\x9b\x4c\x2b\xed\xe9\xb0\x06\x6f\xfc\x60\xda\xdb\x2f\x25\x24\x80\x1f\x1d\xfc\xd9\xd2\xfb\xf4\x42\x25\x3c\xa7\xe1\x42\x7b\x24\x3b\x73\xa1\xdb\x52\xb4\x4b\x7c\x02\xaf\xcb\xb7\xab\x37\x2c\x94\xd7\x66\x86\xcd\x38\xbd\x07\x00\x00\xff\xff\x27\xb3\xd4\xbd\xc7\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicasetControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicasetControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-replicaset-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicasetControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicasetControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-replicaset-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicationControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x4d\x4b\x34\x41\x0c\x84\xef\xfd\x2b\xc2\xde\x67\x5e\xde\x9b\xf4\x4d\x3d\x78\x5f\xc1\x7b\xa6\x27\xbb\xc6\xed\x49\x9a\x24\xbd\xa0\xbf\x5e\x9c\x59\x14\xf1\x03\x3c\xe6\xa3\x9e\x2a\x0a\x1b\x3f\x90\x39\xab\x64\xb0\x09\xcb\x88\x3d\x1e\xd5\xf8\x05\x83\x55\xc6\xd3\x95\x8f\xac\xff\xce\xff\xd3\x89\x65\xce\x70\x5b\xbb\x07\xd9\x5e\x2b\xdd\xb0\xcc\x2c\xc7\xb4\x50\xe0\x8c\x81\x39\x01\xa0\x88\xc6\xaa\xf4\xb7\x11\xbe\x45\xf6\x89\x4c\x28\x68\x25\x63\x0f\xed\x6d\xc6\xa0\x0c\xbb\xb0\x4e\xbb\x04\x50\x71\xa2\x7a\x21\x7c\x7e\x9f\x54\xc3\xc3\xb0\x35\x96\xe3\x96\x78\x98\xe9\x80\xbd\x86\x27\x00\xc1\x85\x32\xf8\xb3\x07\x2d\xb9\xa8\x84\x69\xad\x64\xd9\xa8\x55\x2e\xab\xff\xf0\xb1\x4e\xa6\x95\xf6\x74\x58\x93\x37\xbe\x33\xed\xed\x97\x16\x12\xc0\x97\x12\xfe\xee\xe9\x7d\x7a\xa2\x12\x9e\xd3\x70\xc1\xdd\x93\x9d\xb9\xd0\x75\x29\xda\x25\xde\x89\x3f\xe8\xb7\xb3\x37\x2c\x94\xd7\x72\x86\xcd\x3a\xbd\x06\x00\x00\xff\xff\x24\xb5\x80\x16\xca\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicationControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicationControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-replication-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicationControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicationControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-replication-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xbb\x4e\x03\x31\x10\x45\x7b\x7f\xc5\x28\xfd\x06\xd1\x21\x77\x40\x41\x1f\x24\xfa\x59\xef\x24\x98\x78\x67\xcc\x3c\x22\xc1\xd7\x23\x76\x23\x10\xe2\x51\x50\x5a\xbe\x73\xee\xd5\xc1\x5e\x1f\x48\xad\x0a\x67\xd0\x11\xcb\x16\xc3\x1f\x45\xeb\x2b\x7a\x15\xde\x1e\xaf\x6c\x5b\xe5\xe2\x74\x99\x8e\x95\xa7\x0c\xb7\x2d\xcc\x49\x77\xd2\xe8\xa6\xf2\x54\xf9\x90\x66\x72\x9c\xd0\x31\x27\x00\x64\x16\x5f\x2e\xed\xfd\x09\x3f\x22\x63\x24\x65\x72\x5a\xc8\x18\x2e\xd1\x27\x74\xca\xb0\x71\x0d\xda\x24\x80\x86\x23\xb5\x33\xe1\x6b\x7c\x14\x71\x73\xc5\xde\x2b\x1f\xd6\xc5\xc3\x44\x7b\x8c\xe6\x96\x00\x18\x67\xca\x60\x2f\xe6\x34\xe7\x22\xec\x2a\xad\x91\x66\x25\x93\xd0\x42\xcf\x21\x8e\xc3\xe7\x47\x52\x69\xb4\xa3\xfd\xb2\xbd\xd7\x3b\x95\xe8\x7f\x78\x48\x00\xdf\x34\xfc\xa7\xd5\x62\x7c\xa2\xe2\x96\xd3\x70\x06\xde\x93\x9e\x6a\xa1\xeb\x52\x24\xd8\x3f\x98\xbf\x12\xd6\x80\x75\x2c\x94\x17\x45\xc3\x5a\x9f\xde\x02\x00\x00\xff\xff\x8b\x61\xcc\xf3\xd0\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-resourcequota-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-resourcequota-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerRouteControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xbf\x4e\x33\x41\x0c\xc4\xfb\x7d\x0a\x2b\xfd\xdd\xa7\xaf\x43\xdb\x01\x05\x7d\x90\xe8\x7d\x7b\x4e\x58\xb2\x67\xaf\xfc\x27\x12\x3c\x3d\xe2\x2e\x02\xa1\x20\x24\xca\x5d\x7b\x7e\x33\x63\xec\xf5\x89\xd4\xaa\x70\x06\x9d\xb0\x8c\x18\xfe\x2c\x5a\xdf\xd0\xab\xf0\x78\xba\xb1\xb1\xca\xbf\xf3\xff\x74\xaa\x3c\x67\xb8\x6f\x61\x4e\xba\x97\x46\x77\x95\xe7\xca\xc7\xb4\x90\xe3\x8c\x8e\x39\x01\x20\xb3\xf8\xaa\xb4\x8f\x27\xfc\x88\x8c\x89\x94\xc9\x69\x25\x63\xb8\x44\x9f\xd1\x29\xc3\xce\x35\x68\x97\x00\x1a\x4e\xd4\x2e\x84\xef\xeb\x93\x88\x9b\x2b\xf6\x5e\xf9\xb8\x25\x1e\x66\x3a\x60\x34\xb7\x04\xc0\xb8\x50\x06\x7b\x35\xa7\x25\x17\x61\x57\x69\x8d\x34\xab\x84\xd3\xf0\xf5\x91\x54\x1a\xed\xe9\xb0\x66\xee\xf5\x41\x25\xfa\x2f\xfd\x13\xc0\x55\xfd\xbf\xb8\x59\x4c\x2f\x54\xdc\x72\x1a\x2e\xa0\x47\xd2\x73\x2d\x74\x5b\x8a\x04\xfb\x27\xeb\x4a\xb9\x0d\xac\x63\xa1\xbc\x9e\x62\xd8\xec\xd2\x7b\x00\x00\x00\xff\xff\x4e\x50\x8b\xb8\xb8\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerRouteControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerRouteControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-route-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerRouteControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerRouteControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-route-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xbd\x4e\x2b\x41\x0c\x85\xfb\x79\x0a\x2b\xfd\xee\xd5\xed\xd0\x74\x40\x41\x1f\x24\x7a\xef\xac\x13\x4c\x66\xed\x91\xed\x89\x04\x4f\x8f\xd8\x8d\x14\x21\x7e\x0a\x4a\xcb\x9f\x3f\x1f\x1d\x6c\xfc\x44\xe6\xac\x92\xc1\x26\x2c\x23\xf6\x78\x56\xe3\x37\x0c\x56\x19\x4f\x37\x3e\xb2\xfe\x3b\xff\x4f\x27\x96\x39\xc3\x7d\xed\x1e\x64\x7b\xad\x74\xc7\x32\xb3\x1c\xd3\x42\x81\x33\x06\xe6\x04\x80\x22\x1a\xeb\xa5\x7f\x8c\xf0\xad\xb2\x4f\x64\x42\x41\xab\x19\x7b\x68\x6f\x33\x06\x65\xd8\x85\x75\xda\x25\x80\x8a\x13\xd5\x8b\xe1\x33\x3e\xa9\x86\x87\x61\x6b\x2c\xc7\x2d\xf1\x30\xd3\x01\x7b\x0d\x4f\x00\x82\x0b\x65\xf0\x57\x0f\x5a\x72\x51\x09\xd3\x5a\xc9\xb2\x93\x9d\xb9\xd0\x80\xa5\x68\x97\x18\xae\xab\x64\x5a\x69\x4f\x87\x35\x7d\xe3\x07\xd3\xde\x7e\x69\x22\x01\x7c\x29\xe2\x6f\x7f\xbd\x4f\x2f\x54\xc2\x73\x1a\x2e\xca\xc7\x0d\xbe\xdd\xd8\xab\xf5\x67\xc7\x86\x78\xc3\x42\x79\x2d\x6a\xd8\x22\xa4\xf7\x00\x00\x00\xff\xff\xc8\x5c\xe8\x37\xd6\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-service-account-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-service-account-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xc1\x4a\x34\x41\x0c\x84\xef\xfd\x14\x61\xef\x33\x3f\xff\x4d\xfa\xa6\x1e\xbc\xaf\xe0\x3d\xd3\x93\x5d\xe3\xf6\x24\x4d\x92\x5e\xd0\xa7\x17\x67\x16\x16\x59\x11\x3c\x76\xa7\xea\xab\xa2\xb0\xf1\x0b\x99\xb3\x4a\x06\x9b\xb0\x8c\xd8\xe3\x55\x8d\x3f\x30\x58\x65\x3c\xdd\xf9\xc8\xfa\xef\xfc\x3f\x9d\x58\xe6\x0c\x8f\xb5\x7b\x90\xed\xb5\xd2\x03\xcb\xcc\x72\x4c\x0b\x05\xce\x18\x98\x13\x00\x8a\x68\xac\x4e\xff\x7a\xc2\x8f\xc8\x3e\x91\x09\x05\xad\x64\xec\xa1\xbd\xcd\x18\x94\x61\x17\xd6\x69\x97\x00\x2a\x4e\x54\x2f\x84\xef\xf2\x49\x35\x3c\x0c\x5b\x63\x39\x6e\x8d\x87\x99\x0e\xd8\x6b\x78\x02\x10\x5c\x28\x83\xbf\x7b\xd0\x92\x8b\x4a\x98\xd6\x4a\x96\x9d\xec\xcc\x85\x86\xeb\x57\x32\xad\xb4\xa7\xc3\xda\xba\xf1\x93\x69\x6f\xbf\x2c\x90\x00\x6e\x06\xf8\x5b\x9e\xf7\xe9\x8d\x4a\x78\x4e\xc3\x05\xf5\xbc\x89\xee\x4b\xd1\x2e\x71\xa5\xdd\x7a\xb7\x93\x37\x2c\x94\xd7\x41\x86\x2d\x32\x7d\x06\x00\x00\xff\xff\x86\x4f\x4b\x5a\xbe\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-service-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-service-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x4d\x4b\x33\x41\x10\x84\xef\xf3\x2b\x9a\xdc\x37\x2f\xef\x4d\xe6\xa6\x1e\xbc\x47\xf0\xde\x3b\xdb\x1b\xc7\xcc\x76\x0f\xfd\x11\xd0\x5f\x2f\xee\x06\x82\x18\x04\x8f\xfd\x51\x4f\x15\x85\xbd\xbe\x90\x5a\x15\xce\xa0\x23\x96\x3d\x86\xbf\x8a\xd6\x0f\xf4\x2a\xbc\x3f\xdd\xd9\xbe\xca\xbf\xf3\xff\x74\xaa\x3c\x65\x78\x6c\x61\x4e\x7a\x90\x46\x0f\x95\xa7\xca\xc7\xb4\x90\xe3\x84\x8e\x39\x01\x20\xb3\xf8\xaa\xb4\xaf\x11\x6e\x22\x63\x24\x65\x72\x5a\xc9\x18\x2e\xd1\x27\x74\xca\xb0\x73\x0d\xda\x25\x80\x86\x23\xb5\x0b\xe1\xfb\xfb\x28\xe2\xe6\x8a\xbd\x57\x3e\x6e\x89\x87\x89\x66\x8c\xe6\x96\x00\x18\x17\xca\x60\xef\xe6\xb4\xe4\x22\xec\x2a\xad\x91\x66\x73\x74\x9a\xa3\x19\xf9\x70\x5d\x27\x95\x46\x07\x9a\xd7\xe4\xbd\x3e\xa9\x44\xff\xa5\x85\x04\xf0\xa3\x84\xbf\x7b\x5a\x8c\x6f\x54\xdc\x72\x1a\x2e\xb8\x67\xd2\x73\x2d\x74\x5f\x8a\x04\xfb\x95\x78\x5b\xbf\x9d\xad\x63\xa1\xbc\x96\x33\x6c\xd6\xe9\x33\x00\x00\xff\xff\xf5\x15\x9f\x4d\xca\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-statefulset-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-statefulset-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemControllerTtlControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xbf\x4e\x34\x31\x0c\xc4\xfb\x3c\x85\x75\xfd\xee\xa7\xaf\x43\xe9\x80\x82\xfe\x90\xe8\xbd\x59\xdf\x61\x2e\x6b\x47\xb6\x73\x12\x3c\x3d\x62\xf7\x04\xe2\x8f\x10\xe5\x44\x99\xdf\xcc\x18\x1b\x3f\x90\x39\xab\x64\xb0\x09\xcb\x88\x3d\x1e\xd5\xf8\x05\x83\x55\xc6\xd3\x95\x8f\xac\xff\xce\xff\xd3\x89\x65\xce\x70\x5b\xbb\x07\xd9\x5e\x2b\xdd\xb0\xcc\x2c\xc7\xb4\x50\xe0\x8c\x81\x39\x01\xa0\x88\xc6\xea\xf4\x37\x09\x3f\x22\xfb\x44\x26\x14\xb4\x92\xb1\x87\xf6\x36\x63\x50\x86\x5d\x58\xa7\x5d\x02\xa8\x38\x51\xbd\x10\x3e\x7f\x9f\x54\xc3\xc3\xb0\x35\x96\xe3\xd6\x78\x98\xe9\x80\xbd\x86\x27\x00\xc1\x85\x32\xf8\xb3\x07\x2d\xb9\xa8\x84\x69\xad\x64\x39\xa2\x0e\x1f\x32\x99\x56\xda\xd3\x61\x6d\xdc\xf8\xce\xb4\xb7\x5f\xd6\x27\x80\x6f\xe3\xff\x9e\xe5\x7d\x7a\xa2\x12\x9e\xd3\x70\xc1\xdc\x93\x9d\xb9\xd0\x75\x29\xda\x25\xde\x49\x5f\x7c\xdb\xb3\x37\x2c\x94\xd7\x23\x0c\x5b\x54\x7a\x0d\x00\x00\xff\xff\x33\x65\xcf\x0d\xb2\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerTtlControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemControllerTtlControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-ttl-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemControllerTtlControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemControllerTtlControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-ttl-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemDeployerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xbd\x4e\x33\x41\x0c\x00\xfb\x7d\x0a\x2b\xfd\xe5\xd3\xd7\xa1\xed\x80\x82\x3e\x48\xf4\xbe\x5d\x1f\x31\xd9\xb3\x57\xb6\x37\x52\x78\x7a\x94\x23\xa2\xe1\xa7\xb4\xe4\x19\x8f\x8c\x9d\x5f\xc8\x9c\x55\x32\xd8\x8c\x65\x8f\x23\x8e\x6a\xfc\x8e\xc1\x2a\xfb\xd3\x9d\xef\x59\xff\x9d\xff\xa7\x13\x4b\xcd\xf0\xd8\x86\x07\xd9\x41\x1b\x3d\xb0\x54\x96\xd7\xb4\x52\x60\xc5\xc0\x9c\x00\x50\x44\x63\x23\xfd\x3a\xc2\x8f\xca\x31\x93\x09\x05\x6d\x66\x1c\xa1\xa3\x57\x0c\xca\xb0\x0b\x1b\xb4\x4b\x00\x82\x2b\x65\xf0\x8b\x07\xad\xb9\x52\x6f\x7a\x21\x4b\xa6\x8d\x0e\xb4\x6c\x77\x3a\x3f\x99\x8e\xfe\x47\x73\x02\xf8\x96\xfc\xab\xda\xc7\xfc\x46\x25\x3c\xa7\xe9\x46\x3d\x93\x9d\xb9\xd0\x7d\x29\x3a\x24\xbe\xc0\x4a\x0b\x8e\x16\xd3\xb5\x65\xfe\x7c\x80\x4f\x45\x25\x4c\x5b\x23\xbb\xed\x79\xc7\x42\x19\xb4\x93\xf8\x91\x97\x98\x58\x16\xc3\xf4\x11\x00\x00\xff\xff\x58\x4a\x6a\x27\x6c\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemDeployerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemDeployerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-deployer.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemDeployerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemDeployerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-deployer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xce\xbd\x4e\x03\x41\x0c\x04\xe0\x7e\x9f\xc2\x4a\x9f\x43\x74\x68\x4b\x28\xe8\x53\xd0\xfb\x6e\x07\x30\xb9\xb3\x4f\x6b\x3b\x52\x78\x7a\x94\x13\x0d\xbf\x12\x12\xa5\x25\xcf\x37\xc3\xab\x3c\xa0\xbb\x98\x56\xea\x23\x4f\x03\x67\x3c\x5b\x97\x57\x0e\x31\x1d\x8e\x37\x3e\x88\x5d\x9d\xae\xcb\x51\xb4\x55\xba\x9b\xd3\x03\xfd\x60\x33\x6e\x45\x9b\xe8\x53\x59\x10\xdc\x38\xb8\x16\x22\x56\xb5\xd8\x92\x7e\x39\xe9\x5b\x32\x47\x74\x45\x60\x93\x39\xc3\x72\x6d\x1c\xa8\xb4\x8b\x9e\xd8\x15\x22\xe5\x05\x95\xfc\xec\x81\xa5\x36\xf1\xc9\x4e\xe8\xe7\xfd\xf8\xde\xd8\x6d\xc6\x01\x8f\x5b\xe1\x2a\xf7\xdd\x72\xfd\x65\x7c\x21\xfa\xb2\xfd\xc7\x8e\xe2\x39\xbe\x60\x0a\xaf\x65\xff\x27\x7c\x7b\xfc\xcc\x5e\x12\xd0\x90\x89\x03\xed\x3f\xc0\xd4\x8f\xe4\x5b\x00\x00\x00\xff\xff\xb2\x85\x5e\x4b\xbe\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryBindingYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-discovery-binding.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryBindingYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-discovery-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xcf\x3f\x4f\x03\x31\x0c\x05\xf0\x3d\x9f\xc2\xea\xde\x43\x6c\x28\x23\x0c\xec\x1d\xd8\x9d\x8b\x5b\x4c\x73\x76\x14\xdb\x95\xca\xa7\x47\x3d\x58\xca\x3f\x09\x89\xd1\x92\xdf\x4f\xef\x61\xe7\x27\x1a\xc6\x2a\x19\x46\xc1\x79\xc2\xf0\x67\x1d\xfc\x8a\xce\x2a\xd3\xf1\xce\x26\xd6\x9b\xd3\x6d\x3a\xb2\xd4\x0c\x0f\x2d\xcc\x69\xec\xb4\xd1\x3d\x4b\x65\x39\xa4\x85\x1c\x2b\x3a\xe6\x04\x80\x22\xea\x6b\xd2\x2e\x27\x7c\x4b\x46\xa1\x21\xe4\xb4\xca\x18\xae\xd1\x2b\x3a\x65\xd8\xf8\x08\xda\x24\x80\x86\x85\xda\x87\x70\xfd\x5e\x54\xdd\x7c\x60\xef\x2c\x87\xf7\xc6\xdb\x4a\x7b\x8c\xe6\x96\x00\x04\x17\xca\x60\x67\x73\x5a\x72\x65\x9b\xf5\x44\xe3\x9c\x86\x36\xda\xd1\x7e\x6d\xd8\xf9\x71\x68\xf4\x5f\xd6\x26\x80\x2f\x63\x7f\xb6\x2d\xca\x0b\xcd\x6e\x39\x6d\xff\x84\xaf\x8f\x9f\xd9\x4b\x82\xc4\x79\x46\xa7\xfa\x1f\x60\xc8\x35\xf9\x16\x00\x00\xff\xff\xf5\x58\xc0\xce\xef\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-discovery.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-discovery.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemImageBuilderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x31\x4f\x33\x31\x0c\x40\xf7\xfc\x0a\xab\xfb\xf5\xd3\xb7\xa1\x6c\xc0\xc0\x5e\x24\x76\x5f\xe2\x6b\x4d\x73\x76\xe4\xd8\x95\xe0\xd7\xa3\x1e\x15\x0b\xa8\xa3\x25\xbf\xe7\x27\x63\xe7\x37\xb2\xc1\x2a\x19\x6c\xc6\xb2\xc7\xf0\x93\x1a\x7f\xa2\xb3\xca\xfe\xfc\x30\xf6\xac\xff\x2e\xff\xd3\x99\xa5\x66\x78\x6e\x31\x9c\xec\xa0\x8d\x9e\x58\x2a\xcb\x31\xad\xe4\x58\xd1\x31\x27\x00\x14\x51\xdf\xc8\x71\x1d\xe1\x4f\x65\xcc\x64\x42\x4e\x9b\x19\xc3\x35\x7a\x45\xa7\x0c\x3b\xb7\xa0\x5d\x02\x10\x5c\x29\xc3\xf8\x18\x4e\x6b\xe6\x15\x8f\x34\xcd\xc1\xad\x92\x25\xd3\x46\x07\x5a\xb6\x63\x9d\x5f\x4c\xa3\xdf\x09\x4f\x00\xbf\xba\xef\xfb\x47\xcc\xef\x54\x7c\xe4\x34\xdd\xd0\x57\xb2\x0b\x17\x7a\x2c\x45\x43\xfc\x87\xae\xb4\x60\x34\x9f\xae\x41\xf3\xf7\x2b\xc6\x54\x54\xdc\xb4\x35\xb2\xdb\xde\xe8\x58\x28\x83\x76\x92\x71\xe2\xc5\x27\x96\xc5\x30\x7d\x05\x00\x00\xff\xff\x59\xef\xa4\x86\x76\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemImageBuilderYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemImageBuilderYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-image-builder.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemImageBuilderYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemImageBuilderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-image-builder.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemImagePullerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x4e\xc3\x40\x0c\x40\xf7\xfb\x0a\xab\x7b\x82\xd8\xd0\x6d\xc0\xc0\x5e\x24\x76\xe7\xe2\xb4\xa6\x17\xfb\xe4\xb3\x2b\xc1\xd7\xa3\xa6\x88\x85\xaa\xa3\x25\xbf\xe7\x27\x63\xe3\x0f\xb2\xce\x2a\x19\x6c\xc2\x32\x62\xf8\x51\x8d\xbf\xd1\x59\x65\x3c\x3d\xf5\x91\xf5\xe1\xfc\x98\x4e\x2c\x73\x86\xd7\x1a\xdd\xc9\xf6\x5a\xe9\x85\x65\x66\x39\xa4\x95\x1c\x67\x74\xcc\x09\x00\x45\xd4\x37\xb2\x5f\x46\xb8\xa9\x8c\x89\x4c\xc8\x69\x33\x63\xb8\x46\x9b\xd1\x29\xc3\xce\x2d\x68\x97\x00\x04\x57\xca\xd0\xbf\xba\xd3\x9a\x79\xc5\x03\x0d\x2d\x6a\x25\x4b\xa6\x95\xf6\xb4\x6c\xb7\x1a\xbf\x99\x46\xbb\xd3\x9d\x00\xfe\x65\xdf\xd5\xf7\x98\x3e\xa9\x78\xcf\x69\xf8\x25\xdf\xc9\xce\x5c\xe8\xb9\x14\x0d\xf1\x3f\x78\xa6\x05\xa3\xfa\x70\xe9\x99\xae\x8f\xe8\x43\x51\x71\xd3\x4d\x74\xdd\xeb\x0d\x0b\x65\xd0\x46\xd2\x8f\xbc\xf8\xc0\xb2\x18\xa6\x9f\x00\x00\x00\xff\xff\x26\xe9\x58\x1c\x74\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemImagePullerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemImagePullerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-image-puller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemImagePullerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemImagePullerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-image-puller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemKubeControllerManagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xb1\x4e\x2c\x31\x0c\x45\xfb\x7c\x85\xb5\xfd\xcc\xd3\xeb\x50\x4a\x28\xe8\x57\x82\xde\x99\x78\x07\xb3\x19\x3b\xb2\x1d\x24\xf8\x7a\xb4\x03\x0d\x02\xa1\xa5\xb4\xe4\x7b\xce\xbd\xd8\xf9\x91\xcc\x59\x25\x83\x15\x5c\x66\x1c\xf1\xa4\xc6\x6f\x18\xac\x32\x9f\x6f\x7c\x66\xfd\xf7\xf2\x3f\x9d\x59\x6a\x86\xbb\x36\x3c\xc8\x8e\xda\xe8\x96\xa5\xb2\xac\x69\xa3\xc0\x8a\x81\x39\x01\xa0\x88\xc6\x9e\xf4\xcb\x09\x3f\x22\x47\x21\x13\x0a\xda\xc9\x38\x42\x47\xaf\x18\x94\xe1\x10\x36\xe8\x90\x00\x1a\x16\x6a\x9f\x84\xaf\xef\x45\x35\x3c\x0c\x7b\x67\x59\x3f\x1a\x4f\x95\x4e\x38\x5a\x78\x02\x10\xdc\x28\x83\xbf\x7a\xd0\x96\x2f\xc9\x69\x51\x09\xd3\xd6\xc8\xa6\x0d\x05\x57\xb2\x64\xda\xe8\x48\xa7\xbd\x6f\xe7\x7b\xd3\xd1\x7f\xd9\x9e\x00\xbe\x4d\xbf\xd6\xe4\xa3\x3c\xd3\x12\x9e\xd3\xf4\x27\xd5\x83\x93\x5d\xeb\x78\x0f\x00\x00\xff\xff\xfa\x7e\x33\x06\xc1\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemKubeControllerManagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemKubeControllerManagerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-kube-controller-manager.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemKubeControllerManagerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemKubeControllerManagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-kube-controller-manager.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemKubeDnsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xbd\x4e\x43\x31\x0c\x85\xf7\x3c\x85\xd5\xbd\x17\xb1\xa1\x6c\xc0\xc0\x5e\x24\x76\x27\x71\x8b\x69\xae\x1d\xc5\x4e\x25\x78\x7a\xd4\x7b\x4b\x25\xc4\xcf\xe8\x23\x7f\x9f\xce\xc1\xc6\x2f\xd4\x8d\x55\x22\xf4\x84\x79\xc2\xe1\xaf\xda\xf9\x03\x9d\x55\xa6\xe3\x9d\x4d\xac\x37\xa7\xdb\x70\x64\x29\x11\x1e\xeb\x30\xa7\xbe\xd3\x4a\x0f\x2c\x85\xe5\x10\x66\x72\x2c\xe8\x18\x03\x00\x8a\xa8\x2f\xa4\x9d\x4f\xf8\x55\x39\x12\x75\x21\xa7\xc5\x8c\xc3\x75\xb4\x82\x4e\x11\x36\xde\x07\x6d\x02\x40\xc5\x44\xf5\x62\xf8\xfe\x9e\x54\xdd\xbc\x63\x6b\x2c\x87\xb5\xf1\xb6\xd0\x1e\x47\x75\x0b\x00\x82\x33\x45\xb0\x77\x73\x9a\xe3\x99\xdc\x16\xb1\xd0\xb5\xd2\x8e\xf6\x4b\xc1\xc6\x4f\x5d\x47\xfb\x67\x6c\x00\xf8\xb1\xf5\x4f\xb5\x8d\xf4\x46\xd9\x2d\x86\xed\x85\x7a\xa6\x7e\xe2\x4c\xf7\x39\xeb\x10\xbf\x82\x57\x62\x0d\xac\x61\xfe\x4a\x57\x67\xf8\x0c\x00\x00\xff\xff\xd8\x68\x58\xe5\x8a\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemKubeDnsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemKubeDnsYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-kube-dns.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemKubeDnsYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemKubeDnsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-kube-dns.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemKubeSchedulerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xbd\x4e\x03\x41\x0c\x84\xfb\x7d\x0a\x2b\xfd\x1d\xa2\x43\x5b\x42\x41\x1f\x09\x7a\xef\xad\x93\x2c\xd9\xb3\x57\xfe\x41\x82\xa7\x47\x39\x68\x10\x88\x88\xd2\x92\xe7\x9b\xf9\x70\xb4\x67\x52\x6b\xc2\x19\xb4\xe0\x32\x63\xf8\x49\xb4\xbd\xa3\x37\xe1\xf9\x7c\x67\x73\x93\x9b\xd7\xdb\x74\x6e\x5c\x33\x3c\xf4\x30\x27\xdd\x4b\xa7\xfb\xc6\xb5\xf1\x31\xad\xe4\x58\xd1\x31\x27\x00\x64\x16\xdf\x92\x76\x39\xe1\x57\x64\x14\x52\x26\xa7\x8d\x8c\xe1\x12\xa3\xa2\x53\x86\x9d\x6b\xd0\x2e\x01\x74\x2c\xd4\xbf\x08\xdf\xdf\x8b\x88\x9b\x2b\x8e\xd1\xf8\xf8\xb9\x78\xaa\x74\xc0\xe8\x6e\x09\x80\x71\xa5\x0c\xf6\x66\x4e\x6b\xbe\x24\x27\x5b\x4e\x54\xa3\x93\x26\x95\x4e\x7b\x3a\x6c\x33\x47\x7b\x54\x89\xf1\x87\x72\x02\xf8\x61\x7c\xa5\xc0\xa2\xbc\xd0\xe2\x96\xd3\xf4\xaf\x86\x27\x23\xbd\x82\xfe\x08\x00\x00\xff\xff\x24\x49\xc2\xa2\xa6\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemKubeSchedulerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemKubeSchedulerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-kube-scheduler.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemKubeSchedulerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemKubeSchedulerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-kube-scheduler.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemMastersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\xbd\x4e\x03\x41\x0c\x06\x7b\x3f\x85\x95\x9e\x43\x74\x68\x4b\x28\xe8\x53\xd0\xfb\x72\x06\x4c\x6e\xed\x95\x7f\x90\xe0\xe9\x51\xb6\x25\x20\x51\x5a\xf2\x37\x33\x34\xe4\x99\x3d\xc4\xb4\xa1\xaf\x74\x5a\xa8\xf2\xcd\x5c\xbe\x28\xc5\x74\x39\xdf\xc7\x22\x76\xfb\x71\x07\x67\xd1\xad\xe1\xe3\x5e\x91\xec\x47\xdb\xf9\x41\x74\x13\x7d\x85\xce\x49\x1b\x25\x35\x40\x24\x55\xcb\xb9\x8c\xcb\x89\x57\x91\xb5\xb2\x2b\x27\x4f\x32\x55\x5a\x8d\x8d\x92\x1b\x1e\xd2\x8b\x0f\x80\xa8\xd4\xb9\x61\x7c\x46\x72\x6f\x9d\x2e\xc6\x00\xb7\x9d\x8f\xfc\x32\x35\x43\x9e\xdc\x6a\xfc\x91\x0c\x88\x3f\x8a\xaf\x93\x21\x6a\x7d\xe7\x53\x46\x83\x9b\x7f\x91\xe7\xe3\x6f\xb5\xdf\x01\x00\x00\xff\xff\xba\x85\x46\x3c\x58\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemMastersYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemMastersYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-masters.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemMastersYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemMastersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-masters.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemNodeAdminsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xbd\x4e\x03\x41\x0c\x04\xe0\x7e\x9f\xc2\x4a\x9f\x43\x74\x68\x4b\x28\xe8\x23\x41\xef\xcb\x0e\x60\x72\x6b\x9f\x6c\x2f\x12\x3c\x3d\xca\x95\xfc\x44\x4a\x69\xc9\xfe\x66\xcc\xab\x3c\xc3\x43\x4c\x2b\xf9\xcc\xc7\x89\x47\xbe\x99\xcb\x17\xa7\x98\x4e\xa7\xbb\x98\xc4\x6e\x3e\x6e\xcb\x49\xb4\x55\x7a\x58\x46\x24\xfc\x60\x0b\xee\x45\x9b\xe8\x6b\xe9\x48\x6e\x9c\x5c\x0b\x11\xab\x5a\x6e\x97\x71\x1e\xe9\x4f\x72\xcc\x70\x45\x62\x93\x79\xa4\x8d\xb5\x71\xa2\xd2\x2e\x7d\x60\x57\x88\x94\x3b\x2a\xc5\x67\x24\x7a\x55\x6b\xd8\x73\xeb\xa2\x51\xdc\x16\x1c\xf0\xb2\x45\xad\xf2\xe8\x36\xd6\x0b\xb5\x0b\xd1\xaf\xd6\xff\xeb\x25\xc6\xfc\x8e\x63\x46\x2d\xfb\xab\xf4\xa7\x80\xff\x64\x3b\x9f\x03\xaf\x84\xb6\xc5\x4b\xef\x7f\x07\x00\x00\xff\xff\x84\xca\xc4\xc0\xad\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemNodeAdminsYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemNodeAdminsYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-node-admins.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemNodeAdminsYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemNodeAdminsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-node-admins.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemNodeBootstrapperYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x31\x4f\xc3\x40\x0c\x46\xf7\xfb\x15\x56\xf7\x04\xb1\xa1\xdb\x80\x81\xbd\x48\xec\xce\x9d\x43\x4d\x13\xfb\x64\xfb\x2a\xc1\xaf\x47\x04\xc4\x12\x44\x47\xcb\x7a\xef\x7b\xd8\xf8\x85\xcc\x59\x25\x83\x4d\x58\x46\xec\x71\x52\xe3\x0f\x0c\x56\x19\xcf\x77\x3e\xb2\xde\x5c\x6e\xd3\x99\xa5\x66\x78\x5c\xba\x07\xd9\x51\x17\x7a\x60\xa9\x2c\xaf\x69\xa5\xc0\x8a\x81\x39\x01\xa0\x88\xc6\x46\xfa\xd7\x09\x7f\x2a\xfb\x44\x26\x14\xb4\x99\xb1\x87\xf6\x56\x31\x28\xc3\x21\xac\xd3\x21\x01\x08\xae\x94\xc1\xdf\x3d\x68\xcd\xa2\x95\x86\x49\x35\x3c\x0c\x5b\x23\x4b\xa6\x0b\x1d\x69\xde\x06\x1b\x3f\x99\xf6\xf6\x4f\x7c\x02\xd8\xb5\x5f\xdf\xf0\x3e\xbd\x51\x09\xcf\x69\xf8\xc1\x9f\xc9\x2e\x5c\xe8\xbe\x14\xed\x12\xbf\x86\x3d\xfa\xfd\xf1\x86\x85\x32\x68\x23\xf1\x13\xcf\x31\xb0\xcc\x86\xe9\x33\x00\x00\xff\xff\xe3\x00\x0c\xc8\x70\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemNodeBootstrapperYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemNodeBootstrapperYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-node-bootstrapper.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemNodeBootstrapperYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemNodeBootstrapperYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-node-bootstrapper.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxierYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xbf\x4e\x03\x31\x0c\xc7\xf1\x3d\x4f\x61\x75\xbf\x43\x6c\x28\x23\x0c\xec\x95\x60\x77\x1a\xb7\x98\xe6\xec\xc8\x76\x10\xe5\xe9\x51\x0f\x16\xfe\xa8\x52\xc7\x48\xf1\x47\xbf\x2f\x76\x7e\x26\x73\x56\xc9\x60\x05\x77\x33\x8e\x78\x51\xe3\x0f\x0c\x56\x99\x8f\x77\x3e\xb3\xde\xbc\xdd\xa6\x23\x4b\xcd\xf0\xd0\x86\x07\xd9\x56\x1b\xdd\xb3\x54\x96\x43\x5a\x28\xb0\x62\x60\x4e\x00\x28\xa2\xb1\x5e\xfa\xf9\x09\xff\x92\xa3\x90\x09\x05\xad\x32\x8e\xd0\xd1\x2b\x06\x65\xd8\x84\x0d\xda\x24\x80\x86\x85\xda\xb7\xf0\xf3\x7b\x51\x0d\x0f\xc3\xde\x59\x0e\x5f\x8b\xa7\x4a\x7b\x1c\x2d\x3c\x01\x08\x2e\x94\xc1\x4f\x1e\xb4\x64\xd1\x4a\x53\x37\x7d\x67\xb2\x64\xda\x68\x4b\xfb\x75\x64\xe7\x47\xd3\xd1\x2f\x04\x27\x80\x3f\xbd\x17\x79\x1f\xe5\x95\x76\xe1\x39\x4d\x57\xf9\x4f\x4e\xf6\x1b\x3e\x17\xaf\xf0\x29\x7d\x06\x00\x00\xff\xff\x86\x31\x6d\xc9\x9e\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxierYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxierYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-node-proxier.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxierYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxierYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-node-proxier.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxiersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xbd\x4e\xc3\x40\x0c\xc0\xf1\xdd\x4f\x61\x75\x6f\x10\x1b\xba\x11\x06\xf6\x0e\xec\x4e\xcf\x80\x69\x62\x9f\xfc\x81\x80\xa7\x47\x64\xa5\x8a\xd4\xd1\x92\xfd\xf3\x9f\x86\xbc\xb0\x87\x98\x36\xf4\x99\xce\x13\x55\xbe\x9b\xcb\x0f\xa5\x98\x4e\x97\x87\x98\xc4\xee\x3e\xef\xe1\x22\xda\x1b\x3e\x2d\x15\xc9\x7e\xb2\x85\x1f\x45\xbb\xe8\x1b\xac\x9c\xd4\x29\xa9\x01\x22\xa9\x5a\x6e\x97\xf1\x37\xe2\x55\xb2\x66\x76\xe5\xe4\x4d\xa6\x4a\xab\xd1\x29\xb9\xe1\x21\xbd\xf8\x00\x88\x4a\x2b\x37\x8c\xef\x48\x5e\x9b\x5a\xe7\xe3\x70\xfb\x12\xf6\x00\xb7\x85\x4f\xfc\xba\x3d\x1b\xf2\xec\x56\x63\x27\x1c\x10\xff\x75\xef\xf9\x10\x35\x7f\xf0\x39\xa3\xc1\xf1\x26\x7f\x5b\xbc\x26\x07\xfc\x06\x00\x00\xff\xff\x30\x72\x58\x21\x62\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxiersYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxiersYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-node-proxiers.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxiersYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxiersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-node-proxiers.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemNodeYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcf\xbd\x4e\x03\x41\x0c\x04\xe0\x7e\x9f\xc2\x4a\xcf\x21\x3a\xb4\x25\x14\xf4\x29\xe8\xbd\x59\x27\x98\xec\xd9\x2b\xff\x20\xc1\xd3\x23\x0e\x1a\xc4\x89\xd2\x92\xe7\xd3\x0c\x4e\x7e\x26\x73\x56\xa9\x60\x0d\x4f\x0b\x66\xbc\xa8\xf1\x07\x06\xab\x2c\xd7\x7b\x5f\x58\x6f\xdf\xee\xca\x95\xa5\x57\x78\x1c\xe9\x41\x76\xd4\x41\x0f\x2c\x9d\xe5\x52\x56\x0a\xec\x18\x58\x0b\x00\x8a\x68\x6c\x49\xff\x3a\x61\x97\xcc\x46\x26\x14\xb4\xc9\x98\xa1\x39\x3b\x06\x55\x38\x84\x25\x1d\x0a\xc0\xc0\x46\xe3\x47\xf8\xfd\xde\x54\xc3\xc3\x70\x4e\x96\xcb\x77\xe3\x9b\x4e\x67\xcc\x11\x5e\x00\x04\x57\xaa\xe0\xef\x1e\xb4\x56\xd1\x4e\xc5\x74\xd0\x91\xce\x5b\xb9\xc9\x4f\xa6\x39\xff\x19\x5a\x00\xfe\xec\xdc\x65\x3d\xdb\x2b\x9d\xc2\x2b\x48\x8e\x51\x3e\x03\x00\x00\xff\xff\xc9\x39\x7f\x14\x46\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemNodeYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemNodeYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-node.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemNodeYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemNodeYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-node.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemNodesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\x3d\x4e\xc4\x40\x0c\x86\xe1\xde\xa7\xb0\xf6\x00\x41\x74\x68\x4a\x28\xe8\xb7\xa0\x77\x76\x0c\x98\x4c\xec\x91\x7f\x90\xe0\xf4\x88\xb4\x44\x94\x2e\xfc\x7c\x2f\x4d\x79\x61\x0f\x31\x6d\xe8\x2b\xdd\x16\xaa\x7c\x37\x97\x6f\x4a\x31\x5d\xb6\x87\x58\xc4\xee\x3e\xef\x61\x13\xed\x0d\x9f\x46\x45\xb2\x5f\x6d\xf0\xa3\x68\x17\x7d\x83\x9d\x93\x3a\x25\x35\x40\x24\x55\xcb\xe3\x33\x7e\x4f\x3c\x25\x6b\x65\x57\x4e\x3e\x64\xaa\xb4\x9a\x9d\x92\x1b\x5e\xd2\x8b\x2f\x80\xa8\xb4\x73\xc3\xf8\x8a\xe4\xbd\xa9\x75\x0e\x70\x1b\x7c\xe5\xd7\x63\x64\xca\xb3\x5b\xcd\x7f\x82\x01\xf1\x4f\xef\x99\x0b\x51\xeb\x07\xdf\x32\x1a\x6a\x8d\x01\x3f\x01\x00\x00\xff\xff\x62\xb5\xd2\xa9\x0e\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemNodesYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemNodesYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-nodes.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemNodesYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemNodesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-nodes.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOauthTokenDeletersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8e\xbd\x4e\xc5\x30\x0c\x46\xf7\x3c\x85\x75\xf7\x16\xb1\xa1\x8c\x30\xb0\xdf\x81\xdd\x6d\x3e\xc0\xb4\xb5\xab\xc4\x46\x82\xa7\x47\xcd\xc6\x8f\x10\x48\x77\xb4\xe4\x73\xce\xc7\xbb\x3c\xa0\x36\x31\xcd\x54\x27\x9e\x47\x0e\x7f\xb6\x2a\xef\xec\x62\x3a\x2e\x37\x6d\x14\xbb\x7a\xbd\x4e\x8b\x68\xc9\x74\xb7\x46\x73\xd4\xb3\xad\xb8\x15\x2d\xa2\x4f\x69\x83\x73\x61\xe7\x9c\x88\x58\xd5\xbc\x93\xed\x38\xe9\x47\x65\x4c\xa8\x0a\x47\x37\x73\xb8\xc5\x5e\xd8\x91\xe9\xe4\x35\x70\x4a\x44\xca\x1b\x32\xb5\xb7\xe6\xd8\xb2\x1d\xf8\xe0\xb6\x40\x87\x82\x15\x8e\xda\x52\xb5\x15\x67\x3c\xf6\xe6\x2e\xf7\xd5\x62\xff\x65\x7f\x22\xfa\x36\xff\x0f\x99\xd4\x62\x7a\xc1\xec\x2d\xa7\xe1\x5f\x99\xfe\xf8\x35\x70\x10\x50\x97\x99\x1d\xe5\x12\xc2\xd0\xcf\xca\x8f\x00\x00\x00\xff\xff\x45\x02\x07\x18\xcb\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOauthTokenDeletersYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOauthTokenDeletersYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-oauth-token-deleters.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOauthTokenDeletersYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOauthTokenDeletersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-oauth-token-deleters.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8f\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x75\x7b\x8b\xd8\x50\x36\x60\x60\x3f\x24\x76\x37\x71\x5b\x73\xa9\x1d\x39\xce\x49\xf0\xf4\x88\x82\x8e\x01\x04\x0b\xa3\x65\xfb\xfb\xbf\x1f\x2b\x3f\x91\x35\x56\x89\x60\x13\xa6\x11\xbb\xaf\x6a\xfc\x8a\xce\x2a\xe3\xe9\xa6\x8d\xac\x57\xe7\xeb\x70\x62\xc9\x11\xee\x4b\x6f\x4e\x76\xd4\x42\x77\x2c\x99\x65\x09\x1b\x39\x66\x74\x8c\x01\x00\x45\xd4\xf7\xcf\xf6\x3e\xc2\x8f\xc8\x3e\x91\x09\x39\xed\x64\xec\xae\xbd\x66\x74\x8a\x70\x70\xeb\x74\x08\x00\x82\x1b\x45\x68\x2f\xcd\x69\x8b\x5a\x49\xda\xca\xb3\xc7\xa4\xe2\xa6\xa5\x90\xc5\xa9\x73\xc9\x43\x52\x99\x79\x19\xd2\x8a\xb2\xd0\xf0\xb5\x0e\xa6\x85\x8e\x34\xef\x4a\x95\x1f\x4c\x7b\xfd\xa5\x5e\x00\xf8\xd6\xee\x3f\x2c\x5a\x9f\x9e\x29\x79\x8b\x61\xf8\x0c\x78\x24\x3b\x73\xa2\xdb\x94\xb4\x8b\x5f\x32\xfe\xe0\x7c\x9c\xb5\x8a\x89\x22\x5c\x44\x06\x96\xd9\x30\xbc\x05\x00\x00\xff\xff\xbd\x8d\x97\xa7\xc1\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-build-config-change-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-build-config-change-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xb1\x4e\xc3\x40\x0c\x86\xf7\x7b\x0a\xab\x7b\x82\xd8\xd0\x6d\xc0\xc0\x5e\x24\x76\xe7\xe2\x50\xd3\x8b\x7d\xf2\xd9\x95\xe0\xe9\x11\x01\x95\xa1\x88\xa1\xa3\x6d\xfd\xdf\xef\x0f\x1b\xbf\x90\x75\x56\xc9\x60\x13\x96\x11\xc3\x0f\x6a\xfc\x81\xce\x2a\xe3\xf1\xae\x8f\xac\x37\xa7\xdb\x74\x64\x99\x33\x3c\xd6\xe8\x4e\xb6\xd7\x4a\x0f\x2c\x33\xcb\x6b\x5a\xc9\x71\x46\xc7\x9c\x00\x50\x44\x7d\x4b\xf6\xaf\x11\xfe\x44\xc6\x44\x26\xe4\xb4\x91\x31\x5c\xa3\xcd\xe8\x94\x61\xe7\x16\xb4\x4b\x00\x82\x2b\x65\xe8\xef\xdd\x69\xcd\xda\x48\xfa\x81\x17\xcf\x45\xc5\x4d\x6b\x25\xcb\x53\x70\x9d\x87\xdf\x45\x32\xad\xb4\xa7\x65\x7b\xa2\xf1\x93\x69\xb4\x7f\x84\x12\xc0\x85\xcf\x75\xbd\x3d\xa6\x37\x2a\xde\x73\x1a\x7e\x90\xcf\x64\x27\x2e\x74\x5f\x8a\x86\xf8\x99\x7a\x91\xfc\x3e\xf4\x86\x85\x32\x9c\xcb\x06\x96\xc5\x30\x7d\x06\x00\x00\xff\xff\xb3\x46\x43\xca\x97\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-build-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-build-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8f\xb1\x4e\x2b\x41\x0c\x45\xfb\xf9\x0a\x2b\xfd\xee\xd3\xeb\xd0\x74\x40\x41\x1f\x24\x7a\xef\xac\x97\x98\xcc\xda\x83\xc7\x8e\x04\x5f\x8f\xd8\xa0\x50\x80\x10\x05\xa5\xa5\xeb\x7b\xce\xc5\xc6\x0f\x64\x9d\x55\x32\xd8\x84\x65\xc4\xf0\x83\x1a\xbf\xa2\xb3\xca\x78\xbc\xea\x23\xeb\xbf\xd3\xff\x74\x64\x99\x33\xdc\xd6\xe8\x4e\xb6\xd7\x4a\x37\x2c\x33\xcb\x63\x5a\xc9\x71\x46\xc7\x9c\x00\x50\x44\x7d\xfb\xec\xef\x27\x7c\x5b\x19\x13\x99\x90\xd3\xd6\x8c\xe1\x1a\x6d\x46\xa7\x0c\x3b\xb7\xa0\x5d\x02\x10\x5c\x29\x43\x7f\xe9\x4e\x6b\xd6\x46\xd2\x0f\xbc\x78\x2e\x2a\x6e\x5a\x2b\x59\x2e\x67\x8f\xe1\x39\xd4\x71\x30\x2a\x2a\x85\x2b\x6f\x84\xe1\x33\x97\x4c\x2b\xed\x69\xd9\xdc\x1a\xdf\x99\x46\xfb\x61\x67\x02\xf8\x32\xf3\x4f\x75\x7a\x4c\x4f\x54\xbc\xe7\x34\x7c\x90\xee\xc9\x4e\x5c\xe8\xba\x14\x0d\xf1\x0b\xec\xb7\x85\xe7\x7c\x6f\x58\x28\xc3\x45\x6d\x60\x59\x0c\xd3\x5b\x00\x00\x00\xff\xff\x05\x4b\x24\xd4\xdc\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-cluster-quota-reconciliation-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-cluster-quota-reconciliation-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8f\x31\x4f\x33\x31\x0c\x86\xf7\xfc\x0a\xab\xfb\xdd\xa7\x6f\x43\xd9\x80\x81\xbd\x48\xec\xbe\x9c\x8f\x9a\xe6\xec\xc8\x76\x2a\xc1\xaf\x47\xbd\xa2\x32\x80\x60\x61\x4c\x6c\x3f\xef\xf3\x62\xe3\x27\x32\x67\x95\x0c\x36\x61\x19\xb1\xc7\x41\x8d\xdf\x30\x58\x65\x3c\xde\xf8\xc8\xfa\xef\xf4\x3f\x1d\x59\xe6\x0c\xf7\xb5\x7b\x90\xed\xb5\xd2\x1d\xcb\xcc\xf2\x9c\x56\x0a\x9c\x31\x30\x27\x00\x14\xd1\xd8\x2e\xfd\xfc\x84\x6f\x91\x7d\x22\x13\x0a\xda\xc8\xd8\x43\x7b\x9b\x31\x28\xc3\x2e\xac\xd3\x2e\x01\x08\xae\x94\xc1\x5f\x3d\x68\xcd\xda\x48\xfc\xc0\x4b\xe4\xa2\x12\xa6\xb5\x92\xe5\x99\x16\xec\x35\x06\xd3\x4a\xd3\x45\xc4\x87\xcf\x79\x3a\xff\xef\x69\xd9\x9c\x1a\x3f\x98\xf6\xf6\x43\xbf\x04\xf0\xa5\xde\x9f\x68\x78\x9f\x5e\xa8\x84\xe7\x34\x7c\x24\x3c\x92\x9d\xb8\xd0\x6d\x29\xda\x25\xae\x21\xbf\x81\x2e\x7b\xde\xb0\x50\x86\xab\xca\xc0\xb2\x18\xa6\xf7\x00\x00\x00\xff\xff\xa1\x3d\xa5\xb8\xc4\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-default-rolebindings-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-default-rolebindings-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xb1\x4e\xc3\x40\x0c\x86\xf7\x7b\x0a\xab\x7b\x82\xd8\xd0\x6d\xc0\xc0\x5e\x24\x76\xe7\xe2\x50\xd3\x8b\x7d\xb2\x7d\x95\xca\xd3\x23\x02\x2a\x03\x15\x03\xa3\x6d\xfd\xdf\xef\x0f\x1b\xbf\x90\x39\xab\x64\xb0\x09\xcb\x88\x3d\x0e\x6a\xfc\x8e\xc1\x2a\xe3\xf1\xce\x47\xd6\x9b\xd3\x6d\x3a\xb2\xcc\x19\x1e\x6b\xf7\x20\xdb\x6b\xa5\x07\x96\x99\xe5\x35\xad\x14\x38\x63\x60\x4e\x00\x28\xa2\xb1\x25\xfd\x73\x84\xab\xc8\x3e\x91\x09\x05\x6d\x64\xec\xa1\xbd\xcd\x18\x94\x61\x17\xd6\x69\x97\x00\x04\x57\xca\xe0\x67\x0f\x5a\xb3\x36\x12\x3f\xf0\x12\xb9\xa8\x84\x69\xad\x64\x79\xa6\x56\xf5\x4c\x36\xfc\xec\x92\x69\xa5\x3d\x2d\xdb\x1f\x8d\x9f\x4c\x7b\xfb\xc3\x29\x01\xfc\x52\xfa\x77\xb5\xf7\xe9\x8d\x4a\x78\x4e\xc3\x37\xf5\x99\xec\xc4\x85\xee\x4b\xd1\x2e\x71\x01\x5f\x0b\x7f\xdd\xbc\x61\xa1\x0c\x97\xca\x81\x65\x31\x4c\x1f\x01\x00\x00\xff\xff\xe6\x5d\x59\x2c\xa0\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-deployer-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-deployer-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x8f\xb1\x4e\x2b\x41\x0c\x45\xfb\xf9\x0a\x2b\xfd\xee\xd3\xeb\xd0\x74\x40\x41\x1f\x24\x7a\xef\xac\x37\x31\x99\xb5\x47\xb6\x27\x52\xf8\x7a\xc4\x82\x42\x01\x4a\x43\x69\xd9\x3e\xf7\x5c\x6c\xfc\x42\xe6\xac\x92\xc1\x26\x2c\x23\xf6\x38\xaa\xf1\x1b\x06\xab\x8c\xa7\x3b\x1f\x59\xff\x9d\xff\xa7\x13\xcb\x9c\xe1\xb1\x76\x0f\xb2\xbd\x56\x7a\x60\x99\x59\x0e\x69\xa5\xc0\x19\x03\x73\x02\x40\x11\x8d\xed\xd3\x3f\x46\xf8\x15\xd9\x27\x32\xa1\xa0\x8d\x8c\x3d\xb4\xb7\x19\x83\x32\xec\xc2\x3a\xed\x12\x80\xe0\x4a\x19\xfc\xe2\x41\x6b\xd6\x46\xe2\x47\x5e\x22\x17\x95\x30\xad\x95\x2c\xcf\xd4\xaa\x5e\x56\x92\x28\x2a\x0b\x1f\x86\xef\x5d\x32\xad\xb4\xa7\x65\xf3\x69\xfc\x64\xda\xdb\x8d\x6e\x09\xe0\x47\xb5\x3f\x2b\x78\x9f\x5e\xa9\x84\xe7\x34\x7c\xd1\x9f\xc9\xce\x5c\xe8\xbe\x14\xed\x12\xd7\x80\x5b\x90\xcf\x1b\x6f\x58\x28\xc3\x55\x61\x60\x59\x0c\xd3\x7b\x00\x00\x00\xff\xff\x74\x01\x9c\x6b\xb8\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-deploymentconfig-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-deploymentconfig-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xcf\xbf\x4e\xc3\x40\x0c\x06\xf0\xfd\x9e\xc2\xea\x9e\x20\x36\x74\x1b\x30\xb0\x17\x89\xdd\xb9\x38\xd4\xf4\x62\x9f\x6c\x5f\x25\x78\x7a\xd4\x80\xba\xf0\x67\xe9\x68\xc9\xfe\xf9\xfb\xb0\xf1\x0b\x99\xb3\x4a\x06\x9b\xb0\x8c\xd8\xe3\xa0\xc6\x1f\x18\xac\x32\x1e\xef\x7c\x64\xbd\x39\xdd\xa6\x23\xcb\x9c\xe1\xb1\x76\x0f\xb2\xbd\x56\x7a\x60\x99\x59\x5e\xd3\x4a\x81\x33\x06\xe6\x04\x80\x22\x1a\xdb\xa5\x9f\x47\xf8\x95\xec\x13\x99\x50\xd0\x26\x63\x0f\xed\x6d\xc6\xa0\x0c\xbb\xb0\x4e\xbb\x04\x20\xb8\x52\x06\x7f\xf7\xa0\x35\x6b\x23\xf1\x03\x2f\x91\x8b\x4a\x98\xd6\x4a\x96\x37\x4f\x25\xb0\x0e\x4d\xe7\xe1\xac\x78\xc1\x4a\x96\x4c\x2b\xed\x69\xd9\xd2\x34\x7e\x32\xed\xed\x9f\x66\x09\xe0\x47\xb1\x2b\x03\x78\x9f\xde\xa8\x84\xe7\x34\x7c\xdb\xcf\x64\x27\x2e\x74\x5f\x8a\x76\x89\x0b\xff\x37\xf1\xb5\xe1\x0d\x0b\x65\xb8\xbc\x1f\x58\x16\xc3\xf4\x19\x00\x00\xff\xff\x28\x16\xe5\xdd\xb2\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-horizontal-pod-autoscaler.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-horizontal-pod-autoscaler.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xcf\xbf\x4e\x03\x31\x0c\x06\xf0\x3d\x4f\x61\x75\xbf\x43\x6c\x28\x1b\x30\xb0\x17\x89\xdd\x97\xf3\xb5\xa6\x17\x3b\xb2\x9d\x4a\xf0\xf4\x88\x03\x95\x81\x3f\x0b\x63\x62\xf9\xf7\xf9\xc3\xc6\x4f\x64\xce\x2a\x19\x6c\xc2\x32\x62\x8f\xa3\x1a\xbf\x62\xb0\xca\x78\xba\xf1\x91\xf5\xea\x7c\x9d\x4e\x2c\x73\x86\xfb\xb5\x7b\x90\xed\x75\xa5\x3b\x96\x99\xe5\x90\x2a\x05\xce\x18\x98\x13\x00\x8a\x68\x6c\x9b\xfe\xfe\x84\x1f\xc9\x3e\x91\x09\x05\x6d\x32\xf6\xd0\xde\x66\x0c\xca\xb0\x0b\xeb\xb4\x4b\x00\x82\x95\x32\xf8\x8b\x07\xd5\xac\x8d\xc4\x8f\xbc\x44\x2e\x2a\x61\xba\xae\x64\x99\x2b\x1e\x68\xe0\xda\xd4\x62\xf8\xfa\x4f\xa6\x2b\xed\x69\xd9\x6e\x69\xfc\x60\xda\xdb\x1f\xbd\x12\xc0\xb7\x5a\xff\x8a\xf7\x3e\x3d\x53\x09\xcf\x69\xf8\x94\x1f\xc9\xce\x5c\xe8\xb6\x14\xed\x12\x17\xfc\x37\xe0\x63\xee\x0d\x0b\x65\xb8\x44\x0f\x2c\x8b\x61\x7a\x0b\x00\x00\xff\xff\x1e\x5c\x34\x8f\xac\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-image-import-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-image-import-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xcf\x3f\x4f\x03\x31\x0c\x05\xf0\x3d\x9f\xc2\xea\x7e\x45\x6c\x28\x1b\x30\xb0\x17\x89\xdd\xcd\xbd\x5e\x4d\xef\xec\xc8\x71\x2a\xc1\xa7\x47\x1c\xa8\x0c\xfc\x59\x18\xa3\xd8\xbf\xe7\xc7\x55\x9e\xe0\x4d\x4c\x33\xf9\x9e\xcb\x96\x7b\x1c\xcd\xe5\x95\x43\x4c\xb7\xa7\x9b\xb6\x15\xbb\x3a\x5f\xa7\x93\xe8\x98\xe9\x7e\xee\x2d\xe0\x3b\x9b\x71\x27\x3a\x8a\x4e\x69\x41\xf0\xc8\xc1\x39\x11\xb1\xaa\xc5\xba\xd9\xde\x9f\xf4\x23\xd9\xf7\x70\x45\x60\x95\xb9\x87\xf5\x3a\x72\x20\xd3\x26\xbc\x63\x93\x88\x94\x17\x64\x6a\x2f\x2d\xb0\x64\xab\xd0\x76\x94\x43\xe4\x62\x1a\x6e\xf3\x0c\xcf\xb2\xf0\x84\x21\x5c\xa6\x09\x3e\x7c\x7d\x24\xb7\x19\x3b\x1c\xd6\x63\xaa\x3c\xb8\xf5\xfa\x47\xb1\x44\xf4\xad\xd7\xff\xf2\x5b\xdf\x3f\xa3\x44\xcb\x69\xf8\xa4\x1f\xe1\x67\x29\xb8\x2d\xc5\xba\xc6\x45\xff\x55\xf8\x18\x68\x95\x0b\x32\x5d\xc2\x07\xd1\x83\x73\x7a\x0b\x00\x00\xff\xff\x58\x73\x53\xb3\xaf\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-image-trigger-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-image-trigger-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x8f\xb1\x4e\xc3\x40\x0c\x86\xf7\x7b\x0a\xab\x7b\x82\xd8\xd0\x6d\xc0\xc0\x5e\x24\x76\xe7\xe2\xb4\xa6\x17\xfb\x64\xfb\x2a\xc1\xd3\x23\x02\x2a\x03\xa8\x0b\xa3\x65\xfb\xfb\xbf\x1f\x1b\xbf\x90\x39\xab\x64\xb0\x09\xcb\x88\x3d\x8e\x6a\xfc\x8e\xc1\x2a\xe3\xe9\xce\x47\xd6\x9b\xf3\x6d\x3a\xb1\xcc\x19\x1e\x6b\xf7\x20\xdb\x6b\xa5\x07\x96\x99\xe5\x90\x56\x0a\x9c\x31\x30\x27\x00\x14\xd1\xd8\x3e\xfd\x73\x84\x3f\x91\x7d\x22\x13\x0a\xda\xc8\xd8\x43\x7b\x9b\x31\x28\xc3\x2e\xac\xd3\x2e\x01\x08\xae\x94\xc1\xdf\x3c\x68\xcd\xda\x48\xfc\xc8\x4b\xe4\xa2\x12\xa6\xb5\x92\x65\x96\x83\x91\xfb\x10\x3a\x98\xf6\xa0\xe1\x67\x97\x4c\x2b\xed\x69\xd9\x7c\x1a\x3f\x99\xf6\x76\xa5\x5b\x02\xf8\x55\xed\xdf\x0a\xde\xa7\x57\x2a\xe1\x39\x0d\xdf\xf4\x67\xb2\x33\x17\xba\x2f\x45\xbb\xc4\x25\xe0\x1a\xe4\xeb\xc6\x1b\x16\xca\x70\x51\x18\x58\x16\xc3\xf4\x11\x00\x00\xff\xff\x47\x57\x92\xf1\xb8\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-ingress-to-route-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-ingress-to-route-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8f\xb1\x4e\x2b\x41\x0c\x45\xfb\xf9\x0a\x2b\xfd\xee\xd3\xeb\xd0\x74\x40\x41\x1f\x24\x7a\xef\xac\x97\x98\xcc\xda\x23\xdb\x13\x29\x7c\x3d\xca\x0a\x25\x05\x08\x51\x50\x5a\xba\xbe\xe7\x5c\x6c\xfc\x42\xe6\xac\x92\xc1\x26\x2c\x23\xf6\x38\xa8\xf1\x3b\x06\xab\x8c\xc7\x3b\x1f\x59\xff\x9d\xfe\xa7\x23\xcb\x9c\xe1\xb1\x76\x0f\xb2\xbd\x56\x7a\x60\x99\x59\x5e\xd3\x4a\x81\x33\x06\xe6\x04\x80\x22\x1a\xdb\xa7\x5f\x4e\xf8\xb6\xb2\x4f\x64\x42\x41\x5b\x33\xf6\xd0\xde\x66\x0c\xca\xb0\x0b\xeb\xb4\x4b\x00\x82\x2b\x65\xf0\xb3\x07\xad\x59\x1b\x89\x1f\x78\x89\x5c\x54\xc2\xb4\x56\xb2\x7c\x49\x78\xc3\x42\x83\x53\xe9\xc6\x71\x1e\xb0\x56\x2d\x1b\x62\xb8\x05\x93\x69\xa5\x3d\x2d\x9b\x5c\xe3\x27\xd3\xde\x7e\x18\x9a\x00\xbe\xec\xfc\x5b\x1f\xef\xd3\x1b\x95\xf0\x9c\x86\x4f\xd4\x33\xd9\x89\x0b\xdd\x97\xa2\x5d\xe2\x4a\xfb\x75\x23\xdc\xa2\x19\xae\x72\x03\xcb\x62\x98\x3e\x02\x00\x00\xff\xff\x6b\x88\x76\xdf\xdf\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-namespace-security-allocation-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-namespace-security-allocation-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x8f\x31\x4f\x33\x31\x0c\x86\xf7\xfc\x0a\xab\xfb\xdd\xa7\x6f\x43\xd9\x80\x81\xbd\x48\xec\xbe\x9c\xaf\x35\xcd\xd9\x91\xed\x54\x82\x5f\x8f\x7a\xa0\x32\x80\xba\x30\x26\x7e\xfd\xf8\x79\xb1\xf1\x0b\x99\xb3\x4a\x06\x9b\xb0\x8c\xd8\xe3\xa8\xc6\xef\x18\xac\x32\x9e\xee\x7c\x64\xfd\x77\xfe\x9f\x4e\x2c\x73\x86\xc7\xda\x3d\xc8\xf6\x5a\xe9\x81\x65\x66\x39\xa4\x95\x02\x67\x0c\xcc\x09\x00\x45\x34\xb6\x4d\xbf\x3c\xe1\x57\x64\x9f\xc8\x84\x82\x36\x32\xf6\xd0\xde\x66\x0c\xca\xb0\x0b\xeb\xb4\x4b\x00\x82\x2b\x65\xf0\x37\x0f\x5a\xb3\x36\x12\x3f\xf2\x12\xb9\xa8\x84\x69\xad\x64\x59\x8d\x0f\x2c\xc3\x25\xe8\x0d\x0b\x0d\xdf\xb3\x64\x5a\x69\x4f\xcb\xe6\xd3\xf8\xc9\xb4\xb7\x1b\xdd\x12\xc0\x8f\x6a\x7f\x56\xf0\x3e\xbd\x52\x09\xcf\x69\xf8\xa2\x3f\x93\x9d\xb9\xd0\x7d\x29\xda\x25\xae\x07\x6e\x41\x3e\x33\xdb\x77\x86\xab\xc2\xc0\xb2\x18\xa6\x8f\x00\x00\x00\xff\xff\x30\x7f\xa4\xab\xb8\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-origin-namespace-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-origin-namespace-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x8f\x3d\x4f\xc3\x40\x0c\x86\xf7\xfb\x15\x56\xf7\x14\xb1\xa1\xdb\x80\x81\xbd\x48\xec\xce\xc5\xa1\xa6\x17\xfb\x64\xfb\x22\x95\x5f\x8f\x08\xa8\x0c\x7c\x2c\x8c\xb6\xf5\x3e\xaf\x1f\x6c\xfc\x44\xe6\xac\x92\xc1\x46\x2c\x7b\xec\x71\x54\xe3\x57\x0c\x56\xd9\x9f\x6e\x7c\xcf\x7a\xb5\x5e\xa7\x13\xcb\x94\xe1\xbe\x76\x0f\xb2\x83\x56\xba\x63\x99\x58\x9e\xd3\x42\x81\x13\x06\xe6\x04\x80\x22\x1a\x5b\xd2\xdf\x47\xf8\x11\xd9\x47\x32\xa1\xa0\x8d\x8c\x3d\xb4\xb7\x09\x83\x32\xec\xc2\x3a\xed\x12\x80\xe0\x42\x19\xfc\xec\x41\x4b\xd6\x46\xe2\x47\x9e\x23\x17\x95\x30\xad\x95\x2c\xb7\x75\x30\x2a\xe7\x52\xc9\x86\xaf\x75\x32\xad\x74\xa0\x79\x7b\xa5\xf1\x83\x69\x6f\x7f\x68\x25\x80\x6f\x56\xff\x69\xf7\x3e\xbe\x50\x09\xcf\x69\xf8\x04\x3f\x92\xad\x5c\xe8\xb6\x14\xed\x12\x17\xf6\x2f\xf9\x8f\xb3\x37\x2c\x94\xe1\x52\x3c\xb0\xcc\x86\xe9\x2d\x00\x00\xff\xff\x3c\xa5\x10\x94\xa9\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-pv-recycler-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-pv-recycler-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xcf\xbb\x4e\x03\x41\x0c\x05\xd0\x7e\xbe\xc2\x4a\x9f\x20\x3a\x34\x1d\x50\xd0\x07\x89\xde\x3b\xeb\x25\x26\xbb\xf6\xe0\x47\x24\xf8\x7a\xc4\x82\x42\xc1\xa3\xa1\x1c\x8d\x7d\xae\x2f\x76\x7e\x20\x73\x56\xa9\x60\x03\xb6\x1d\x66\x1c\xd4\xf8\x15\x83\x55\x76\xc7\x2b\xdf\xb1\x5e\x9c\x2e\xcb\x91\x65\xac\x70\x3b\xa7\x07\xd9\x5e\x67\xba\x61\x19\x59\x1e\xcb\x42\x81\x23\x06\xd6\x02\x80\x22\x1a\xeb\xa6\xbf\x3f\xe1\x47\x32\x07\x32\xa1\xa0\x55\xc6\x0c\xcd\x3e\x62\x50\x85\x4d\x58\xd2\xa6\x00\x08\x2e\x54\xc1\x5f\x3c\x68\xa9\xda\x49\xfc\xc0\x53\xd4\xa6\x12\xa6\xf3\x4c\x56\x8d\x5c\xd3\x1a\x3d\xa7\x06\x6e\xbf\x3e\x8a\xe9\x4c\x7b\x9a\xd6\x63\x3a\xdf\x99\x66\xff\xa3\x58\x01\xf8\xd6\xeb\x7f\xf9\x9e\xc3\x13\xb5\xf0\x5a\xb6\x9f\xf4\x3d\xd9\x89\x1b\x5d\xb7\xa6\x29\x71\xd6\x7f\x15\x3e\x06\xbc\x63\xa3\x0a\xe7\xf0\x2d\xcb\x64\x58\xde\x02\x00\x00\xff\xff\x69\x91\x2b\x3e\xaf\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-resourcequota-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-resourcequota-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x31\x4b\x04\x41\x0c\x85\xfb\xf9\x15\xe1\xfa\x5d\xb1\x93\xe9\xd4\xc2\xfe\x04\xfb\xec\x6c\xd6\x8b\x37\x9b\x0c\x49\xe6\x40\x7f\xbd\xb8\x8a\x87\x28\x16\x57\xbe\xc0\xfb\x5e\x3e\x6c\xfc\x44\xe6\xac\x92\xc1\x26\x2c\x23\xf6\x38\xa8\xf1\x1b\x06\xab\x8c\xc7\x1b\x1f\x59\xaf\x4e\xd7\xe9\xc8\x32\x67\xb8\xaf\xdd\x83\x6c\xaf\x95\xee\x58\x66\x96\xe7\xb4\x52\xe0\x8c\x81\x39\x01\xa0\x88\xc6\xd6\xf4\x8f\x08\x7f\x22\xfb\x44\x26\x14\xb4\x91\xb1\x87\xf6\x36\x63\x50\x86\x5d\x58\xa7\x5d\x02\x10\x5c\x29\x83\xbf\x7a\xd0\x9a\xb5\x91\xf8\x81\x97\xc8\x45\x25\x4c\x6b\x25\xcb\x3e\xcb\x70\x8e\xc9\xb4\xd2\x9e\x96\xed\x85\xc6\x0f\xa6\xbd\xfd\xa3\x93\x00\x7e\xd9\x5c\xb2\xea\x7d\x7a\xa1\x12\x9e\xd3\xf0\x05\x7c\x24\x3b\x71\xa1\xdb\x52\xb4\x4b\x9c\x99\x3f\x7b\x9f\x67\x6f\x58\x28\xc3\xf7\xd0\xc0\xb2\x18\xa6\xf7\x00\x00\x00\xff\xff\xaf\xb5\x7f\xc9\x91\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-sdn-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-sdn-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8f\xb1\x4e\x2b\x41\x0c\x45\xfb\xf9\x0a\x2b\xfd\xee\xd3\xeb\xd0\x74\x40\x41\x1f\x24\x7a\xef\xac\x37\x31\x99\xb5\x47\xb6\x27\x12\x7c\x3d\x62\x83\x48\x01\x4a\x45\x69\xf9\xfa\xf8\x5c\x6c\xfc\x42\xe6\xac\x92\xc1\x26\x2c\x23\xf6\x38\xaa\xf1\x3b\x06\xab\x8c\xa7\x3b\x1f\x59\xff\x9d\xff\xa7\x13\xcb\x9c\xe1\xb1\x76\x0f\xb2\xbd\x56\x7a\x60\x99\x59\x0e\x69\xa5\xc0\x19\x03\x73\x02\x40\x11\x8d\xed\xd2\x3f\x47\xf8\x15\xd9\x27\x32\xa1\xa0\x8d\x8c\x3d\xb4\xb7\x19\x83\x32\xec\xc2\x3a\xed\x12\x80\xe0\x4a\x19\xfc\xcd\x83\xd6\xac\x8d\xc4\x8f\xbc\x44\x2e\x2a\x61\x5a\x2b\x59\x76\xb2\x33\x17\x1a\x58\x0e\x46\xee\x03\xb7\xe1\xba\x4d\xa6\x95\xf6\xb4\x6c\x46\x8d\x9f\x4c\x7b\xbb\xd1\x2e\x01\xfc\x28\xf7\x07\x12\xde\xa7\x57\x2a\xe1\x39\x0d\x5f\xfc\xe7\x4b\xfe\xbe\x14\xed\x12\xd7\x17\x37\x31\x97\x94\x37\x2c\x94\xe1\x5b\x63\x60\x59\x0c\xd3\x47\x00\x00\x00\xff\xff\x93\x51\x79\x9b\xbe\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-service-ingress-ip-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-service-ingress-ip-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8f\xb1\x4e\x33\x41\x0c\x84\xfb\x7d\x0a\x2b\xfd\xdd\xaf\xbf\x43\xdb\x01\x05\x7d\x90\xe8\x7d\x7b\xbe\xc4\x64\xcf\x5e\xd9\xde\x48\xf0\xf4\x88\x0b\x22\x05\x08\x1a\x2a\xcb\xb2\x67\xe6\x1b\x6c\xfc\x44\xe6\xac\x92\xc1\x26\x2c\x23\xf6\x38\xaa\xf1\x2b\x06\xab\x8c\xa7\x1b\x1f\x59\xff\x9d\xff\xa7\x13\xcb\x9c\xe1\xbe\x76\x0f\xb2\xbd\x56\xba\x63\x99\x59\x0e\x69\xa5\xc0\x19\x03\x73\x02\x40\x11\x8d\x4d\xe9\xef\x2b\x7c\x6b\xd9\x27\x32\xa1\xa0\xcd\x19\x7b\x68\x6f\x33\x06\x65\xd8\x85\x75\xda\x25\x00\xc1\x95\x32\xf8\x8b\x07\xad\x59\x1b\x89\x1f\x79\x89\x5c\x54\xc2\xb4\x56\xb2\xec\x64\x67\x2e\x34\x6c\x53\x0e\x43\x21\x8b\xe1\x7a\x4f\xa6\x95\xf6\xb4\x6c\x4c\x8d\x1f\x4c\x7b\xfb\xa1\x5f\x02\xf8\x52\xef\x4f\x30\xbc\x4f\xcf\x54\xc2\x73\x1a\x3e\x12\x1e\x2f\x8a\xdb\x52\xb4\x4b\x5c\x43\x7e\x31\xba\xfc\x79\xc3\x42\x19\x3e\x51\x06\x96\xc5\x30\xbd\x05\x00\x00\xff\xff\x71\x4f\x29\x74\xc4\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-service-serving-cert-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-service-serving-cert-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x8f\x3d\x4f\xc3\x40\x0c\x86\xf7\xfb\x15\x56\xf7\x06\xb1\xa1\xdb\x80\x81\xbd\x48\xec\xce\xc5\xa1\xa6\x17\xfb\x64\xfb\x2a\xc1\xaf\x47\x24\x88\x0e\x7c\x2c\x8c\x96\x1f\x3f\x7e\x5f\x6c\xfc\x44\xe6\xac\x92\xc1\x46\x2c\x03\xf6\x38\xaa\xf1\x1b\x06\xab\x0c\xa7\x1b\x1f\x58\xaf\xce\xd7\xe9\xc4\x32\x65\xb8\xaf\xdd\x83\xec\xa0\x95\xee\x58\x26\x96\xe7\xb4\x50\xe0\x84\x81\x39\x01\xa0\x88\xc6\x7a\xe9\x1f\x23\xfc\xa8\xec\x23\x99\x50\xd0\x6a\xc6\x1e\xda\xdb\x84\x41\x19\x76\x61\x9d\x76\x09\x40\x70\xa1\x0c\xfe\xea\x41\x4b\xd6\x46\xe2\x47\x9e\x23\x17\x95\x30\xad\x95\x2c\x3b\xd9\x99\x0b\x61\x29\xda\x25\xf6\x97\x4d\x32\xad\x74\xa0\x79\x4d\xd3\xf8\xc1\xb4\xb7\x3f\x9a\x25\x80\x6f\xc5\xfe\x19\xc0\xfb\xf8\x42\x25\x3c\xa7\xfd\xa7\xfb\x71\x63\x6f\x37\xf6\xa2\xff\x55\xb1\x11\xde\xb0\x50\x86\xaf\xf7\x7b\x96\xd9\x30\xbd\x07\x00\x00\xff\xff\x63\x9a\xe4\xbf\xb2\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8f\x31\x4b\x04\x41\x0c\x85\xfb\xf9\x15\xe1\xfa\x3d\xb1\x93\xe9\xd4\xc2\xfe\x04\xfb\xec\x6c\xd6\x8b\x37\x9b\x0c\x49\xe6\x40\x7f\xbd\xb8\x2b\x5e\xa1\x88\x85\x65\x20\xef\x7b\xdf\xc3\xc6\x4f\x64\xce\x2a\x19\x6c\xc4\xb2\xc7\x1e\x47\x35\x7e\xc3\x60\x95\xfd\xe9\xc6\xf7\xac\x57\xe7\xeb\x74\x62\x99\x32\xdc\xd7\xee\x41\x76\xd0\x4a\x77\x2c\x13\xcb\x73\x5a\x28\x70\xc2\xc0\x9c\x00\x50\x44\x63\x4d\xfa\xc7\x09\x3f\x22\xfb\x48\x26\x14\xb4\x92\xb1\x87\xf6\x36\x61\x50\x86\x5d\x58\xa7\x5d\x02\x10\x5c\x28\x83\xbf\x7a\xd0\x92\xb5\x91\xf8\x91\xe7\xc8\x45\x25\x4c\x6b\x25\xcb\x4e\x76\xe6\x42\x58\x8a\x76\x89\xa1\xf5\x5a\x07\xa7\x62\x14\x3e\x5c\xde\x92\x69\xa5\x03\xcd\xab\x5a\xe3\x07\xd3\xde\x7e\x99\x99\x00\xbe\xad\xfc\x4f\x1b\xef\xe3\x0b\x95\xf0\x9c\x86\xcf\xa2\xc7\x2d\x78\xbb\x05\x2f\x5d\x7f\xe3\x6d\xef\xde\xb0\x50\x86\x2f\xb1\x81\x65\x36\x4c\xef\x01\x00\x00\xff\xff\x5c\x2b\x18\x25\xd9\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-pull-secrets-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-pull-secrets-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x31\x4b\x3c\x41\x0c\x47\xfb\xf9\x14\xe1\xfa\xdd\x3f\xff\x4e\xa6\x53\x0b\xfb\x13\xec\xb3\xb3\x59\x2f\xde\x6c\x32\x24\x99\x03\xfd\xf4\xe2\x7a\x2c\x82\x72\xe5\x30\xbf\x3c\xde\xc3\xc6\x2f\x64\xce\x2a\x19\x6c\xc2\x32\x62\x8f\x93\x1a\x7f\x60\xb0\xca\x78\xbe\xf3\x91\xf5\xdf\xe5\x7f\x3a\xb3\xcc\x19\x1e\x6b\xf7\x20\x3b\x6a\xa5\x07\x96\x99\xe5\x35\xad\x14\x38\x63\x60\x4e\x00\x28\xa2\xb1\x5d\xfa\xd7\x13\xfe\x44\xf6\x89\x4c\x28\x68\x23\x63\x0f\xed\x6d\xc6\xa0\x0c\x87\xb0\x4e\x87\x04\x20\xb8\x52\x06\x7f\xf7\xa0\x35\x6b\x23\xf1\x13\x2f\x91\x8b\x4a\x98\xd6\x4a\x96\x83\xd6\x56\x31\x68\x60\xf1\x40\x29\x34\xfc\xf8\xc4\x79\x65\x49\xa6\x95\x8e\xb4\x6c\x5a\x8d\x9f\x4c\x7b\xbb\x91\x98\x00\x7e\x15\xee\x26\xdf\x40\xef\xd3\x1b\x95\xf0\x9c\x86\xeb\xf6\x99\xec\xc2\x85\xee\x4b\xd1\x2e\xb1\xcf\x6f\xc9\x5d\x47\xde\xb0\x50\x86\xbd\x6d\x60\x59\x0c\xd3\x67\x00\x00\x00\xff\xff\x03\x42\xa1\xec\x8e\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerAdminYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-controller-admin.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerAdminYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-controller-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x8f\xb1\x4e\xc3\x40\x0c\x86\xf7\x7b\x0a\xab\x7b\x82\xd8\xd0\x6d\xc0\xc0\x5e\x24\x76\xe7\xe2\x50\xd3\x8b\x7d\xb2\x7d\x95\xe0\xe9\x11\x01\x95\x01\xd4\xa5\xa3\x65\xfb\xfb\xbf\x1f\x1b\xbf\x90\x39\xab\x64\xb0\x09\xcb\x88\x3d\x0e\x6a\xfc\x81\xc1\x2a\xe3\xf1\xce\x47\xd6\x9b\xd3\x6d\x3a\xb2\xcc\x19\x1e\x6b\xf7\x20\xdb\x6b\xa5\x07\x96\x99\xe5\x35\xad\x14\x38\x63\x60\x4e\x00\x28\xa2\xb1\x7d\xfa\xd7\x08\xff\x22\xfb\x44\x26\x14\xb4\x91\xb1\x87\xf6\x36\x63\x50\x86\x5d\x58\xa7\x5d\x02\x10\x5c\x29\x83\xbf\x7b\xd0\x9a\xb5\x91\xf8\x81\x97\xc8\x45\x25\x4c\x6b\x25\xcb\x41\x6b\xab\x18\x34\xb0\x78\xa0\x14\x1a\x7e\x97\xc9\xb4\xd2\x9e\x96\x4d\xa8\xf1\x93\x69\x6f\x17\xca\x25\x80\x3f\xdd\xae\x77\xf0\x3e\xbd\x51\x09\xcf\x69\xf8\xc1\x3f\x93\x9d\xb8\xd0\x7d\x29\xda\x25\xce\x09\x17\x29\xdf\x47\xde\xb0\x50\x86\xb3\xc4\xc0\xb2\x18\xa6\xcf\x00\x00\x00\xff\xff\xee\x8c\xf2\xcb\xbb\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerAdminYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x4b\x03\x41\x10\x46\xfb\xfd\x15\x4b\xfa\x8b\xd8\xc9\x76\x6a\x61\x1f\xc1\x7e\x6e\xef\x3b\x33\x66\x6f\x66\x99\x9d\x0d\x98\x5f\x2f\x9e\xe1\x10\x14\xb1\x1c\x78\xf3\xf1\x1e\x55\x7e\x81\x35\x56\x49\xd1\x46\xca\x7b\xea\x7e\x54\xe3\x0b\x39\xab\xec\x4f\x77\x6d\xcf\x7a\x73\xbe\x0d\x27\x96\x29\xc5\xc7\xd2\x9b\xc3\x0e\x5a\xf0\xc0\x32\xb1\xbc\x86\x05\x4e\x13\x39\xa5\x10\x23\x89\xa8\xaf\x9f\xed\xf3\x8c\xbf\x4e\xf6\x11\x26\x70\xac\xcb\xd4\x5d\x7b\x9d\xc8\x91\xe2\xce\xad\x63\x17\x62\x14\x5a\x90\x62\x7b\x6f\x8e\x25\x69\x85\xb4\x23\xcf\x9e\xb2\x8a\x9b\x96\x02\x4b\x8e\xa5\x16\x72\x0c\x2c\xcd\x49\x32\x86\x99\x85\x0a\x5f\x60\xc3\x37\x8c\xa6\x85\x25\x98\x16\x1c\x30\xaf\x82\x95\x9f\x4c\x7b\xfd\x23\x36\xc4\xf8\xa3\x75\x73\xfa\x1a\x6c\x7d\x7c\x43\xf6\x96\xc2\x70\x65\x9f\x61\x67\xce\xb8\xcf\x59\xbb\xf8\x86\xff\x4f\xf3\x8a\xb7\x4a\x19\x29\x6e\xbd\x03\xcb\x6c\x14\x3e\x02\x00\x00\xff\xff\x57\xb2\xb4\x62\xa2\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerAdminYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerAdminYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-finalizer-controller-admin.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerAdminYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerAdminYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-finalizer-controller-admin.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8f\xb1\x4e\x04\x31\x0c\x44\xfb\x7c\x45\x74\xfd\x2e\xa2\x43\xe9\x80\x82\xfe\x90\xe8\xbd\xd9\x59\xce\x5c\xd6\x8e\x1c\xe7\x24\xee\xeb\x11\x0b\x3a\x0a\x10\xa2\xa0\xb4\x34\x7e\xf3\x86\x2a\x3f\xc1\x1a\xab\xa4\x68\x13\xe5\x91\xba\x1f\xd4\xf8\x4c\xce\x2a\xe3\xf1\xa6\x8d\xac\x57\xa7\xeb\x70\x64\x99\x53\xbc\x2f\xbd\x39\x6c\xaf\x05\x77\x2c\x33\xcb\x73\x58\xe1\x34\x93\x53\x0a\x31\x92\x88\xfa\xf6\xd9\xde\xcf\xf8\x23\xb2\x4f\x30\x81\x63\x23\x53\x77\xed\x75\x26\x47\x8a\x3b\xb7\x8e\x5d\x88\x51\x68\x45\x8a\xed\xb5\x39\xd6\xa4\x15\xd2\x0e\xbc\x78\xca\x2a\x6e\x5a\x0a\x2c\x39\xd6\x5a\xc8\x31\xb0\x34\x27\xc9\x18\x16\x16\x2a\x7c\x86\x0d\x5f\xb1\x60\x5a\xb0\xc7\xb2\xa9\x55\x7e\x30\xed\xf5\x97\x99\x21\xc6\x6f\x2b\xff\xd3\xa6\xf5\xe9\x05\xd9\x5b\x0a\xc3\x67\xd1\x23\xec\xc4\x19\xb7\x39\x6b\x17\xbf\x74\xfd\x91\xf7\x11\x6f\x95\x32\x52\xbc\x88\x0d\x2c\x8b\x51\x78\x0b\x00\x00\xff\xff\x1f\xed\x7b\x6d\xd9\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-finalizer-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-finalizer-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xcf\x3f\x4f\xf4\x30\x0c\x06\xf0\x3d\x9f\xc2\xba\xbd\x7d\xf5\x6e\x28\x1b\x30\xb0\x1f\x12\xbb\x9b\xba\x9c\x69\x6a\x47\xb6\x73\x12\x7c\x7a\x44\x0f\xdd\xc2\x9f\x85\x31\x8a\xfd\x7b\xfc\x60\xe3\x27\x32\x67\x95\x0c\x36\x61\x19\xb1\xc7\x49\x8d\xdf\x30\x58\x65\x5c\x6f\x7c\x64\xfd\x77\xfe\x9f\x56\x96\x39\xc3\x7d\xed\x1e\x64\x47\xad\x74\xc7\x32\xb3\x3c\xa7\x8d\x02\x67\x0c\xcc\x09\x00\x45\x34\xf6\x4d\xff\x78\xc2\xb7\x64\x9f\xc8\x84\x82\x76\x19\x7b\x68\x6f\x33\x06\x65\x38\x84\x75\x3a\x24\x00\xc1\x8d\x32\xf8\xab\x07\x6d\x59\x1b\x89\x9f\x78\x89\x5c\x54\xc2\xb4\x56\xb2\x1c\xb4\xb5\x8a\x41\x83\x93\x9d\xb9\xd0\x30\x99\xae\x64\xc9\xb4\xd2\x91\x96\xfd\x96\xc6\x0f\xa6\xbd\xfd\xd2\x2b\x01\x7c\xa9\xf5\xa7\x78\xef\xd3\x0b\x95\xf0\x9c\x86\x4f\xf9\xf1\x32\x70\x5b\x8a\x76\x89\x2b\xfe\x13\x70\xf9\xf7\x86\x85\x32\x5c\xa3\x07\x96\xc5\x30\xbd\x07\x00\x00\xff\xff\x21\x3f\xe9\xec\xac\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-service-broker.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-service-broker.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xb1\x4e\xc3\x40\x0c\x86\xf7\x7b\x0a\xab\x7b\x82\xd8\xd0\x6d\xc0\xc0\x5e\x24\x76\xe7\xe2\xb4\xa6\x17\xfb\xe4\xb3\x2b\xc1\xd3\x23\x02\x2a\x03\x15\x03\xa3\x6d\xfd\xdf\xef\x0f\x1b\xbf\x90\x75\x56\xc9\x60\x13\x96\x11\xc3\x8f\x6a\xfc\x8e\xce\x2a\xe3\xe9\xae\x8f\xac\x37\xe7\xdb\x74\x62\x99\x33\x3c\xd6\xe8\x4e\xb6\xd7\x4a\x0f\x2c\x33\xcb\x21\xad\xe4\x38\xa3\x63\x4e\x00\x28\xa2\xbe\x25\xfb\xe7\x08\x57\x91\x31\x91\x09\x39\x6d\x64\x0c\xd7\x68\x33\x3a\x65\xd8\xb9\x05\xed\x12\x80\xe0\x4a\x19\xfa\x5b\x77\x5a\xb3\x36\x92\x7e\xe4\xc5\x73\x51\x71\xd3\x5a\xc9\x72\x08\xcf\x95\xe5\x30\xfc\xec\x92\x69\xa5\x3d\x2d\xdb\x1f\x8d\x9f\x4c\xa3\xfd\xe1\x94\x00\x7e\x29\xfd\xbb\xba\xc7\xf4\x4a\xc5\x7b\x4e\xc3\x37\xf5\x99\xec\xcc\x85\xee\x4b\xd1\x10\xbf\x80\xaf\x85\xbf\x6e\xbd\x61\xa1\x0c\x97\xca\x81\x65\x31\x4c\x1f\x01\x00\x00\xff\xff\x62\xff\xa9\x5a\xa0\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-unidling-controller.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-unidling-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemRegistryYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcd\xb1\x4e\xc4\x30\x0c\xc6\xf1\x3d\x4f\xe1\x17\xa0\x88\x0d\x65\x03\x06\xf6\x22\xb1\xbb\x89\x5b\x4c\xd3\x38\xb2\x9d\x4a\xe5\xe9\x11\xe2\xd4\xe5\x74\xb7\x5a\xfe\x7d\x7f\x6c\xfc\x49\x6a\x2c\x35\x82\x4e\x98\x06\xec\xfe\x25\xca\x3f\xe8\x2c\x75\x58\x9f\x6d\x60\x79\xdc\x9f\xc2\xca\x35\x47\x78\x2b\xdd\x9c\x74\x94\x42\xaf\x5c\x33\xd7\x25\x6c\xe4\x98\xd1\x31\x06\x80\x8a\x1b\x45\xb0\xc3\x9c\xb6\xa8\xb4\xb0\xb9\x1e\x41\xa5\xd0\x48\xf3\xdf\x03\x36\x7e\x57\xe9\xed\x4e\x2c\x00\x5c\xb5\x6e\x4e\x5b\x9f\xbe\x29\xb9\xc5\xf0\x70\x51\x1f\xa4\x3b\x27\x7a\x49\x49\x7a\xf5\x13\x9e\xe2\xff\x60\x0d\x13\x45\xc8\x34\x63\x2f\x1e\x7e\x03\x00\x00\xff\xff\x97\xa2\x4f\x0a\x06\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemRegistryYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemRegistryYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-registry.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemRegistryYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemRegistryYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-registry.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemScopeImpersonationYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8e\xbd\x4e\x04\x31\x0c\x06\xfb\x3c\x85\x75\xfd\x2d\xa2\x43\x29\xa1\xa0\xbf\x82\xde\xbb\xf9\x00\x73\xbb\x76\x14\x3b\x48\xf0\xf4\x68\xd3\xf1\x23\x04\xd2\x95\x96\xfc\xcd\x0c\x57\x79\x40\x73\x31\xcd\xd4\x66\x5e\x26\xee\xf1\x6c\x4d\xde\x39\xc4\x74\x3a\xdf\xf8\x24\x76\xf5\x7a\x9d\xce\xa2\x25\xd3\xdd\xda\x3d\xd0\x4e\xb6\xe2\x56\xb4\x88\x3e\xa5\x0d\xc1\x85\x83\x73\x22\x62\x55\x8b\xb1\xf4\xfd\xa4\x1f\x91\x7d\x46\x53\x04\x06\x99\x7b\x58\xaf\x85\x03\x99\x0e\xd1\x3a\x0e\x89\x48\x79\x43\x26\x7f\xf3\xc0\x96\x7d\xb1\x8a\xa3\x6c\x15\xcd\x4d\x07\x23\x35\x5b\x71\xc2\xe3\x50\x56\xb9\x6f\xd6\xeb\x2f\xf9\x89\xe8\x5b\xfd\x5f\x2c\xde\xe7\x17\x2c\xe1\x39\x1d\xff\xa5\x19\x8f\x5f\x05\xfb\x02\x1a\xb2\x70\xa0\x5c\x02\xd8\xf5\x33\xf2\x23\x00\x00\xff\xff\x6a\xef\xbd\x03\xca\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemScopeImpersonationYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemScopeImpersonationYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-scope-impersonation.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemScopeImpersonationYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemScopeImpersonationYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-scope-impersonation.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemSdnReadersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xbd\x4e\x04\x51\x08\x86\xe1\x9e\xab\x20\xdb\xef\x18\x3b\x73\x4a\x2d\xec\xb7\xb0\x67\xf6\x7c\x2a\xee\x0c\x4c\x80\x63\xa2\x57\x6f\x9c\xd2\xbf\xc4\x92\x04\x1e\x5e\xd9\xf4\x01\x91\xea\xd6\x38\x66\x39\x4f\x32\xea\xd9\x43\xdf\xa5\xd4\x6d\xba\xdc\xe4\xa4\x7e\xf5\x7a\x4d\x17\xb5\xde\xf8\x6e\x19\x59\x88\x93\x2f\xb8\x55\xeb\x6a\x4f\xb4\xa2\xa4\x4b\x49\x23\x66\x31\xf3\xda\x2f\xf3\x73\xe4\x1f\xc9\x31\x23\x0c\x85\x5d\x96\x51\x3e\xb6\x2e\x85\xc6\x87\x8a\x81\x03\x31\x9b\xac\x68\x9c\x6f\x59\x58\x5b\x76\x3b\x06\xa4\x23\x92\xc2\x17\x9c\xf0\xb8\xbf\xda\xf4\x3e\x7c\x6c\x7f\x64\x13\xf3\xb7\xea\xdf\x75\xca\x31\xbf\xe0\x5c\xd9\xe8\xf8\x2f\x7d\x5f\xfc\xea\x9a\x77\x24\x7d\x04\x00\x00\xff\xff\x55\x32\x98\xa4\x5e\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemSdnReadersYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemSdnReadersYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-sdn-readers.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemSdnReadersYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemSdnReadersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-sdn-readers.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemVolumeSchedulerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xbb\x4e\x03\x41\x0c\x45\xfb\xf9\x0a\x2b\x7d\x16\xd1\xa1\x29\xa1\xa0\x8f\x04\xbd\x67\xc7\x49\x86\xcc\xda\x23\x3f\x22\xc1\xd7\xa3\x2c\x14\xbc\x04\xa2\xb4\xe4\x7b\xee\x3d\x38\xda\x23\xa9\x35\xe1\x0c\x5a\x70\x9e\x30\xfc\x28\xda\x5e\xd0\x9b\xf0\x74\xba\xb1\xa9\xc9\xd5\xf9\x3a\x9d\x1a\xd7\x0c\x77\x3d\xcc\x49\x77\xd2\xe9\xb6\x71\x6d\x7c\x48\x0b\x39\x56\x74\xcc\x09\x00\x99\xc5\xd7\xa4\x5d\x4e\xf8\x11\x19\x85\x94\xc9\x69\x25\x63\xb8\xc4\xa8\xe8\x94\x61\xe3\x1a\xb4\x49\x00\x1d\x0b\xf5\x77\xc2\xe7\xf7\x22\xe2\xe6\x8a\x63\x34\x3e\xbc\x2d\xde\x56\xda\x63\x74\xb7\x04\xc0\xb8\x50\x06\x7b\x36\xa7\x25\x9f\xa5\xc7\x42\x5b\x9b\x8f\x54\xa3\x93\x26\x95\x4e\x3b\xda\xaf\x43\x47\xbb\x57\x89\xf1\x8b\x74\x02\xf8\xe6\xfc\x67\x85\x45\x79\xa2\xd9\x2d\xa7\xed\xbf\x3a\x1e\x8c\xf4\x2b\xfc\x62\xfe\x01\xfd\x1a\x00\x00\xff\xff\x29\xc6\xa2\x24\xaa\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemVolumeSchedulerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemVolumeSchedulerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-volume-scheduler.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemVolumeSchedulerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemVolumeSchedulerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-volume-scheduler.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoSystemWebhooksYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xce\xbd\x4e\xc4\x40\x0c\x04\xe0\x7e\x9f\xc2\xba\x9e\x20\x3a\xb4\x25\x14\xf4\x57\xd0\x3b\xd9\x81\x33\x49\xec\x68\x6d\x83\xe0\xe9\xd1\xa5\xe3\x57\x42\xa2\xb4\xe4\xf9\x66\x78\x93\x7b\x74\x17\xd3\x4a\x7d\xe4\x69\xe0\x8c\x93\x75\x79\xe3\x10\xd3\x61\xbe\xf6\x41\xec\xf2\xf9\xaa\xcc\xa2\xad\xd2\xed\x92\x1e\xe8\x47\x5b\x70\x23\xda\x44\x1f\xcb\x8a\xe0\xc6\xc1\xb5\x10\xb1\xaa\xc5\x9e\xf4\xf3\x49\xdf\x92\x39\xa2\x2b\x02\xbb\xcc\x19\x96\x5b\xe3\x40\xa5\x43\xf4\xc4\xa1\x10\x29\xaf\xa8\xe4\xaf\x1e\x58\xeb\x0b\xc6\x93\xd9\xec\xa5\xdb\x82\x23\x1e\xf6\x9e\x4d\xee\xba\xe5\xf6\xcb\xe6\x42\xf4\x65\xf2\x0f\x74\xf1\x1c\x9f\x30\x85\xd7\x72\xf1\x27\x7a\x7f\xfc\x8c\x9e\x13\xd0\x90\x89\x03\xed\x3f\xc0\xd4\x8f\xe4\x7b\x00\x00\x00\xff\xff\xbe\x4d\x91\x1a\xb3\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoSystemWebhooksYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoSystemWebhooksYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/system-webhooks.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoSystemWebhooksYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoSystemWebhooksYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/system-webhooks.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoTemplateservicebrokerClientYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xb1\x4e\x03\x31\x0c\xc6\xf1\x3d\x4f\x91\x17\xc8\x21\x36\x94\x0d\x18\xd8\x8b\xc4\xee\xcb\x7d\xa5\xe6\x72\x71\x64\x3b\x95\xe0\xe9\x11\xba\xd2\x05\xa9\x62\xff\xfe\xfe\x99\x3a\xbf\x41\x8d\xa5\xe5\xa8\x33\x95\x89\x86\x9f\x44\xf9\x8b\x9c\xa5\x4d\xeb\x83\x4d\x2c\x77\xe7\xfb\xb0\x72\x5b\x72\x7c\xae\xc3\x1c\x7a\x90\x8a\x27\x6e\x0b\xb7\xf7\xb0\xc1\x69\x21\xa7\x1c\x62\x6c\xb4\x21\x47\xc7\xd6\x2b\x39\x0c\x7a\xe6\x82\x59\x65\x85\xa6\x52\x19\xcd\x83\x4a\xc5\x01\xc7\x9f\x35\x75\x7e\x51\x19\xfd\x86\x1c\x62\xfc\x03\x5f\x1d\xfb\x34\xc7\x96\xa5\xa3\xd9\x89\x8f\x9e\x6f\xc2\x36\xe6\x0f\x14\xb7\x1c\xd2\xe5\xe6\xeb\x3e\x7b\x2c\x45\x46\xf3\xff\xbd\xbf\x8f\xac\x53\x41\x8e\x57\x39\xfd\x36\xe9\x12\xa5\xbd\x0a\xdf\x01\x00\x00\xff\xff\x84\xf2\xca\xa8\x5f\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoTemplateservicebrokerClientYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoTemplateservicebrokerClientYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/templateservicebroker-client.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoTemplateservicebrokerClientYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoTemplateservicebrokerClientYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/templateservicebroker-client.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoTsbOpenshiftTemplateServiceBrokerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xb1\x4e\x04\x31\x0c\x44\xfb\x7c\x45\x7e\x20\x8b\xe8\x50\x3a\xa0\xa0\x3f\x24\x7a\x6f\x76\x8e\x33\x9b\x8d\x23\xdb\x39\x09\xbe\x1e\x9d\x38\x6d\x83\xe0\x5a\xcb\x33\xef\x0d\x75\x7e\x83\x1a\x4b\xcb\x51\x67\x2a\x13\x0d\x3f\x89\xf2\x17\x39\x4b\x9b\xd6\x07\x9b\x58\xee\xce\xf7\x61\xe5\xb6\xe4\xf8\x5c\x87\x39\xf4\x20\x15\x4f\xdc\x16\x6e\xef\x61\x83\xd3\x42\x4e\x39\xc4\xd8\x68\x43\x8e\x6e\x73\x92\x8e\x66\x27\x3e\x7a\x72\x6c\xbd\x92\x23\x19\xf4\xcc\x05\x69\x56\x59\xa1\x41\xa5\xe2\x80\xe3\x25\x46\x9d\x5f\x54\x46\xff\x47\x21\xc4\xf8\xcb\x60\x07\xda\xa7\x39\xb6\xbc\x33\x73\x91\xe6\x2a\xb5\x42\xf3\x5f\x78\x1b\xf3\x07\x8a\x5b\x0e\xe9\xda\xfc\xfa\xf3\xf0\x58\x8a\x8c\xe6\x7b\x39\x75\xbe\x44\xa1\xd7\x8b\x75\x2a\xc8\xf1\xf6\xc0\xef\x00\x00\x00\xff\xff\x4e\xb1\x25\xe6\x5b\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoTsbOpenshiftTemplateServiceBrokerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoTsbOpenshiftTemplateServiceBrokerYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/tsb-openshift-template-service-broker.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoTsbOpenshiftTemplateServiceBrokerYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoTsbOpenshiftTemplateServiceBrokerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/tsb-openshift-template-service-broker.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterrolebindingRbacAuthorizationK8sIoViewYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x4a\x04\x41\x10\x45\xf3\x3e\x45\x5f\x60\x46\xcc\xa4\x33\x35\x30\x5f\xc1\xbc\xb6\xe7\xaf\x53\xee\x74\x55\x53\x55\x3d\x82\xa7\x17\x61\x10\x44\xd8\xf4\xff\xc7\x7b\xd4\xf9\x0d\xe6\xac\x52\xb2\x9d\xa9\xce\x34\x62\x55\xe3\x2f\x0a\x56\x99\xaf\x0f\x3e\xb3\xde\xed\xf7\xe9\xca\xb2\x94\xfc\xbc\x0d\x0f\xd8\x49\x37\x3c\xb1\x2c\x2c\xef\xa9\x21\x68\xa1\xa0\x92\x72\x16\x6a\x28\x79\x67\x7c\x26\xd3\x0d\x27\x5c\x7e\x56\xea\xfc\x62\x3a\xfa\x8d\x42\xca\xf9\x5f\xe0\xaf\xcf\xc7\xf9\x03\x35\xbc\xa4\xe9\x40\x5f\x61\x3b\x57\x3c\xd6\xaa\x43\xe2\x97\xee\xa6\x0d\xb1\x62\xf8\x64\xa0\x05\x76\x3c\xde\xa9\xa2\x64\xed\x10\x5f\xf9\x12\x53\x43\x18\x57\x4f\xdf\x01\x00\x00\xff\xff\x67\xd5\xc0\xf5\x03\x01\x00\x00")

func clusterrolebindingRbacAuthorizationK8sIoViewYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterrolebindingRbacAuthorizationK8sIoViewYaml,
		"ClusterRoleBinding.rbac.authorization.k8s.io/view.yaml",
	)
}

func clusterrolebindingRbacAuthorizationK8sIoViewYaml() (*asset, error) {
	bytes, err := clusterrolebindingRbacAuthorizationK8sIoViewYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterRoleBinding.rbac.authorization.k8s.io/view.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterservicebrokerServicecatalogK8sIoAnsibleServiceBrokerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x3f\x6b\xe3\x40\x10\xc5\x7b\x7d\x8a\xe9\x0c\x02\x49\x16\xe6\xc0\x6c\x77\x3e\x9b\xe3\x9a\x2b\x9c\x90\x7e\x76\x3d\x8a\x06\xad\x77\x95\x99\x59\x15\xf9\xf4\xc1\xf8\x0f\xa4\x30\xe9\xde\xbc\x37\xbc\xdf\xc3\x99\xdf\x48\x94\x73\x72\xa0\x24\x0b\x07\x0a\x68\x18\xf3\x7b\x3b\x6d\xb5\xe5\xdc\x2d\xbd\x27\xc3\xbe\x9a\x38\x9d\x1c\xfc\x89\x45\x8d\xe4\xe5\xfa\xba\x93\x3c\x91\x54\x67\x32\x3c\xa1\xa1\xab\x00\x06\x4e\x18\xf9\x93\x44\x2f\x57\x03\x53\xf1\x24\x89\x8c\xb4\xe1\x14\x8a\x47\xcb\xd2\xdd\x48\xcd\x0d\x55\x01\x24\x3c\x93\x03\x4c\xca\x3e\x52\x73\xcf\xfd\xb5\x5f\x67\x0a\x97\x36\x2c\x36\xfe\x4b\x43\xbe\x68\x00\x4f\x28\x24\x57\x0d\xa0\x14\x84\xec\x48\xc3\xdd\x78\x74\xaa\x6f\x42\x64\x4a\xf6\x2d\xd0\x19\x03\x39\xc8\x33\x25\x1d\x79\xb0\xe6\x09\x1b\x20\xe0\xae\xa4\x53\x24\x07\xab\xba\xae\xe1\xef\xe1\xff\xe1\xf8\xfb\xf5\xb0\x87\xba\xae\x57\x15\x80\x50\x64\xb5\x1d\x8d\xb8\x70\x16\x07\xfb\x22\x68\x9c\xd3\x23\xba\x1b\x0e\xfa\x5f\xe7\xb5\x3e\xfc\x23\x7d\x14\x52\x53\x07\xeb\x0a\xa0\x48\x74\x30\x9a\xcd\xea\xba\x0e\xd5\xb7\x3f\x4d\x6b\x75\x09\xae\xdf\x6c\xb6\xdd\x93\xe9\x5f\x01\x00\x00\xff\xff\x4a\x5a\xd1\x10\xdc\x01\x00\x00")

func clusterservicebrokerServicecatalogK8sIoAnsibleServiceBrokerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterservicebrokerServicecatalogK8sIoAnsibleServiceBrokerYaml,
		"ClusterServiceBroker.servicecatalog.k8s.io/ansible-service-broker.yaml",
	)
}

func clusterservicebrokerServicecatalogK8sIoAnsibleServiceBrokerYaml() (*asset, error) {
	bytes, err := clusterservicebrokerServicecatalogK8sIoAnsibleServiceBrokerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterServiceBroker.servicecatalog.k8s.io/ansible-service-broker.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterservicebrokerServicecatalogK8sIoTemplateServiceBrokerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x31\x8b\xdb\x40\x10\x85\x7b\xfd\x8a\xe9\x0c\x02\x49\x36\x71\x20\x6c\x17\xc7\x26\xa4\x49\xe1\x84\xf4\xa3\xf5\x28\x1a\xb4\xda\xd5\xcd\xcc\xaa\xb8\x5f\x7f\x08\x59\x3e\xee\xe0\xb8\x6e\xde\xdb\xb7\xdf\x7b\x38\xf1\x3f\x12\xe5\x14\x1d\x28\xc9\xcc\x9e\x3c\x1a\x86\xf4\xbf\x1e\xbe\x69\xcd\xa9\x99\x0f\x2d\x19\x1e\x8a\x81\xe3\xcd\xc1\x8f\x90\xd5\x48\xfe\xac\xd1\x93\xa4\x81\xa4\x18\xc9\xf0\x86\x86\xae\x00\xe8\x38\x62\xe0\x67\x12\x5d\x54\x05\x43\x6e\x49\x22\x19\x69\xc5\xd1\xe7\x16\x2d\x49\x73\x6f\xaa\xee\x55\x05\x40\xc4\x91\x1c\x18\x8d\x53\x40\xa3\x6a\x0b\xb4\x6b\x81\x4e\xe4\x17\x1c\x66\xeb\x7f\xc5\x2e\x2d\x37\x40\x4b\x28\x24\xeb\x0d\xa0\xe4\x85\xec\x4a\xdd\x66\xbc\x87\xde\x99\x2b\xb2\xf2\x81\x29\xda\x9b\xa8\x4e\xe8\xc9\x41\x9a\x28\x6a\xcf\x9d\x55\x1f\xcd\x01\xf0\x78\xca\xf1\x16\xc8\xc1\xae\x2c\x4b\xf8\x79\xf9\x7d\xb9\x7e\xff\x7b\x39\x43\x59\x96\xbb\x02\x40\x28\xb0\xda\x89\x7a\x9c\x39\x89\x83\x73\x16\x34\x4e\xf1\xf1\xb4\x19\x0e\x0e\x5f\xc7\xbd\x3e\xfc\x2b\x3d\x65\x52\x53\x07\xfb\x02\x20\x4b\x70\xd0\x9b\x4d\xea\x9a\x06\x27\x5e\x76\x90\xd4\x9f\x2e\xac\x75\xf6\xee\x78\xfc\xd2\xac\x52\x9b\x2d\xf7\xfa\xb5\xe6\x54\xbc\x04\x00\x00\xff\xff\x5d\xc9\x89\xf4\xfd\x01\x00\x00")

func clusterservicebrokerServicecatalogK8sIoTemplateServiceBrokerYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterservicebrokerServicecatalogK8sIoTemplateServiceBrokerYaml,
		"ClusterServiceBroker.servicecatalog.k8s.io/template-service-broker.yaml",
	)
}

func clusterservicebrokerServicecatalogK8sIoTemplateServiceBrokerYaml() (*asset, error) {
	bytes, err := clusterservicebrokerServicecatalogK8sIoTemplateServiceBrokerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ClusterServiceBroker.servicecatalog.k8s.io/template-service-broker.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapKubeServiceCatalogClusterInfoYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcb\xb1\x0a\xc2\x30\x10\x00\xd0\xfd\xbe\xe2\xb6\xc2\x41\x07\xd7\xdb\x44\x83\x93\x0e\x22\xee\x67\x72\x2d\x47\xdb\x4b\x48\xd2\x7e\xbf\x8b\xae\x0f\x9e\x14\x7b\x6b\x6d\x96\x9d\xf1\x38\x41\x92\x2e\x0c\x88\x96\x18\x07\x22\xc2\x5b\x78\x84\xe7\xf9\x15\xae\x48\x44\x03\x2c\xe6\x89\xf1\x92\x7d\xb2\xf9\x2e\x05\x36\xed\xf2\x3f\x2e\x9b\x32\xc6\x75\x6f\x5d\xeb\x68\x3e\xe5\x1f\xb6\x22\x51\x19\x97\xfd\xa3\x63\xd3\x7a\x58\xd4\x31\x4a\x97\x35\xcf\xf0\x0d\x00\x00\xff\xff\xfd\xf0\x93\xa9\x80\x00\x00\x00")

func configmapKubeServiceCatalogClusterInfoYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapKubeServiceCatalogClusterInfoYaml,
		"ConfigMap/kube-service-catalog/cluster-info.yaml",
	)
}

func configmapKubeServiceCatalogClusterInfoYaml() (*asset, error) {
	bytes, err := configmapKubeServiceCatalogClusterInfoYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/kube-service-catalog/cluster-info.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapKubeSystemExtensionApiserverAuthenticationYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\x31\x4f\xfb\x30\x10\x05\xf0\x3d\x9f\xe2\xd4\xa5\x52\xa4\x1b\xfe\xab\xb7\xbf\x20\xea\x04\x43\x05\x08\x09\x31\x1c\xc9\x4b\x6a\x35\xb1\xcd\xf9\x52\xd2\x6f\x8f\x5c\xe8\x80\xc8\xc4\x68\xf9\xfd\xf4\x74\x4f\x92\x7f\x82\x66\x1f\x83\xa3\xd3\xbf\xaa\x13\x13\x57\x11\xb5\xa3\x47\x30\x6e\x85\x7b\x3f\xc2\xd1\xb6\xae\x6b\xda\x35\xf7\xcd\xfe\xff\x43\x73\x4b\x75\x5d\x6f\x2b\x22\xc5\xfb\x8c\x6c\x07\x48\x07\x65\x19\xc7\xf8\x81\x8e\x83\x4c\xc8\x8e\xb6\x2f\x1b\x19\x06\xc5\x20\x16\x95\x7b\x8d\xc1\x38\x69\x5c\xce\x9b\xd7\xdf\xf6\x2f\x7d\x58\x4c\x85\xbf\x1e\x99\x93\xa2\xf7\xcb\xa5\xf6\x99\xf7\x98\xa2\x81\x9b\x4b\x62\xad\x6f\xd0\x38\xa7\xab\xfd\x89\x76\xe5\x6b\xcd\xcc\x19\x5a\x6e\x5b\x67\x8f\x19\x5a\xd4\xd1\x87\xce\xd1\x4d\x0c\xbd\x1f\xee\x24\x55\x13\x4c\xae\xab\x16\xed\x08\x8b\x21\x94\xc5\x59\x92\xcf\xd0\x53\xd9\x6e\xb6\x03\x82\xf9\x56\xcc\xc7\xf0\x1d\xcd\x49\x5a\x38\x3a\xce\x6f\xe0\x7c\xce\x86\xa9\xfa\x0c\x00\x00\xff\xff\xad\x95\x88\x98\xaf\x01\x00\x00")

func configmapKubeSystemExtensionApiserverAuthenticationYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapKubeSystemExtensionApiserverAuthenticationYaml,
		"ConfigMap/kube-system/extension-apiserver-authentication.yaml",
	)
}

func configmapKubeSystemExtensionApiserverAuthenticationYaml() (*asset, error) {
	bytes, err := configmapKubeSystemExtensionApiserverAuthenticationYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/kube-system/extension-apiserver-authentication.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapOpenshiftAnsibleServiceBrokerBrokerConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xb1\x6e\xdc\x30\x0c\xdd\xfd\x15\xc4\x2d\x99\xae\x49\x97\x0e\xda\x8a\x02\xdd\xba\x76\xc9\x05\x02\x2d\xf3\xce\x82\x15\x51\xa5\x28\xa7\xfe\xfb\x42\xd6\xd9\x77\x6d\x11\x14\xdd\x2c\x3e\xe9\xf1\x3d\xea\xc9\x98\xfc\x77\x92\xec\x39\x1a\x98\x3f\x76\x03\x2a\x9a\x0e\xa0\x17\x9e\x48\x8e\x8e\xe3\xd9\x5f\x0c\x1c\x84\x2e\x3e\xab\x2c\xe6\x14\x01\x8e\xa0\x4b\x22\x03\x03\xbb\x89\x64\x2c\x7d\x2d\x02\x44\x7c\xad\xc5\xb1\xad\x8a\x04\x03\xd0\xbe\x59\x2e\x95\x14\xe0\x04\x18\xb3\xef\x03\xa5\x80\x4b\xcf\x3c\xf5\x25\x0e\x81\xda\x2e\xc5\x8b\x01\x08\xa8\x94\xb5\x55\xde\x46\xaf\x64\x83\xcf\x6a\xe0\xf9\xe5\x14\x5b\x15\x8b\x8e\x76\x55\xd0\x38\x0f\xa7\xc3\x1d\xd0\x54\x6c\xc5\x4d\x6a\x60\x87\xc1\x72\xa2\x98\x47\x7f\xd6\x7b\xc1\x2b\xb4\xf9\x3b\xc5\xab\xce\x86\xe6\x84\x8e\xb2\x81\xe7\x87\xfd\xe8\xc3\xcb\x7b\xda\x06\xe4\x75\x3c\xad\xa3\x93\xe1\x14\x03\x5f\xcc\x4e\x99\x75\xe0\xa2\x06\x54\xca\xea\x38\xd0\x4c\xc1\x80\x8f\x67\xae\x4b\xc7\x81\x65\x43\xf7\x76\x2b\xe3\xc8\xb5\xcb\xe6\xc9\xa1\x3d\xfb\xf0\x87\xfb\x9e\x50\x48\xac\xf2\x44\xb1\xc1\x3b\xb4\x1b\x31\xb0\xd3\x1e\xaf\xf7\x70\xcc\x24\xb3\x77\x74\x6c\x17\x7e\xd3\x8a\x71\xe8\xf9\xa7\x15\xae\x4c\x34\xf8\x75\x64\xfe\x15\x2f\x64\x53\x09\xc1\x26\x0e\xde\x2d\x06\x3e\x87\x37\x5c\x72\x05\x27\xa2\x64\xef\x7a\x9d\x31\x64\xfa\x1b\xb0\x1c\x2d\x89\xb0\x34\xfd\xcd\x6e\xeb\xbe\x7a\x1d\x68\xb6\xd7\xe5\x8d\xa2\x67\xd6\xac\x82\xa9\x9e\xce\x8a\xa2\x25\xdd\x06\x29\x74\x16\xca\xa3\xf5\x51\x49\x66\x0c\x8d\xf9\xd3\xd3\xd3\xaa\x2b\x60\x89\x6e\xb4\x98\xfa\x7a\xb8\xf7\x71\xb8\x23\xe6\xa2\xa9\xa8\x15\xfa\x51\xa8\xce\x78\x07\x84\x1c\xcf\x24\xcb\xd6\x65\x9b\x4b\x0e\xd6\x91\xa8\x9d\x68\x31\xf0\x48\xea\x1e\x35\xe4\xc7\x24\x7e\x46\xa5\xfa\xfd\x61\xa2\xa5\x12\x6c\x3b\xdf\xd9\xe5\x44\x77\x52\x2c\xca\x96\xb2\xc3\x9a\x7d\x03\x5f\x37\x0d\x35\xcf\xa6\xa5\x6d\xcb\x71\x8f\xd9\xbb\x56\x02\xa0\x88\x7d\xa0\x9b\x9d\x43\x37\xad\xee\xbe\xac\xaf\xf6\x1b\xa6\xee\x95\x14\xb7\x27\x1d\xb0\xa7\x90\xdb\x6c\x30\xa5\x7f\x87\xa1\xdb\x5e\xc8\x6f\x3f\x83\xee\xbf\x02\xd5\xfd\x0a\x00\x00\xff\xff\xf8\xc5\xb3\x84\x60\x04\x00\x00")

func configmapOpenshiftAnsibleServiceBrokerBrokerConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapOpenshiftAnsibleServiceBrokerBrokerConfigYaml,
		"ConfigMap/openshift-ansible-service-broker/broker-config.yaml",
	)
}

func configmapOpenshiftAnsibleServiceBrokerBrokerConfigYaml() (*asset, error) {
	bytes, err := configmapOpenshiftAnsibleServiceBrokerBrokerConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/openshift-ansible-service-broker/broker-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapOpenshiftInfraReconcilerRolebindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x94\xbd\x52\xeb\x40\x0c\x85\x7b\x3f\x85\x5e\xc0\xbe\x73\x3b\x66\x4b\x28\x68\xa0\x49\x41\xaf\xac\xe5\x44\xc4\xbb\xda\x91\xd6\x61\xf8\x7b\x77\xc6\xce\x26\x98\x14\x2e\x98\x21\xcc\xd0\x79\x25\x1d\x7d\x47\xa7\x30\x26\x7e\x20\x35\x96\xe8\x60\xff\xbf\x6a\x31\xa3\xab\x00\x54\x7a\x5a\x73\x6c\x39\x6e\xac\x79\xc6\xd0\x3b\x78\xab\x00\x00\x76\x1c\x5b\x07\x77\x6c\x79\x7a\x9e\xc9\xc7\x52\xa0\x8c\xd3\x1a\x78\x7d\x9f\x0a\x9c\x29\x98\x9b\x3e\xeb\x2f\x02\x5d\xa3\x6f\x70\xc8\x5b\x51\x7e\xc1\xcc\x12\x9b\xdd\x95\x35\x2c\xff\xca\xaa\x23\x6e\x25\x3d\x5d\x1f\xdc\x94\xfa\x09\x52\xde\x00\x11\x03\x39\xf0\x83\x65\x09\xa4\x35\xb6\x81\x63\x69\x8e\xc7\xac\xa8\xfb\x9c\xc5\xc4\xb7\x2a\x43\x5a\xb0\x70\x9a\x3d\x38\xb8\xe9\x07\xcb\xa4\xa3\x91\x33\xe2\x1c\x64\xc3\xfa\x91\x7c\xb6\x23\xa9\xfe\x06\x69\x1a\x5f\xbc\xca\x7e\x23\xca\x3a\xa9\x8c\xb7\x5d\x22\xd2\x45\xf2\xdf\xcc\x78\xcf\xf4\x74\x89\x68\x67\x9c\x1f\x0f\x52\x09\x5b\x52\xab\x8a\x27\x89\x1d\x6f\xee\x31\x55\xf3\x30\x0e\x12\x25\x2f\xd1\x73\x3f\x8a\x66\x3f\x9e\xd2\xb7\x84\x9e\x1c\x48\xa2\x68\x5b\xee\x72\xcd\xb1\x53\xac\x3e\x02\x00\x00\xff\xff\x93\x01\x20\xaa\xba\x04\x00\x00")

func configmapOpenshiftInfraReconcilerRolebindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapOpenshiftInfraReconcilerRolebindingsYaml,
		"ConfigMap/openshift-infra/reconciler-rolebindings.yaml",
	)
}

func configmapOpenshiftInfraReconcilerRolebindingsYaml() (*asset, error) {
	bytes, err := configmapOpenshiftInfraReconcilerRolebindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/openshift-infra/reconciler-rolebindings.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapOpenshiftMetricsAlertmanagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x92\x4f\x8b\x14\x41\x0c\xc5\xef\xfd\x29\x1e\x78\x75\x66\xf4\x38\x05\x7b\x58\x14\xf1\xa0\xec\x45\xbc\x88\x2c\xa9\xea\x74\x57\xd8\xea\x4a\x53\x95\x9e\x71\xc0\x0f\x2f\xfd\x6f\x56\xf1\xd6\x7f\x92\x5f\xde\x7b\x09\x8d\xf2\x9d\x4b\x15\xcd\x0e\x97\xf7\x4d\x4b\x46\xae\x01\x28\x71\xb1\x81\x32\xf5\x5c\x8e\xb7\x21\x39\xfc\x6e\x00\xa0\x4f\xea\x29\xb9\x66\x79\x79\x83\x6f\x91\x51\x54\x0d\x45\x27\x63\x68\xc6\x35\x4a\x88\x60\x0a\x11\x92\x83\x0e\x92\xfb\x15\x06\xce\xc6\xa5\x1e\x97\xce\xa5\xdc\x2d\x8f\x33\xa6\xe5\x8e\xa6\xb4\x53\xa4\x43\xd6\xcc\x18\xc8\x42\xdc\x6a\x0a\x07\x96\x0b\x17\xb7\xc2\x0e\x7e\xea\x3a\x2e\x87\x6b\x6c\xee\x90\x59\x4b\x22\xcf\xa9\xc2\xdf\x36\x1d\xff\x4a\xa8\xa0\xc2\xe8\x8b\x4e\x23\xb7\x30\xed\xd9\x22\x97\x23\x3e\x69\x01\xff\xa2\x61\x4c\xfc\xf6\x8e\x1b\xa6\x64\x32\x26\xde\x5b\x37\x90\x64\x74\x5a\x10\xd2\x54\x8d\xcb\xc3\x23\x28\xb7\x6b\x49\xa6\x81\x1f\xbe\x90\x71\x0e\xb7\xcf\xd2\x47\x5c\x75\x4a\xed\x9d\xe7\x19\x7e\x36\xc4\x2d\x24\x9b\x82\x50\x25\xf7\x69\xd3\x73\x7c\xb5\xf1\xf4\xf1\x69\x4f\x66\xf9\xf5\xec\x6f\x0e\x3f\x7e\xbe\x1a\x7d\x4c\x09\x16\x19\xe4\xf5\xc2\x20\xb3\x22\x7e\x32\x5e\xdd\x49\x8e\x5c\xc4\xb8\x9d\x43\xa0\x94\x10\xa2\xa4\x76\x4d\xb6\x2e\x62\x03\xe5\x3b\x4a\x2f\x5c\xae\x45\xcc\x38\xcf\xcb\x9b\xd7\x76\x5c\x07\xed\x81\xd7\x55\xcb\x01\xb3\xbd\xff\xd3\x5f\x41\x57\xf6\x51\xf5\xe5\x39\x68\xee\xa4\xaf\xbb\xfc\x03\xa6\x92\x1c\xa2\xd9\xe8\x4e\xa7\xa4\x81\x52\xd4\x6a\xee\xfc\xee\x7c\x3e\x99\x8e\x12\xea\x69\x4d\xb7\x79\x91\xdc\x3a\x7c\x58\xfa\xbf\xd2\xd8\x0c\x6c\xb4\xdf\xe2\x5f\x93\xb7\x8b\xdc\x3e\xd6\x91\x02\x3b\xe8\xc8\xb9\x46\xe9\xec\x30\xb0\x15\x09\xb5\xf9\x13\x00\x00\xff\xff\x40\x96\x6c\x66\xd5\x02\x00\x00")

func configmapOpenshiftMetricsAlertmanagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapOpenshiftMetricsAlertmanagerYaml,
		"ConfigMap/openshift-metrics/alertmanager.yaml",
	)
}

func configmapOpenshiftMetricsAlertmanagerYaml() (*asset, error) {
	bytes, err := configmapOpenshiftMetricsAlertmanagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/openshift-metrics/alertmanager.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapOpenshiftMetricsPrometheusYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\x5b\x6f\x1b\xb9\x15\x7e\xf7\xaf\x38\xd8\x04\x95\x64\x5b\x63\x7b\xe3\x76\x9b\xc9\xc3\x22\xed\x2e\xd0\x60\x51\x64\x81\x5d\xf4\x65\x9b\x52\x14\xe7\x48\xc3\x9a\x22\xa7\x24\x47\x8e\xda\xe9\x7f\x2f\x78\x19\x0e\x65\x5d\x7c\x81\x93\x74\xdb\x27\x8f\x38\xe4\xb9\xf1\x9c\xef\x5c\xc6\xb4\xe1\x7f\x41\x6d\xb8\x92\x25\xac\xaf\x4e\x2a\x6a\x69\x79\x02\xd0\x68\xb5\x42\x5b\x63\x6b\x0a\xdd\x0a\x34\x25\x74\x27\x00\x00\x4b\xad\xda\xc6\x94\xfe\x79\x0a\x92\xae\xb0\x04\xfc\x48\x57\x8d\xc0\xa9\xdf\xe8\xdf\x00\x70\x69\x51\xaf\xa9\x28\xe1\xd5\xa5\x81\x17\x50\xe1\x82\xb6\xc2\x1a\xb0\x0a\x96\x42\xcd\xa9\x48\x5b\xe2\x89\xc0\x66\x9b\xf5\x66\x25\x7a\xc6\xee\x35\x59\xf0\xb8\x27\xb0\x1f\x9d\x06\xe1\x46\x27\x7e\xe9\x05\xbc\x05\xc3\x34\x6d\x10\x98\x92\x0b\xbe\x6c\x35\xb5\x5c\x49\x58\x28\x0d\xba\x95\x92\xcb\x25\xfc\x98\xa8\x83\x92\x40\xe1\x87\x76\x8e\x5a\xa2\x45\x03\x4c\xb4\xc6\xa2\x2e\x22\xb1\x9f\x6b\x6e\xa0\x35\x68\xc0\x60\x43\x35\xb5\xb8\x4d\xdd\x78\xba\xf1\x10\x30\xb5\x6a\x94\x44\x69\x0d\x8c\x79\x81\x05\xbc\xfd\xf1\x1d\x18\xd4\x6b\xd4\xe7\x20\x55\x85\x93\x48\x96\xca\xca\xaf\x73\x86\xde\x1a\x54\x08\x75\x0b\x48\x59\xed\x7e\xb5\x06\xa1\xe2\x8b\x05\x6a\x94\x16\x68\x6b\x6b\x94\x96\xb3\xa0\x47\xe4\x1b\x05\x8c\xf4\x32\x05\x04\x9d\xa3\x30\x70\xcb\x85\x80\x39\x02\xad\x2a\xac\x80\x9a\x5c\xe7\xb8\x45\x49\x58\xa1\xd5\x9c\x19\x58\x73\x0a\xb6\xc6\x48\x6d\xe6\x37\xac\x68\x33\x03\x8d\xfe\xd9\x19\x8d\x32\xc7\xbf\xe8\xcd\xfc\x53\x6e\x06\x6f\x85\x41\xd9\xc3\xd2\xe1\xc7\x46\x39\x6b\x66\x7b\x9d\x70\x28\xab\x46\x71\x19\x5c\xc3\xd6\xd8\xbb\xca\xc5\x4d\x3a\x1a\x69\x45\xab\x81\x71\xfb\xfa\xbb\x99\xa5\xf3\x33\xd0\x4a\xa0\xb7\xaf\x7f\x13\xe5\xf7\x0a\x58\x05\x4a\x8a\x0d\xdc\x20\x36\x91\x9a\x63\x35\xf0\xa6\xc6\x28\xc6\xa9\xc5\x0a\x6e\xb9\xad\x0f\x08\x92\x44\x68\x8d\xa7\x9a\xcc\x16\xb7\xfa\x80\xa8\xa0\x51\xda\xc2\xac\xb6\xb6\x31\xb3\x22\xf8\xd1\xad\xd2\x37\xc1\x61\xdc\x49\x81\x99\x15\xa0\xc2\x46\xa8\xcd\x0a\x83\x1c\x91\xe2\x2d\x0a\xe1\xcc\xf3\xa7\xb7\x07\xb6\x06\x3b\x07\x8f\x24\xd1\x33\xfa\xb8\xfc\xbb\x9a\x93\x10\x9b\xa3\x41\xf8\x29\x6d\x78\xb4\x7b\x0c\x18\x80\xe1\x2d\x31\xd5\x36\x15\x47\xc7\x19\xb4\x1c\xac\x14\xd7\xc1\xab\x69\x1a\xca\x86\x60\x4c\xab\xf9\xc2\xb4\xb7\x4b\xcf\xce\xb0\x1a\x9d\x54\xde\x34\x71\xcd\x0a\x13\x19\x0f\x47\x19\xf5\xa1\x5e\xc2\xc5\x9a\xea\x0b\xdd\xca\x0b\x83\x4c\xa3\x35\xd9\x5d\x14\x5c\x5d\xc4\xeb\xa0\x8c\xa9\x56\xda\x0b\x46\x0b\xa6\x6d\xa2\x12\x94\x8d\x86\xc8\x0e\x46\xa1\x0a\xb3\x66\x71\xef\x1c\xa9\x46\x4d\xac\xba\x41\xf9\x24\xce\xfe\x64\xaf\xe5\x0b\xf8\x01\xb1\x09\x0e\x77\x8f\x1f\x0d\x0e\xe8\x5c\xc3\x6d\xf6\xa6\xf1\x1e\x14\x3c\x27\xd1\xf4\x51\x4d\xab\x0a\x2c\xd5\x4b\x8c\x27\x3c\x6c\x64\xfe\x71\x5b\x73\x56\xe7\x41\x47\xab\xca\x00\x95\x89\x11\x58\x95\x28\x1e\x97\xad\xe8\x71\x39\x84\xd1\xae\x73\x18\xd5\x6a\x86\x24\x20\x4a\x09\xbf\x10\xb2\x42\x4b\x49\xee\x52\x81\x92\xbf\x81\x73\xd8\x7d\xdf\x0b\x45\x9c\xba\x7e\xd7\x87\x74\x79\x01\x72\xca\x21\x62\x83\x2c\x4b\xfc\x98\xdf\xe5\x9b\xe0\x49\x07\x71\x89\x29\x69\xb5\x12\x62\x07\x97\xbe\x77\x86\x5b\x51\x0f\xdd\x0e\x9d\x13\x3a\x51\xb8\xe8\x91\x31\xd9\x4c\x49\x28\xaf\xaf\xaf\xc1\xd6\xd4\x7a\x92\x94\x4b\x03\xaa\xc1\x90\x5f\xa8\x48\x60\xba\x50\x3a\x83\x97\x03\xdc\x0f\xc5\x67\xb6\x7d\xf4\xff\x15\x31\x9f\x19\x86\x9e\x29\x40\xcf\x7d\xae\x71\x19\x3a\xd1\x35\x68\xfd\x26\x9f\x01\xac\x82\xdf\x5f\x5f\x5f\xc7\x0c\xc0\x4d\xce\x6b\x4f\x85\x72\xc7\x63\x9c\xd7\xbd\x6f\x50\xfe\x54\xf3\x85\x4d\x0c\x82\xcb\x9a\x5f\x53\x70\x1e\x16\x89\x56\x95\x46\x63\x08\xd9\xa5\xac\xb1\x11\x94\x61\x5a\x0f\xa0\x17\x0e\x97\x90\x1d\xbd\xcb\x7e\x5c\x9c\x4d\xc6\xdf\x96\xe5\x5f\xab\xb3\x49\xf6\xce\x53\x73\x79\xb3\x84\x97\x57\x2e\x98\x0f\x63\x86\x83\x83\x7d\x68\x71\x2f\x4c\x3c\x16\x1e\x1c\x4c\x0b\xb4\xde\x8b\x94\xad\xb7\x8a\xc8\xe2\x28\x52\x78\x11\x47\x5f\x00\x22\x9e\x29\xec\x1f\x11\xf5\x4e\xd5\xe4\xfd\xdf\x69\xd5\x00\x85\x35\xea\x0d\xd4\x7c\x59\x03\xa3\xba\xe2\x92\x0a\x6e\x37\xd1\xc8\xe1\x16\x5c\xbc\x49\xa6\xb4\x46\x66\x81\x4b\x78\x55\x7c\x53\xc0\x3b\xdb\x97\xc6\x89\xe0\x82\x7f\xc4\x2a\x6c\x78\xdd\xc7\x54\xa0\x43\x1e\x11\x5a\xee\x82\xf6\x39\x71\xa5\xd5\x4e\x78\x8c\x54\x83\xd2\xb8\x98\x26\xa6\x92\xa4\x51\x15\x19\x1b\xb4\x6d\xd3\x59\xa4\xba\x52\xb7\x72\x42\x04\xb5\x28\xd9\x66\x5c\x9c\x4e\x46\xf7\x05\x7a\xcf\xab\xaf\xdb\xef\xf2\xdb\x0d\x6c\x67\xd1\x20\x3d\x71\xc1\x72\x24\x79\xbe\xad\xd6\xdc\x28\xbd\x1d\x0b\x7f\xc0\x25\x0f\xad\x14\x97\xde\x85\xe1\xaa\xf8\xe6\x3c\x54\x22\x07\x42\xe4\x82\xd1\x40\x69\x3b\x56\x22\x41\x8d\x0e\x61\x4c\x1f\x39\xa8\xf3\x70\x09\x74\xfb\xe6\xad\x51\x55\xd1\x0b\x6a\x6b\x65\x10\xe6\x9b\x1e\x51\x8f\x47\x4c\x2f\xc1\x17\x49\xac\xcf\x9b\x2c\xa3\x75\x48\x43\x6d\x5d\xee\xda\xf8\x51\x39\xd5\x47\x57\x8a\x86\xef\x3f\x32\xd1\x56\x08\xd4\xe7\x31\xb5\x38\x14\x63\x26\x42\x1d\x95\x21\x61\xf1\x79\x6b\xd1\xa5\x3b\xc3\x97\x92\x2f\x38\xa3\x32\xcb\x58\xb8\x52\x7a\xe3\x1b\x5b\x2e\x41\x38\x1c\xef\x9b\x66\xe3\x52\x23\x1a\xf4\x94\xe6\x08\x06\x05\x32\xcb\xd7\x28\x36\x80\x92\xce\x45\x68\x5f\x25\x32\x34\x86\xea\xcd\x10\xb6\xca\x39\x49\xc5\xdb\x15\xb8\x8e\x6a\x45\x85\x18\x68\x7e\x9e\x30\x4e\xde\x4a\xc6\xac\x69\x49\x6b\x50\x13\x83\x4c\xc9\xca\x10\xab\x2c\x15\x9d\x5b\x66\x0b\x43\x1a\xd4\x5c\xa5\xd5\x60\x0e\xd2\x1a\xba\x44\x32\xdf\x58\x34\xfd\x92\xb9\xa5\x4d\xff\xec\xda\x45\x2e\x97\xc4\xa0\xdd\xde\xc4\x28\xab\xb1\x13\xd4\x58\x62\x10\x65\xb7\x30\x64\xac\x91\x56\x77\x78\xdf\x6a\x6e\xf1\xce\x9a\x41\x66\x95\x26\x0e\x55\x3a\xae\xc2\x5f\x77\xd4\x90\x15\xea\x25\x56\xf9\xd1\xed\xb5\x49\x67\xa9\xb9\x31\xc4\x58\x6a\xb1\x97\x64\x41\xb9\x60\xd2\xe6\x3f\x5b\x8d\x89\x59\x83\x8c\x64\x8a\x11\xc1\x57\xbc\xd7\xc5\x09\x5d\x9c\x4e\xc2\xaf\xfc\x80\x5b\x9d\xa4\x10\xfd\x12\x98\xb7\x53\xf7\x6d\x83\xdf\xcf\x35\x6e\xcd\x45\x84\x50\xb7\xa1\xae\xa3\xcc\xb6\x54\x0c\x33\x8a\x40\x39\x6b\xbb\x9c\x83\xf7\x45\x1f\x56\x91\x5e\x1c\xbe\xc0\x42\x39\x4a\x9e\xa4\x94\xca\xfa\xba\x21\x2a\xdc\xb3\x3e\x85\x59\x36\x19\x73\x18\xe1\x59\xcc\x4a\x78\xef\xea\xd8\xc8\x70\x98\x2c\xb9\x08\xad\xe9\xda\x45\xf3\x9a\x8a\x16\x5d\x3c\xcf\xac\x6e\x71\x76\x98\xa0\x83\xc4\x59\x09\xef\x16\x5e\xa8\x9d\x02\x87\xbb\xba\x98\x39\xf1\x7d\xd5\x0b\x1b\xd5\x86\x8c\x2a\x31\x69\xe4\x50\xc0\x17\xc1\xdc\x0f\x74\xe2\x14\x04\x7e\x03\x2b\x65\x2c\x08\x7e\xe3\x82\xbb\x2f\x93\x67\x03\xe2\xce\x9c\x7c\x6e\x6d\x6b\xc6\x56\x1c\x92\xd5\x81\xdf\xae\xa4\x6e\xd5\x49\x29\x95\x85\x59\x8f\x8c\x33\x50\x6b\xd4\x9a\x57\xe8\xa5\x3a\x4c\x52\x69\xbb\x4b\x92\xea\x3e\xa3\x55\x61\x60\x38\x4c\xe7\xfa\x22\x7f\x18\x03\xf5\xb7\xef\xad\x93\xcc\x40\x9b\x46\xab\x46\x73\x6a\x51\x6c\x8e\xa7\xa9\x48\x60\x9a\xdc\x2f\x05\xc3\xa7\x6b\xfa\x5e\xc0\xcf\xef\xbf\x7b\x5f\x06\x59\x4d\xad\x5a\x51\x39\x5f\x6d\x50\xc7\xaa\x3b\xed\xe4\x32\x5c\x3f\x31\x37\xbc\x21\x6b\xd4\x7c\xb1\x29\xc1\xf9\xd4\x13\x1b\xb9\xe3\x81\xee\x44\x53\x99\x6f\x73\xb9\xd0\xd4\x58\xdd\x32\xdb\x6a\xcc\x8a\xe5\xb4\xff\x21\x7d\x4f\x6a\x1a\x3f\x64\x2d\xe2\xde\x86\x66\x00\xfb\x58\x62\x74\x42\x2d\x97\x5c\x2e\xbb\xe8\x1c\x9d\x23\x3b\x2d\xce\xba\x54\xd3\x0d\x4f\xd3\xe2\x6c\x94\xe9\xe1\x72\xc8\x61\x05\x60\x45\x25\x5d\x62\xe5\xca\x99\xd0\x09\x44\x95\xe3\xac\xe7\x51\x0a\xe6\x8d\xdd\x3e\x1d\xb7\xd2\xd9\xa0\xe3\x10\x0c\xbe\xbd\x98\x3a\xa7\xd7\x16\x75\xa7\x55\x6b\x51\x4f\x1d\xf8\x9b\xd1\xdd\xab\x09\x55\xd8\x00\x36\x1a\xff\xd1\xa2\xb1\x58\x05\x0d\xb8\x5c\x3e\x49\xf6\x01\x05\xc9\x20\x17\xe1\x8a\x04\xbb\x3c\xfc\xea\xbc\x73\x3e\xb3\x04\x0e\x25\xf7\x49\x70\xb7\x67\xdd\xed\x5a\xc3\xd9\xac\x69\x1d\xda\x56\x8f\x93\xdf\x4e\x9e\x57\x56\x87\x87\x4f\x93\x34\x2f\x32\xf7\xca\x5b\x9c\x1d\x97\x35\x35\xe8\xfb\x66\x0b\xf7\x0b\xae\xb4\x7d\x9a\xe0\xbb\x83\x81\xbd\xa3\x81\x37\xe3\xad\x01\xc1\xee\x88\xe0\xe5\xd7\x99\x7a\x07\x0b\x8e\x23\x25\x47\xaf\x63\x56\x75\x3c\xe6\x6e\x8f\xc2\xd4\x7d\x66\xd8\x47\xe7\x59\x31\xe4\x91\x02\x1c\x1f\xb6\x24\xa8\x39\x8f\xf3\x6b\xee\x3f\x16\x21\x73\x30\x12\x0a\xa7\xbe\x01\x54\x32\x64\xdd\xd7\x57\x97\x97\x0f\x18\x91\x24\xca\x9f\x30\x8d\x3e\xb5\xdd\xfa\xc4\xfd\x89\xaf\x78\x59\xd3\x76\xfe\x61\x5c\x71\x73\xd3\xa5\x8f\x45\x42\xf8\x5e\x60\x42\x86\x24\xf5\x02\x1a\x8d\x7e\xfe\xeb\xda\xbf\x76\x1e\x3b\x40\x57\x0a\x49\xb4\xae\x1f\x39\x77\x0f\x2e\x0b\x9c\xc3\x7a\x15\xfe\x52\x59\x81\xff\x26\xbb\x31\x16\x57\xae\xfc\xe1\x78\x6c\xe0\x77\x48\x83\xbb\xee\xd4\x2b\x31\x0e\xc2\x47\xbe\xe4\x5d\x43\x8a\xb3\x2e\x30\x27\x63\xa9\x3b\x5b\x37\x4e\x87\x6e\x90\x81\x8c\x17\x1a\xb1\x33\xfc\x9f\xd8\x55\xe8\x7d\x18\xb5\x56\x7a\xd2\x45\x2d\xc8\xd8\x6a\x2a\xcd\x8a\xdb\x4e\x23\x43\xbe\xc6\x09\x19\x3b\x0b\x76\xa8\xb5\x99\x4c\x26\xa3\x83\x33\xc7\x20\xfd\xfe\xa1\xa2\x46\xff\xe9\x8f\xbc\xbc\x7a\xd6\x0b\xec\x55\x8f\x4a\x67\x8a\xf6\xfa\xe4\x77\xf8\x1c\x26\xef\x15\x71\x80\xf5\x34\x53\x24\x13\xc4\xaa\x87\xca\x0d\x34\x54\x5b\x4e\x85\x0f\x6b\x69\xf8\x1a\x1f\xea\x2b\xe7\x10\x6e\xf1\x31\x46\xeb\x6f\xba\x38\x7b\xb3\x46\x5b\x3f\xc4\x3e\xe7\xb0\x72\x31\xed\xcb\xd2\xc7\xb0\x7a\x80\xe3\xbd\x19\xff\xf2\xb7\x8b\x0f\xc5\x69\x77\xe1\x2d\x7a\x5f\x6f\xfb\xa0\x29\x79\x8a\x8f\xe2\x74\x52\x5e\x5d\x7e\xfd\xdb\xcb\xd1\xfe\xbb\x18\xbd\xfc\xd7\xd5\xbf\x4b\x87\x96\x87\xef\xf2\x6e\xc6\x7c\x50\x76\x1a\xfa\xe9\x6c\x95\x2b\x52\x2b\x63\xb7\x93\xc6\x5d\x76\x5c\x1a\x4b\x25\xc3\x8c\xdf\x27\xec\xe7\x1d\x7e\x59\x5c\x35\xc2\xff\xfb\x46\x6c\xcf\xe6\x5a\xdd\xa0\xde\x4d\x1f\x43\xf1\xde\x1f\x49\x0d\x59\x38\xf2\x99\x46\xee\x3d\xd3\x63\x5f\xe7\xd2\xc7\xfc\xe2\x5e\xa9\x7f\xb5\x9f\xed\xee\xd5\xec\x09\xd1\xf4\xb9\x3e\x83\xa5\xfb\xc9\x3f\x51\x1f\x74\xd1\xd0\x63\x1d\xf3\xc8\xb0\x63\x9f\x03\x7e\x19\xff\xcb\xbb\xc2\xff\x99\xef\xc3\xee\xd7\x7f\xaf\x4b\xe5\x26\x7f\x73\xf5\xfa\xd5\xef\xa6\x96\x35\xc1\x44\x54\xa0\xb6\x5c\xa6\xab\xf7\xbf\xc3\x50\x41\xe7\xb2\xef\xba\x0d\x80\xa3\xc7\xd9\xee\xf0\x65\xda\x4f\x1f\xb6\x6d\xf5\x95\x50\x8c\x0a\x87\xf3\xe5\xeb\xcb\xd7\xaf\xbe\x3a\xb9\xe1\xb2\x2a\xe1\x8f\xfe\xf8\x9f\x69\x73\xe2\xd4\xed\xff\x8d\x30\xf8\xca\xd0\xdb\x9d\x64\x97\x52\x66\xf1\x1d\xdb\xcd\x93\xff\x04\x00\x00\xff\xff\xba\xb7\x4f\x45\x8e\x28\x00\x00")

func configmapOpenshiftMetricsPrometheusYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapOpenshiftMetricsPrometheusYaml,
		"ConfigMap/openshift-metrics/prometheus.yaml",
	)
}

func configmapOpenshiftMetricsPrometheusYaml() (*asset, error) {
	bytes, err := configmapOpenshiftMetricsPrometheusYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/openshift-metrics/prometheus.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapOpenshiftNodeNodeConfigComputeYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x51\x8f\xdb\x36\x0c\x7e\xcf\xaf\x10\xfa\x52\x20\xa8\xed\xe4\xda\xa2\x80\x80\x3e\xdc\xee\x6e\x5d\x31\xf4\x76\x4b\x8a\xbd\x2b\x12\x93\x68\x27\x8b\x1a\x45\xb9\xcd\xb0\x1f\x3f\xc8\x96\x63\xe7\x6e\x3b\x6c\x4f\x36\xa8\x8f\xe4\x47\x52\xfc\xa4\x82\xfd\x0d\x28\x5a\xf4\x52\x74\xeb\x85\x51\xac\xe4\x42\x08\x8f\x06\x2a\x8d\x7e\x6f\x0f\xf5\x49\xb5\x4e\x8a\xbf\x16\x42\x08\xa1\x9c\xc3\x6f\xb7\x36\xaa\x9d\x03\x73\x8b\xfa\x11\x48\x8a\xbd\x72\x11\x86\xe3\xcb\x68\xd9\x64\x7c\xfc\xc1\x7a\x73\x6d\x0c\x41\x8c\x52\xac\xaf\x3e\xd4\xab\x7a\x55\xaf\xe5\xfb\xb7\x23\xe0\x16\x5b\x65\xbd\x14\xda\xa5\xc8\x40\xb5\x43\xad\xdc\x78\xf8\xf9\x41\x8a\xf5\x87\xab\x7a\x9d\xfd\xce\x31\x37\xa0\x13\x45\xdb\xc1\x06\x22\xba\xee\x06\xfd\x5e\x8a\x06\x58\x37\x48\xf6\x60\x7d\x93\x2b\x68\xa8\x3f\xac\x73\x21\x83\x63\xcf\xf8\xa6\xaf\x4b\xf6\x96\xd1\xb6\x3d\xda\x76\x83\xc8\xb7\x96\x40\x33\xd2\x49\x8a\xa6\x53\xd4\x38\xbb\x6b\x06\x44\x3c\xda\xf6\x99\xcb\x36\xff\x71\xc1\x52\xf2\x33\x6c\x1d\x51\x3f\x16\x07\xf8\x0e\xfa\x27\xe5\x8d\x03\xba\x57\x2d\x48\xe1\x15\xdb\x6e\xe8\x99\x6d\xd5\x01\x2e\x29\xed\x91\x5a\xc5\x52\xbc\x5e\x2e\x97\xe2\xd3\xdd\xfd\xdd\xe6\xfa\xeb\xdd\xad\x58\x2e\x97\xaf\x0b\xc2\x29\x86\xc8\xf3\xd6\xdb\xc0\x79\x28\x71\x7b\xf2\xfa\x01\xc8\xa2\x91\xe2\xed\x2a\xf6\x67\x8f\xd6\x1b\x29\xee\xd1\x94\x3c\x83\x31\xed\xc0\x01\x5f\xd3\x21\xb5\xe0\x39\x8e\xc9\x77\x88\x1c\x99\x54\xa8\x32\x42\x5f\x10\xab\x9e\xb7\xf8\x0c\xaf\x27\x78\x41\x6b\x20\xae\x8c\xa5\x17\xbc\x33\xc4\xee\xad\xce\xe5\x8c\x5e\x0e\x93\xa9\x5e\xca\xdb\x23\x02\x61\x67\x0d\x50\xa3\xfe\x4c\x04\xd3\x88\xc7\x00\xe3\xf9\x14\xa2\x07\x8e\x03\xf1\xb9\x59\x39\x0b\x13\x3a\x07\x54\x29\x66\xa5\x8f\x95\x81\xfc\x99\x9c\x5e\x31\x25\x78\x35\xce\x05\x14\x27\x82\xea\x90\xe9\x4e\x98\x0d\xb2\x62\xf8\x79\xe8\xe7\x8d\xb3\xe0\xf9\x66\xaa\xeb\x63\x8e\xf0\xe6\x02\xb3\x05\xea\x80\x9e\x62\x4a\xbc\x7e\xf5\x9c\xda\x81\x9b\xa5\xe8\x8d\x84\x0e\xfa\x2e\x93\x07\x86\x58\x5b\x6c\x34\xb6\x21\x5d\xfa\x57\x82\xe0\x60\xd1\x7f\x0c\x64\x5b\x45\xa7\x62\x0e\x68\xaa\x56\x79\xbb\x87\xc8\x55\x50\x7c\x7c\x61\x2a\x01\xcd\x38\x0d\xea\x79\x57\xf3\x39\xfd\x4b\x73\x32\xb1\x8a\x20\xe6\xda\xcc\x0c\xf3\xec\x0e\x8f\x0e\xf1\x14\x19\xda\xff\xe1\xd2\xaa\xac\x0e\xa5\xc1\xe8\x3d\x68\xb6\xe8\x7f\xe9\x80\xc8\x9a\x89\x97\xd2\x1a\x42\x06\x30\x78\xfe\x7a\x0a\x10\xa5\x50\x21\xb8\xcc\xde\xa2\x6f\x3a\x6f\xe6\x5d\x0c\x84\x8c\xbb\xb4\x7f\x33\xc7\xfc\x1e\xd1\x8f\xfb\x90\x28\x6f\xda\xd5\x6a\x35\xde\xaf\x29\xf2\x7f\x0a\x5c\xdc\xfe\x08\x59\xfd\x4a\x94\xa1\x94\x7c\x1d\xca\xe6\xf7\x13\x7e\xba\x42\x1e\xf8\x1b\xd2\xe3\xa5\x38\xb4\x9c\xa4\x58\xbf\x7b\x3f\xd2\x29\xa0\x07\x97\x0e\xd6\x0f\xea\x42\x60\x8e\x8a\x1b\x0c\xe0\xe3\xd1\xee\xb9\xc2\x2e\x56\x31\xed\x3c\xf0\xa2\xdc\x85\x2f\xe5\x2a\x9c\xd3\x27\x37\x28\x6e\x20\xfc\x7e\x7a\x26\x0a\xbd\xb5\x6a\xd1\xc0\x34\xa6\x51\x71\x7a\x43\x9e\xa1\xf5\x87\xcf\x7e\x8f\x67\x21\x99\xcb\xfe\xaa\x17\xfd\x95\x5c\xaf\xae\xce\xcc\x33\xe0\x7e\x60\x2f\x05\xeb\xf0\xee\xbc\xc0\xfd\x84\xaf\xa5\xd0\xaa\xd6\x34\x70\xee\xd0\xa5\xf6\x89\x4e\xf6\xef\xc4\xaf\x09\x87\x37\xab\x30\x05\xfa\x71\xfb\x89\x30\x85\x59\x51\x83\xf3\x3f\x69\x7b\xb9\xf6\xe7\x56\x0d\x6f\x4f\x3d\x38\xc4\xc5\xa0\x9c\x43\xd6\x2f\x2a\x2c\x5a\x60\x75\x7e\x23\x07\x25\x9f\x5e\xca\xaa\x6c\x63\x39\x8b\x41\x69\x90\x62\x9a\x42\x86\x2e\xfe\x0e\x00\x00\xff\xff\x75\x46\x51\x90\x71\x07\x00\x00")

func configmapOpenshiftNodeNodeConfigComputeYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapOpenshiftNodeNodeConfigComputeYaml,
		"ConfigMap/openshift-node/node-config-compute.yaml",
	)
}

func configmapOpenshiftNodeNodeConfigComputeYaml() (*asset, error) {
	bytes, err := configmapOpenshiftNodeNodeConfigComputeYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/openshift-node/node-config-compute.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapOpenshiftNodeNodeConfigInfraYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x51\x8f\xdb\x36\x0c\x7e\xcf\xaf\x10\xfa\x52\x20\xa8\xed\xe4\xda\xa2\x80\x80\x3e\xdc\x2e\xb7\xae\x18\x7a\xbb\x25\xc5\xde\x15\x89\x4e\xb4\x93\x45\x8d\xa2\xdd\x66\xd8\x8f\x1f\x64\xd9\xb1\x73\xd9\x0e\xdb\x53\x02\xf2\x23\xf9\x91\x14\x3f\xab\x60\x7f\x03\x8a\x16\xbd\x14\xdd\x7a\x61\x14\x2b\xb9\x10\xc2\xa3\x81\x42\xa3\xaf\xed\xa1\x3c\xa9\xc6\x49\xf1\xd7\x42\x08\x21\x94\x73\xf8\x6d\x63\xa3\xda\x3b\x30\x1b\xd4\x4f\x40\x52\xd4\xca\x45\xc8\xee\xcb\x6c\xc9\x64\x7c\xfc\xc1\x7a\x73\x6b\x0c\x41\x8c\x52\xac\x6f\x3e\x94\xab\x72\x55\xae\xe5\xfb\xb7\x23\x60\x83\x8d\xb2\x5e\x0a\xed\xda\xc8\x40\xa5\x43\xad\xdc\xe8\xfc\xfc\x28\xc5\xfa\xc3\x4d\xb9\x4e\x71\xe7\x9c\x5b\xd0\x2d\x45\xdb\xc1\x16\x22\xba\xee\x0e\x7d\x2d\x45\x05\xac\x2b\x24\x7b\xb0\xbe\x4a\x1d\x54\xd4\x3b\xcb\xd4\x48\x0e\xec\x19\xdf\xf5\x7d\xc9\xde\x32\xda\x76\x47\xdb\x6c\x11\x79\x63\x09\x34\x23\x9d\xa4\xa8\x3a\x45\x95\xb3\xfb\x2a\x23\xe2\xd1\x36\x57\x21\xbb\xf4\x8f\x07\x2c\xb5\x7e\x86\x2d\x23\xea\xa7\x21\x00\xbe\x83\xfe\x49\x79\xe3\x80\x1e\x54\x03\x52\x78\xc5\xb6\xcb\x33\xb3\x8d\x3a\xc0\x25\xa5\x1a\xa9\x51\x2c\xc5\xeb\xe5\x72\x29\x3e\xdd\x3f\xdc\x6f\x6f\xbf\xde\x6f\xc4\x72\xb9\x7c\x3d\x20\x9c\x62\x88\x3c\x1f\xbd\x0d\x9c\x96\x12\x77\x27\xaf\x1f\x81\x2c\x1a\x29\xde\xae\x62\xef\x7b\xb2\xde\x48\xf1\x80\x66\xa8\x93\x8d\xed\x1e\x1c\xf0\x2d\x1d\xda\x06\x3c\xc7\xb1\xf8\x1e\x91\x23\x93\x0a\x45\x42\xe8\x0b\x62\xc5\xf5\x88\xcf\xf0\x72\x82\x0f\x68\x0d\xc4\x85\xb1\xf4\x42\x74\x82\xd8\xda\xea\xd4\xce\x18\xe5\xb0\x35\xc5\x4b\x75\x7b\x44\x20\xec\xac\x01\xaa\xd4\x9f\x2d\xc1\xb4\xe2\x31\xc1\xe8\x9f\x52\xf4\xc0\x71\x21\x3e\x0d\x2b\x55\x61\x42\xe7\x80\x0a\xc5\xac\xf4\xb1\x30\x90\x7e\xa6\xa0\x57\x4c\x2d\xbc\x1a\xf7\x02\x8a\x5b\x82\xe2\x90\xe8\x4e\x98\x2d\xb2\x62\xf8\x39\xcf\xf3\xce\x59\xf0\x7c\x37\xf5\xf5\x31\x65\x78\x73\x81\xd9\x01\x75\x40\xcf\x31\x43\xbe\xfe\xf4\x9c\xda\x83\x9b\x95\xe8\x8d\x84\x0e\xfa\x29\x93\x07\x86\x58\x5a\xac\xac\xaf\x49\xcd\xa3\x0b\x41\x70\xb0\xe8\x3f\xf6\x9e\xc1\x18\xd0\x14\x8d\xf2\xb6\x86\xc8\x45\x50\x7c\x7c\x61\x23\x01\xcd\xb8\x09\xea\x39\x17\xf3\x1d\xfd\xcb\x60\x12\xa9\x82\x20\xa6\xbe\xcc\x0c\x73\xf5\x7e\xc7\x80\x78\x8a\x0c\xcd\xff\x08\x69\x54\x52\x86\x61\xb8\xe8\x3d\x68\xb6\xe8\x7f\xe9\x80\xc8\x9a\x89\x97\xd2\x1a\x42\x02\x30\x78\xfe\x7a\x0a\x10\xa5\x50\x21\xb8\xc4\xde\xa2\xaf\x3a\x6f\xe6\x13\x0c\x84\x8c\xfb\xb6\x7e\x33\xc7\xfc\x1e\xd1\x8f\xb7\xd0\x52\xba\xb2\x9b\xd5\x6a\x7c\x5b\x53\xe6\xff\x94\x78\x08\xfb\x23\x24\xe5\x1b\xb2\xe4\x56\xd2\x53\x18\xae\xbe\xdf\xee\xf3\xf3\xf1\xc0\xdf\x90\x9e\x2e\x85\xa1\xe1\x56\x8a\xf5\xbb\xf7\x23\x9d\x01\xf4\xe8\xda\x83\xf5\x59\x59\x08\xcc\x51\x71\x85\x01\x7c\x3c\xda\x9a\x0b\xec\x62\x11\xdb\xbd\x07\x5e\x0c\x6f\xe1\xcb\xf0\x14\xce\xe5\x5b\x97\xd5\x36\x10\x7e\x3f\x5d\x09\x42\x6f\x2d\x1a\x34\x30\xad\x69\x54\x9b\xde\x90\x76\x68\xfd\xe1\xb3\xaf\xf1\x2c\x22\x73\xc9\x5f\xf5\x82\xbf\x92\xeb\xd5\xcd\x99\x79\x02\x3c\x64\xf6\x52\xb0\x0e\xef\xce\xc7\xdb\x6f\xf8\x56\x0a\xad\x4a\x4d\x99\x73\x87\xae\x6d\x9e\x69\x64\xff\x8d\xf8\xb5\xc5\xfc\xbd\x1a\x98\x02\xfd\xb8\xfb\x44\xd8\x86\x59\x53\x39\xf8\x9f\x74\x7d\x78\xf6\xe7\x51\xe5\xef\x4e\x99\x03\xe2\x22\xab\x66\xae\xfa\x45\x85\x45\x03\xac\xce\xdf\xc7\xac\xe2\xd3\x57\xb2\x18\xef\x2d\x79\x62\x50\x1a\xa4\x98\x76\x90\x80\x8b\xbf\x03\x00\x00\xff\xff\xd8\x23\x3d\x8d\x6b\x07\x00\x00")

func configmapOpenshiftNodeNodeConfigInfraYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapOpenshiftNodeNodeConfigInfraYaml,
		"ConfigMap/openshift-node/node-config-infra.yaml",
	)
}

func configmapOpenshiftNodeNodeConfigInfraYaml() (*asset, error) {
	bytes, err := configmapOpenshiftNodeNodeConfigInfraYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/openshift-node/node-config-infra.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapOpenshiftNodeNodeConfigMasterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\xdf\x6f\xdb\x36\x10\x7e\xf7\x5f\x41\xf4\xa5\x80\x51\x49\x76\xda\xa2\x00\x81\x3e\x64\x49\xd6\x15\x43\xb3\x2c\x29\xf6\x4e\x93\x27\x9b\x0b\xc5\xe3\x8e\x27\xb5\x1e\xf6\xc7\x0f\x24\x25\x4b\x4e\xd6\x60\x4f\x36\xee\xbe\xfb\xf9\xe9\x3e\xaa\x60\xff\x00\x8a\x16\xbd\x14\xc3\x76\x65\x14\x2b\xb9\x12\xc2\xa3\x81\x4a\xa3\x6f\xed\xbe\x3e\xaa\xce\x49\xf1\xcf\x4a\x08\x21\x94\x73\xf8\xed\xda\x46\xb5\x73\x60\xae\x51\x3f\x02\x49\xd1\x2a\x17\xa1\xb8\xcf\xb3\x25\x93\xf1\xf1\x27\xeb\xcd\xa5\x31\x04\x31\x4a\xb1\xbd\xf8\x50\x6f\xea\x4d\xbd\x95\xef\xdf\x4e\x80\x6b\xec\x94\xf5\x52\x68\xd7\x47\x06\xaa\x1d\x6a\xe5\x26\xe7\xe7\x3b\x29\xb6\x1f\x2e\xea\x6d\x8a\x3b\xe5\xbc\x07\xdd\x53\xb4\x03\xdc\x43\x44\x37\x5c\xa1\x6f\xa5\x68\x80\x75\x83\x64\xf7\xd6\x37\x69\x82\x86\xb2\xb3\x4e\x83\x94\xc0\xdc\xf1\x55\x9e\x4b\x66\xcb\x64\x7b\x38\xd8\xee\x1e\x91\xaf\x2d\x81\x66\xa4\xa3\x14\xcd\xa0\xa8\x71\x76\xd7\x14\x44\x3c\xd8\xee\x59\xc8\x43\xfa\xc7\x23\x96\x7a\xbf\xc0\xd6\x11\xf5\xe3\x18\x00\xdf\x41\xff\xa2\xbc\x71\x40\xb7\xaa\x03\x29\xbc\x62\x3b\x94\x9d\xd9\x4e\xed\xe1\xbc\xa5\x16\xa9\x53\x2c\xc5\xeb\xf5\x7a\x2d\x3e\xdd\xdc\xde\xdc\x5f\x7e\xbd\xb9\x16\xeb\xf5\xfa\xf5\x88\x70\x8a\x21\xf2\x72\xf5\x36\x70\x22\x25\x3e\x1c\xbd\xbe\x03\xb2\x68\xa4\x78\xbb\x89\xd9\xf7\x68\xbd\x91\xe2\x16\xcd\x58\xa7\x18\xfb\x1d\x38\xe0\x4b\xda\xf7\x1d\x78\x8e\x53\xf1\x1d\x22\x47\x26\x15\xaa\x84\xd0\x67\x8d\x55\xcf\x57\x7c\x82\xd7\x33\x7c\x44\x6b\x20\xae\x8c\xa5\x17\xa2\x13\xc4\xb6\x56\xa7\x71\xa6\x28\x87\xbd\xa9\x5e\xaa\x9b\x11\x81\x70\xb0\x06\xa8\x51\x7f\xf7\x04\x33\xc5\x53\x82\xc9\x3f\xa7\xc8\xc0\x89\x10\x9f\x96\x95\xaa\x30\xa1\x73\x40\x95\x62\x56\xfa\x50\x19\x48\x3f\x73\xd0\x2b\xa6\x1e\x5e\x4d\xbc\x80\xe2\x9e\xa0\xda\xa7\x76\x67\xcc\x3d\xb2\x62\xf8\xb5\xec\xf3\xca\x59\xf0\x7c\x35\xcf\xf5\x31\x65\x78\x73\x86\x79\x00\x1a\x80\x9e\x62\xc6\x7c\xf9\xf4\x9c\xda\x81\x5b\x94\xc8\x46\x42\x07\x79\xcb\xe4\x81\x21\xd6\x16\x9b\x4e\xa5\x83\x59\x86\x57\x02\x03\xf8\x78\xb0\x2d\x57\xd6\xb7\xa4\x3e\xaa\x60\x63\x2e\x38\x22\x02\x9a\xaa\x53\xde\xb6\x10\xb9\x0a\x8a\x0f\x2f\xf0\x13\xd0\x4c\xbc\x50\x9e\xa0\x5a\x32\xf6\x83\x35\xc5\x63\x64\xe8\x2a\x82\x5c\xd6\xcc\xa8\x1f\x7d\xcf\x65\x8a\x71\x73\xe8\x3d\x68\xb6\xe8\x7f\x1b\x80\xc8\x9a\xb9\x8c\xd2\x1a\x42\x02\x30\x78\xfe\x7a\x0c\x10\xa5\x50\x21\xb8\xd4\x8c\x45\xdf\x0c\xde\x2c\xd7\x13\x08\x19\x77\x7d\xfb\x66\x89\xf9\x33\xa2\x9f\x3e\xf4\x9e\xd2\x09\x5d\x6c\x36\xd3\x87\x33\x67\xfe\x5f\x89\xc7\xb0\xbf\x42\x92\xb5\x31\x4b\x19\x25\xf1\x3c\x9e\x74\xa6\xee\xe9\x6d\x78\xe0\x6f\x48\x8f\xe7\x57\xdf\x71\x2f\xc5\xf6\xdd\xfb\xa9\x9d\x11\x74\xe7\xfa\xbd\xf5\x45\x36\x08\xcc\x41\x71\x33\x33\x8c\x43\xac\x62\xbf\xf3\xc0\xab\x91\xda\x2f\x23\xb3\xa7\xf2\xbd\x2b\x52\x1a\x08\xbf\x1f\x9f\x5d\x7b\xb6\x56\x1d\x1a\x98\x69\x9a\xa4\x24\x1b\x12\x87\xd6\xef\x3f\xfb\x16\x4f\x0a\xb1\xd4\xf3\x4d\x56\xf3\x8d\xdc\x6e\x2e\x4e\x9d\x27\xc0\x6d\xe9\x5e\x0a\xd6\xe1\xdd\xe9\x32\x33\xc3\x97\x52\x68\x55\x6b\x2a\x3d\x0f\xe8\xfa\xee\x89\x00\xe6\x07\xe0\xf7\x1e\xcb\x63\x34\x76\x0a\xf4\xf3\xc3\x27\xc2\x3e\x2c\x86\x2a\xc1\xff\x25\xda\xe3\x57\x7c\x5a\x55\x79\x54\xea\x12\x10\x57\x45\x12\x4b\xd5\x2f\x2a\xac\x3a\x60\x75\x7a\xfc\x8a\x44\xcf\x4f\x60\x55\x58\x1d\x5d\x31\x28\x0d\x72\x71\x66\x09\xb9\xfa\x37\x00\x00\xff\xff\x4d\x2c\x8a\x12\x49\x07\x00\x00")

func configmapOpenshiftNodeNodeConfigMasterYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapOpenshiftNodeNodeConfigMasterYaml,
		"ConfigMap/openshift-node/node-config-master.yaml",
	)
}

func configmapOpenshiftNodeNodeConfigMasterYaml() (*asset, error) {
	bytes, err := configmapOpenshiftNodeNodeConfigMasterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/openshift-node/node-config-master.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapOpenshiftTemplateServiceBrokerApiserverConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xbb\x0a\x02\x31\x10\x45\xfb\x7c\xc5\xfc\x40\x56\xb6\x9d\x52\x6b\x6d\x14\xfb\x71\x77\x56\x87\xdd\x3c\x48\x42\x40\xf0\xe3\x85\x3c\x54\xb0\x4d\xee\x3d\xf7\x0c\x79\xb9\x72\x88\xe2\x2c\x42\x1e\xd5\x4c\x89\x50\x01\x90\x97\xc8\x21\x73\xd0\x93\xb3\x8b\xdc\x87\x27\x99\x0d\xe1\xa5\x00\x00\x56\xb1\x33\xc2\x85\x8d\xdf\x28\xf1\x99\x43\x96\x89\xf7\xc1\xad\x1c\x0e\x25\x5d\x52\xbf\xe4\x06\x49\xad\x12\x6b\xe5\x56\x2a\x83\xf3\x6c\xe3\x43\x96\x34\x88\xdb\xe5\xb1\x94\x7b\xf2\x44\x86\xa3\xa7\x89\x23\x96\x77\x0d\x9f\xb4\xaa\x1a\x75\xf1\x48\x5e\x19\x4e\xd4\xfd\x2d\x19\xc6\xbf\x2b\xda\x47\x01\xe2\x97\xa4\xfb\x9a\x6e\x62\xba\x9a\xa9\x77\x00\x00\x00\xff\xff\xd3\xb1\x92\xe5\x1d\x01\x00\x00")

func configmapOpenshiftTemplateServiceBrokerApiserverConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapOpenshiftTemplateServiceBrokerApiserverConfigYaml,
		"ConfigMap/openshift-template-service-broker/apiserver-config.yaml",
	)
}

func configmapOpenshiftTemplateServiceBrokerApiserverConfigYaml() (*asset, error) {
	bytes, err := configmapOpenshiftTemplateServiceBrokerApiserverConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/openshift-template-service-broker/apiserver-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configmapOpenshiftWebConsoleWebconsoleConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xc1\x6e\xd3\x40\x10\xbd\xe7\x2b\x46\xbd\x54\xb2\x94\x84\x8a\x1c\xd0\xde\xa2\x90\xa2\x4a\x6d\x41\xa6\x85\x03\xe2\xb0\x5e\x8f\x9d\x51\xd6\xbb\xcb\xee\xac\x53\x0b\xf8\x77\x64\x7b\x9d\x1a\x15\x10\xf2\x6d\xde\x7b\xb3\x33\xef\x8d\xa5\xa3\x4f\xe8\x03\x59\x23\xa0\xbd\x5a\x94\x92\xa5\x58\x00\x9c\xb0\x50\xd6\x04\xab\x71\xa9\xac\xa9\xa8\x5e\x75\xb2\xd1\x02\x7e\x2c\x00\x00\xe6\xa2\x67\xe6\x2a\x31\xad\x43\x13\x0e\x54\xf1\x8a\xec\xba\xbd\x1a\x14\x4a\xc7\xc0\xe8\x6f\x4c\x65\xc5\x50\x00\x48\xaa\x0f\xb1\xd0\xa4\x1e\xf3\x5b\x01\x97\x59\x96\xc1\xbb\xfd\xfd\x3e\xdf\x3e\xec\xdf\x42\x96\x65\x97\x89\xab\x6d\x5d\x93\xa9\x67\xdc\x8b\x8b\x67\xc8\x46\xfe\x13\xd2\xc8\xfe\xc9\xff\xea\xdf\x20\x7b\x52\xe1\x65\x17\x7c\x62\x34\xfd\xa2\x61\x1a\xdb\x79\xeb\xd0\x33\x61\x10\xf0\xfd\x67\x2a\x06\xe5\xc9\xf1\x63\x7e\x1b\x04\x7c\xf9\x3a\x15\xb9\xd3\x18\x0e\x88\xbf\x03\x15\x4a\x8e\x1e\xcf\x0d\x93\x35\x39\x06\x1b\xbd\xc2\xf7\x2d\x7a\x4f\x25\x86\xbd\x91\x85\xc6\x52\x40\x25\x75\xc0\x44\x26\x23\x15\x53\x4b\xdc\x3d\x50\x83\x36\xf2\x1d\x99\xc8\xfd\x2c\xaf\x06\xc6\x91\x4c\x29\xe0\x33\x16\xbb\xd1\xdd\xdd\x10\x49\xf4\x92\xc9\x9a\x81\x11\xd0\xb7\x64\xea\x79\x12\x05\x99\x72\x5b\x96\x1e\x43\xdf\x67\x35\x7c\xe2\xcd\x66\xf3\x7a\x86\xdf\x23\x9f\xac\x3f\x0a\x60\xe5\x36\xd3\xe4\xe8\xf9\x9a\x34\x0a\x58\xb7\xd2\xaf\x53\xe7\x65\x5f\x5e\xb3\x0e\x2b\xe5\xf9\xbc\x23\xa1\xe1\xdd\x76\x96\xce\x11\xbb\x7f\x69\x8f\xd8\x9d\x63\x7c\xca\xf1\x5b\xc4\xc0\xe1\xc6\x5c\x6b\xaa\x0f\x3c\x6d\x0b\x60\x64\x83\xe5\xae\xcf\xa3\x22\x25\x07\x23\x4c\xd4\x3a\xa1\x7e\xd4\x25\xab\x3e\xa2\xb2\xa6\x1c\xac\x1a\x6d\x1a\xcd\xb9\x93\x6e\xd1\x20\xcb\xe9\xf4\xb5\x2c\x50\xa7\x74\xa4\x73\x02\xce\xf7\xbc\x3c\x61\xb1\x4c\x67\xbb\x18\xdf\x16\x2f\xff\x94\x84\x04\x27\x15\xfe\x4d\xfc\x2b\x00\x00\xff\xff\x46\x30\xcc\xd0\x76\x03\x00\x00")

func configmapOpenshiftWebConsoleWebconsoleConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_configmapOpenshiftWebConsoleWebconsoleConfigYaml,
		"ConfigMap/openshift-web-console/webconsole-config.yaml",
	)
}

func configmapOpenshiftWebConsoleWebconsoleConfigYaml() (*asset, error) {
	bytes, err := configmapOpenshiftWebConsoleWebconsoleConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ConfigMap/openshift-web-console/webconsole-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _customresourcedefinitionApiextensionsK8sIoBundlebindingsAutomationbrokerIoYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xb1\x4e\xc5\x30\x0c\x45\xf7\x7c\x85\xbf\xa0\xa8\x1b\xca\xf8\x60\x03\x31\x30\xb0\xbb\x8d\x29\x56\x53\x3b\x8a\x9d\x8a\xcf\x47\x49\xc5\xf2\x60\x4c\xce\xf5\xf1\x95\xb1\xf0\x07\x55\x63\x95\x08\x58\x98\xbe\x9d\xa4\xbf\x6c\xda\x1f\x6d\x62\x7d\x38\xe7\x85\x1c\xe7\xb0\xb3\xa4\x08\x4f\xcd\x5c\x8f\x77\x32\x6d\x75\xa5\x67\xfa\x64\x61\x67\x95\x70\x90\x63\x42\xc7\x18\x00\x04\x0f\x8a\xb0\x34\x49\x99\x16\x96\xc4\xb2\xd9\x84\xcd\xf5\xc0\x9e\x5d\xaa\xee\x54\x27\xd6\x60\x85\xd6\x3e\xb0\x55\x6d\x25\xc2\x7f\x91\xcb\x66\x3d\x05\x70\x75\xb8\x0d\xf1\xed\x12\x8f\xff\xcc\xe6\x2f\x7f\xd9\x2b\x9b\x0f\x5e\x72\xab\x98\xef\x2b\x0d\x64\x2c\x5b\xcb\x58\xef\x60\x00\xb0\x55\x0b\x45\x78\xeb\xeb\x0b\xae\x94\x02\xc0\xf9\x7b\xaa\x73\xc6\x5c\xbe\x70\x0e\x3f\x01\x00\x00\xff\xff\xb7\x04\x41\x9c\x40\x01\x00\x00")

func customresourcedefinitionApiextensionsK8sIoBundlebindingsAutomationbrokerIoYamlBytes() ([]byte, error) {
	return bindataRead(
		_customresourcedefinitionApiextensionsK8sIoBundlebindingsAutomationbrokerIoYaml,
		"CustomResourceDefinition.apiextensions.k8s.io/bundlebindings.automationbroker.io.yaml",
	)
}

func customresourcedefinitionApiextensionsK8sIoBundlebindingsAutomationbrokerIoYaml() (*asset, error) {
	bytes, err := customresourcedefinitionApiextensionsK8sIoBundlebindingsAutomationbrokerIoYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "CustomResourceDefinition.apiextensions.k8s.io/bundlebindings.automationbroker.io.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _customresourcedefinitionApiextensionsK8sIoBundleinstancesAutomationbrokerIoYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xb1\x4e\xc5\x30\x0c\x45\xf7\x7c\x85\xbf\xa0\xa8\x1b\xca\x08\x2c\x08\xc4\xc0\xc0\xee\xa6\xe6\x61\x35\xb5\xa3\xd8\xa9\xf8\x7c\x94\x3c\x58\x78\x1d\xa3\x73\x72\x75\x64\x2c\xfc\x41\xd5\x58\x25\x02\x16\xa6\x6f\x27\xe9\x2f\x9b\xb6\x7b\x9b\x58\xef\x8e\x79\x21\xc7\x39\x6c\x2c\x6b\x84\xc7\x66\xae\xfb\x3b\x99\xb6\x9a\xe8\x89\x3e\x59\xd8\x59\x25\xec\xe4\xb8\xa2\x63\x0c\x00\x82\x3b\x45\x58\x9a\xac\x99\x58\xcc\x51\x12\xd9\x84\xcd\x75\xc7\x2e\x2f\x55\x37\xaa\x13\x6b\xb0\x42\xa9\xff\xb8\x54\x6d\x25\xc2\x99\x72\x9d\xb3\x6e\x01\x5c\x23\x1e\xc6\xf2\xf3\xef\xf2\x00\x99\xcd\x5f\x4e\xe0\x2b\x9b\x0f\xa1\xe4\x56\x31\xdf\x54\x0d\x66\x2c\x97\x96\xb1\xfe\xa7\x01\xc0\x92\x16\x8a\xf0\xd6\x13\x0a\x26\x5a\x03\xc0\xf1\x77\xaf\x63\xc6\x5c\xbe\x70\x0e\x3f\x01\x00\x00\xff\xff\x5f\x9d\xaf\xed\x45\x01\x00\x00")

func customresourcedefinitionApiextensionsK8sIoBundleinstancesAutomationbrokerIoYamlBytes() ([]byte, error) {
	return bindataRead(
		_customresourcedefinitionApiextensionsK8sIoBundleinstancesAutomationbrokerIoYaml,
		"CustomResourceDefinition.apiextensions.k8s.io/bundleinstances.automationbroker.io.yaml",
	)
}

func customresourcedefinitionApiextensionsK8sIoBundleinstancesAutomationbrokerIoYaml() (*asset, error) {
	bytes, err := customresourcedefinitionApiextensionsK8sIoBundleinstancesAutomationbrokerIoYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "CustomResourceDefinition.apiextensions.k8s.io/bundleinstances.automationbroker.io.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _customresourcedefinitionApiextensionsK8sIoBundlesAutomationbrokerIoYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x9f\xa0\xa8\x1b\xca\x08\x6c\x20\x06\x06\x76\xb7\x35\x87\xd5\xd4\xb6\x62\xa7\xe2\xf1\x51\x72\x3a\xc4\x70\x63\xbe\x7c\xfa\x3f\xc9\x68\xfc\x49\xd5\x59\x25\x03\x1a\xd3\x4f\x90\xf4\x97\x4f\xfb\xa3\x4f\xac\x0f\xe7\xbc\x50\xe0\x9c\x76\x96\x2d\xc3\x73\xf3\xd0\xe3\x83\x5c\x5b\x5d\xe9\x85\xbe\x58\x38\x58\x25\x1d\x14\xb8\x61\x60\x4e\x00\x82\x07\x65\x58\x9a\x6c\x85\x7c\xc2\x16\x7a\x60\x97\x96\xaa\x3b\xd5\x89\x35\xb9\xd1\xda\xcd\x4b\xd5\x66\x19\xee\x29\xd7\x19\xef\x16\xc0\x35\xfe\x34\x16\x07\x28\xec\xf1\xfa\x0f\xbe\xb1\xc7\xf8\xb0\xd2\x2a\x96\xbf\xfa\x60\xce\x72\x69\x05\xeb\x8d\x26\x00\x5f\xd5\x28\xc3\x7b\x4f\x18\xae\xb4\x25\x80\xf3\x76\x87\x73\xc6\x62\xdf\x38\xa7\xdf\x00\x00\x00\xff\xff\x8d\x2b\x08\x93\x1d\x01\x00\x00")

func customresourcedefinitionApiextensionsK8sIoBundlesAutomationbrokerIoYamlBytes() ([]byte, error) {
	return bindataRead(
		_customresourcedefinitionApiextensionsK8sIoBundlesAutomationbrokerIoYaml,
		"CustomResourceDefinition.apiextensions.k8s.io/bundles.automationbroker.io.yaml",
	)
}

func customresourcedefinitionApiextensionsK8sIoBundlesAutomationbrokerIoYaml() (*asset, error) {
	bytes, err := customresourcedefinitionApiextensionsK8sIoBundlesAutomationbrokerIoYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "CustomResourceDefinition.apiextensions.k8s.io/bundles.automationbroker.io.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _customresourcedefinitionApiextensionsK8sIoEtcdbackupsEtcdDatabaseCoreosComYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x3d\x4e\x04\x31\x0c\x85\xfb\x9c\xc2\x27\x08\x5a\x2a\x94\x92\x9f\x0a\x44\x41\x41\xef\x71\xcc\xca\x9a\x49\x1c\xc5\xce\x8a\xe3\xa3\xcc\x80\x04\x68\xbb\xe4\x7d\x7e\xf6\x87\x4d\xde\xb9\x9b\x68\x4d\x80\x4d\xf8\xd3\xb9\xce\x9f\xc5\xf5\xce\xa2\xe8\xcd\xe5\xb4\xb0\xe3\x29\xac\x52\x73\x82\x87\x61\xae\xe5\x8d\x4d\x47\x27\x7e\xe4\x0f\xa9\xe2\xa2\x35\x14\x76\xcc\xe8\x98\x02\x40\xc5\xc2\x09\xd8\x29\x2f\x48\xeb\x68\x16\xe7\x3b\x4e\xbc\xa0\x71\x24\xed\xac\x16\x49\x4b\xb0\xc6\x34\x2b\xe7\xae\xa3\x1d\x9d\xab\x73\x00\x97\x1f\xcb\x43\xe8\x36\x00\x18\x69\xe3\x04\xaf\x58\xd8\x1a\x12\xe7\xef\xdb\x36\x37\x02\x1c\xc6\x4f\x4e\xf9\x7e\xd7\xd8\xc3\x4d\xcc\x9f\xff\x81\x17\x31\xdf\x61\xdb\x46\xc7\xed\x8f\xfa\x9e\x9b\xd4\xf3\xd8\xb0\xff\x26\xe1\x2b\x00\x00\xff\xff\xe7\x2e\x70\xde\x3a\x01\x00\x00")

func customresourcedefinitionApiextensionsK8sIoEtcdbackupsEtcdDatabaseCoreosComYamlBytes() ([]byte, error) {
	return bindataRead(
		_customresourcedefinitionApiextensionsK8sIoEtcdbackupsEtcdDatabaseCoreosComYaml,
		"CustomResourceDefinition.apiextensions.k8s.io/etcdbackups.etcd.database.coreos.com.yaml",
	)
}

func customresourcedefinitionApiextensionsK8sIoEtcdbackupsEtcdDatabaseCoreosComYaml() (*asset, error) {
	bytes, err := customresourcedefinitionApiextensionsK8sIoEtcdbackupsEtcdDatabaseCoreosComYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "CustomResourceDefinition.apiextensions.k8s.io/etcdbackups.etcd.database.coreos.com.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _daemonsetAppsOpenshiftMetricsPrometheusNodeExporterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xcd\x8e\xd3\x30\x10\xbe\xe7\x29\xe6\xb6\x52\xa4\xa8\x29\x88\x03\xbe\xad\xd4\x0a\x21\xb1\xa5\x02\xc4\xdd\xb8\xc3\xc6\x5a\xdb\x63\xc6\x93\x42\xdf\x1e\x79\x0b\x8d\x4d\x42\xb7\x73\x4a\xbe\x99\xf9\x7e\x46\x89\x8e\xf6\x2b\x72\xb2\x14\x14\xe8\x18\xd3\xea\xb8\x6e\x9e\x6c\x38\x28\xd8\x68\xf4\x14\x3e\xa3\x34\x1e\x45\x1f\xb4\x68\xd5\x00\x38\xfd\x0d\x5d\xca\x4f\x90\xe7\x15\x44\x26\x8f\x32\xe0\x98\xba\x40\x07\xec\xf0\x57\x24\x16\xe4\xe7\x09\x26\x87\x0a\x3c\x05\x2b\xc4\x36\x3c\x36\x00\x41\x7b\xbc\xba\x95\x07\x52\xd4\x06\x15\x50\xc4\x90\x06\xfb\x5d\x3a\x8f\xc2\xd6\xa4\x26\x45\x34\x59\x3c\xa1\x43\x23\xc4\x67\x23\x5e\x8b\x19\x3e\x14\xce\x6e\xf1\xb6\xe8\x4e\xd0\x47\xa7\x05\xff\xf0\x16\xc1\x73\xb9\x4a\xe2\x36\x91\x45\x99\x5c\xb3\x43\x54\x8b\x7f\x83\xe6\x32\x14\x44\xdb\x80\x7c\x91\xee\xc0\x7a\xfd\x88\x0a\xee\xda\xb6\x85\x77\xdb\xdd\xf6\xd3\xfd\x97\xed\x06\xda\xb6\xbd\xbb\xe8\x9e\x05\x96\x3d\xe5\xd7\x22\x48\x37\x69\xec\x89\x45\xc1\xdb\x75\xdf\x5f\xba\x00\x03\x25\x59\x6c\x9c\x35\x92\x61\x1d\x71\x0a\x8c\x89\x46\x36\x58\x08\x00\x38\xeb\xad\x54\x08\x80\x89\xa3\x82\x57\x7d\xef\x2b\xd4\xa3\x27\x3e\x29\x78\xd3\x3f\xd8\xa2\xc1\xf8\x63\xc4\xb4\x48\xb1\xfe\x1f\xc5\xeb\x92\xe2\x48\x6e\xf4\xf8\x40\x63\xa8\xa3\xfb\x8c\xec\xb5\x0c\x0a\x56\x39\xe8\x2a\x32\x99\x59\xc6\x7f\x40\x46\x7d\xf8\x18\xdc\x49\x81\xf0\x88\xd7\xd8\xd2\x29\xcd\x0f\x56\x61\x8b\x5c\x79\x77\x87\xf2\x93\xf8\x69\x86\xef\xdf\x6f\x2a\x2c\x21\x1f\xad\xc1\x7b\x63\xb2\xf8\xee\xa5\x3f\x6c\x3a\x46\xf1\x41\x3d\xf3\x66\xdb\x85\xb1\x78\x8e\x51\x45\x9f\x5d\xe3\xea\x6a\x19\x74\x8a\xfe\x3b\x00\x00\xff\xff\xf1\xe2\x2b\xf6\x75\x04\x00\x00")

func daemonsetAppsOpenshiftMetricsPrometheusNodeExporterYamlBytes() ([]byte, error) {
	return bindataRead(
		_daemonsetAppsOpenshiftMetricsPrometheusNodeExporterYaml,
		"DaemonSet.apps/openshift-metrics/prometheus-node-exporter.yaml",
	)
}

func daemonsetAppsOpenshiftMetricsPrometheusNodeExporterYaml() (*asset, error) {
	bytes, err := daemonsetAppsOpenshiftMetricsPrometheusNodeExporterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "DaemonSet.apps/openshift-metrics/prometheus-node-exporter.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _daemonsetAppsOpenshiftNodeSyncYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x7b\x73\xdb\xb8\x11\xff\x5f\x9f\x62\xa3\xa8\x91\xed\x86\xa2\xdd\x36\x33\x2d\x1d\xdf\x8c\x13\xfb\xd2\xcc\x35\xb6\xc7\x8f\xf6\x8f\x5c\x72\x03\x91\x4b\x11\x35\x08\xa0\xc0\x52\x8a\x1a\xfb\xbb\x77\x00\x52\x34\x5f\xb2\xdd\xf6\x8e\x99\x89\x45\x60\x77\xb1\xfb\xdb\x27\xc8\x34\xff\x3b\x1a\xcb\x95\x8c\x80\x69\x6d\xc3\xe5\xc1\xe8\x96\xcb\x24\x82\x13\x86\xb9\x92\x57\x48\xa3\x1c\x89\x25\x8c\x58\x34\x02\x60\x52\x2a\x62\xc4\x95\xb4\xee\x15\xe0\xb6\x98\xa3\x91\x48\x68\x67\x5c\x85\x09\xda\xd8\x70\x4d\x5e\xde\x9d\x27\x00\xb8\xce\xb8\x85\xc4\x8b\x03\x8b\x04\xda\xa8\x25\x4f\xd0\x42\xb2\x96\x2c\xe7\x31\xc4\x4a\xa6\x7c\x51\x18\x2f\x17\x54\x0a\x52\xb9\x6d\x26\x13\x30\x28\xd8\x1c\x85\xdd\x2c\x59\xa7\xa5\x51\xda\x70\x46\x38\x1b\x01\x94\xdb\xa5\x2e\x4c\xeb\x08\xec\x5a\xc6\xfe\x2d\x56\xb9\x56\x12\x25\x45\x20\x91\x56\xca\xdc\xfa\x65\xa5\x51\xda\x8c\xa7\xe4\xf4\x6d\xd0\xd4\x7c\xb4\xd6\x18\x01\x97\xa9\x61\x23\x00\xc9\x72\xac\x37\xdd\x8b\xd5\x2c\xc6\xe8\x41\x4c\xe0\x34\x1b\x59\x8d\xb1\x53\xc2\xa2\xc0\x98\x94\x29\x15\xca\x19\xc5\xd9\xdf\x1a\x1a\xb6\x75\x24\xcc\xb5\x60\x84\x15\x71\x03\x66\x4f\xd9\x85\xda\x3d\x36\xce\x30\x29\x04\x9a\x19\x13\x3a\x63\xb3\x36\xfc\xb1\xe1\xc4\x63\x26\x02\xad\x92\x08\xc6\xe3\x8a\x4d\xb4\x34\xe8\xe2\xf4\x08\x56\xcf\xc2\xab\x8f\x19\xc0\x06\x8e\x52\xb6\x24\xc6\x25\x9a\x5a\x83\xc0\x9d\x97\x33\x99\x3c\xa8\x14\x40\x38\xe7\x32\x9c\x33\x9b\x35\xd6\x82\xb8\xf1\x72\x57\xff\x06\x78\xf9\xa2\x4f\x0e\x3e\xb8\x02\x2c\x14\x68\xae\x31\x65\x5c\x8c\x9a\x2c\x7e\x7b\xbe\x06\xca\xd0\x47\x13\xf0\x9c\x2d\xb0\x41\x51\x48\x47\xf1\xd3\xcd\xbb\xd3\xf7\xe7\x67\x3f\x7e\xfc\xd0\xe4\x26\xc3\x34\x4c\x6f\xb9\x10\x30\xd9\xf9\xa7\x9a\x5b\x08\xf4\xee\x21\xe0\x37\x4e\xb0\x3f\x85\xeb\xd3\xcb\x4f\xed\xc3\xc8\xb0\xf8\xd6\x9f\x15\x17\xc6\xa0\x24\xb0\xc4\x08\x5d\x74\xfb\x45\x1f\xf2\x0d\x0e\x9e\xc2\xe7\xcf\x10\xa4\x10\x22\xc5\xa1\x32\x7c\xc1\x65\xe8\xd4\xf4\xff\x05\x25\xfd\x6c\xcd\x72\x01\x5f\xbe\x1c\x3a\x19\xb2\xc1\x0d\x90\x27\x6f\x6c\x91\x3f\x83\xfb\x07\x08\x29\xd7\xe1\x4c\x89\xa4\x21\x00\x85\xc5\x96\x3c\x52\x45\x9c\x0d\x92\xa6\xbc\x6d\xa9\x50\x4a\x43\x21\x89\x0b\x78\x77\x7e\x7e\x7d\x75\x7d\x79\x7c\xf1\x4b\x89\xe0\x2f\x67\xc7\x9f\x4e\x81\x5b\x07\x7d\x83\x67\x95\x71\x81\x40\xa6\xc0\x43\x48\x54\xeb\xd8\x94\x0b\x3c\xf2\x46\xd8\xb5\x2d\xd5\xae\xcc\x29\xf3\xac\x49\xdb\x86\xec\x81\x9e\x91\xca\x79\x1c\xb4\x33\x74\x18\xb5\xe1\x03\x07\x05\xb4\xf8\x50\x6c\x3b\xbc\xa1\xec\x7f\x73\xe4\x36\x1b\x7b\x7e\x01\xc0\x38\x53\x30\xe6\x32\x55\x11\xfc\x83\x71\xe2\x72\x01\xa9\x32\x0f\x71\x5d\x4b\xf5\x27\x01\x29\x98\x23\xc4\x06\x19\x61\x32\x86\x3f\xfc\xf0\xea\xa0\x23\xd1\x0a\x44\x0d\x07\x6f\xe0\x15\xac\x18\xa7\xce\xae\xcb\x5f\x2e\x0b\xec\xf8\xa9\xf5\xea\x0a\xe3\xd1\x78\xb2\x63\x31\x81\x40\x9e\xc2\xd4\xde\x7d\x1d\x0c\x86\xa3\x9d\xcf\x5f\x5f\x7e\x99\xfd\x7e\xf7\xee\xe7\x83\x3b\x3d\x85\xf1\xe4\xbb\x53\xf2\x7e\x0c\x77\x90\x21\x4b\x20\x38\xd8\x1d\x0f\x79\xf9\xdf\x8e\xd4\x1d\x73\x3f\xde\x86\xeb\x36\x60\x86\xa3\xb2\x84\xc5\x22\xfd\x46\x90\xbc\x04\x2e\xbd\x4f\xe6\x2c\xbe\x5d\x18\x55\xc8\x04\xe2\x0c\x5d\x51\x50\x60\x11\x9d\x61\x6e\x7b\xc9\x44\x81\x10\x67\x4c\x2e\xaa\x9e\xe7\x8b\x0a\x4f\xc1\xb6\x53\x43\xf3\xe4\x68\xf2\xee\xf8\xea\xaf\x17\x1f\x4f\x5a\x1b\x3b\x1d\xed\x1e\x49\xaf\x0a\xd0\x17\x50\xe8\xc4\x85\xc3\xaf\xe7\xb3\x41\x8f\x3c\x78\x05\x8d\x51\x26\x82\x1b\xc9\xe6\x65\x48\x96\x50\x38\xf7\xcc\x95\x22\xeb\xeb\x6b\x19\xb5\xaf\x3d\x00\x5c\x2e\x06\x1d\xe3\x9e\xb2\x0c\x6b\x9e\x0c\x1d\xe7\xc0\xeb\x33\x75\x9c\x03\x75\x60\x8d\x27\xdf\x2b\x2c\xee\xc7\xf0\xe2\xe8\xe9\x28\x83\x4e\xa4\xbd\xeb\xa8\xbf\x19\x63\xb4\x51\x3e\xfd\x9c\xb4\xca\xbd\xc9\xaf\x60\xda\xfe\x73\x4c\xdb\x44\x6f\x67\x23\x51\xb2\x1d\xb2\xbb\xf0\xaa\xf5\x3e\x37\xc8\x6e\x47\x1d\x86\x56\xb1\xd7\x68\xb8\x4a\xdc\x8c\x21\xd6\x60\x30\x35\x68\x33\x98\x2b\xca\xa0\xd7\x68\x1a\xe3\x5b\x5d\x9b\x9e\xd7\x04\x7c\x84\xaa\x18\xf0\x9b\xeb\xa2\x04\xe3\x52\x6c\xce\xb4\x0d\x6b\xf7\x04\xb2\x33\x83\x41\x10\x90\x3a\xea\x36\x40\x08\x4a\xa5\x4c\x0e\x41\x60\xf0\x5f\x05\x5a\x0a\x88\xe7\xa8\x0a\x3a\x3a\xd8\xb7\x9b\xfd\xc5\x70\xeb\xf4\x03\x56\x45\x30\x76\x07\xdc\xa2\x3c\x9a\xec\x40\xcc\x08\xc2\x25\x33\xa1\x29\x64\x68\x31\x36\x48\x36\x6c\x0f\x63\x16\xcd\x92\xc7\xc8\xe2\x58\x15\x92\x42\xcf\x0a\xbb\x63\x70\x1d\x38\xc1\x65\x28\x0b\x21\x1e\xa9\x63\xbd\x8c\x31\x48\x86\xe3\x12\xc1\x8d\x8c\x96\x60\x53\xe3\x95\xf1\xd0\x3e\x51\xc6\xba\x35\x82\x71\x82\xc9\x8b\xff\xa9\xae\x25\x48\x18\x13\xac\x32\xa4\x0c\x1f\xfa\x4e\xcb\xf9\x19\xb3\x0f\x41\xef\x22\xc1\xd7\x33\x20\xc3\x17\x0b\x34\xc0\xc0\xa0\x25\x66\x68\x33\x0f\x39\xe8\x04\xd2\xec\xff\x9b\x69\x24\xae\x06\x7a\xc7\x78\xe3\xaf\xcd\x30\xe3\xbc\xe0\x53\xbd\xb9\x2e\x71\xe5\xd6\x9f\xd1\x5b\xde\xb7\xf2\xbc\xb6\xb2\xb2\xc8\x75\x9d\xca\x9a\x41\x97\xbc\x84\xeb\xf3\x93\xf3\x68\x43\x03\x89\x42\x2b\xa7\x54\xa7\x8a\xbf\xe8\xbc\x86\xb9\x73\x31\xa6\xa9\x32\x54\xb9\x78\xd5\x13\x94\x11\x69\x1b\x85\xe1\x82\x53\x56\xcc\x67\xb1\xca\x1b\x21\xd8\xfc\xc9\xad\x2d\xd0\x86\x6f\xfe\xf2\xc7\x83\x3f\x75\xa4\xf0\x14\x98\x59\x58\xd7\x08\xea\x74\x82\xd2\x35\x55\xfa\xac\x0c\x27\x0c\x52\xc1\x16\x4f\x25\x4b\xd3\x27\x5b\x3b\x42\x79\x19\x39\x9a\xec\x90\x81\xa9\xfb\xf7\xb3\x9c\xc2\xdb\xb7\x6f\x27\x4e\x0d\xb8\x83\xb2\x1d\x21\x4c\xc3\xaf\x81\xcf\xeb\xa0\xe2\x08\xe1\x3b\xd8\xde\x62\x78\x08\xfa\x10\xee\xa7\x70\x07\x4e\xe0\x6b\x27\x6d\x0a\xd3\xdd\x2d\xe5\x3e\x90\xae\xc2\x97\xcc\xcf\xaf\xf1\xc7\x5a\x8b\xb5\x73\xac\x87\xa4\xba\x91\x4e\xca\xbf\x5b\x4b\xf9\xa6\x8a\x95\x6e\xdd\x20\xd7\x2b\x50\xfd\x32\xe3\x57\x27\xdf\xcf\xce\x4f\x4e\x7d\xff\xbd\x1f\x43\xad\x32\x04\x81\x5a\xa2\xf1\x3e\xd9\xaa\xfa\xd6\x12\xc2\x9c\x1d\x95\xfe\xaf\x61\xe5\x7a\x8d\xab\x2a\x6b\x37\xaa\x1c\xec\x6f\xb5\xa4\xae\x23\xfb\xbd\x3a\x52\x3e\xc3\xd5\xa4\x7c\x06\x6b\x4a\xf9\x0c\x74\xae\xde\xd2\xc0\x00\xdc\x31\xef\x3a\x43\x48\xd4\x4a\x0a\xc5\x12\x4c\x4a\x17\xb5\x5b\x31\xb7\xc0\xe5\x92\x09\xfe\x64\x03\x1e\x9c\x1e\x7a\x3a\x79\xcf\x56\x77\x41\xbd\x30\xa8\x21\xb8\x81\x7d\x77\x19\x98\x7e\x0d\x0b\x6b\xfc\xdd\x34\x5b\x6b\x34\xce\xad\x75\xa6\x4f\xeb\x79\x49\x1e\xec\x6e\x71\xde\xd6\xda\x5f\xa6\xe4\x4f\x8f\x14\x96\x8e\x9a\x9d\xd7\x58\xfb\xcb\x4a\x5d\xea\x86\x6e\x76\xb5\x9f\xff\xdc\x75\x74\xdf\xc1\xad\x59\x02\xe5\xb2\x79\x95\x2f\xbf\x99\xd4\xf1\xdb\xe0\xf2\xc3\xee\x8f\x46\xe5\x51\x47\x57\x14\xc9\x25\xa6\x51\xc7\xa4\xe6\xd7\xa9\x65\xdf\x5e\x14\xc9\x05\xa3\x2c\xf2\x9f\x1b\x66\xce\xf1\x67\x2c\x7f\xd0\xca\xdf\xef\x23\x98\xee\xed\xed\xc1\x87\xd3\xb3\xd3\xcb\xe3\xeb\xd3\x13\xd8\xdb\xdb\x9b\xd6\x24\xad\xaf\x3b\x15\x04\x18\x17\x86\xd3\xfa\xbd\x92\x84\xdf\xa8\xa9\x92\x36\x7c\xc9\x05\x2e\x30\x89\xfc\xe0\xd2\xd8\x32\x85\x3c\xb6\x37\x16\x4d\xd4\x98\xd0\x96\x4a\x14\x39\x7e\x72\xed\xdf\x36\xf1\xc9\xdd\x4a\xa9\x79\xaf\x1a\x34\x64\x96\xca\x65\xca\x52\xd0\xf9\x5c\xd0\x17\x51\xdf\xf9\x86\xf9\xeb\xed\xee\x0d\xd3\x20\x4b\xce\xa5\x58\xb7\x0c\x72\x2c\x67\xe5\x67\xa0\xde\xfa\xc5\xc7\x93\xd6\x5a\x35\xe5\x1c\x97\x53\xce\x59\x17\x4f\x42\x93\x73\xe9\xd3\xf0\x83\x61\x31\x5e\xf8\xf9\xf1\xca\xd5\xba\xc4\x46\x75\xaa\x95\x48\x35\x3e\x10\xf9\xa3\x9c\x79\x4d\xf8\x07\x11\x1b\x3d\x05\xd7\x93\xc2\xfa\xd8\x3d\x86\x5c\x79\x5b\xb8\x22\xc3\x08\x17\xeb\x52\xa4\x51\x42\x70\xb9\xb8\xf1\x5b\x9b\x53\x72\xf6\xed\x46\xb2\x25\xe3\xc2\x65\x71\x04\x6f\xf6\x7f\xe7\x77\xca\x6f\x65\x97\x4d\x96\xd1\x7f\x02\x00\x00\xff\xff\x69\x01\x86\x9a\x87\x15\x00\x00")

func daemonsetAppsOpenshiftNodeSyncYamlBytes() ([]byte, error) {
	return bindataRead(
		_daemonsetAppsOpenshiftNodeSyncYaml,
		"DaemonSet.apps/openshift-node/sync.yaml",
	)
}

func daemonsetAppsOpenshiftNodeSyncYaml() (*asset, error) {
	bytes, err := daemonsetAppsOpenshiftNodeSyncYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "DaemonSet.apps/openshift-node/sync.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _daemonsetAppsOpenshiftSdnOvsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x6d\x6f\x13\x49\x12\xfe\xee\x5f\x51\x97\x43\x04\x72\x37\x1e\x3b\x10\x45\x4c\x14\x4e\xd1\x11\x21\xa4\xe5\x45\x09\xcb\x17\x84\xa0\xdd\x53\xf6\xd4\xa6\xa7\xbb\xe9\xaa\xb6\xf1\x02\xff\x7d\xd5\x63\x27\xf4\x38\x71\xc8\x8a\xf5\x27\x4f\x75\xd5\x53\x55\x4f\x3d\xfd\xa2\x3c\xbd\xc3\xc0\xe4\x6c\x05\xca\x7b\x2e\xe7\xe3\xc1\x05\xd9\xba\x82\x67\x0a\x5b\x67\xcf\x51\x06\x2d\x8a\xaa\x95\xa8\x6a\x00\xa0\xac\x75\xa2\x84\x9c\xe5\xf4\x09\x70\x11\x27\x18\x2c\x0a\xf2\x90\x5c\x59\x23\xeb\x40\x5e\x3a\xbc\x6f\x9d\x03\xc0\xdb\x86\x18\xea\x0e\x0e\x18\x05\x8c\x8a\x56\x37\xc8\x20\x0d\x82\xf3\x68\xe7\xbc\x20\xd1\xcd\xda\x67\x38\x00\x30\x6a\x82\x66\x9d\x41\x79\x5f\x81\x9b\x73\xf7\xa1\x5d\xeb\x9d\x45\x2b\x15\x58\x94\x85\x0b\x17\x9d\x39\xa1\x70\x43\x53\x49\x45\x6c\xf1\x91\xa5\xc7\x0a\xc8\x4e\x83\x1a\x00\x58\xd5\xe2\x25\x6c\xfa\xcf\x5e\xe9\x64\xb8\x04\x2a\xb8\xb6\x03\xf6\xa8\x53\x11\x8c\x06\xb5\xb8\xb0\x2a\xa8\x55\xa2\x9b\xdf\xb2\x0a\x7b\x35\x0a\xb6\xde\x28\xc1\xb5\x6f\xc6\x5d\xe7\xb8\xc9\x5f\xfa\xb1\x6e\xb0\x8e\x06\xc3\x50\x19\xdf\xa8\x61\x9f\x53\x1d\x48\x48\x2b\x53\x78\x57\x57\xb0\xb3\xb3\x0e\x33\xbd\x02\x36\x68\xba\x85\xaa\xbb\xd2\x75\x9d\x32\x80\x4b\x3e\x56\xf0\x56\x14\x59\x0c\x57\x35\x14\x29\x65\xab\x6c\xfd\xa3\xa8\x02\xca\x09\xd9\x72\xa2\xb8\xc9\x6c\x85\xce\x3e\xbe\x5d\xfd\x07\xf8\xf7\xbf\xae\xbb\x43\xa7\x99\x02\xa3\x03\x4f\x1e\xa7\x8a\xcc\x20\x0f\x01\x9a\x82\xb2\x4e\x1a\x0c\xe0\x83\xd3\xc8\x0c\xc4\x60\x88\x05\x2d\xd9\x19\x38\xdb\x09\x4d\x5b\x2a\x18\xc3\x1c\x03\xb0\xd3\x17\x28\xff\x85\x85\x22\x81\x68\x85\x0c\x90\x00\x7e\x21\xe1\x0c\x59\x82\xf2\xb0\x7b\x41\xc6\xc0\xbd\x07\x7f\xb8\x09\x43\xe1\x1f\x1e\x75\x6e\x30\xda\x85\xb7\xa7\x67\x2f\x33\xef\x80\x12\x08\xf9\x78\x94\xd9\x16\x0d\x19\x04\x09\x11\x8f\xa0\x76\xd9\x02\xa4\xa2\xcb\xc8\xa1\xe4\x46\x05\x2c\xb3\x4d\x50\xae\x36\x10\x97\x6e\xce\x85\x16\x03\x2c\x4a\x22\xc3\xfd\xa7\x65\x8d\xf3\xd2\x46\x63\x8e\x52\x3f\xb6\x07\x07\x80\xba\x71\xb0\xb3\x50\x21\xf5\x5c\xc1\xc9\x75\x46\x74\x0c\x01\xad\x98\x25\xb4\xca\xaa\x59\xa2\xe6\xf5\xbb\xf3\x15\x0b\xe9\x63\x7c\xc0\x30\x1c\x0e\x77\x60\xff\xe9\xfd\xf1\x06\x3a\x1b\x44\x0f\xe3\x03\xb8\xdf\xb9\x6f\xac\x3e\x78\x70\xd9\x3e\xfc\xe7\x18\xc6\xf0\xf0\x61\xcf\x01\x0d\xe3\x46\xc4\x24\xa0\xba\xe8\xd9\xa6\xb4\xc9\xcf\xfb\xf7\xb0\x73\xef\xeb\x1a\xf8\xfb\x0e\x14\x33\x81\xc7\x23\xf8\xf0\xe1\x96\xfe\x31\x04\x17\xfe\x56\xf7\x69\x9c\x64\x67\x37\x76\xdd\x8d\x7a\xbc\xbd\xcc\xda\x59\xec\x6b\x71\x75\xb4\x25\xe4\xcc\x3c\x8d\x56\xa7\x1d\x0f\x9f\x23\x09\x7c\xdd\x48\x72\x67\x19\x38\x7f\x53\x79\xb9\xde\xbe\x6f\xaa\xb7\x4b\x78\xfe\xe2\xf9\x86\x56\xef\xae\xbc\x20\x50\x14\xbc\x64\xc1\xb6\xa0\xfa\x38\x28\x5b\xbb\xb6\xdf\xf2\x19\xb2\x04\xd2\xd2\x6d\x32\x1b\xdb\x09\x06\x70\x53\xf0\xd2\x04\x54\x35\xa7\x23\xa9\x58\x67\xa8\x41\x07\x54\x92\x4e\x7e\x07\x01\xeb\xa8\x31\x45\xf5\xe0\x54\xeb\xa2\x95\x84\x70\x76\x7e\x9e\xb6\x65\x64\xe4\xb4\x87\x1b\xc7\xc2\xb0\x20\x69\xd2\x04\x97\xa0\x5d\x40\xee\x85\x36\x22\x9e\xab\xb2\x9c\xc4\xd9\x9f\x64\x8c\x1a\x06\xac\x1b\x25\x43\xed\xda\x92\x1b\xb7\xf8\x38\x89\xb3\xa1\x9e\xd1\xff\xa8\x3e\x1e\x1f\x1c\x8e\x1f\x1d\x3e\xf9\x95\xf8\xfd\xc3\x27\x87\x59\xfc\x4a\xb1\x9f\x6c\xd2\xdc\xa7\x4e\xac\xe3\xfd\x6d\x62\x5d\x71\xd2\x71\x8c\x02\xaf\x3d\xda\x8f\xf3\xf3\xd5\x1d\x38\x84\x4e\xba\x1f\xb5\xb3\x53\x9a\x55\xb6\x08\x38\x57\x86\x6a\x25\x2e\x14\x6b\x4e\x8f\x1f\xff\x02\x5e\xa3\x6c\x6d\xf0\x07\xd6\x38\x57\x50\x4f\xde\xfd\xe3\x6b\x7d\x06\x1c\x1c\xad\x64\x7f\xd5\x76\xab\x66\x58\xc1\xee\xde\xde\x1e\x3c\x3f\x7d\x75\x7a\x76\xf2\xf6\xf4\x19\xec\xed\xed\xed\x5e\xb9\xac\xaf\xda\x1f\x4a\xbb\x5a\x09\xc8\x2e\x06\x8d\xd9\x35\x06\x60\xa8\x25\xe9\x59\x00\xb4\x8f\x15\xec\x8f\x46\x6d\xcf\xda\x62\xeb\xc2\xb2\x82\xc7\xa3\xd1\x4b\xea\x9d\xc5\x9f\x23\xf2\x8d\x18\xe3\x6d\x18\x8f\x7a\x18\x8c\x3a\x06\x92\xe5\xff\x9d\x15\xfc\x22\x39\x90\x0f\x34\x27\x83\x33\xac\xab\x8e\x9b\x3c\x6f\xb4\x27\xfc\x3b\x63\xa8\xb2\x6d\x39\x77\x26\xb6\xf8\x32\xa9\x9a\xf3\x8b\xb1\xd3\xf9\x1b\x25\x4d\x05\xa5\xa1\x49\xd9\xba\xf4\x04\xc8\x15\xbd\xe2\x2d\xe9\xbe\xb8\xbe\x98\x86\xf7\xda\x9a\xe5\x46\x11\x7d\xdc\x10\x6d\x79\x13\xef\x3d\xec\x10\x6d\x91\xbf\x1b\xfa\x10\x73\x15\xfe\x09\x18\x5e\x6e\xe9\xac\xbf\x70\xa7\xae\x50\xf4\xcf\xcb\x59\xe9\xbd\xb8\xee\x97\x56\x5f\xad\xde\x39\xbd\x2c\xc9\xfe\xe6\xc5\xb3\x9e\x2d\xbd\x17\x48\xe3\x89\xd6\x29\xfd\xab\x0e\x3d\xbd\x0b\xf3\xc9\x66\xcf\x9f\x0e\x22\xd5\x98\xcb\x65\xfb\x84\xb7\xce\xf7\x56\xa4\x6d\xc3\xd8\x3a\x8a\x5b\xd1\x72\xfa\x6f\x9c\xca\xad\xd1\xdd\x24\x02\xcd\xe8\xa7\x25\xdd\x30\x8e\xbf\x02\x00\x00\xff\xff\x85\xdc\xad\x9c\x7b\x0c\x00\x00")

func daemonsetAppsOpenshiftSdnOvsYamlBytes() ([]byte, error) {
	return bindataRead(
		_daemonsetAppsOpenshiftSdnOvsYaml,
		"DaemonSet.apps/openshift-sdn/ovs.yaml",
	)
}

func daemonsetAppsOpenshiftSdnOvsYaml() (*asset, error) {
	bytes, err := daemonsetAppsOpenshiftSdnOvsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "DaemonSet.apps/openshift-sdn/ovs.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _daemonsetAppsOpenshiftSdnSdnYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x61\x53\xdb\x3c\x12\xfe\xce\xaf\xd8\x37\x65\x1a\xe0\xad\x62\xc2\x5c\xef\x83\x3b\x74\x86\x83\xb4\xc7\x0c\x4d\x3a\x05\x7a\x37\xd3\xeb\xcb\x28\xf2\x26\xd6\x21\x4b\x3e\x49\x0e\xe4\x2d\xfc\xf7\x1b\xd9\x8e\x23\xc7\xc6\xa4\x74\xee\xcb\xf1\x81\x49\xe4\xd5\xb3\xcf\xae\x76\x1f\xad\x43\x53\xfe\x15\xb5\xe1\x4a\x86\x40\xd3\xd4\x04\x8b\xe1\xce\x2d\x97\x51\x08\x67\x14\x13\x25\x2f\xd1\xee\x24\x68\x69\x44\x2d\x0d\x77\x00\xa8\x94\xca\x52\xcb\x95\x34\xee\x2b\xc0\x6d\x36\x45\x2d\xd1\xa2\x19\x70\x15\x44\x68\x98\xe6\xa9\xcd\xf1\x1e\x72\x03\x80\xab\x98\x1b\x88\x72\x38\x30\x68\x41\xd0\x4c\xb2\x18\x0d\xd8\x18\x61\x92\xa2\xbc\x8c\xf9\xcc\x82\x44\x7b\xa7\xf4\x2d\x97\x73\x60\x2a\x49\x95\x44\x69\x0d\xec\x39\x07\x24\xd5\xea\x7e\xf9\x06\xce\xc6\x97\x6f\x80\xca\x08\x54\x8a\xd2\xb8\x5d\xc4\x44\x72\x7f\x50\x3a\x3a\xb7\x80\xf7\x29\x32\xeb\xa0\xa9\x85\xc9\xd7\x4b\xe0\x06\x74\x26\xa5\x43\x55\x32\xf7\x28\x55\x84\x6e\x87\xa0\x53\x14\x65\x14\x34\x4d\x43\x30\x91\xcc\xbf\x54\xde\xc3\x15\xa7\x7c\xb9\xf2\xe9\x02\x7d\xc2\xc6\x2e\x53\x0c\x81\xcb\x99\xa6\x3b\x00\x92\x26\xb8\x82\x75\x9f\x4d\x4a\x19\x86\x75\xf2\x3b\x26\x45\xe6\x48\x18\x14\xc8\xac\xd2\x05\xa1\x84\x5a\x16\x5f\x78\x0c\x6b\x1c\x2d\x26\xa9\xa0\x16\x4b\x5b\xef\x7c\x72\xc3\xcd\x33\x72\x7f\x86\xc5\x18\x65\x02\xf5\x80\x8a\x34\xa6\x83\xfa\xb9\x31\xcd\x2d\x67\x54\x90\x54\x45\x21\xf4\x7a\xe5\x36\x51\x23\xb0\x91\xa6\x8e\x54\x6d\x9b\xae\x66\xca\x00\x56\xf9\x28\xe0\xa5\xa5\x5c\xa2\xae\x38\x10\xe7\x32\xa1\x32\x5a\x93\x22\x10\x4c\xb9\x0c\xa6\xd4\xc4\xde\x1a\x61\xde\x97\x87\xea\x33\xc0\xab\xdf\x9a\xe6\x90\xd7\x25\xc1\x4c\x41\xca\x53\x9c\x51\x2e\x76\xfc\x2d\xc0\x67\x40\xa5\xb2\x31\x6a\x48\xb5\x62\x68\x8c\x2b\x2c\xc1\x8d\x45\xbf\xb4\x98\xe4\xc4\xa0\x5e\xa0\x06\xa3\xd8\x2d\xda\x37\x70\x47\xb9\x85\x4c\x5a\x2e\x80\xbb\xf2\xe4\xd6\x78\xc8\x56\xd3\x14\xfa\xb7\x5c\x08\xd8\xdd\xfb\xb7\x9a\x1a\x20\xe9\xfe\xbb\xdc\x0c\x0e\xfb\x70\x35\xfa\xf2\xc9\xb3\xd6\x68\x35\x47\x73\x7c\xe8\xad\xdd\xc5\x5c\x20\x58\x9d\xe1\x3b\x88\x94\xf7\x00\x1c\x69\x64\xb1\x82\xbe\x45\x63\xfb\xf0\xe0\x38\x51\x0b\x04\xae\xc7\xe7\xff\x24\xa7\x93\xf1\x78\x74\x7a\x15\x06\x0b\xaa\x03\x9d\xc9\xa0\x56\x96\xc1\x3a\x94\x81\x0b\x05\xde\x07\x11\x2e\x02\x99\x09\xf1\xce\x85\x2a\x6b\x9e\xa0\x70\xd4\xbb\xa3\xda\xa5\x23\x84\x93\x66\xb2\x58\xa6\x35\x4a\x2b\x96\xcd\xb4\x9d\x8e\xcf\x6b\xf9\x72\x8f\x86\x6f\x0d\x0c\x06\x83\x1e\x1c\xbd\x7f\x3d\xdc\x70\x66\x04\x62\x0a\xc3\xb7\xf0\x3a\x37\xdf\x78\xba\xb7\xb7\x4a\x14\xfc\x7e\x0c\x43\xd8\xdf\xaf\x19\xa0\x30\xb8\xb1\x63\xaa\x91\xde\xd6\xd6\x66\x7c\x33\x93\xdf\xbe\x41\x6f\xf7\x47\x09\xfc\xd8\x03\x32\xb7\xf0\x97\x43\xf8\xfe\xbd\x23\x1d\xa8\xb5\xd2\xbf\x92\x0c\x57\x07\x5c\xce\x5b\x93\x90\xd7\xc8\xf0\x69\xd6\x91\x92\xb8\x59\xc3\x2b\xf9\x73\x8d\x35\xe3\x73\x88\x14\x1a\xd9\xcf\xcb\xd2\x58\x58\x36\xeb\xd5\x19\xbc\xbc\x00\x67\x5c\xe0\x71\x80\x96\x05\x66\x69\x0a\x97\x81\xd2\x7c\xce\x25\x71\x2c\x5a\x52\x4c\x66\xb0\x61\x4f\xad\x4a\x38\x23\xeb\xe2\xcc\xf9\x3f\x91\xf6\x36\x87\xad\x00\x1b\x15\xf1\x94\x73\x8f\xec\xcf\xb8\x7c\x2a\xc6\x96\xd2\x2b\x0a\x85\xcb\x99\x0a\xe1\x1f\x65\xe9\xcf\x94\x5e\x9f\x54\x85\x9a\x7b\x02\xab\x60\x8a\xc0\x34\x52\x8b\xd1\x0b\x9a\xc3\x29\x2a\x97\x19\x76\x55\x7b\xe1\xef\x26\x8f\xac\xb7\xbb\x67\x30\x02\x22\x47\xd0\x37\x0f\x7f\x9c\x4e\xc6\x1f\xce\x3f\xde\x7c\x38\xbf\x18\x1d\xef\x7d\xfb\xe3\xd5\xf7\xc1\xef\xfb\x0f\xff\x1a\x3e\xa4\x7d\xd7\x1d\x6e\xc7\x63\x0f\x1e\x20\x46\x1a\x01\x19\xee\xf7\xda\x8e\xf8\x4f\x67\xea\xf9\x78\xec\x75\x77\x51\x33\x39\x1e\x8b\x32\x21\x06\xed\xff\x28\x19\x05\xe9\xdf\x5c\x71\xd4\x59\x77\x93\xae\x94\xf0\x34\xbf\x8d\x61\xc6\x65\x54\xb4\x99\x0b\xc2\x9d\x2c\x29\xc0\x06\x4b\x9a\x88\xff\x4b\xd9\x1b\xab\xae\x80\x7f\x59\xda\x6a\xda\x76\x45\x6f\x11\x94\xbb\x77\xcb\xf1\x02\x66\x99\x64\xf9\x08\xe4\x8f\x7d\xbe\x94\x25\x40\xbe\x94\x0d\xcf\x24\x0f\x24\xda\x41\x14\x1c\xb4\x58\xc4\xca\xd8\x40\xa5\x36\x37\x73\xa3\x83\x6f\xc4\xd2\xc2\xa8\xf6\xbc\x65\x8f\x4f\xf7\xc5\x6a\x93\x0f\x29\x0a\xa8\x10\x78\x9f\x2a\x5d\xaf\x00\xa3\x32\xcd\xb0\x03\x73\xa7\x96\xcd\x5a\xfa\x32\x83\x80\x3c\xbf\xa4\x5c\xaa\xa6\x4a\x59\xe3\x46\x93\x14\xa3\x42\x85\xdc\xb4\x58\xca\x50\x29\x4e\xc6\x4d\x98\xac\xd4\x8a\x4c\xe7\xe3\x66\xcd\xc3\x4a\x16\x0b\x06\x81\x83\xc9\xff\x0d\xd6\x58\x8d\x9c\xe4\x6d\xb6\x16\x92\xd6\x24\x14\x6c\x3d\x0a\xfe\x85\xc6\x67\xe5\x94\x65\x6a\x63\x56\x5e\x22\x93\xb3\x49\x08\x1a\x13\xb5\x40\xb8\x8b\x51\xb6\xec\x2f\xe3\x70\x37\xb4\x54\x20\x94\x9c\xbb\x49\x2e\x4b\x5d\xb2\x31\xaa\x17\xa4\xd2\x30\x03\x2e\xa1\x11\xa4\x59\x1a\x8b\xc9\x81\x17\x67\xe3\x62\xac\x4b\xdb\xb5\x71\x2d\xb2\xfb\x63\xf6\x98\xa3\x36\xf9\xf4\x60\xf8\xfe\xf5\x51\xdb\xc5\xe3\x72\xf5\xd8\x7b\xb6\xaf\x37\x66\x81\x5a\x33\xbd\x82\xeb\x55\x3e\x69\x52\x25\x92\x9a\xaa\x69\xde\xc0\x34\xb3\x70\xc7\x6d\x5c\x58\xa1\x5e\x70\x86\x40\x19\x53\x99\xb4\x60\xd5\x6d\xed\x84\xd4\xaa\x28\xa0\x47\xca\x96\x3f\xae\x4e\x74\xc1\xf1\x0e\x08\x99\x09\x6a\x2d\x4a\x78\x0f\x81\x4d\xd2\xa0\xb5\x22\xd6\x38\x15\xcc\x86\xb1\xeb\x07\xc2\x34\x46\x28\x2d\xa7\xc2\x80\xa1\xce\x67\x4e\xe8\x78\x77\x0f\xdc\xb0\x5b\x4d\xb7\x06\x99\x46\x6b\x82\xfa\x7b\x4f\x19\x4c\x19\x4b\x90\x6f\x85\xda\xb5\xb5\x2d\x0d\x25\x2d\xde\x5b\xe8\xed\xee\x6d\xb3\xa5\x9c\xff\xaa\x6d\xfb\x3d\x20\x24\x33\xa8\x8f\x0d\xad\x9d\xcd\x45\xfe\xae\x5c\x9c\x45\xa9\x6c\xe5\x18\xe9\x99\xe1\x3d\xb2\xf5\xfb\x96\xab\x6b\x5d\xbd\x4e\x83\x77\x08\xb5\xeb\x8b\x90\x35\x9f\x06\x3f\x42\x84\x9a\x0b\x5c\xa0\x38\xde\xfd\x71\x36\xfa\xdb\xf5\xc7\x9b\x8b\xc9\xc7\x8b\xd1\xd7\xd1\x45\x48\x8e\x1e\x2b\xdf\x28\x17\xfe\x8b\x58\xf1\xc2\x3b\xf9\x3c\x1a\x5f\xfe\xfd\xfc\xc3\xd5\xcd\xd9\xf8\xf2\xe6\x6c\xf2\xe9\xe4\x7c\xec\xb1\x5d\x50\x91\x61\x08\x4c\x64\xc6\xa2\x1e\x08\xc5\xa8\xa8\x1e\xf3\x84\xce\x31\x84\xfe\xc1\xc1\x01\x7c\x1c\x8d\x47\x5f\x4e\xae\x46\x67\x70\x70\x70\xd0\xaf\x4c\xfc\xb7\xea\xe2\xcf\xb5\xa7\xf1\x79\x54\xef\x8d\x9f\x95\xb6\x21\x0c\x0f\x8f\xde\xfe\xd5\x63\xe0\xd4\xb9\xfd\x49\x81\x1d\x23\x15\x36\xfe\xb3\x5a\xd7\x58\x88\xab\xe7\xc3\x2d\xfe\x27\x43\x63\x6b\x6b\xee\x3e\xc8\x1c\xea\x61\x52\x5b\x4d\x30\x51\x7a\x19\xc2\xd1\xe1\xe1\xa7\x75\xef\x19\x64\x99\xe6\x76\x79\x5a\x14\x81\x0f\x94\x6a\xbe\xe0\x02\xe7\x18\x85\xf9\x68\xed\xfb\xcd\xe4\x89\xb9\x36\xa8\x43\x58\x8f\xe1\x0b\x25\xb2\x04\x3f\xb9\x22\xae\x25\x22\x71\x2b\x9f\xa9\x8d\xc3\xa6\x4e\x35\xc3\x56\xc6\x92\x46\x1f\x6a\xa4\xd1\x44\x8a\xe5\x06\x91\x26\xf6\x73\x97\x8e\xe7\xa4\x32\xdd\xb4\xd9\xca\x59\xd9\xd2\xed\xd0\x0b\xaa\x89\xff\xb0\x75\x6b\x10\x4d\x33\xf3\x44\x02\x4a\x00\xe2\x4c\x5e\xc8\x2c\x7f\x95\x5e\x98\x3b\x6e\x59\xfc\x8c\x17\xb5\x78\xb1\x93\xb5\x92\x3d\xe3\x63\x6d\xf8\x2b\xf1\xac\x7f\xb1\xea\x0e\xa8\xd5\xb4\x0e\xbb\x39\x1d\xb5\x23\xaa\xd4\x12\x26\x39\xf1\x0d\x9a\x55\x57\xcd\x6e\xed\x20\x68\x59\x0e\x22\xd1\x46\x1d\x41\x0a\x3e\x5d\x21\x39\xd1\x34\xdb\x46\x2c\xf8\x74\x05\x9f\xef\x6b\x0d\xdf\x59\x8f\x0b\x83\x5a\xb6\x73\x19\x3a\x3f\xab\xad\x95\x17\xd2\x49\x71\x21\x8d\x37\xa4\xae\x68\x73\xef\xc7\xb0\x1c\xc2\x85\xe1\x6b\x47\x6b\xbb\xef\xb4\x44\x50\xeb\xf5\x67\xc1\xba\xfb\xfb\xb9\xee\xee\x84\x77\xe9\x4f\x54\x94\x09\xaf\x44\x3d\xc0\xfa\xa3\x4e\xa4\x4d\x6d\x78\x52\x19\xb6\x41\x09\x6a\x1a\xd0\xad\x11\x5b\xe1\x79\xba\xd0\x05\xbb\x16\x85\xad\x50\x5b\xfa\x7b\x1b\x15\xd8\x9a\x71\xb3\x0f\xb6\xec\xfb\x4e\x0f\x6d\xfd\xdf\xd9\xfd\xcf\x16\x68\x53\x0a\xba\x85\xe0\xd9\x04\x6c\xa9\x0a\x3f\xa7\x09\xff\x0d\x00\x00\xff\xff\xf7\xe1\xf1\x3d\x72\x19\x00\x00")

func daemonsetAppsOpenshiftSdnSdnYamlBytes() ([]byte, error) {
	return bindataRead(
		_daemonsetAppsOpenshiftSdnSdnYaml,
		"DaemonSet.apps/openshift-sdn/sdn.yaml",
	)
}

func daemonsetAppsOpenshiftSdnSdnYaml() (*asset, error) {
	bytes, err := daemonsetAppsOpenshiftSdnSdnYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "DaemonSet.apps/openshift-sdn/sdn.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAppsDefaultDockerRegistryYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x4f\x6f\xa3\x3e\x10\xbd\xe7\x53\x58\xbd\x54\x8a\x94\x3f\xad\xd4\xdf\x81\x1b\x0a\x4e\x8a\x7e\x2d\xb0\x40\xbb\xea\x09\xb9\x66\x92\x58\x35\x36\x6b\x0f\x48\xd9\x4f\xbf\x62\x49\x09\x34\xcd\x9f\xdb\xfa\x14\xcd\xf8\xbd\x99\xf7\x06\x4f\x58\x29\x5e\xc1\x58\xa1\x95\x43\x58\x59\xda\x59\x7d\x37\xfa\x10\x2a\x77\x88\x07\xa5\xd4\xbb\x02\x14\x8e\x0a\x40\x96\x33\x64\xce\x88\x10\xc9\xde\x41\xda\xe6\x17\x21\xb9\xe6\x1f\x60\x26\x06\x36\xc2\xa2\xd9\x39\x24\x87\x35\xab\x24\x8e\x08\x51\xac\x00\xe7\xeb\x85\x7d\xdc\x96\x8c\xc3\xe1\xb2\x2d\x81\x37\x7c\x06\x4a\x29\x38\xb3\x0e\xb9\x1f\x11\x62\x41\x02\x47\x6d\xda\x4a\x05\x43\xbe\x7d\xea\x95\x3e\x5b\x1c\xa1\x28\x25\x43\xd8\x63\x7b\xdd\x37\x47\x0e\x68\xce\x12\x11\xf2\xd9\x5c\x73\xb8\x56\xc8\x84\x02\xd3\x81\x27\x04\x54\x7d\x60\x9a\xec\x65\xc7\x74\xe5\x27\x69\xfc\x96\x3d\xa6\x69\x94\xb9\x9e\x17\x77\x57\x08\xa9\x99\xac\xc0\x21\xce\xc3\x7c\x3e\xbf\x80\x0c\x68\x7a\x0c\x44\x5e\x5e\x80\x25\x74\x11\x7f\x87\xbc\x1d\x8f\xc7\x64\x45\x03\x1a\xbb\x29\xf5\xc8\x78\x3c\xbe\x3d\xcd\xf4\xec\x7b\xde\x13\xfd\xe9\xc6\x34\x8b\x69\x14\x26\x7e\x1a\xc6\x6f\x59\x18\xd1\x20\x79\xf4\x97\x69\x46\x83\x65\x18\x2f\xe8\x8f\x97\x30\x75\x8f\x4b\xdd\xac\x99\xb4\x70\x73\xa1\xd1\xf4\x29\xc9\xfe\xa7\x6f\xc7\xf0\x19\x20\x9f\x59\xe0\x06\xd0\xce\x3e\x07\x33\xfd\x80\xdd\x69\xc2\x43\x67\x09\x8d\x5f\x69\x7c\xc2\xf6\x2f\xc3\x9e\xee\x67\x3d\xb5\x35\xbf\x30\x91\x45\x18\x2c\xfd\xd5\x4b\xec\xa6\x7e\x18\x64\x91\x9b\x3e\x9e\xe8\xfb\x93\x7b\xc6\xb5\x5a\x8b\xcd\x74\x57\xc8\x2b\x7c\x58\xd0\x38\xf5\x97\xfe\xc2\x4d\xe9\xb5\x7e\x70\x83\xdd\x55\x51\xb0\xcd\x85\x11\x4b\x51\x83\x02\x6b\x23\xa3\xdf\xc1\xe9\x15\xd9\x22\x96\x2b\xc0\x7e\x88\x90\x92\xe1\xd6\x21\xb3\x2d\x30\x89\xdb\xdf\xc3\x94\x36\xe8\x90\x81\x5b\xcd\xb1\x7c\x0b\x8d\xb6\x46\x52\xd2\xcb\x08\x25\x50\x30\xe9\x81\x64\xbb\x04\xb8\x56\xb9\x75\xc8\x5d\x1f\x8b\xa2\x00\x5d\x61\x97\x7c\xe8\x72\xad\x5b\xbd\xfd\x71\xe8\xc0\xf6\xdf\x5d\xf7\x34\xa3\xe3\xde\x0c\xb0\x5c\xfc\x0b\xe1\xa7\x65\x19\xb0\xba\x32\x1c\x6c\xbf\xb4\x81\x5f\x15\x58\xb4\xc3\x76\x78\x59\x35\x6e\xcd\x8b\x41\xb4\x80\x42\x37\xab\xea\xfe\xe1\xbf\x67\xd1\x65\x6a\x2d\xab\x02\x9e\x75\xa5\x86\xee\x14\x4d\x24\x6a\x75\xf5\xbe\xa4\x1e\xe3\xd0\xe7\x09\x07\x83\x62\x2d\x38\x43\xb0\x67\x78\x8e\xe6\xf2\x65\xef\xb7\x0f\x60\x9f\x55\x3a\x87\x64\xb0\xd4\x5b\xd1\x9b\xbf\xff\x3d\x42\xad\x0d\xdb\x47\x2d\x98\x5a\x70\x70\x39\x6f\xea\x05\xdf\x7d\x02\xad\xd2\xde\x1e\xbe\x46\x40\x2b\xbb\x6f\x6f\x1b\x09\x2e\x62\x27\x67\x74\x5d\xcf\xdb\xa2\xfe\x04\x00\x00\xff\xff\x6b\x33\x87\xb3\x72\x07\x00\x00")

func deploymentAppsDefaultDockerRegistryYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAppsDefaultDockerRegistryYaml,
		"Deployment.apps/default/docker-registry.yaml",
	)
}

func deploymentAppsDefaultDockerRegistryYaml() (*asset, error) {
	bytes, err := deploymentAppsDefaultDockerRegistryYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment.apps/default/docker-registry.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAppsDefaultRegistryConsoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x6f\xa3\x30\x10\xbd\xf3\x2b\x46\xbd\x54\x42\x8a\xda\x1e\xf6\x50\x6e\xdd\xc4\x9b\xa0\x46\x80\x80\x54\xea\x09\x4d\xcd\x24\xb1\x6a\x6c\xcb\x9e\x44\xca\xbf\x5f\xd1\x8f\x2c\xd9\x74\xe9\xee\x1e\xea\x13\x9a\xe7\xf7\xe6\x3d\x18\x06\x9d\x7a\x20\x1f\x94\x35\x09\xa0\x73\xe1\x6a\x7f\x13\x3d\x2b\xd3\x26\x30\x23\xa7\xed\xa1\x23\xc3\x51\x47\x8c\x2d\x32\x26\x11\x80\xc6\x27\xd2\xa1\x7f\x82\x9e\x90\x80\xa7\x8d\x0a\xec\x0f\x13\x69\x4d\xb0\x9a\x5e\x10\x83\x1d\x7d\x08\x8d\x02\xc1\xa1\xa4\x04\x5a\x5a\xe3\x4e\x73\x14\x1c\xc9\xbe\x91\x27\xa7\x95\xc4\x90\xc0\x4d\x04\x10\x48\x93\x64\xeb\x5f\x2d\x74\xc8\x72\xbb\x1c\x78\x1a\x69\xc1\xd4\x39\x8d\x4c\x6f\xcc\x41\xa8\xfe\xe8\x13\x91\xb1\x70\xa3\x4d\x00\xde\x6d\xf7\x47\x5a\xc3\xa8\x0c\xf9\xa3\xf0\x04\xc8\xec\x7f\x75\x99\xbc\x29\xe5\x85\xc8\xaa\x45\xfa\xa3\x6e\xf2\xbb\x55\xbd\x68\x8a\x32\x7f\x48\x67\xa2\x6c\x56\xe5\xf2\x78\x19\x60\x8f\x7a\x47\x09\x5c\xc6\x71\x0c\x73\x91\x89\xf2\xae\x16\x33\x88\xe3\xf8\xf2\x53\xc5\xe9\x32\x15\x59\xdd\xa4\xb3\x73\x39\x69\xe5\xb3\x53\x3c\xb1\xb8\xe3\xed\x44\x6a\xd5\x7f\xf4\xdf\xf5\xee\x57\xdf\x45\x99\x89\x5a\x54\x4d\x9a\x55\x62\xba\x2a\xc5\xb9\xd2\xc5\x1a\x75\xa0\x8b\x33\xf2\x34\x9f\xde\x17\x69\xdd\xf4\x22\xff\x41\x2f\xc5\x3c\xad\xea\xf2\xb1\xc9\xb3\xe5\xe3\x07\x34\xf6\xbb\x31\xd6\x22\xaf\xea\x7f\x7b\x89\xaa\xc3\xcd\x27\x57\xb4\xda\x93\xa1\x10\x0a\x6f\x9f\x28\x19\xc8\x6f\x99\xdd\x9c\x78\x58\x02\x70\xc8\xdb\x04\xae\x9c\x32\x9b\xd3\xba\xf5\x9c\xc0\xed\xf5\xed\xf5\x49\x39\xc8\x2d\xf5\x11\x16\x75\x5d\x0c\x00\x65\x14\x2b\xd4\x33\xd2\x78\xa8\x48\x5a\xd3\xf6\x3f\xc5\x90\xca\xaa\x23\xbb\xe3\x23\xf8\xed\x6f\x26\xf6\xdd\x48\x18\xce\xe5\x71\x74\x8b\x73\x8b\x9e\xb0\x55\x5f\x1d\xfe\x4f\xd1\x8c\x6d\xa9\x3a\x59\x0a\xaf\x16\x37\x2f\x4b\x4d\x99\xb5\xc7\xe8\x67\x00\x00\x00\xff\xff\x62\xae\x9c\xfe\xe7\x04\x00\x00")

func deploymentAppsDefaultRegistryConsoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAppsDefaultRegistryConsoleYaml,
		"Deployment.apps/default/registry-console.yaml",
	)
}

func deploymentAppsDefaultRegistryConsoleYaml() (*asset, error) {
	bytes, err := deploymentAppsDefaultRegistryConsoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment.apps/default/registry-console.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAppsDefaultRouterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\xc1\x6e\xdb\x38\x10\xbd\xeb\x2b\x88\x02\x8b\x02\x06\x12\x3b\x4d\xb6\xe8\xf2\x26\x58\x6c\x23\x6c\x62\x0b\x12\x9d\xdd\x9e\x04\x86\x9a\xd8\x44\x29\x8a\x4b\x52\x42\xbd\x5f\xbf\xa0\x15\x2b\x92\x2d\xad\x73\xac\x7c\xb0\x3c\xc3\xf7\xe6\xcd\x23\x3d\x64\x5a\x3c\x81\xb1\xa2\x52\x18\x31\xad\xed\xbc\xb9\x09\x7e\x08\x55\x60\x14\x81\x96\xd5\xbe\x04\xe5\x82\x12\x1c\x2b\x98\x63\x38\x40\x48\xb2\x67\x90\xd6\xbf\x21\x64\xaa\xda\x81\xc1\xaf\xdf\x01\x42\x8a\x95\x70\xf2\xd3\x6a\xc6\x01\xa3\x02\x5e\x58\x2d\x5d\x60\x35\x70\x0f\x36\xa0\xa5\xe0\xcc\x62\xf4\x29\x40\xc8\x82\x04\xee\x2a\xd3\xd2\x96\xcc\xf1\xdd\x43\xaf\xce\x48\x25\xeb\x0c\x73\xb0\xdd\x1f\x85\x48\x29\xd4\x76\xa3\x0b\xe6\xe0\x88\x29\xd9\xcf\xac\x36\x5b\xc0\x68\xf1\x16\xd9\x28\xd6\x30\x21\xd9\xb3\x04\x8c\x3e\xfd\xfe\xdb\x21\xe3\xf6\x1a\x30\x4a\xfb\x24\x01\x42\x0e\x4a\x2d\x3b\xbe\xbe\x07\xfe\x91\x03\x7d\x23\x0a\x11\x3a\xf6\xea\x1f\x5e\x29\xc7\x84\x02\xd3\x41\xae\x10\xa8\xe6\x0d\x7f\xf5\x6a\x5e\x44\xbe\x86\x9b\x07\x9a\x2f\x49\x4a\xe3\xaf\xf1\x32\xa4\x24\x8f\xe2\xb4\x5b\x87\x50\xc3\x64\x0d\x18\xcd\xc1\xf1\xb9\xfe\x21\xe6\x4e\xda\xb9\x36\xa2\x69\x55\x5f\x66\x4b\x42\x7a\xff\x3e\x3a\xff\x7e\xcd\x8d\x3b\xa3\x4d\xd7\x1b\x4a\xd2\x9c\xfc\x4d\x49\xba\x0a\x1f\xf2\xfb\x75\x46\xf3\x78\x95\x91\xe5\x26\x25\xe7\xdc\x1f\x5e\x98\xb4\xf0\xe1\x7d\x34\x49\x1a\x3f\xfd\x49\xbe\x4f\x28\xb4\xc0\x0d\xb8\xab\xa6\x92\x75\x09\xf3\xd6\xec\x6b\x0d\xe5\x14\xf7\x43\x9c\x51\xb2\xca\xc3\x28\x1a\xb1\x70\x71\x7d\xf8\xe0\x9b\x3f\x6e\x3f\x4f\x11\x3c\x12\x9a\xc6\xcb\x2c\xa7\xdf\x93\x91\xce\x76\x4c\x9b\xea\xe7\x7e\x0a\x9c\x91\xf4\x29\x5e\x92\xfc\x9e\xd2\x24\xcb\x93\x75\x4a\x47\xcc\xb9\xbb\xbb\x9d\xb4\xa6\x4f\x30\x85\xff\xb2\xb8\x08\x5f\x85\x8f\x23\xe2\x7b\x47\xf5\x02\x36\x4b\xc2\xe5\x08\xc1\xf1\x4f\x7d\xca\x90\xd1\x90\x66\x79\x12\x66\xd9\x5f\xeb\x34\x3a\xc7\x7d\x9c\xcd\x66\xe8\x1b\x59\x91\x34\xa4\x24\x42\xb3\xd9\xec\xe3\x14\xc7\x78\xcb\x7e\xc3\xce\x9b\x6e\x21\x9b\xcc\x1f\xa6\xb1\x7e\x59\x51\x0a\xd5\x85\x45\xc9\xb6\x17\xb4\x48\xd1\x80\x02\x6b\x13\x53\x3d\x03\xee\x11\xee\x9c\xd3\xdf\xc0\xf5\x43\x08\x69\xe6\x76\x18\xcd\x77\xc0\xa4\xdb\xfd\x3b\x4c\x55\xc6\x61\x34\x38\x66\xfe\xb1\x7c\x07\x5e\xb8\xdf\xdd\x5e\x42\x28\xe1\x04\x93\x11\x48\xb6\xcf\x80\x57\xaa\xb0\x18\xdd\x2c\xba\x15\x27\x53\xf6\xad\x84\xed\x8f\x93\x6e\xe2\x24\x87\xe2\x5f\x16\xbd\x0a\x2d\x83\xef\x62\x1a\x70\x77\x77\x3b\x8a\xb0\xd3\x90\x93\x06\x5b\x8c\x75\xcc\xbd\x61\x0c\xb0\x42\xfc\x82\x9e\x1a\xb0\x55\x6d\x38\xd8\x7e\x7d\x03\xff\xd4\x60\x9d\x1d\x6a\xe2\xba\xf6\xd0\x45\x39\x88\x96\x50\x56\x66\xef\xef\x94\xcf\x8f\xa2\xcb\xb4\x73\xea\xb1\xaa\xd5\x70\x73\x4a\x1f\x49\xda\xe6\xfe\x6f\x8e\x77\x26\x82\x69\xc0\x5c\x71\x30\x4e\xbc\x08\x3e\x5c\xe2\x3d\x5d\x2b\xb9\xc7\xc8\x99\xfa\x98\x50\x55\x01\xd9\xe0\x5a\x6d\x97\x6e\x0f\x57\xbd\x50\x2f\x86\xbd\x46\x3d\xb7\xe0\x10\x72\xee\x45\xad\xce\x0f\x57\xdb\x44\xef\xe2\xba\xa8\xa9\x9d\xd2\x7d\xdb\xda\x48\x9f\xfc\x00\xb4\xc1\x7f\x01\x00\x00\xff\xff\x8e\x7c\x0d\x80\x81\x08\x00\x00")

func deploymentAppsDefaultRouterYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAppsDefaultRouterYaml,
		"Deployment.apps/default/router.yaml",
	)
}

func deploymentAppsDefaultRouterYaml() (*asset, error) {
	bytes, err := deploymentAppsDefaultRouterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment.apps/default/router.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAppsKubeServiceCatalogApiserverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x08\xbd\x14\x08\xaa\x7a\xfd\xc0\x86\x19\xd8\xa1\x5f\x18\x86\x75\x69\xb1\x0e\xbd\x33\x32\xe3\x08\x91\x29\x81\xa2\x03\xf8\xdf\x0f\xaa\xe3\x54\x76\x83\xad\xd8\x74\x32\xc8\xf7\x1e\x1f\x4d\x51\x10\xec\x33\x72\xb4\x9e\x4a\x05\x21\xc4\x62\x7b\x36\xdb\x58\xaa\x4a\x75\x8b\xc1\xf9\xae\x41\x92\x59\x83\x02\x15\x08\x94\x33\xa5\x08\x1a\x4c\x50\x1b\x91\xb7\xc8\xbb\x48\x0c\x60\xb0\x54\x9b\x76\x89\x3a\x25\xac\x41\x6d\x40\xc0\xf9\x7a\x16\x03\x9a\xc4\x64\x0c\xce\x1a\x88\xa5\x3a\x9b\x29\x15\xd1\xa1\x11\xcf\x29\xa3\x54\x03\x62\xd6\xf7\xb0\x44\x17\xfb\x80\x4a\x6e\xc6\x75\x04\x9b\xe0\x40\x70\xc7\xc8\x3c\xa5\xe3\x46\xe4\x03\x74\xa5\x06\x23\xe9\x18\x4f\x02\x96\x90\xf7\x14\xad\x80\xeb\x4c\x40\x4f\xd8\x7d\x4c\xeb\x28\x9e\xa1\x46\x2d\x5d\xc0\x2c\x81\x62\xaa\x31\x0e\x4d\xcb\xa8\x83\x67\xc9\xe2\x47\x1f\x2f\x2f\x2f\x8e\x46\xc0\xc4\xd4\x7d\xa1\x98\x25\xd6\x22\x21\x96\x45\xd1\x40\x14\x64\xfd\xe1\xe5\x94\xe7\x17\x9f\x3e\xff\x05\x74\xf6\x1e\xd0\xf9\x14\xb4\xf3\x61\x60\x65\x5d\xde\x57\xb1\x05\x2e\xb8\xa5\x22\xcd\x96\x09\x05\xe3\x74\xc2\xc5\x8e\x79\x6a\x46\xad\x0e\x8a\xc8\xf2\xcf\x9a\xce\x22\xc9\x61\xdd\x0d\x76\xff\x29\xbb\xc1\x2e\x97\xdd\xe6\x63\x9a\xce\x88\x60\xe9\x50\x43\xd5\xd8\x98\x96\x45\x07\xd7\xd6\x96\xf2\x79\x7d\xdf\x17\x5d\x0c\x0b\x71\x6f\x57\x68\x3a\xe3\xf0\xe4\x16\x57\xd0\x3a\x79\xea\xdd\x3c\x3a\xa0\x93\xdd\xf7\xb5\xa5\xca\x52\x1d\x5f\xb1\x19\xe8\x66\x0d\x54\xe3\x33\x38\x5b\x81\x78\x3e\xb9\x66\xbf\x41\xbe\x6a\x65\xfd\x04\x7c\xb3\x46\xb3\x19\xb9\x5c\x21\x48\xba\x73\x35\x08\xe6\xd6\x1e\xd8\xd6\x96\x40\x2c\xd5\xdf\x2a\x24\xb1\xd2\x7d\x11\x6e\x5f\xff\x9d\xf1\x4d\x03\x54\xe5\x97\xbf\x68\x23\x17\x4b\x4b\xc5\x74\x9d\x07\x88\x6d\xa0\xc6\x52\x1d\xcf\xe7\x73\xf5\xf5\x6e\x71\xf7\xf3\xea\xd7\xdd\xad\x9a\xcf\xe7\xc7\x7b\xc8\xdb\xb7\xa2\x3f\x5b\xef\xda\x06\x7f\xf8\x96\x64\xb4\x70\x4d\x8a\x3c\x82\xac\xcb\xf7\xcc\x72\x4f\x7c\x53\x48\xc7\xe8\xb2\x2c\x23\x54\x0f\xe4\xba\x52\x65\x4d\x93\xaf\xf0\x69\xf4\x06\x0d\x51\xcd\xde\xe1\xe9\x6b\xdd\x53\xeb\x0b\x4b\x2b\x86\x52\x1d\x25\x81\xe1\x66\xec\xec\x5c\x19\x93\x6c\x2f\x5e\x2c\x4c\x2c\xea\x69\xef\x7d\xe7\xd9\x9b\xf3\x27\xe7\x11\x0d\xa3\x94\x59\x27\x7d\x64\x71\x80\xf3\x3b\x00\x00\xff\xff\xdc\x46\x95\x37\xc8\x05\x00\x00")

func deploymentAppsKubeServiceCatalogApiserverYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAppsKubeServiceCatalogApiserverYaml,
		"Deployment.apps/kube-service-catalog/apiserver.yaml",
	)
}

func deploymentAppsKubeServiceCatalogApiserverYaml() (*asset, error) {
	bytes, err := deploymentAppsKubeServiceCatalogApiserverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment.apps/kube-service-catalog/apiserver.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAppsKubeServiceCatalogControllerManagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\xdd\x6a\x1c\x3d\x0c\xbd\x9f\xa7\x10\x7b\x13\x18\x70\x26\xe1\xe3\x83\x60\xe8\x45\x20\x4b\x29\xb4\x49\x68\x4b\xef\xb5\x1e\xed\xc4\xac\xff\x90\x35\x03\xfb\xf6\xc5\xfb\xeb\x69\x33\xa9\x2e\x75\x8e\x8e\xa4\x23\x1b\x93\xfd\x45\x9c\x6d\x0c\x1a\x30\xa5\xdc\x4d\xf7\xcd\xce\x86\x5e\xc3\x13\x25\x17\xf7\x9e\x82\x34\x9e\x04\x7b\x14\xd4\x0d\x40\x40\x4f\x1a\x4c\x0c\xc2\xd1\x39\x62\xe5\x31\xe0\x40\x7c\x82\x72\x42\x43\x1a\x76\xe3\x86\x54\x26\x9e\xac\x21\x65\x50\xd0\xc5\xa1\xc9\x89\x4c\x91\x60\x4a\xce\x1a\xcc\x1a\xee\x1b\x80\x4c\x8e\x8c\x44\x2e\x08\x80\x47\x31\x6f\x5f\x71\x43\x2e\x1f\x13\x50\xc6\x5a\x68\x28\xe4\x93\x43\xa1\x53\x69\x35\x65\x09\x37\x53\xf9\x48\x07\xe0\x3c\x5a\x89\x42\x41\x1b\x88\x2f\xb5\x0a\x90\x87\x4a\x49\x2d\xc9\x1c\x41\xa5\x32\x99\x91\x49\xa5\xc8\x52\xe5\x57\x0f\x77\x0f\x77\xab\x9a\x38\xd5\xe8\x7f\x33\x48\x39\xc2\x9e\x58\x1d\xdc\xb1\x31\xa8\x8b\xbb\x15\xeb\x5d\x9b\x97\x44\x14\x53\x8e\x23\x1b\x52\x2e\x9a\xdd\x7c\x99\xad\x1d\x3c\xa6\x3c\xab\xdd\x70\xdc\x11\x2b\x26\x67\xb3\x28\x1b\x84\x78\x42\x57\x51\xfe\xf7\x33\xfe\x96\x50\xca\xd6\x03\x0a\xd5\x4a\x2f\x6c\x07\x1b\x50\x6c\x18\xbe\xf4\x14\xc4\xca\xfe\x93\xf0\x78\xdd\xc3\x44\xef\x31\xf4\xb5\xbf\xdd\x98\xb9\xdb\xd8\xd0\x2d\x2d\x67\x3d\x0e\xa4\xe1\xa6\x6d\x5b\xf8\xbc\x7e\x5e\x7f\x7f\xfc\xb9\x7e\x82\xb6\x6d\x6f\x2e\x94\x0f\x5e\xea\x31\xca\x79\xfe\xba\xea\xe1\xf2\xaf\x91\x45\x43\x39\xd7\x05\x9d\xa2\x1b\x3d\x7d\x8b\x63\x98\xd7\xf8\x92\x79\x45\x79\xd3\xd0\x4d\xc8\x1d\x8f\xa1\x2b\x67\xe1\x40\x42\x79\xf1\x38\xe7\xf1\xfe\xc0\x55\xce\xae\xe2\x30\x61\xff\x12\xdc\x5e\x43\x65\x58\x88\x3d\xfd\x98\x7d\x9a\x73\x56\x71\x74\x74\x7b\xed\x7e\x6b\x63\x67\xc3\x96\x51\xc3\xaa\x08\x9c\x1f\xd8\xa9\xe9\xa3\x31\x65\xf8\xe7\x77\x07\xb9\xfa\xd6\xd4\x06\x54\x7f\xe2\xdf\x0b\x64\x32\x4c\xa2\xab\x85\x8e\x99\x63\x47\x4c\xb6\x14\x13\x1f\x6a\x7e\x07\x00\x00\xff\xff\x69\xcd\xaa\x78\x89\x04\x00\x00")

func deploymentAppsKubeServiceCatalogControllerManagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAppsKubeServiceCatalogControllerManagerYaml,
		"Deployment.apps/kube-service-catalog/controller-manager.yaml",
	)
}

func deploymentAppsKubeServiceCatalogControllerManagerYaml() (*asset, error) {
	bytes, err := deploymentAppsKubeServiceCatalogControllerManagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment.apps/kube-service-catalog/controller-manager.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAppsOpenshiftAnsibleServiceBrokerAsbYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x53\x4d\x8b\xdb\x30\x10\xbd\xe7\x57\x0c\x7b\x59\x30\x68\xcd\xb2\x14\x8a\x6e\xdb\x26\x4d\x4b\xbb\xd9\x90\x84\x5e\xcb\x58\x99\xac\x45\x64\x49\x48\x13\x43\xfa\xeb\x8b\x6a\xc7\x2b\x77\xbd\xfd\xb8\xd5\x27\xf3\x34\xf3\xe6\xbd\x37\x12\x7a\xfd\x95\x42\xd4\xce\x4a\x40\xef\x63\xd9\xde\xce\x8e\xda\xee\x25\xcc\xc9\x1b\x77\x6e\xc8\xf2\xac\x21\xc6\x3d\x32\xca\x19\x80\xc1\x8a\x4c\x4c\x7f\x90\x1a\x24\x38\x4f\x36\xd6\xfa\xc0\x02\x6d\xd4\x95\x21\x11\x29\xb4\x5a\x91\xa8\x82\x3b\x52\xf8\x59\xd9\x43\x12\x30\x56\x33\x00\x8b\xcd\xe8\x3f\x7a\x4c\x87\x7f\xa4\x8a\x9e\x54\x1a\x1d\xc8\x1b\xad\x30\x4a\xb8\x9d\x25\x72\x43\x8a\x5d\xe8\x44\x35\xc8\xaa\xfe\x92\xa9\xfc\x7b\x9d\x4c\x8d\x37\xc8\xd4\x13\x65\xae\xd3\x67\x46\x9c\xff\xe2\x7e\x22\x01\x80\x8b\x97\xf4\x29\x67\x19\xb5\xa5\x30\xd0\x0b\x20\xdb\x3e\xcf\x12\x7d\x64\xef\x36\x8f\x9f\x17\x9b\x6f\xef\x1f\x57\x1f\x3e\x2d\x87\x53\x80\x16\xcd\x89\x24\x94\xc4\xaa\x9c\x16\x52\x2a\x67\x0f\xfa\xe9\xe6\x8c\x8d\x19\x1a\x75\x83\x4f\x24\xe1\xba\x28\x0a\x58\x2e\x56\x8b\xcd\xfd\x6e\x31\x87\xa2\x28\xae\x87\x12\xa3\x5b\xb2\x14\xe3\x3a\xb8\x8a\x64\x36\xb2\x66\xf6\x4b\xe2\x1c\x02\xf0\xc8\xb5\x84\xb2\x26\x34\x5c\x7f\x1f\x1f\xb9\xc0\x12\x6e\xef\xee\xde\x8e\xe0\xa8\x6a\x4a\xce\x3e\xee\x76\xeb\x6d\x76\xa2\xad\x66\x8d\x66\x4e\x06\xcf\x5b\x52\xce\xee\xd3\xb6\xdf\x0c\x15\xf9\x15\x7a\x1e\x10\xf3\xc8\x86\x54\xd7\x2f\x47\x07\xc2\xbd\xfe\x1f\x7d\xb5\xce\x9c\x1a\x7a\x70\x27\x3b\x36\xd3\x24\x64\xdd\xc9\x78\x7d\xcb\xd9\xa0\x2e\xa0\x6e\xeb\xa2\x63\xfd\x0d\x1d\x9b\x58\xfa\xa0\x5b\x64\x7a\xc1\x81\xb1\x12\x6c\x62\x8f\x5b\xb7\xa7\xed\xe8\xc5\x5d\x50\x11\x9c\xa1\x9b\xe3\xa9\xa2\x60\x89\x29\xde\x68\x57\x6a\x7b\x08\x28\xe1\x8a\xc3\x89\xae\xfa\xea\x5e\xf2\xbd\x52\x49\xc4\xea\x97\x45\x76\x52\xb3\x87\xd0\x59\x78\x40\x9f\xaf\x44\x33\x35\x31\x07\x04\x1c\xe9\x2c\xa1\x8b\x41\x74\x3d\x13\x2b\x9c\x7a\x05\x17\x9f\xd3\xbd\xaf\xe7\x28\x26\xf3\x49\xfe\x54\x18\x5f\xa0\x0e\x59\x8d\xaa\x7f\x04\x00\x00\xff\xff\xc9\x5a\x28\x6f\x7a\x05\x00\x00")

func deploymentAppsOpenshiftAnsibleServiceBrokerAsbYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAppsOpenshiftAnsibleServiceBrokerAsbYaml,
		"Deployment.apps/openshift-ansible-service-broker/asb.yaml",
	)
}

func deploymentAppsOpenshiftAnsibleServiceBrokerAsbYaml() (*asset, error) {
	bytes, err := deploymentAppsOpenshiftAnsibleServiceBrokerAsbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment.apps/openshift-ansible-service-broker/asb.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAppsOpenshiftEtcdEtcdOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4f\x6b\xe3\x30\x10\xc5\xef\xfe\x14\x73\x0b\x18\xbc\x4b\xae\x82\x3d\x98\x8d\xdb\x4b\x93\x86\xb4\x14\x7a\x0a\x93\xf1\xb8\x11\xd1\x3f\xa4\x89\xa1\xdf\xbe\xb8\x76\x55\xa7\x34\x3d\x55\x27\xf1\x66\xde\xef\x3d\x84\x30\xe8\x27\x8e\x49\x7b\xa7\x00\x43\x48\x7f\xfb\x65\x71\xd2\xae\x55\xb0\xe2\x60\xfc\xab\x65\x27\x85\x65\xc1\x16\x05\x55\x01\xe0\xd0\xb2\x02\x16\x6a\x2b\x1f\x38\xa2\xf8\x38\xa9\x29\x20\xb1\x02\x1f\xd8\xa5\xa3\xee\xa4\x1a\x96\x0a\x00\x83\x07\x36\x69\xf0\x7e\xef\x4e\x81\x69\x98\x46\x0e\x46\x13\x26\x05\xcb\x02\x20\xb1\x61\x12\x1f\x47\x9f\x45\xa1\xe3\xdd\x0c\x74\xad\x88\xb0\x0d\x06\x85\x27\xdb\xac\xf8\x70\xcc\x05\xe1\x1a\x03\xe0\xa3\xd2\xfb\x9d\x63\xaf\x89\x6b\x22\x7f\x76\xb2\xb9\xe2\x00\x20\xef\x04\xb5\xe3\x98\xf9\xd5\xc4\x3f\x20\x9d\xce\x21\x87\x6a\x8b\x2f\xac\x60\x51\x96\x25\xdc\x36\x9b\x66\x57\x3f\x36\x2b\x28\xcb\x72\x91\x57\xc8\x5b\x8b\xae\xfd\x2c\x5a\x8d\x91\x23\xe9\x6b\xf2\x30\xae\x2a\x8a\x8c\xc2\x15\xc5\xf6\x5f\x87\x26\x71\x1e\xb2\xeb\xe7\xa0\xb1\xd3\xfa\x79\xbf\xbd\x5f\xed\x37\xf5\xba\x79\xd8\xd6\xff\x9b\xbc\x00\xd0\xa3\x39\xf3\x4d\xf4\x56\xcd\x44\x80\x4e\xb3\x69\x77\xdc\x5d\xaa\x93\xbe\x45\x39\xaa\xfc\xdc\x7f\xf2\x77\xf8\x29\xf7\xf7\x23\x8b\xb7\x00\x00\x00\xff\xff\x8c\x90\xff\x76\xce\x02\x00\x00")

func deploymentAppsOpenshiftEtcdEtcdOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAppsOpenshiftEtcdEtcdOperatorYaml,
		"Deployment.apps/openshift-etcd/etcd-operator.yaml",
	)
}

func deploymentAppsOpenshiftEtcdEtcdOperatorYaml() (*asset, error) {
	bytes, err := deploymentAppsOpenshiftEtcdEtcdOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment.apps/openshift-etcd/etcd-operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAppsOpenshiftInfraBootstrapAutoapproverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x5b\x6f\x1b\x37\x13\x7d\xd7\xaf\x38\xd9\x4f\x88\x12\x7d\xa1\x2e\x6d\x6a\xa0\xdb\x28\x40\xe0\x18\x45\x80\x22\x28\xec\xb4\x2f\x86\x1f\x46\xdc\x91\x44\x78\x79\x01\x39\xeb\x4a\xad\xfb\xdf\x0b\xea\xe6\x5d\x45\x75\xd1\x87\xf2\x89\x3b\xd7\x33\x87\x33\xb3\x14\xcc\xaf\x1c\x93\xf1\xae\x04\x85\x90\xc6\x0f\xd3\xde\xbd\x71\x55\x89\x8f\x1c\x6a\xbf\xb1\xec\xa4\x67\x59\xa8\x22\xa1\xb2\x07\x38\xb2\x5c\x62\xee\xbd\x24\x89\x14\x14\x35\xe2\x29\x84\xe8\x1f\x38\xee\xd5\x29\x90\xe6\x12\x3e\xb0\x4b\x2b\xb3\x10\x65\xdc\x22\x52\x2f\x05\xd6\x39\x42\xe4\x50\x1b\x4d\xa9\xc4\xb4\x07\x24\xae\x59\x8b\x8f\x59\x03\x58\x12\xbd\xfa\x89\xe6\x5c\xa7\x9d\x00\x19\xd5\x33\xf9\x84\x6d\xa8\x49\x78\xef\xde\x02\x9a\x4f\xdd\x89\xf4\x4f\xb1\x80\x03\xc4\xed\x9d\xe3\x83\xd1\xfc\x41\x6b\xdf\x38\xf9\xfc\x7c\xd9\xf9\x68\xef\x84\x8c\xe3\x78\x4c\xa8\x40\x71\xd9\x4a\xaf\xf0\x78\xbc\xe7\x04\x02\xe5\xc1\x31\xf2\xda\xc8\xd7\x0a\xe7\x1b\x97\xf8\x8c\x22\x98\xc0\x0b\x32\x75\xaf\xa5\xd2\x24\x78\xf7\x6e\x70\x73\x79\xfd\xe9\xe7\x2f\x03\xbc\x1f\x8b\x0d\xe3\x64\x96\xee\x08\x2f\x9f\xff\xbd\x18\xcf\x8d\x1b\xcf\x29\xad\xda\xd2\xf6\x1d\x9f\x04\xbf\x99\xba\xc6\xbe\x3a\x90\xdb\xe0\xf2\xe6\x1a\xb2\x22\x81\x49\x70\x5e\x0e\xba\x0a\x1b\x96\x37\x20\x57\xa1\xe2\x9a\xe5\xc4\x98\xd7\xc1\x44\xae\x60\x7d\xe4\x2c\x71\xb8\x98\x20\xb1\xf6\xae\x4a\x9d\x94\xb4\xf4\xa3\x0e\x9e\xff\x8a\xa5\xdc\x9d\xb3\xfe\xb4\xcd\x9b\x77\x95\x11\xe3\xdd\xac\xff\x4d\x5b\xcc\x51\xcc\xc2\x68\x12\x9e\xf5\xbf\x6d\x29\x9a\xc4\x71\x17\xe5\x6d\xaf\x5b\x43\x23\xfe\xc0\x4b\x4b\x61\x16\xb8\xbd\x85\xfa\x1d\x45\xff\x98\xaa\xc0\xcb\x97\x78\x55\xf4\x0f\xb1\x0a\xcc\x66\x28\xd2\x26\x09\xdb\x72\xdf\x76\xb4\x6b\xbb\xf2\x64\x88\x4a\xe7\x2b\x56\xc7\x36\x0c\x1c\x0b\x3c\x3e\xe2\x6f\x62\x65\xe3\xb2\x18\xe2\x35\xee\xee\x7e\x80\xac\xd8\xb5\x90\x01\x5e\x83\x2a\xdb\xae\xf5\xf8\xe8\x45\x7f\x1b\xac\x63\x9e\xf9\xc7\xa4\x25\x5a\x98\x2e\x05\x7a\xc5\xfa\xbe\x1b\x6e\x79\x86\x0b\x97\xb9\x78\x32\x2a\xce\x83\x13\x5e\xcb\xac\xe8\xbf\x02\xeb\x95\x3f\xf5\x78\xc4\x9c\x12\x5f\xbc\x85\xaa\xa0\xf0\xba\x8b\xd3\x2c\xf0\xe2\xe0\x95\xa3\x64\xf3\x2d\x8d\xa9\xc6\xfa\xbb\xc9\xf7\x50\xce\xfb\x46\xce\xe4\xc4\xde\x8d\x63\xf4\xb1\xc4\x2f\x8e\xe6\x35\x43\x3c\x02\xc5\xc4\xed\xca\x8a\x53\xbf\xcc\xcd\xb4\x23\x5c\x98\x7f\x89\x6a\x4b\x1f\xbb\x0a\xea\x62\x82\xf7\xe3\x8a\x1f\xc6\xae\xa9\xeb\x67\x70\x5e\xb6\xa8\x36\xe9\x30\x6f\x6f\x76\xc3\x68\xdc\xf2\x14\xa5\xd7\x87\x39\xd5\x29\x9e\x7d\xe3\x13\xd0\xe7\x9e\xfc\xe9\x63\xb7\x6c\x3a\x5b\x68\x65\x7d\x85\xe6\xff\x6b\x9c\xdf\x3f\xbc\x66\x9d\x51\xf8\x79\x6e\xf3\x1d\x0c\xa5\x2c\xad\x8d\x6d\xac\xda\xd2\x9e\x66\x53\x28\x15\x39\x6d\x9c\x56\x81\xa3\xf1\xd5\x6c\x3a\xb1\x50\x84\xc1\x1f\xa3\x24\x24\x4d\x1a\x1d\x47\x29\xdd\x0e\xef\x46\xb2\x09\xfc\xe7\xe0\xc4\xe2\x89\x9a\x27\x55\x60\x3d\x3a\x0c\x4a\x96\xaa\xb3\x30\xb5\xb7\x96\x5c\xd5\x5e\xdb\x5f\x6f\x4d\x05\xa5\x8f\x1f\xc6\xd2\x92\x4b\x0c\x86\xc3\x21\x7e\xbc\xfa\x7c\x75\xfd\xe1\xcb\xd5\x47\x0c\x87\xc3\xc1\xd1\x64\xf7\xdb\xec\x64\xca\xd3\x79\xd3\xf9\xfb\x1d\xa4\x2a\xfa\x9a\x47\xf7\xcd\x9c\xa3\x63\xe1\x34\x32\x7e\x6c\x29\x09\xc7\x12\x85\xc4\x86\x8b\xbf\x02\x00\x00\xff\xff\xdb\x64\x5d\x18\xb7\x07\x00\x00")

func deploymentAppsOpenshiftInfraBootstrapAutoapproverYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAppsOpenshiftInfraBootstrapAutoapproverYaml,
		"Deployment.apps/openshift-infra/bootstrap-autoapprover.yaml",
	)
}

func deploymentAppsOpenshiftInfraBootstrapAutoapproverYaml() (*asset, error) {
	bytes, err := deploymentAppsOpenshiftInfraBootstrapAutoapproverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment.apps/openshift-infra/bootstrap-autoapprover.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAppsOpenshiftInfraCustomerAdminControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x4e\x34\x31\x0c\x84\xfb\x7d\x0a\xbf\xc0\xfe\xab\x6b\xd3\xfd\x12\x25\xa2\xa4\x37\xd9\x39\xce\xba\xc4\x0e\xb1\xf7\xd0\xbd\x3d\x0a\x1c\x08\x1a\x96\xa9\xa2\x89\xf5\xcd\xd8\xdc\xe4\x11\xdd\xc5\x34\x11\xb7\xe6\xcb\xe5\x30\x9d\x45\xd7\x44\x77\x68\xc5\xae\x15\x1a\x53\x45\xf0\xca\xc1\x69\x22\x52\xae\x48\x94\x37\x0f\xab\xe8\x33\xaf\x55\x74\xce\xa6\xd1\xad\x14\xf4\xdb\x84\x37\xce\x48\x64\x0d\xea\x27\x39\xc6\x2c\x7a\xec\x3c\x79\x43\x1e\x90\x8e\x56\x24\xb3\x27\x3a\x4c\x44\x8e\x82\x1c\xd6\xc7\x0f\x51\xe5\xc8\xa7\x7b\x7e\x42\xf1\x0f\x83\x46\xb1\xdf\x23\x03\xb5\x15\x0e\xdc\x08\xdf\xea\x0e\x95\x1f\xb0\x3f\xe0\x88\x3e\x8b\xbe\xbf\xd1\x2f\x92\xf1\x3f\x67\xdb\x34\x1e\x76\xf7\x1f\x1a\x06\x8b\xa2\x7f\xc5\xce\x24\x95\x9f\x91\xe8\x65\xe3\xeb\x3f\xb1\xe5\xfc\x6a\xb6\xba\xe9\xb2\xc7\xda\xbf\xf9\x5b\x00\x00\x00\xff\xff\x6f\xf4\x7d\xc8\xc5\x01\x00\x00")

func deploymentAppsOpenshiftInfraCustomerAdminControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAppsOpenshiftInfraCustomerAdminControllerYaml,
		"Deployment.apps/openshift-infra/customer-admin-controller.yaml",
	)
}

func deploymentAppsOpenshiftInfraCustomerAdminControllerYaml() (*asset, error) {
	bytes, err := deploymentAppsOpenshiftInfraCustomerAdminControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment.apps/openshift-infra/customer-admin-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAppsOpenshiftMetricsKubeStateMetricsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4d\x6b\xdb\x40\x10\xbd\xfb\x57\xcc\x2d\x20\x50\x63\xb7\x04\xc2\x42\x0e\xa6\x76\x73\x69\x52\x93\x94\x42\x4f\x61\xb2\x7a\xae\x16\xef\x57\x77\x47\xa6\xce\xaf\x2f\xf2\x87\x2a\xd9\x8d\x4b\x29\xdd\x93\x98\x37\xef\xcd\x9b\x19\xed\x72\x34\x5f\x90\xb2\x09\x5e\x11\xc7\x98\x2f\xd7\x93\xd1\xca\xf8\x4a\xd1\x0c\xd1\x86\x8d\x83\x97\x91\x83\x70\xc5\xc2\x6a\x44\xe4\xd9\x41\xd1\xaa\x79\x46\x99\x85\x05\xa5\x83\x24\xa3\xf3\x1e\xca\x91\x35\x14\x85\x08\x9f\x6b\xb3\x94\x0e\xce\x11\xba\xe5\x67\x58\x68\x09\xa9\xfd\x26\x72\x2c\xba\xfe\xc8\xcf\xb0\x79\x17\x20\x5a\x5d\xe7\x92\x63\x7c\xa5\x46\x42\xb4\x46\x73\x56\x34\x19\x11\x09\x5c\xb4\x2c\xd8\x8b\xf5\x6c\xb6\xc7\x0e\x74\xff\xa4\x4c\x74\xb0\xb8\xfd\x46\x5a\x1b\x8d\xa9\xd6\xa1\xf1\x72\xff\x7a\xd3\xed\xd1\xc1\x0b\x1b\x8f\xd4\x15\x2b\xcf\xcd\x69\x77\x8c\xe3\x6f\x50\x74\x51\x14\x05\xdd\xce\xef\xe7\x0f\xd3\xcf\xf3\x19\x15\x45\x71\xd1\xa5\xc4\x90\xa4\xe7\xff\x20\x5a\x8b\xc4\x13\xb9\x9e\x8b\x45\x48\xa2\xe8\x7a\x7c\x3d\x3e\xa1\x0a\x2c\x5a\xe6\xe6\x2c\x6f\xd2\xa1\x09\x5c\x19\x8f\x9c\x17\x29\x3c\x43\xf5\x58\xad\x89\x5b\x48\x3f\x44\x14\x59\x6a\x45\x97\x35\xd8\x4a\xfd\x32\x84\x4e\x4d\x11\x19\x6f\xc4\xb0\x9d\xc1\xf2\xe6\x11\x3a\xf8\x2a\x2b\xba\xea\x25\x88\x71\x08\x8d\x9c\x60\x87\x7e\xb8\xaa\x82\x2f\x13\xb2\x79\x41\xfa\x9b\xd1\x26\xe4\xd0\x24\x8d\xdc\x6f\xc0\x1a\x67\x24\x0f\x5b\xd2\xb1\x51\x34\x19\x8f\xdd\x20\xea\xe0\x42\xda\x28\x7a\x37\xbe\x33\x3d\x20\xe1\x7b\x83\xfc\x0f\x12\xf0\xeb\x3e\xf7\xd0\xe6\xdd\xd7\xa7\xc5\xa7\xd9\xd3\xfd\xf4\x6e\x3e\xd0\x58\xb3\x6d\xf0\x21\x05\x37\x2c\x48\xb4\x34\xb0\xd5\x03\x96\xc7\xf1\x3d\xb2\xd8\xee\xe9\x70\x5f\xde\xb4\x45\xce\x57\x7d\x5c\x4c\xdf\xff\xb7\xd2\xdb\x37\xa3\xcb\xd6\xc1\x39\xf6\xd5\x70\x0c\x97\x31\x54\x4f\x9e\xbd\xdf\x0c\xc2\x65\xd9\xfd\xbc\x37\x67\xae\xda\x3e\x35\x36\x37\x47\x5b\x68\xc3\xf8\x21\x89\x77\xe0\x31\xb4\x5b\x51\x4b\x1a\x6c\xf9\x17\x6b\x9f\xf0\xf6\x04\x96\x3a\x21\xd7\xc1\x56\x37\x57\x47\x48\xd5\x3d\xab\xbf\x73\xfc\x33\x00\x00\xff\xff\xc0\x23\xca\xa4\x8f\x05\x00\x00")

func deploymentAppsOpenshiftMetricsKubeStateMetricsYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAppsOpenshiftMetricsKubeStateMetricsYaml,
		"Deployment.apps/openshift-metrics/kube-state-metrics.yaml",
	)
}

func deploymentAppsOpenshiftMetricsKubeStateMetricsYaml() (*asset, error) {
	bytes, err := deploymentAppsOpenshiftMetricsKubeStateMetricsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment.apps/openshift-metrics/kube-state-metrics.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAppsOpenshiftTemplateServiceBrokerApiserverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4f\x6b\xe3\x4e\x0c\xbd\xfb\x53\x88\x5e\x0a\x86\xa9\x7f\xe5\xd7\xc3\x62\xc8\xa1\xd0\xd0\x3d\x6c\x4b\xd8\x86\xbd\x2b\x63\xc5\x1e\x32\xff\x98\x91\x0d\xd9\x4f\xbf\x4c\x9c\x3a\x9e\xfc\xe9\xae\x6e\x7e\xd2\x7b\x92\x9e\x6c\xa3\x57\xbf\x28\x44\xe5\x6c\x0d\xe8\x7d\xac\x86\xc7\x62\xa7\x6c\x53\xc3\x0b\x79\xed\xf6\x86\x2c\x17\x86\x18\x1b\x64\xac\x0b\x00\x8b\x86\x52\xa9\x8a\x14\x06\x0a\x47\x24\x7a\x94\x54\x83\xf3\x64\x63\xa7\xb6\x2c\x98\x8c\xd7\xc8\x24\x52\x99\x92\x24\x36\xc1\xed\x28\x14\xd1\x93\x4c\x32\x81\xbc\x56\x12\x63\x0d\x8f\x05\x40\x24\x4d\x92\x5d\x48\x19\x00\x83\x2c\xbb\x1f\xb8\x21\x1d\x47\x00\x4e\xfd\x6a\xb8\xe3\xd0\xd3\x5d\x01\xf0\xd9\xe2\x48\x9a\xcd\x98\x42\x67\xfc\xeb\x0a\x29\x2e\xf7\x01\xf8\x1c\x32\x85\x74\x96\x51\x59\x0a\x93\x96\x00\xe9\x8c\x41\xdb\x9c\xc4\x05\x54\x7d\x0c\xd5\x46\xd9\xea\xd6\xe2\xa7\xd2\xc8\x18\x78\xf6\xfc\x77\x86\x10\x91\x64\x1f\x48\x78\x17\x78\xf1\xed\xe9\xe9\xff\x2c\x89\x7d\xa3\x58\x68\xd7\x0a\x8f\xdc\x2d\x44\x96\x64\x1d\x85\xa4\xc0\x62\xab\x34\x2d\xaa\x01\x43\x75\xe8\x63\xdb\x03\x5c\xb1\x8e\x0f\x32\x9b\x67\xe4\xf8\xa0\x86\x34\xd4\x8e\xf6\x5f\x51\x77\xb4\xcf\xa8\xc3\xe2\xbf\xec\x59\x3a\xbb\x55\xed\x48\x9e\x4c\x3e\xa2\x17\xc0\xc3\x1e\x8d\x9e\xe8\xca\x60\x4b\x35\xdc\x97\x65\x09\xaf\xcb\xf7\xe5\xcf\xe7\xf5\xf2\x05\xca\xb2\xbc\x9f\x4a\xae\x1d\x2f\x45\xf2\x29\xce\xcf\x33\x5d\x71\xe5\x02\xd7\x90\x59\x18\x08\x1b\x65\x29\xc6\x55\x70\x1b\x3a\xb1\x00\x3a\x66\xff\x4a\x3c\x87\x00\x92\xc7\x35\x54\x1d\xa1\xe6\xee\x77\x9e\xba\x14\x3f\xbc\x4e\xb2\xa3\x34\xe7\xf7\xf5\x7a\xf5\x31\x65\x06\xa7\x7b\x43\x6f\xae\xb7\xf9\xa8\x26\x21\xab\xb1\xc9\xb9\xe5\x33\xd9\x71\xf5\xab\xc9\x4b\x8d\x73\xa3\x2f\x74\x6e\x14\x58\xd7\xd0\x47\xf6\x6d\x8e\x86\xb5\x87\xff\x85\xb2\xdb\x80\x47\xf4\xf8\xee\x3e\x4b\x99\x5a\xbf\x5f\xbd\xcb\xb8\xf1\xec\x3b\xfa\x62\x87\x48\x32\xe4\xce\x8f\xc8\x99\xb2\xb8\x42\x3e\x5c\x7b\xab\xda\x37\xf4\xf5\xbf\x2e\x7a\x33\xfd\x27\x00\x00\xff\xff\xb3\xe5\xbf\x80\x20\x05\x00\x00")

func deploymentAppsOpenshiftTemplateServiceBrokerApiserverYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAppsOpenshiftTemplateServiceBrokerApiserverYaml,
		"Deployment.apps/openshift-template-service-broker/apiserver.yaml",
	)
}

func deploymentAppsOpenshiftTemplateServiceBrokerApiserverYaml() (*asset, error) {
	bytes, err := deploymentAppsOpenshiftTemplateServiceBrokerApiserverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment.apps/openshift-template-service-broker/apiserver.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _deploymentAppsOpenshiftWebConsoleWebconsoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x8f\xdb\x36\x10\xbd\xfb\x57\x4c\x82\x34\x4e\x0c\xd0\xf2\xa6\x09\xb0\x50\xe0\x02\x01\xb2\x48\x0e\x71\x60\x64\x37\xbd\xa4\x39\x8c\xa9\x91\x44\x2c\xbf\x4a\x52\xda\x75\xd1\x1f\x5f\xd0\xb2\x65\xc9\x92\xdd\x6d\xe9\x8b\x35\x8f\x7a\xf3\xde\xcc\x90\x42\x2b\x7e\x27\xe7\x85\xd1\x29\xa0\xb5\x3e\xa9\xaf\x26\xf7\x42\x67\x29\x7c\x24\x2b\xcd\x56\x91\x0e\x13\x45\x01\x33\x0c\x98\x4e\x00\x24\x6e\x48\xfa\xf8\x0f\xe2\x0b\x29\x18\x4b\xda\x97\x22\x0f\xec\x81\x36\x8c\x1b\xed\x8d\xa4\x1d\xfc\x40\x9b\xfd\x63\x0a\xcf\x83\xab\xe8\xf9\x04\x40\xa3\xa2\xb4\x03\xed\x43\xde\x22\xa7\x73\x64\xde\x12\x8f\x19\x1d\x59\x29\x38\xfa\x14\xde\xec\x9e\x6a\x11\x85\x7f\x16\x3e\x18\xb7\xfd\x22\x94\x08\x0d\xe2\x49\x12\x0f\xc6\x35\x2a\x15\x06\x5e\x7e\xe9\xc8\xfe\x57\xe1\x67\xa4\xfb\xe0\x30\x50\xb1\x6d\x58\x9c\x91\x52\xe8\xe2\xbb\xcd\x30\xd0\x81\x58\xe1\xe3\x6d\xe5\x0a\x4a\xe1\xcd\xbb\x5f\x8e\xb1\xef\x1a\x6b\x14\x12\x37\x91\xef\x6a\xb1\x68\xa0\xb0\xb5\x94\xc2\xb7\x2e\xcf\x04\x20\x90\xb2\xb2\xa5\xec\x96\x3e\x2e\xd9\xf3\xf1\x04\x27\x67\xbc\xc4\x35\xd2\x0a\x80\x43\xad\xe3\xe2\x46\x07\x14\x9a\x5c\x9b\x90\x01\x37\x4a\xa1\xce\x8e\x0a\x18\x24\x95\x77\xc9\x46\xe8\xc4\x38\x51\x08\x3d\x2a\x82\x01\x63\x58\x65\x22\x30\x69\x0a\x66\x31\x94\x4b\xd6\x05\xeb\xe5\xa2\xb7\x97\x1b\x9d\x8b\x62\x99\xd4\xe8\x92\xa3\xc2\x7d\x78\x18\x99\x6f\x51\xc9\x96\x40\x28\x8c\x2d\x98\xce\x66\x33\xf8\x74\xf3\xf5\xe6\xdb\x87\xbb\x9b\x8f\x30\x9b\xcd\xa6\xed\x16\x29\x6a\xd2\xe4\xfd\xda\x99\x0d\x1d\xcd\x00\xd0\xe3\xd1\xff\xa1\x0a\x27\x8e\xf7\xae\xa3\x63\x5f\x9e\x44\x19\x3f\x09\xfc\xcd\x7a\x01\x00\x91\xc3\x8f\x1f\xf0\x0c\x58\x0e\x49\x50\x76\xc4\x4b\x89\xbe\x84\x9f\x3f\xdf\x43\x28\x49\xc3\x1f\x27\xef\x03\xa8\xec\x9d\xaf\x14\xfc\xa7\xda\xc0\x6f\x97\xb2\xbd\x1f\x64\x21\xd9\xe8\x7c\xf1\xea\xff\x64\x7b\x0d\xcf\x96\xf0\xe2\x15\xc7\x70\x29\xeb\xeb\x4b\x26\x89\x97\x06\xa6\x67\xcc\x94\xe8\x81\x97\xa8\x0b\xca\xe6\xd3\xa1\xf8\xd8\x45\x11\xe0\x6a\x88\xe4\x02\x5e\xbe\x04\x5e\x39\x09\xec\x3e\xb6\xa0\x0c\xc1\xfa\x34\x49\x16\xf3\xdd\x2f\xbd\x7e\xfb\xf6\xd7\x64\x9f\x32\x69\x5f\x1e\x3d\x29\x71\x59\xe3\x82\xef\x9e\x85\xf6\xc8\xac\x8d\x0b\x29\x44\xba\x16\x75\x84\x99\x18\x1d\xba\xa8\xe2\x13\x85\xfe\x88\xc5\x43\x92\x42\x52\x12\xca\x50\xfe\xd5\x87\x86\xe4\x71\x79\x5e\x52\x14\xfa\xf9\xee\x6e\x7d\xdb\x49\xeb\x4d\xe5\x38\xf9\x2e\xbd\xa3\x3f\x2b\xf2\xc1\x9f\x8c\xba\xad\x76\xf7\x93\xea\x45\x15\x29\xe3\xb6\x3b\x60\x25\x5a\xa4\x36\xb2\x52\xb4\x32\x95\xee\x57\x40\xc5\xc8\xba\xd1\x1e\x67\xc6\x93\xab\x85\x2e\x18\x27\x17\x3a\xb4\x4d\x49\x47\xc1\x21\xc7\x60\x0c\x06\x44\xe7\x76\x68\x93\xd1\x6d\xef\x73\x70\x88\x32\x67\x24\xcd\xef\xab\x0d\x39\x4d\x81\xfc\x5c\x98\x44\xe8\xdc\xe1\xc9\x2d\xb9\x93\xc8\xe9\x03\xe7\x51\xd4\xd7\xf1\x49\x68\x8a\xd1\xb9\x26\x2f\xd8\xf3\xc4\x5d\xbf\xd7\x19\xe5\x58\xc9\xb0\x32\x59\xfc\x70\x5c\x5f\x77\xa0\x66\xf3\x69\x56\x36\x42\xbc\x9b\xbd\x5c\x14\x2b\xb4\x4f\xe4\xbe\x5c\xb9\xf3\xf8\x3f\x01\x00\x00\xff\xff\x3e\x12\xe5\xf1\x34\x08\x00\x00")

func deploymentAppsOpenshiftWebConsoleWebconsoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_deploymentAppsOpenshiftWebConsoleWebconsoleYaml,
		"Deployment.apps/openshift-web-console/webconsole.yaml",
	)
}

func deploymentAppsOpenshiftWebConsoleWebconsoleYaml() (*asset, error) {
	bytes, err := deploymentAppsOpenshiftWebConsoleWebconsoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Deployment.apps/openshift-web-console/webconsole.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _etcdbackupEtcdDatabaseCoreosComOpenshiftEtcdEtcdBackupYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xbf\x6a\x33\x31\x10\xc4\x7b\x3d\xc5\xe2\xc6\x95\x7c\xfe\x03\xdf\x47\xd4\xc5\xe0\x22\x90\x22\x70\x47\xfa\xbd\xd5\x26\x27\x7c\x27\x09\xed\x3a\xe0\xb7\x0f\x3a\x41\xc0\x45\x88\x2a\x69\xf4\x9b\x19\x76\x31\x87\x77\x2e\x12\x52\x74\xc0\x4a\x7e\xe7\x51\x71\x44\xe1\x1d\xa5\xc2\x49\x76\x94\x96\xee\xeb\x30\xb2\xe2\xd1\x5c\x43\xf4\x0e\x2e\x4a\xfe\x8c\x74\xbd\x65\xb3\xb0\x62\x35\x38\x03\x10\x71\xe1\x96\x61\xc7\xf6\xdb\x34\xc9\x48\xec\x20\x65\x8e\x32\x85\x0f\xb5\x15\x31\x92\x99\xaa\xab\x3e\x2e\xd1\xe7\x14\xa2\x4a\x15\x2c\x6c\x26\xd5\x2c\xae\xeb\x16\x14\xe5\x62\xf7\xeb\x71\xc7\xd3\xff\xa7\xcd\xef\xc0\xe1\x2f\xe0\xf8\x03\x88\xa6\x82\x9f\x3c\xdc\x33\x3b\x78\x3e\xf7\x06\x00\xc7\xb5\x7c\xbd\xf4\x4c\x85\xf5\x61\x14\x8b\xa3\x58\x2a\xec\x39\x6a\xc0\x59\x56\x34\xa3\x4e\x0e\xb6\x15\xeb\x1a\xb6\x35\x00\x34\x07\x8e\x3a\xbc\xf6\x0f\x31\x4d\xb5\xba\x5a\x1b\xfc\x96\xe6\x40\xf7\xd6\x3a\x84\x85\xd3\x4d\x5f\x62\xcf\x94\xea\x8e\x4f\xff\xf6\x7b\xf3\x1d\x00\x00\xff\xff\xf5\x3f\x33\x44\x9c\x01\x00\x00")

func etcdbackupEtcdDatabaseCoreosComOpenshiftEtcdEtcdBackupYamlBytes() ([]byte, error) {
	return bindataRead(
		_etcdbackupEtcdDatabaseCoreosComOpenshiftEtcdEtcdBackupYaml,
		"EtcdBackup.etcd.database.coreos.com/openshift-etcd/etcd-backup.yaml",
	)
}

func etcdbackupEtcdDatabaseCoreosComOpenshiftEtcdEtcdBackupYaml() (*asset, error) {
	bytes, err := etcdbackupEtcdDatabaseCoreosComOpenshiftEtcdEtcdBackupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "EtcdBackup.etcd.database.coreos.com/openshift-etcd/etcd-backup.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _groupUserOpenshiftIoCustomerAdminsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xcb\xb1\x0d\x42\x41\x08\x00\xd0\x9e\x29\x58\xc0\x33\xb6\x2c\xe0\x06\x36\xc6\x82\x78\x18\x89\x01\x2e\xc0\x39\xff\xcf\x1f\xe0\xfd\xd4\x27\xe1\x3d\x63\x2f\xe0\xa5\x0f\xc9\xd2\x70\xc2\x5d\x92\x23\x96\x78\x7d\xf5\xd3\x43\xe3\xfa\xbf\x81\x49\xf3\xe4\x66\x02\x44\x74\x36\x21\x7c\xef\xea\x30\xc9\x0b\x4f\x53\x2f\x38\x5d\x11\x3e\x5f\x70\x04\x00\x00\xff\xff\x24\x74\x61\x49\x5a\x00\x00\x00")

func groupUserOpenshiftIoCustomerAdminsYamlBytes() ([]byte, error) {
	return bindataRead(
		_groupUserOpenshiftIoCustomerAdminsYaml,
		"Group.user.openshift.io/customer-admins.yaml",
	)
}

func groupUserOpenshiftIoCustomerAdminsYaml() (*asset, error) {
	bytes, err := groupUserOpenshiftIoCustomerAdminsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Group.user.openshift.io/customer-admins.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _groupUserOpenshiftIoCustomerReadersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xcb\xb1\x0d\x42\x41\x08\x06\xe0\x9e\x29\x58\xc0\x67\x6c\x59\xc0\x0d\x6c\x8c\x05\xf1\x7e\x23\x31\x07\x17\xe0\x9c\xdf\x38\xc0\xf7\x31\x1f\xc2\xd7\x8c\xbd\x48\x97\xdd\x90\x65\xe1\xc2\xbb\x90\x47\x2c\x78\xbd\xed\xd5\x87\xc5\xf9\x7b\xa1\x89\xd6\xa1\xad\x42\xcc\xec\x3a\x21\xfc\xdc\xd5\x31\x91\xa7\x84\x0e\x64\xd1\x1f\x96\xf0\xfd\x41\xbf\x00\x00\x00\xff\xff\xf2\xab\x26\x1d\x5b\x00\x00\x00")

func groupUserOpenshiftIoCustomerReadersYamlBytes() ([]byte, error) {
	return bindataRead(
		_groupUserOpenshiftIoCustomerReadersYaml,
		"Group.user.openshift.io/customer-readers.yaml",
	)
}

func groupUserOpenshiftIoCustomerReadersYaml() (*asset, error) {
	bytes, err := groupUserOpenshiftIoCustomerReadersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Group.user.openshift.io/customer-readers.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftDotnetRuntimeYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\x4f\x6f\xd3\x4e\x10\xbd\xe7\x53\x8c\x7a\xfa\xfd\xa4\xd8\x4e\x73\xa9\xe4\x5b\x69\x0b\xaa\x04\x2d\x4a\x2a\x38\x4f\xd7\x13\x67\xe9\x7a\x67\xb5\x33\x1b\x64\x01\xdf\x1d\xf9\x4f\x12\x87\x22\x51\x09\x84\xf0\x25\xf1\xec\x78\xe6\xcd\x9b\xf7\x16\x83\xfd\x40\x51\x2c\xfb\x12\x6c\x83\x35\xe5\x1c\xc8\xcb\xd6\x6e\x34\xb7\x5c\xec\xce\x67\x4f\xd6\x57\x25\xdc\x76\x67\x6b\x8d\x84\xcd\xac\x21\xc5\x0a\x15\xcb\x19\x00\x7a\xcf\x8a\x6a\xd9\x4b\xf7\x0a\x70\xf2\x79\x65\x25\x38\x6c\x33\x8f\x0d\x95\x90\xdf\xdd\x3c\xc0\x15\x47\x82\x55\xf2\x6a\x1b\x9a\x01\x0c\x27\x15\xab\x27\xcd\xe2\x49\x58\x02\x1a\x2a\x8f\x05\x67\x12\xc8\x74\x4d\x1c\xf3\x53\x0a\xef\xd9\x59\xd3\x0e\x4d\x1d\x1b\x74\x25\x6c\xd0\x49\xf7\xb5\x62\xdd\xa3\xc9\x9e\xc3\x03\xa8\x48\x4c\xb4\x41\xfb\x91\x57\xc9\x4f\x60\x61\x08\xce\x9a\x21\x1d\xd8\xc3\x15\x79\xbd\x5f\xc3\x45\x0e\xaf\x39\x42\xd3\xa5\x58\xbf\xe1\xd8\xf4\x29\x80\x8f\x9c\x74\xac\x0a\x90\xc4\xfa\x1a\x74\x6b\x65\x20\x72\x0e\xd6\x1b\x97\xaa\x2e\x7a\x1f\xc8\xaf\xbb\x19\xc0\xb0\x17\x5b\x51\x1c\x9a\xcc\x41\x88\x60\xab\x1a\xa4\x2c\x8a\xda\xea\x36\x3d\xe6\x86\x9b\x22\x52\xb5\x45\xcd\x2a\xda\x91\xe3\x40\xb1\x90\xa5\xcd\x06\x96\x0c\x47\x2a\x34\x12\x15\x0d\x8a\x52\x2c\x96\xf9\xa2\x18\x99\x2b\x56\x37\x97\xd7\xef\x6e\xf2\xa6\xca\x47\x5c\xd6\xb0\xbf\x72\x28\x52\xf6\x7f\xc7\x1a\xe3\xe1\x8b\x76\xb5\xcc\x17\x93\x7d\x75\x8f\xa4\x10\x38\xaa\xfc\x64\x6f\xdd\xd3\xb3\x0f\x63\x6c\x9e\x4f\x12\xe6\xa7\xf9\xf3\xe3\x40\x3f\x94\xd8\xed\x25\x79\xb6\xcc\x17\x67\x7d\x70\x13\xb9\xd9\xaf\x70\x90\xe4\x35\x9b\x27\x8a\xbd\x30\xc7\xf8\x00\x3d\x52\x6d\x45\x63\x9b\x1b\xf2\xca\x92\x73\xac\x8b\xa1\xd3\xf8\x93\x2d\x17\xfb\x7e\xd9\x90\x73\x51\x3a\x54\x92\x81\x97\x9a\xfc\xb8\x9f\x12\x96\x7d\xc4\x36\xdd\xbc\xa3\xe0\xe0\xcb\xb7\xd9\xb1\xd9\x11\x60\xa4\x0d\x45\xf2\x86\xa6\xc2\x04\xd0\x36\x50\x09\x6b\x4e\xd1\xd0\x8b\x24\xf9\x35\x3b\x48\xea\xf7\xd5\xf9\xcf\xa9\xf2\x30\xdb\xc7\xcb\xd5\xdd\xed\xdd\x9b\x12\x5e\xb5\x20\xe4\xc8\xe8\x01\xa8\x62\x3d\x87\x96\x53\x9c\x8e\x0c\x9f\xad\x73\x80\x49\xb9\x9b\xcf\xa0\x73\x2d\xa4\x50\xa1\x12\x28\x43\x12\x02\xdd\x12\x0c\x6b\xdc\xeb\x07\x78\xf3\xfc\xd2\x01\xdc\xa1\x75\xf8\xe8\xa8\x23\xf1\xc0\xc1\x94\x98\x06\x3f\x71\xdc\x17\x91\xb1\x8d\xfc\x39\x4b\xed\x91\xfc\xf7\xb6\x87\xfb\xff\x5f\xf2\xd5\x73\x0b\x4d\x6e\xf5\x07\xac\x4f\x5c\x74\x14\xf6\xd4\x0f\xe7\xbf\xf2\xc3\xc4\x47\x2f\x31\xc4\xf7\x00\x00\x00\xff\xff\x85\xac\x5b\xd0\x7f\x06\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftDotnetRuntimeYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftDotnetRuntimeYaml,
		"ImageStream.image.openshift.io/openshift/dotnet-runtime.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftDotnetRuntimeYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftDotnetRuntimeYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/dotnet-runtime.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftDotnetYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x95\x4f\x6f\xdb\x38\x10\xc5\xef\xfe\x14\x83\x9c\x76\x01\x8b\x72\x74\x09\xc0\x5b\xe2\x64\x17\x01\x76\x93\xc2\x0e\xda\xf3\x98\x1a\xcb\x6c\x28\x0e\x41\x8e\xdc\x18\x6d\xbf\x7b\xa1\x7f\xfe\xd3\x22\x48\x5a\xa4\x40\x7d\xb1\x45\x8a\x33\xef\x3d\xce\x0f\xc6\x60\xdf\x53\x4c\x96\xbd\x06\x5b\x63\x45\x8a\x03\xf9\xb4\xb1\x6b\x51\x96\xf3\xed\xf9\xe4\xd1\xfa\x52\xc3\x6d\xbb\xb7\x94\x48\x58\x4f\x6a\x12\x2c\x51\x50\x4f\x00\xd0\x7b\x16\x14\xcb\x3e\xb5\x8f\x00\x27\xc7\x4b\x9b\x82\xc3\x5d\xe6\xb1\x26\x0d\xea\xee\xe6\x01\xe6\x1c\x69\x02\xd0\xaf\x94\x2c\x9e\x64\x78\x4c\x01\x0d\xe9\x43\x81\x49\x0a\x64\xda\xa2\x8e\xf9\xb1\x09\xef\xd8\x59\xb3\xeb\x9b\x38\x36\xe8\x34\xac\xd1\xa5\xb6\x98\x60\xd5\x75\xcf\x7e\x94\x03\x50\x52\x32\xd1\x06\xe9\x2c\x5e\x35\xd6\x95\x80\xbe\x84\xd8\xf8\x83\x20\x28\xd4\x0c\x30\x04\x67\x4d\x7f\x18\xd8\xc3\x9c\xbc\xdc\x2f\xe1\x42\xc1\x3f\x1c\xa1\xee\x75\xf7\x1f\xeb\xd7\x1c\xeb\xee\x55\xc0\x15\x37\x02\x4d\xb2\xbe\x02\xd9\xd8\x04\xab\xb6\x07\xc5\x3e\xce\x29\x58\x6f\x5c\x53\xb6\xbb\xf7\x81\xfc\xb2\x75\x06\x86\x7d\xb2\x25\xc5\xbe\xd9\x74\x5f\x37\x11\xc1\x46\x24\x24\x9d\xe7\x95\x95\x4d\xb3\x52\x86\xeb\x3c\x52\xb9\x41\xc9\x4a\xda\x92\xe3\x40\x31\x4f\x85\xcd\xfa\xec\x0c\x47\xca\x25\x12\xe5\x35\x26\xa1\x98\x17\x6a\x96\x77\x0a\xf2\xc5\xcd\xe5\xf5\xff\x37\xaa\x2e\xd5\x50\xdf\x1a\xf6\x73\x87\x29\xe9\xee\x67\xb6\x4f\xff\xb5\xf7\xd6\xc6\x34\xbc\x9e\xb0\x0e\x8e\xe6\xec\x85\x9e\xe4\xda\x46\xdd\xc6\x77\xb2\xb7\xa0\xf5\x78\xc1\xad\xc8\xec\xfb\xb3\x0b\x0a\xac\x7f\xc1\x6d\x46\x4f\xaa\xb2\xa3\xec\xd4\x84\xc0\x51\xd2\xd8\x4a\x17\x6a\x36\x3d\x31\xd6\x0d\xc7\x78\x29\x53\xe5\x49\x86\xfd\xe9\xa1\xe6\x34\x6e\x86\x0e\xc5\x28\x72\x3b\x52\x71\x56\xa8\xd9\x59\xb7\xb8\x8e\x5c\x8f\x53\xd5\x53\x71\xcd\xe6\x91\x62\xc7\xc6\xb0\xde\x27\x16\xa9\xb2\x49\xe2\x4e\x19\xf2\xc2\x49\x71\xac\xf2\xbe\xfe\xf0\x95\x15\xb3\xac\xdf\xbb\xd0\x0e\x85\x52\xaf\xb6\x22\x3f\x0c\x85\x86\xa2\x5b\xb1\x75\x6b\x6f\x98\x7d\xf8\xfc\x75\x72\x68\x72\x10\x16\x69\x4d\x91\xbc\xa1\x63\x46\x00\x64\x17\x48\xc3\x92\x9b\x68\xe8\x55\x74\x7c\xc9\xf6\x93\xf8\x1c\x28\x2f\x43\xf2\xd6\x70\xfc\x36\x28\xf6\x5e\x3f\x5c\x2e\xee\x6e\xef\xfe\xd5\x70\xb5\x83\x44\x8e\x8c\xec\xe5\x0a\x56\x53\xd8\x71\x13\x8f\x8d\xc3\x27\xeb\x1c\x60\x23\xdc\xba\x34\xe8\xdc\x0e\x9a\x50\xa2\x10\x08\x43\x93\x08\x64\x43\xd0\x5f\xeb\x38\x47\xc0\xeb\xe3\x14\xb7\x68\x1d\xae\x1c\xb5\x11\xee\x9d\x1f\xc7\x51\xe3\x47\x8e\xe3\xe1\x34\x94\x4f\x6f\x47\xf2\x5f\xff\x75\xf2\xfe\xfe\xc3\x71\xfe\x09\x86\x9f\x41\xf4\xe8\x8f\xeb\x01\xab\x13\x4a\x0f\x00\x1d\x73\x77\xfe\x12\x77\x47\xbc\xbe\x06\xbc\x6f\x01\x00\x00\xff\xff\xfc\xa4\x20\xa4\x62\x07\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftDotnetYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftDotnetYaml,
		"ImageStream.image.openshift.io/openshift/dotnet.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftDotnetYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftDotnetYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/dotnet.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftHttpdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\x5b\x6b\xdb\x4e\x10\xc5\xdf\xfd\x29\x86\x3c\x25\x60\x49\xc4\x18\x02\x7a\xcb\xed\xff\x4f\x20\x4d\x82\x1d\xda\xe7\xf1\x6a\x2c\x6f\xb3\xda\x59\x76\x47\x6e\x4d\xdb\xef\x5e\x76\x25\xf9\x42\x4a\x9b\xd2\x0b\xd4\x4f\xde\xdb\xec\xef\xcc\x9e\x83\xd0\xe9\xb7\xe4\x83\x66\x5b\x82\x6e\xb0\xa6\x9c\x1d\xd9\xb0\xd2\x4b\xc9\x35\x17\xeb\xd3\xd1\xb3\xb6\x55\x09\xb7\x71\x6d\x2e\x9e\xb0\x19\x35\x24\x58\xa1\x60\x39\x02\x40\x6b\x59\x50\x34\xdb\x10\x87\x00\x07\xc7\x2b\x1d\x9c\xc1\x4d\x66\xb1\xa1\x12\xce\x1d\xaa\x15\xc1\xcd\xd3\xd3\x23\xcc\xc9\xaf\xc9\xc3\xf1\x4a\xc4\x55\x27\x23\x80\x6e\x4b\x1a\xf6\xa3\xe0\x50\x51\xb9\x2b\x38\x0a\x8e\x54\xbc\xc4\x30\x3f\xb7\xee\x91\x8d\x56\x9b\xee\x52\xc3\x0a\x4d\x09\x4b\x34\x81\x46\x00\x82\x75\xa2\xc9\x5e\xe2\x01\x54\x14\x94\xd7\x4e\x92\xe4\x8b\x56\x9b\x0a\xd0\x56\x10\x22\x10\x84\xb8\x59\x81\x62\x2b\x64\x05\xd6\x1a\xbf\x43\x0d\x93\x7c\xda\x17\x05\x60\x0b\x97\x64\xe5\x61\x0e\x67\x39\xfc\xc7\x1e\x1a\xf6\x04\xda\x2e\xd9\x37\x09\x00\x70\xc1\xad\x40\x1b\xb4\xad\x41\x56\x3a\xc0\x22\x5e\x4e\xbe\xeb\xfb\x18\xb4\x55\xa6\xad\xb4\xad\xb7\x35\x1f\x1c\xd9\x79\x94\x1e\x81\x82\xae\xc8\x77\x52\xc6\x10\x88\x52\xaf\x42\x59\x14\xb5\x96\x55\xbb\xc8\x15\x37\x45\x50\x86\x7d\x5d\x24\xbc\x2c\x8a\x40\x6d\xc9\x17\x0b\xc3\x8b\xa2\xc1\x20\xe4\x8b\x49\x3e\x2d\x66\xd7\xe7\x57\x6f\xae\xf3\xa6\xca\xfb\xab\xb4\x62\x7b\x69\x30\x84\x32\xfd\xcd\x30\x69\xee\x17\x7f\xee\x45\x77\x3d\x39\x38\xe7\x3c\xaf\xa3\x80\xec\xb0\xc0\x8c\x2a\xb8\x41\x19\xc3\xad\x55\x03\x4c\xc0\xc6\x19\x9a\x91\xe3\xf2\x5b\x1a\xb7\x65\x7b\x99\xf4\x31\xaf\xb5\x0c\x67\x5b\xe7\xd8\x4b\xd8\x39\x29\xfe\x92\x1f\x86\x76\x8f\xf7\x57\xd6\x83\xf7\x8f\x26\xf9\xf4\x28\x4d\x2e\x3d\x37\x83\x57\x3a\xef\x5f\xb1\x7a\x26\x9f\x12\xd0\xcf\x77\xf0\x55\x9a\x8f\xea\x14\x59\xe1\xd0\x03\x4d\xa6\x59\x37\x3e\x2b\x0d\x0a\x85\x8e\xad\x26\xdb\x3f\x5f\x09\x93\x34\xa3\x9b\x88\xda\xdb\x18\x3e\x7d\x19\xed\x2a\xef\x68\x3c\x2d\xc9\x93\x55\xb4\x6f\x77\x00\xd9\x38\x2a\xe1\x2e\xda\xfe\x55\x3e\xff\x9c\x6d\x4d\xf5\x6b\x96\xff\x8d\x36\xff\x1b\xf6\xde\xaa\x7e\x77\x3e\xbb\xbf\xbd\xff\xbf\x84\x8b\x0d\x04\x32\xa4\x64\xcb\x27\x58\x8f\x61\xc3\xad\x07\x74\xce\x68\xd5\xc9\xf8\xa0\x8d\x01\x6c\x85\xa3\x2c\x85\xc6\x6c\xa0\x75\x15\x0a\x81\x30\xb4\x81\x40\x56\x04\xdd\xfb\x0e\x2e\x02\x5e\xc2\x4d\x64\x03\x5c\xa3\x36\xb8\x30\x14\xfb\xb5\x95\xb9\xaf\xbd\xc1\xf7\xec\x87\x83\xa1\x2f\x1d\xfe\x40\x1e\x8f\xef\x12\xe3\xc9\x3f\x13\xca\x97\xf9\xdb\xfb\xf6\x3c\x61\x7d\x10\xc1\x5d\x50\xf6\xf3\x75\xfa\xa3\x7c\xed\xe5\xf2\x15\x01\xfb\x1a\x00\x00\xff\xff\x20\x2b\xbf\x1d\x24\x07\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftHttpdYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftHttpdYaml,
		"ImageStream.image.openshift.io/openshift/httpd.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftHttpdYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftHttpdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/httpd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftJenkinsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x95\x4f\x6f\xd3\x4c\x10\xc6\xef\xfe\x14\xa3\x9e\xde\x57\x8a\x6d\x1c\x0e\x95\x7c\x2b\x6d\x81\xa2\xd2\x56\x2d\x02\xae\x93\xf5\xc4\xd9\x66\xbd\xb3\xda\x1d\x9b\x46\xc0\x77\x47\xfe\xdb\x44\x2d\x22\x2a\x39\x72\xcb\x8e\x3d\x33\xcf\x3c\xf3\xf3\x06\x9d\xfe\x4c\x3e\x68\xb6\x39\xe8\x0a\x4b\x4a\xd8\x91\x0d\x2b\xbd\x94\x44\x73\xda\x64\xd1\x5a\xdb\x22\x87\x8b\xf6\xd9\x9d\x78\xc2\x2a\xaa\x48\xb0\x40\xc1\x3c\x02\x40\x6b\x59\x50\x34\xdb\xd0\x1e\x01\x76\xd2\x0b\x1d\x9c\xc1\x4d\x6c\xb1\xa2\x1c\x3e\x90\x5d\x6b\x1b\x22\x80\xfe\x7c\xbf\x73\x0e\x0e\x15\xe5\x8f\xf9\x51\x70\xa4\xda\x9a\x86\x79\x5d\xbb\x1b\x36\x5a\x6d\xfa\x1e\x86\x15\x9a\x1c\x96\x68\x02\x45\x00\x82\x65\xd7\x3c\x7e\xaa\x06\xa0\xa0\xa0\xbc\x76\xd2\x4d\x78\xe3\xb9\xd1\x05\x05\xc0\x51\x0c\x64\xc9\x57\x08\xe4\x1b\xf2\xc0\x16\x4e\xc9\xca\xf5\x1d\x1c\x27\xf0\x96\x3d\x54\xec\x09\xb4\x5d\xb2\xaf\xba\xa2\x43\x49\x00\x5c\x70\x2d\x50\x07\x6d\x4b\x90\x95\x0e\xa0\xd8\x0a\x6a\x4b\xbe\x37\x71\x06\xda\x2a\x53\x17\xed\xf3\x6b\x47\xf6\xae\x1d\xa8\x7d\x29\xe8\x82\x7c\x2f\x70\x06\x81\x68\xaa\xb8\x12\x71\x21\x4f\xd3\x52\xcb\xaa\x5e\x24\x8a\xab\x74\x72\x22\x1d\x8c\x4a\x17\x86\x17\x69\x85\x41\xc8\xa7\xb7\xe7\x27\x67\x1f\xcf\x93\xaa\x48\x86\x1a\x5a\xb1\x3d\x35\x18\x42\xde\xfd\x8c\x1f\xdd\xdd\x6f\x2d\xad\x13\xcf\xbd\xec\x7a\xcf\x7c\xbc\x9b\x75\x4b\x05\xbc\x47\x99\xc1\x85\x55\xa3\x84\x6e\x11\xb0\xd2\x45\x41\x76\xb6\xdb\xbf\x19\x21\xcb\x92\x87\x2e\xb4\xf4\x5c\x8d\x3b\xea\x11\x3b\x63\xb5\x26\xdf\x81\x36\xc4\xfb\x4e\x45\x17\x6f\xa5\x3c\x71\x24\xce\x62\x45\x56\x38\x1c\xe7\x06\x85\x82\x74\x89\x25\xd9\xc1\xe4\x1c\xe6\x5d\x44\x57\x8e\xbd\x0c\x08\xc1\xf7\x9f\xd1\x63\xf5\xa3\xec\xa8\x3b\x79\x5a\x92\x27\xab\x68\x1b\x34\x00\xd9\x38\xca\xe1\xb2\x05\xee\xa5\x84\x35\xf3\xe4\xe1\x1f\x62\x9d\x15\xf3\x03\x21\xf6\x1b\xb6\xe6\x07\x65\x6b\x3e\xb1\xd5\xbc\x4e\xb2\x57\x2f\x40\x6b\x7e\x50\xb4\x7e\xc4\xd3\x2a\x9f\xa1\x6c\x5f\xc0\x0e\x07\xd6\x5f\x01\x35\x8d\xf2\xe5\xe4\xf6\xea\xe2\xea\x5d\x0e\x6f\x36\x10\xc8\x90\x92\x49\x98\x60\x39\x83\x0d\xd7\x1e\xd0\x39\xa3\x55\xaf\xff\x9b\x36\x06\xb0\x16\x6e\xe7\x51\x68\xcc\x06\x6a\x57\xa0\x10\x08\x43\x1d\x08\x64\x45\xd0\xdf\x06\x23\x19\xc0\xcb\xc9\x27\x6c\x50\x1b\x5c\x18\x6a\xad\x9a\xe6\xdb\x1e\xba\xc2\x7b\xf6\x63\x6a\x18\x8a\x87\x83\x7d\x03\xff\x5d\x76\xda\xfe\x3f\xf8\x87\xf0\x94\xfa\xad\x3f\xed\x4f\x58\xee\x80\x3f\xb2\xb9\x0d\x74\xf6\x27\xa0\xb7\xee\xd8\x3d\x98\xfe\x15\x00\x00\xff\xff\x4e\xcc\xef\x52\x5b\x08\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftJenkinsYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftJenkinsYaml,
		"ImageStream.image.openshift.io/openshift/jenkins.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftJenkinsYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftJenkinsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/jenkins.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftMariadbYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\x4d\x6f\xdb\x3c\x0c\xc7\xef\xfe\x14\x44\x4f\xcf\x03\xc4\x76\xe3\x4b\x01\xdf\xfa\xb6\xad\x40\xdf\xd0\x0e\xdb\x99\x91\x19\x47\xab\x2c\x0a\x12\x9d\x21\xd8\xf6\xdd\x07\xcb\x8e\xe3\xa0\x05\x56\x60\xe9\xb0\xdd\x22\x2a\xa4\xfe\xfc\xf3\x47\x18\x9d\xfe\x44\x3e\x68\xb6\x25\xe8\x06\x6b\xca\xd8\x91\x0d\x2b\xbd\x94\x4c\x73\xbe\x9e\x27\x4f\xda\x56\x25\x5c\x75\x77\x8f\xe2\x09\x9b\xa4\x21\xc1\x0a\x05\xcb\x04\x00\xad\x65\x41\xd1\x6c\x43\x77\x04\xd8\x4b\xaf\x74\x70\x06\x37\xa9\xc5\x86\x4a\xb8\x41\xaf\xf1\xe2\x2c\x01\xe8\xcf\x4d\x77\xae\x16\xc3\x39\x38\x54\x54\xee\xf2\x93\xe0\x48\x75\x35\x0d\xf3\x53\xeb\xee\xd9\x68\xb5\xe9\xdf\x30\xac\xd0\x94\xb0\x44\x13\x28\x01\x10\xac\xe3\xe3\xe9\x73\x35\x00\x15\x05\xe5\xb5\x93\xd8\xe1\xbd\xe7\xb5\xae\x28\x00\x6e\xc5\xc0\xfc\x38\x9b\x43\xd7\xcd\x02\x03\x01\x5b\x38\x27\x2b\x77\x8f\x70\x92\xc1\x3b\xf6\xd0\xb0\x27\xd0\x76\xc9\xbe\x89\x75\x87\xaa\x00\xb8\xe0\x56\xa0\x0d\xda\xd6\x20\x2b\x1d\x76\x35\xa2\x8d\x33\xd0\x56\x99\xb6\xea\xae\xef\x1c\xd9\xc7\xae\x25\x50\x6c\x83\xae\xc8\xf7\x12\x67\x10\x88\x60\x25\xe2\x42\x99\xe7\xb5\x96\x55\xbb\xc8\x14\x37\x79\x50\x86\x7d\x9d\x0f\xfe\xa4\x8a\xad\xa0\xb6\xe4\x73\xf1\x44\x79\x83\x41\xc8\xe7\x9d\xf0\xfc\xe1\xf2\xf4\xe2\xe6\x32\x6b\xaa\x6c\x10\xa6\x15\xdb\x73\x83\x21\x94\xf1\x67\xba\xf3\xf8\x75\xc3\x89\x7e\xbc\xf4\x6f\xd7\x5b\xe7\xd3\xfd\xb4\x07\xaa\xe0\x03\xca\x0c\xae\xac\xda\x6a\x88\xf3\x18\xfd\x98\xed\x4b\x58\x6f\x69\x3b\xea\x5e\x3a\x8a\xd1\xa5\xe7\x66\x3b\xaf\x1e\xb7\x0b\x56\x4f\xe4\x23\x74\x43\xbc\x7f\xae\x8a\xf1\x4e\x8f\x22\x2b\x1c\x46\x8f\xe6\xc7\xf3\xb4\x0f\x9d\x94\x06\x85\x82\xc4\xbc\x9a\xec\xe0\x76\x09\x45\x8c\xe8\xc6\xb1\x97\x81\x26\xf8\xf6\x23\xd9\x15\x9f\x28\xf2\xb4\x24\x4f\x56\xd1\x14\x3b\x00\xd9\x38\x2a\xe1\xba\xc3\xef\x37\x78\x2b\xfe\x55\xde\x8a\xb7\xe1\xad\xf8\x63\xbc\x15\x07\xe4\xad\x38\x08\x6f\xc5\x41\x79\xfb\x9e\x8e\xbc\xbc\x80\xde\xeb\xa9\xfb\xfb\x68\x1b\xfb\xfa\x7c\xfa\x70\x7b\x75\xfb\xbe\x84\xb3\x0d\x04\x32\xa4\x64\xd4\x28\x58\xcf\x60\xc3\xad\x07\x74\xce\x68\xd5\xb7\xf2\x55\x1b\x03\xd8\x0a\x77\xad\x29\x34\x66\x03\xad\xab\x50\x08\x84\xa1\x0d\x04\xb2\x22\xe8\x47\xb8\x85\x05\x78\x39\x9a\x86\x6b\xd4\x06\x17\x26\xba\x36\xf6\x3a\x35\xa0\xc1\x2f\xec\xb7\xa9\x61\x28\x1e\x0e\xb6\x20\xff\x5d\x47\x6d\xff\xbf\xdd\x92\x3c\x5f\x87\xc9\xd7\xfe\x23\xd6\x7b\x1b\x31\x81\x76\x0a\xfb\xfc\x57\xb0\x4f\x96\xe4\x15\xb0\xff\x0c\x00\x00\xff\xff\x9f\xe6\xcf\x29\x97\x08\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftMariadbYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftMariadbYaml,
		"ImageStream.image.openshift.io/openshift/mariadb.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftMariadbYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftMariadbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/mariadb.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftMongodbYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x97\x5b\x6f\xeb\x36\x0c\xc7\xdf\xf3\x29\x88\x3e\x6d\x40\x62\xa3\x76\x90\x02\x7e\xeb\x6d\x5b\x81\xde\xd0\x0e\xdb\x33\x23\x33\x8e\x56\x59\x14\x24\x3a\x43\xb0\xed\xbb\x0f\xbe\xc4\x49\x4e\x8b\xd3\xa0\x75\x80\xd3\xb7\x48\x0a\xa9\x3f\xff\xfa\x11\x84\xd1\xe9\x3f\xc8\x07\xcd\x36\x03\x5d\x62\x41\x11\x3b\xb2\x61\xa9\x17\x12\x69\x8e\x57\xa7\xa3\x17\x6d\xf3\x0c\x6e\xea\xb3\x67\xf1\x84\xe5\xa8\x24\xc1\x1c\x05\xb3\x11\x00\x5a\xcb\x82\xa2\xd9\x86\x7a\x09\xb0\x17\x9e\xeb\xe0\x0c\xae\x27\x16\x4b\xca\xe0\x8e\x6d\xc1\x57\x17\x23\x80\x76\x5d\xd6\xeb\x7c\xde\xad\x83\x43\x45\xd9\x36\x7e\x14\x1c\xa9\x3a\xa7\x61\x7e\xa9\xdc\x23\x1b\xad\xd6\xed\x1d\x86\x15\x9a\x0c\x16\x68\x02\x8d\x00\x04\x8b\xe6\xf2\xc9\x6b\x35\x00\x39\x05\xe5\xb5\x93\xa6\xc2\x47\xcf\x2b\x9d\x53\x00\xdc\x88\x81\x24\x9a\x42\x5d\xcc\x1c\x03\x01\x5b\xb8\x24\x2b\x0f\xcf\x70\x16\xc1\x2f\xec\xa1\x64\x4f\xa0\xed\x82\x7d\xd9\xa4\xed\x92\x02\xe0\x9c\x2b\x81\x2a\x68\x5b\x80\x2c\x75\xd8\xe6\x68\x5c\x1c\x83\xb6\xca\x54\x79\x7d\xfc\xe0\xc8\x3e\xd7\x15\x81\x62\x1b\x74\x4e\xbe\x55\x38\x86\x40\x04\x4b\x11\x17\xb2\x38\x2e\xb4\x2c\xab\x79\xa4\xb8\x8c\x83\x32\xec\x8b\xb8\xb3\x67\xa2\xd8\x0a\x6a\x4b\x3e\x16\x4f\x14\x97\x18\x84\x7c\x9c\x44\xd3\xf8\xe9\xfa\xfc\xea\xee\x3a\x2a\xf3\xa8\xd3\xa5\x15\xdb\x4b\x83\x21\x64\xcd\xcf\xc9\xd6\xe1\xc3\x9e\xa6\x76\xe3\xad\x3f\xbb\xd6\x37\x3f\xd9\x8f\x7a\xa2\x1c\x7e\x43\x19\xc3\x8d\x55\x1b\x09\xcd\x63\xc0\x52\xe7\x39\xd9\xf1\xfe\xfd\xab\x0d\x68\x27\x49\x34\x3d\x69\x36\x17\x9e\xcb\xcd\x4b\xb5\xa0\x5d\xb1\x7a\x21\xdf\xe0\xd6\xed\xb7\x77\xe5\xcd\x7e\x2d\xa6\x57\xd6\x3b\x94\x4c\x27\x8a\xac\x70\x38\xcb\x0c\x0a\x05\x69\x22\x0b\xb2\x9d\xd5\x19\x24\xcd\x8e\x2e\x1d\x7b\xe9\x48\x82\x7f\xfe\x1b\x6d\xd3\x6f\x25\x79\x5a\x90\x27\xab\x68\x97\x38\x00\x59\x3b\xca\xe0\xb6\x26\xef\xe3\xa8\xcd\xbe\x28\x6a\xb3\xa3\xa0\x36\x1b\x12\xb5\x8d\x29\xdf\x61\x6e\xf6\x71\xe6\x5a\xbc\xb6\xc0\xcd\x86\x00\x6e\x76\x6c\xe0\xd2\x28\xf9\x92\xc0\xa5\x51\x72\x04\xe0\xd2\x28\x19\x04\xb8\x77\x49\x4b\xa3\x64\x30\xd2\xd2\xe4\xf3\xa4\xf5\x7a\x8e\x49\xda\xd7\x9c\xa2\xe9\x51\xa6\x68\x3a\xd0\x14\x3d\x80\xb4\x4f\xcc\xd1\x6f\x49\x1b\x60\x88\xa6\x03\x0f\xd1\x7f\x27\x3d\x2a\x6f\x40\x77\x38\x70\x3f\x1c\x68\x7d\x59\x7f\x9e\x3f\xdd\xdf\xdc\xff\x9a\xc1\xc5\x1a\x02\x19\x52\xd2\x4b\x14\x2c\xc6\xb0\xe6\xca\x03\x3a\x67\xb4\x6a\x2b\xf9\x5b\x1b\x03\x58\x09\xd7\x95\x29\x34\x66\x0d\x95\xcb\x51\x08\x84\xa1\x0a\x04\xb2\x24\x68\x1f\x70\x03\x0a\xf0\xa2\xf7\x0c\x57\xa8\x0d\xce\x4d\x63\x5a\x5f\xea\x6e\xfd\x25\xfe\xc5\x7e\x13\x1a\xba\xe4\x61\xb0\xde\xf8\xe9\xb6\xd1\xf6\xf3\xf1\x1a\xe4\x75\x2f\xec\x7c\xbc\xfc\x8e\xc5\x5e\x3b\x6c\x91\xdd\x25\xfd\xf4\x3d\xd2\x77\x3a\xe4\x00\xd4\xff\x0f\x00\x00\xff\xff\xe7\xe9\x5c\x87\x65\x0d\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftMongodbYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftMongodbYaml,
		"ImageStream.image.openshift.io/openshift/mongodb.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftMongodbYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftMongodbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/mongodb.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftMysqlYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x96\x4b\x6f\xdb\x3a\x10\x85\xf7\xfe\x15\x83\xac\xee\x05\x6c\x09\xb9\x80\x2c\x40\xbb\xdc\x24\x6d\x03\xe4\xd5\xb8\x68\xd7\x63\x6a\x2c\xb3\xa1\x38\x2c\x39\x72\x21\xb4\xfd\xef\x85\x5e\x7e\x20\x2d\x12\x04\x4a\x8b\x78\x65\x52\x9a\xe1\x39\x67\x3e\x1a\x46\xa7\x3f\x92\x0f\x9a\x6d\x06\xba\xc4\x82\x22\x76\x64\xc3\x5a\xaf\x24\xd2\x1c\x6f\x8e\x27\xf7\xda\xe6\x19\x5c\x34\xcf\x16\xe2\x09\xcb\x49\x49\x82\x39\x0a\x66\x13\x00\xb4\x96\x05\x45\xb3\x0d\xcd\x12\xe0\xa0\x3c\xd7\xc1\x19\xac\x67\x16\x4b\xca\xe0\xaa\x5e\xbc\xbf\x9c\x00\x74\xab\xb2\x0e\x5f\x4c\xbf\x0a\x0e\x15\x65\xbb\xda\x49\x70\xa4\x9a\x7e\x86\xf9\xbe\x72\xb7\x6c\xb4\xaa\xbb\xfe\x86\x15\x9a\x0c\x56\x68\x02\x4d\x00\x04\x8b\xf6\xe0\xd9\x43\x25\x00\x39\x05\xe5\xb5\x93\xd6\xdd\xad\xe7\x8d\xce\x29\x00\x76\x42\x20\x89\x12\x68\x6c\x2c\x31\x10\xb0\x85\x53\xb2\x72\xb3\x80\x34\x82\x37\xec\xa1\x64\x4f\xa0\xed\x8a\x7d\xd9\x36\xed\x5b\x02\xe0\x92\x2b\x81\x2a\x68\x5b\x80\xac\x75\xd8\xf5\x68\xf3\x9b\x82\xb6\xca\x54\x79\xf3\xf8\xc6\x91\x5d\x34\x7e\x40\xb1\x0d\x3a\x27\xdf\xe9\x9b\x42\x20\x82\xb5\x88\x0b\x59\x1c\x17\x5a\xd6\xd5\x32\x52\x5c\xc6\x41\x19\xf6\x45\xdc\x46\x33\x53\x6c\x05\xb5\x25\x1f\x8b\x27\x8a\x4b\x0c\x42\x3e\x4e\xa2\x24\xbe\x3b\x3f\x39\xbb\x3a\x8f\xca\x3c\xea\x55\x69\xc5\xf6\xd4\x60\x08\x59\xfb\x75\xd6\x35\x18\x84\xf5\x2f\x3d\x36\x99\x26\x90\x5f\xbd\xea\xba\xe0\xfc\xec\xb0\xe6\x8e\x72\x78\x87\x32\x85\x0b\xab\x06\x1d\xed\x34\x60\xad\xf3\x9c\xec\x74\x18\x70\xf3\xd9\x0c\x8c\x1d\x25\x51\x72\xd4\x6e\xae\x3c\x97\xc3\xa0\x3a\xc6\xce\x58\xdd\x93\x6f\x49\xeb\xf7\xbb\x93\xf2\x76\xbf\x91\xb2\xd5\xd5\x47\x94\x24\x33\x45\x56\x38\xa4\x99\x41\xa1\x20\x6d\x5d\x41\xb6\x4f\x3a\x83\xff\xda\x1d\x5d\x3a\xf6\xd2\x63\x04\xdf\x7e\x4c\x76\xcd\x77\x82\x3c\xad\xc8\x93\x55\xb4\x8f\x1b\x80\xd4\x8e\x32\xb8\x6c\xb0\x7b\x2e\x67\xf3\x57\xc9\xd9\xfc\xe5\x38\x9b\xff\x09\xce\xe6\xcf\xe7\xac\x83\x6a\x80\x6c\x3e\x06\x64\xf3\x97\x86\x2c\x7d\x95\x90\xa5\x2f\x07\x59\x3a\x0a\x64\xbf\xa3\x2b\x1d\x8b\xae\x74\x0c\xba\xd2\x51\xe9\xfa\x3e\xdb\x02\xf2\x00\xb4\xa7\x43\xf6\xf7\xe1\x3a\xf8\x05\xdb\x5a\xfa\x74\x72\x77\x7d\x71\xfd\x36\x83\xff\x6b\x08\x64\x48\xc9\x56\xa0\x60\x31\x85\x9a\x2b\x0f\xe8\x9c\xd1\xaa\xf3\xf1\x55\x1b\x03\x58\x09\x37\xbe\x14\x1a\x53\x43\xe5\x72\x14\x02\x61\xa8\x02\x81\xac\x09\xba\xe1\x0d\x88\x00\xaf\xfa\xbc\x70\x83\xda\xe0\xd2\xb4\x81\x6d\x6d\xee\x7b\x2f\xf1\x33\xfb\xa1\x30\xf4\xad\xc3\xb8\xb7\xe1\x9f\xcb\x56\xde\xbf\x23\x5f\x89\x87\xf4\xef\xfd\x4f\xfc\x80\xc5\xc1\x05\xd8\x61\xba\x4f\xf7\xf1\x63\x74\xef\xdd\x8a\x27\xe0\xfd\x33\x00\x00\xff\xff\xd9\x66\x8d\x8b\xd0\x0a\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftMysqlYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftMysqlYaml,
		"ImageStream.image.openshift.io/openshift/mysql.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftMysqlYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftMysqlYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/mysql.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftNginxYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x97\xdf\x6b\xdb\x30\x10\xc7\xdf\xf3\x57\x1c\x7d\x6a\x21\xb1\x9b\xbc\x34\xf8\xad\xbf\xb6\x16\xba\xb6\x24\x65\x7b\xbe\xc8\x17\x47\xab\xac\x13\x92\x9c\x35\x6c\xfb\xdf\x87\x64\x3b\x75\x68\xa1\x85\x99\x40\xa1\x79\x8a\xce\xd2\xe9\xfb\xbd\xbb\x0f\xc6\x68\xe4\x77\xb2\x4e\xb2\xce\x40\x96\x58\x50\xc2\x86\xb4\x5b\xc9\xa5\x4f\x24\xa7\xeb\xf1\xe0\x51\xea\x3c\x83\xeb\xf0\x6c\xee\x2d\x61\x39\x28\xc9\x63\x8e\x1e\xb3\x01\x00\x6a\xcd\x1e\xbd\x64\xed\xc2\x12\x60\xe7\x78\x2e\x9d\x51\xb8\x19\x69\x2c\x29\x83\xdb\x42\xea\x27\xb8\x7a\x78\xb8\x07\x47\x76\x4d\x16\x50\xe7\x80\x60\x69\x4d\xd6\x11\x18\xcb\x4f\x1b\x38\xd4\x61\xdb\xd1\x00\xa0\x3e\x15\x97\xcd\xca\x19\x14\x94\x3d\xdf\x31\x70\x86\x44\xb8\x57\x31\x3f\x56\xe6\x9e\x95\x14\x9b\x5a\x87\x62\x81\x2a\x83\x25\x2a\x47\x03\x00\x8f\x45\x14\x38\x7a\xa9\x18\x20\x27\x27\xac\x34\x3e\x56\xe1\xac\x92\x2a\x8f\xca\xa2\x48\x70\x61\xb3\x00\xc1\xda\x93\xf6\xb0\x96\xd8\x35\x32\x7f\xc5\x48\x93\x15\x76\x0d\x01\x6b\x38\x27\xed\xef\xe6\x70\x92\xc0\x17\xb6\x50\xb2\x25\x90\x7a\xc9\xb6\x8c\x7a\x00\x17\x5c\x79\xa8\x9c\xd4\x05\xf8\x95\x74\xb0\x08\x5a\xc8\xd6\x9d\x19\x6e\xf3\x4a\x2d\x54\x95\x87\x5d\x77\x86\xf4\x3c\x54\x22\xe8\x73\x32\x27\x5b\x3b\x1b\x82\x23\x82\x95\xf7\xc6\x65\x69\x5a\x48\xbf\xaa\x16\x89\xe0\x32\x75\x42\xb1\x2d\xd2\x28\x69\x14\x3c\xa1\xd4\x64\xd3\x85\xe2\x45\x5a\xa2\xf3\x64\xd3\x71\x32\x3e\x4e\x67\x97\xa7\x17\xdf\x2e\x93\x32\x4f\x9a\x5b\xa5\x60\x7d\xae\xd0\xb9\x2c\xfe\x1d\xb5\x6d\xe9\xa5\xe7\xe1\xca\xd7\x72\x19\xcb\xeb\x60\x6a\xb4\x9b\x74\x46\x39\x5c\xa1\x1f\xc2\xb5\x16\xad\x3e\x87\xa5\x51\x34\x23\xc3\xd9\x9b\xbe\xe9\x29\x29\xa4\x6f\x0f\x56\xc6\xb0\xf5\xee\x79\xd2\xc2\x2f\xce\x4b\x5b\xff\x61\xf7\xc9\xba\xc5\xe5\x20\xa8\x3e\x88\xd1\xa5\xe5\xb2\x1d\xa6\x9a\x97\x0b\x16\x8f\x64\x23\x35\x4d\xbc\x96\x9e\xc7\x78\xf0\x26\x48\x7b\x76\x8d\xa2\xf1\xf8\x78\x54\x07\x4e\x32\x85\x9e\x5c\xad\xae\x20\xdd\x74\x34\x83\x49\x8c\xc8\x32\x88\x6d\x06\x1d\x7e\xff\x1d\x3c\xa7\xee\xe8\xb1\xb4\x24\x4b\x5a\x50\x97\x08\x00\xbf\x31\x94\xc1\x4d\x20\xe3\x13\x85\x77\xa2\x30\xd9\x3f\x0a\x93\x0f\x89\xc2\xa4\x37\x14\x26\xbd\xa0\x30\xf9\x44\xa1\x5f\x14\xa6\x7b\x27\x61\xfa\x11\x41\x98\xf6\xc5\xc1\xb4\x0f\x0c\xa6\xbd\x52\xf0\x67\xb4\x9d\xb6\xff\x07\xa2\x6f\x10\xf6\xfc\x2e\xd8\x56\xe2\xc7\xe9\xec\xf6\xfa\xf6\x6b\x06\x67\x1b\x70\xa4\x48\xf8\xad\x40\x8f\xc5\x10\x36\x5c\x59\x40\x63\x94\x14\xb5\x8f\x5f\x52\x29\xc0\xca\x73\xf0\x25\x50\xa9\x0d\x54\x26\x47\x4f\xe0\x19\x2a\x47\xe0\x57\x04\x75\xcf\xdb\xc9\x02\x5e\x36\xe5\xc4\x35\x4a\x85\x0b\x45\xa1\x60\x5b\x9f\x5d\xf3\x25\xfe\x64\xdb\x1e\x74\x4d\x6a\xb7\x17\x64\x0f\x6f\xa2\xea\xa3\x8f\xc1\xed\x4b\x44\x3b\x5f\x39\x0f\x58\xec\x50\xda\x79\xa5\x74\x19\x1c\xbf\xc5\x60\x87\xdd\x77\x40\xf8\x2f\x00\x00\xff\xff\x35\xb7\xb9\x2e\x8f\x0d\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftNginxYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftNginxYaml,
		"ImageStream.image.openshift.io/openshift/nginx.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftNginxYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftNginxYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/nginx.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftNodejsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x97\x5f\x4f\xf3\x36\x14\xc6\xef\xfb\x29\x8e\xb8\x61\x93\x9a\xa4\x45\x55\xa9\x72\x07\xb4\xdb\x90\x18\xa0\x82\xb6\x6b\xd7\x3e\x4d\x0d\x8e\x8f\x65\x3b\xdd\xaa\x6d\xdf\x7d\xca\xdf\xa6\xa2\xbc\xf4\x85\x88\xb7\xdc\x25\x76\x7c\xce\xf3\x1c\xff\x1e\x55\x65\x46\xfe\x81\xd6\x49\xd2\x31\xc8\x94\x25\x18\x92\x41\xed\x56\x72\xe9\x43\x49\xd1\x7a\xd8\x7b\x96\x5a\xc4\x70\x9d\xef\x3d\x78\x8b\x2c\xed\xa5\xe8\x99\x60\x9e\xc5\x3d\x00\xa6\x35\x79\xe6\x25\x69\x97\xbf\x02\xec\x1c\x17\xd2\x19\xc5\x36\x81\x66\x29\xc6\x70\x4b\x02\xc3\x27\xd7\x03\x28\xdf\x35\x09\x6c\x5e\x9d\x61\x1c\xe3\xed\xf1\x9e\x33\xc8\xf3\x92\x8a\xe8\x39\x33\xf7\xa4\x24\xdf\x94\x2d\x14\x71\xa6\x62\x58\x32\xe5\xb0\x07\xe0\x59\x52\xf4\x0e\x5e\x8a\x01\x10\xe8\xb8\x95\xc6\x17\x06\x4f\xa7\xb3\xfb\xf9\xec\xea\xe2\x71\x36\x8d\xe1\x32\x93\x4a\x00\xd3\x02\x6c\xa6\x6b\x6d\x30\x08\x87\x03\x60\xc6\x28\xc9\xcb\x42\x40\x1a\xae\x50\xfb\xbb\x87\xaa\x22\xc0\x79\x08\xbf\x90\x85\x94\x2c\x82\xd4\x4b\xb2\x69\xf1\x29\xb0\x05\x65\x1e\x32\x27\x75\x02\x7e\x25\x1d\x2c\xf2\x16\x68\xcb\xc1\xf6\x41\x6a\xae\x32\x91\xef\xde\x19\xd4\x0f\x85\xcb\xba\x26\x27\xed\xa4\x40\x5b\x36\xed\x83\x43\x84\x95\xf7\xc6\xc5\x51\x94\x48\xbf\xca\x16\x21\xa7\x34\x72\x5c\x91\x4d\x22\x77\x26\x83\x72\x7a\x01\x27\xed\x99\xd4\x68\xa3\x85\xa2\x45\x94\x32\xe7\xd1\x46\xb9\x8d\x68\x3e\xbb\x98\xfe\x3e\x0b\x53\x11\x9e\x56\x7d\x24\x27\x7d\xa5\x98\x73\x71\xf1\x18\x34\x37\x70\xd8\xcd\x15\xd3\xd9\xf7\xb5\xb1\xb4\xce\xd5\x07\xbb\xc7\xe6\x28\xe0\x37\xe6\xfb\x70\xad\x79\x58\x9d\x73\x2c\x35\x0a\xe7\x68\x28\xde\x67\xb0\x29\x1b\x55\xfe\xf0\xef\x30\x91\xf5\x9c\x5c\x66\x0c\x59\xef\x6a\x76\xe2\x5c\x50\x7f\xfb\xdc\xdf\x31\x54\x80\x01\x2b\x29\x04\xea\xdd\x9d\x75\x8d\xfc\x49\x5e\xe0\xa4\x58\x5d\x5a\x4a\x6b\x6a\x4a\xe6\xa7\xc4\x9f\xd1\x16\xe4\x57\xeb\xa5\x2d\x51\xac\xe7\xbe\x5f\xa8\x1d\x0c\x07\x01\x47\xed\xc9\x9d\xc7\x8a\x79\x74\xa5\xf2\x04\x75\x75\xb5\x31\x9c\x15\x2b\x32\xcd\x8d\x54\x54\xc3\x3f\xff\xf5\xb6\xe5\x5b\x9a\x2c\x2e\xd1\xa2\xe6\xd8\xc6\x1f\xc0\x6f\x0c\xc6\x70\x93\xc7\xe0\x20\xee\xf7\xa3\x3e\x7a\x85\xf3\xd7\xf8\x6e\x58\x7d\x07\xe7\x5d\xf3\x3d\x6a\xc1\xdd\x11\xdb\xa3\xa3\x02\x7b\xf4\x0d\x94\xab\x71\xbf\x86\xf4\xe8\xfd\x3c\x97\xe8\xd6\x0a\x47\x1f\x47\x79\xf4\x09\x1c\x8f\xbf\x30\xc7\xe3\xee\x39\x1e\x1f\x15\xc7\xe3\x7d\x1c\xbf\x01\xf0\xb8\x2b\x80\xc7\x1f\x07\x78\xfc\x09\x00\x4f\xbe\x30\xc0\x93\xee\x01\x9e\xfc\x48\x80\x0f\x02\x74\xd2\x15\xa0\x93\x8f\x03\x3a\xe9\x14\xd0\x7f\x83\x06\xae\xfd\xac\x7e\x1f\xa9\x47\x47\x68\xe3\xee\xcf\x8b\xf9\xed\xf5\xed\xaf\x31\x5c\x6e\xc0\xa1\x42\xee\x1b\x89\x9e\x25\x7d\xd8\x50\x66\xdb\x66\xe1\x2f\xa9\x14\xb0\xcc\x53\xee\x8c\x33\xa5\x36\x90\x19\xc1\x3c\x82\x27\xc8\x1c\x82\x5f\x21\x94\xb7\x58\x93\x02\xb4\xdc\xce\x6d\xcd\xa4\x62\x0b\x85\xf9\xd0\x1a\xaf\xed\x01\xa4\xec\x89\x6c\x7d\xd4\x55\xc5\x5d\x57\xa1\xfa\xe9\xa6\x90\xf6\xf3\x31\xfd\x38\xbc\x15\xb9\x97\xf9\x6a\xfd\x0b\x7d\x64\xc9\x4e\xc4\xea\x20\xb4\xd3\x33\x7c\x2b\x3d\xad\xd4\x1d\x10\xa0\xff\x03\x00\x00\xff\xff\x98\x3b\xf9\xa5\x2c\x0f\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftNodejsYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftNodejsYaml,
		"ImageStream.image.openshift.io/openshift/nodejs.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftNodejsYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftNodejsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/nodejs.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftPerlYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x96\x4f\x6f\xdb\x38\x10\xc5\xef\xfe\x14\x83\x9c\x76\x01\x4b\xb2\x05\x27\x01\x74\xcb\xbf\xdd\x0d\x90\x4d\x02\xa7\x68\xcf\x63\x72\x2c\xb3\xa1\x38\x04\x49\xb9\x35\xda\x7e\xf7\x82\x92\x6c\xcb\x48\xd0\xa4\x81\x0b\x38\xb7\x90\xd4\x0c\xdf\x1b\xfe\x5e\x60\xb4\xea\x23\x39\xaf\xd8\x14\xa0\x2a\x2c\x29\x65\x4b\xc6\x2f\xd4\x3c\xa4\x8a\xb3\xe5\x78\xf0\xa8\x8c\x2c\xe0\x3a\x9e\x3d\x04\x47\x58\x0d\x2a\x0a\x28\x31\x60\x31\x00\x40\x63\x38\x60\x50\x6c\x7c\x5c\x02\xec\x94\x4b\xe5\xad\xc6\x55\x62\xb0\xa2\x02\xee\xc9\xe9\x01\x40\xbb\xb0\xdb\x85\xb7\x28\xa8\xd8\x56\x0e\xbc\x25\x11\xbb\x69\xe6\xc7\xda\xde\xb3\x56\x62\xd5\x76\xd7\x2c\x50\x17\x30\x47\xed\x69\x00\x10\xb0\x6c\xae\x4d\x9e\xea\x00\x90\xe4\x85\x53\x36\x34\xde\xce\x6b\xa5\x25\xa0\x91\xe0\x6a\xd3\x28\x81\xe3\x74\x7c\x02\x68\xad\x56\xa2\x2d\x04\x36\x70\x41\x26\xdc\x3d\xc0\x69\x0a\xff\xb0\x83\x8a\x1d\x81\x32\x73\x76\x55\xf3\x49\xd7\x19\x00\x67\x5c\x07\xa8\xbd\x32\x25\x84\x85\xf2\x30\x8b\xfd\xc9\xb5\x33\x1c\x82\x32\x42\xd7\x32\x9e\xde\x59\x32\x0f\xd1\x15\x08\x36\x5e\x49\x72\xed\x65\x43\xf0\x44\xb0\x08\xc1\xfa\x22\xcb\x4a\x15\x16\xf5\x2c\x15\x5c\x65\x5e\x68\x76\x65\xe6\x73\x95\xc4\x19\x25\x82\x4d\x40\x65\xc8\x65\x33\xcd\xb3\xac\x42\x1f\xc8\x65\x51\x7c\x36\xbd\x3a\xbb\xfc\xff\x2a\xad\x64\xda\x09\x53\x82\xcd\x85\x46\xef\x8b\xe6\xcf\xa4\x1b\xf2\x2b\xde\xa5\x99\xc6\x73\x9f\x5a\xc7\xcb\xa8\x3a\xd9\xad\x99\x92\x84\xff\x30\x0c\xe1\xda\x88\xf5\xed\x1e\x2b\xab\x69\x4a\x96\x8b\xe7\x8c\x6d\xda\x66\x12\x8d\x20\x97\xd0\xd7\xb4\x54\x61\x5d\x5c\x5b\xcb\x2e\xf8\x96\x8c\x22\xca\x19\xf6\xe4\x37\x2f\x0d\x0b\x25\x25\x99\x61\x37\xec\xfe\xf9\x72\x0d\xf1\x51\xac\x3c\x6a\x76\xe7\x8e\xab\x35\x0c\x2d\xc5\x97\x2c\x1e\xc9\x35\x2c\x77\xfb\xad\x1b\xd9\xec\x47\xbb\x5b\x91\xcd\xf0\x8f\xc7\x27\x89\x20\x13\xd8\x9f\x16\x1a\x03\xf9\x56\x6e\x49\xa6\x7b\xc7\x02\xf2\x66\x47\x55\x51\x7d\x87\x2a\x7c\xfb\x31\xd8\x36\xef\x29\x72\x34\x27\x47\x46\x50\x9f\x69\x80\xb0\xb2\x54\xc0\x4d\x64\xfb\xed\x30\xe7\xa3\x77\x0c\x73\x3e\xda\x33\xcc\xf9\xe8\xa0\x60\xce\x47\x6f\x85\x39\x1f\xbd\x1d\xe6\x96\xdc\x8e\xe4\x7c\xb4\x0f\x92\xd7\x72\xfe\x28\xc9\x93\xf7\x4c\xf2\x64\xdf\x24\x4f\x0e\x8b\xe4\xc9\x53\x92\x5f\x42\x78\xb2\x2f\x84\x27\x7b\x41\x78\xb2\x57\x84\xbf\x27\x1b\xfc\x9e\xa1\xf9\xf7\x40\x3e\x08\x80\x77\xfe\x15\x6f\xbc\x7d\x3a\x9b\xde\x5e\xdf\xfe\x5b\xc0\xf9\x0a\x3c\x69\x12\x61\xa3\x31\x60\x39\x84\x15\xd7\xae\xef\x16\xbe\x28\xad\x01\xeb\xc0\xd1\x9a\x40\xad\x57\x50\x5b\x89\x81\x20\x30\xd4\x9e\x20\x2c\x08\xda\x67\x5c\xd3\x02\x3c\xef\xa6\xb6\x44\xa5\x71\xa6\x29\x8e\x6c\xe3\xb4\x6f\xbf\xc2\xcf\xec\xd6\x75\xbe\xeb\xec\xf7\x10\xb8\xbf\x6e\x1a\x49\x7f\x1f\x4e\xe8\x7e\x1d\xb5\xa7\xa1\xea\xfd\x54\xff\x80\xe5\x4e\xae\x7a\xf4\xf7\x53\x33\x7e\x29\x35\xbd\xb4\xbd\x22\x35\x3f\x03\x00\x00\xff\xff\x14\x97\x5a\x60\x54\x0c\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftPerlYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftPerlYaml,
		"ImageStream.image.openshift.io/openshift/perl.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftPerlYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftPerlYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/perl.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftPhpYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x97\xcd\x6e\xeb\x36\x10\x85\xf7\x7e\x8a\x41\x56\x2d\x60\x51\x56\x00\x59\x80\x76\xf9\x6b\x13\x20\x4d\x02\xa7\x68\xd7\x63\x6a\x2c\xb1\xa6\x48\x82\xa4\xdc\x1a\xbd\xf7\xdd\x2f\x28\xc9\x3f\x81\x83\xe4\x26\x51\x00\x67\x47\x93\x9a\xe1\x39\xc3\xef\x2c\x8c\x46\xfc\x45\xd6\x09\xad\x72\x10\x35\x96\xc4\xb4\x21\xe5\x2a\xb1\xf0\x4c\xe8\x78\x95\x8c\x96\x42\x15\x39\xdc\x84\xb3\x47\x6f\x09\xeb\x51\x4d\x1e\x0b\xf4\x98\x8f\x00\x50\x29\xed\xd1\x0b\xad\x5c\xf8\x09\xf0\xa4\xbc\x10\xce\x48\x5c\x47\x0a\x6b\xca\xe1\xe1\xfa\x61\x04\xd0\xad\x4d\x65\xfa\xb5\x33\xc8\x29\xdf\xd5\x8d\x9c\x21\x1e\x7a\x49\xad\x97\x8d\x79\xd0\x52\xf0\x75\xd7\x5b\x6a\x8e\x32\x87\x05\x4a\x47\x23\x00\x8f\x65\x7b\x69\x74\xa8\x02\xa0\x20\xc7\xad\x30\xbe\x75\x76\xde\x08\x59\x00\xaa\x02\x6c\xa3\x82\x0e\x48\x59\x0a\x68\x8c\x14\xbc\x2b\x03\xad\xe0\x82\x94\xbf\x7f\x84\x8c\xc1\x6f\xda\x42\xad\x2d\x81\x50\x0b\x6d\xeb\xf6\x93\xbe\x2f\x00\xce\x75\xe3\xa1\x71\x42\x95\xe0\x2b\xe1\x60\x1e\xba\x93\xed\xe6\x37\x06\xa1\xb8\x6c\x8a\x70\x7a\x6f\x48\x3d\x06\x4f\xc0\xb5\x72\xa2\x20\xdb\x5d\x36\x06\x47\x04\x95\xf7\xc6\xe5\x71\x5c\x0a\x5f\x35\x73\xc6\x75\x1d\x3b\x2e\xb5\x2d\x63\x77\x2a\x22\x53\x99\x88\x6b\xe5\x51\x28\xb2\xf1\x5c\xea\x79\x5c\xa3\xf3\x64\xe3\x94\xa5\xf1\xec\xea\xec\xf2\x8f\x2b\x56\x17\xac\x97\x25\xb8\x56\x17\x12\x9d\xcb\xdb\x65\xd4\xcd\xf7\xf5\x07\x09\x83\x78\xee\x43\x63\xf5\x2a\x08\x8e\x9e\x56\xcc\xa8\x80\x6b\xf4\x63\xb8\x51\x7c\x73\xb5\xc3\xda\x48\x9a\x91\xd1\xf9\x73\x9e\xb6\x6d\x63\x8e\x4b\x0a\xb6\xe8\x3f\x56\x0a\xbf\xa9\x6e\x8c\xd1\xd6\xbb\x16\x89\x3c\x65\xe9\x78\x27\xbd\x7d\x60\xa8\x44\x51\x90\x1a\xf7\x53\xde\x3b\x5e\x6d\xc0\x3d\x49\x59\x7a\xd2\x6e\x2e\xac\xae\x37\x04\x74\xe0\x5e\x6a\xbe\x24\xdb\xe2\xdb\xef\x77\x4e\x8a\x76\x3f\x58\xdd\x09\x0c\xe2\xd2\x34\xe2\xa4\xbc\x76\x59\x2e\xd1\x93\xeb\x74\x96\xa4\xfa\xc7\xcb\xe1\xb4\xdd\x11\x75\x90\xdd\xd3\x09\xff\x7f\x1f\xed\x5a\xef\xe4\x58\x5a\x90\x25\xc5\x69\x9f\x62\x00\xbf\x36\x94\xc3\x6d\xa0\xf9\xdd\xf8\x4e\xbf\x2e\xbe\xd3\x41\xf1\x9d\x1e\x15\xbe\xd3\xf7\xe1\x3b\x7d\x3f\xbe\x1d\xad\x1d\xbb\xd3\x21\xd8\x9d\x7e\x32\xbb\x19\x9b\x7c\x55\x76\x33\x36\x19\x90\xdd\x8c\x4d\x8e\x88\xdd\x8c\x4d\x0e\xd8\x7d\x09\xda\x8c\x4d\x06\x81\x36\x9b\x7c\x1c\xda\xad\x96\x4f\x84\x36\xf9\xba\xd0\x26\x83\x42\x9b\x1c\x15\xb4\xc9\x1b\xa1\x4d\x86\x81\x36\x19\x02\xda\x64\x50\x68\xbf\x45\x5b\xe4\x0e\xf9\x7d\x1b\xbb\xc7\xc6\xec\xd6\xd8\xdf\x67\xb3\xbb\x9b\xbb\xdf\x73\x38\x5f\x83\x23\x49\xdc\x6f\x15\x7a\x2c\xc7\xb0\xd6\x8d\xdd\xf7\x0a\xff\x0a\x29\x01\x1b\xaf\x83\x31\x8e\x52\xae\xa1\x31\x05\x7a\x02\xaf\xa1\x71\x04\xbe\x22\xe8\x9e\x70\x83\x09\xe8\x45\x37\xb2\x15\x0a\x89\x73\x49\x61\x5e\x5b\x9b\xfb\xde\x6b\xfc\x47\xdb\x4d\x99\xeb\x1b\xbb\x0f\x47\xec\x97\xdb\x56\xcf\xaf\xc7\x93\xb3\x17\xf3\x75\x18\xa5\xbd\x3f\x8b\x7f\x62\xf9\x24\x4d\x3b\xea\xf7\xc3\x92\xbc\x16\x96\xbd\x90\xfd\x44\x5a\x7e\x04\x00\x00\xff\xff\x69\xc9\x62\xf0\xd5\x0e\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftPhpYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftPhpYaml,
		"ImageStream.image.openshift.io/openshift/php.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftPhpYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftPhpYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/php.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftPostgresqlYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x97\x4f\x6f\x1a\x49\x10\xc5\xef\x7c\x8a\x92\x4f\xbb\x12\xcc\xc8\x08\xb0\x98\x9b\xd7\xf6\xee\x5a\x72\x6c\xc7\x44\xc9\xb9\xe8\x29\x86\x8e\x7b\xba\x3a\xdd\x35\x44\x28\xc9\x77\x8f\xe6\x0f\x30\xc8\x56\x82\x92\xc1\x8a\x6f\x50\x4d\x57\xbf\xf7\xea\x57\x07\xd0\xe9\xf7\xe4\x83\x66\x9b\x80\xce\x31\xa3\x88\x1d\xd9\xb0\xd4\x0b\x89\x34\xc7\xab\xd3\xde\xa3\xb6\x69\x02\xd7\xe5\xd9\x4c\x3c\x61\xde\xcb\x49\x30\x45\xc1\xa4\x07\x80\xd6\xb2\xa0\x68\xb6\xa1\xfc\x0a\xb0\x77\x3d\xd5\xc1\x19\x5c\x0f\x2c\xe6\x94\xc0\x3d\x07\xc9\x3c\xcd\xde\xde\xf4\x00\xea\x92\xab\x4b\xe1\x93\x69\x4a\xc1\xa1\xa2\x64\xd7\xa5\x17\x1c\xa9\xb2\xb3\x61\x7e\x2c\xdc\x3d\x1b\xad\xd6\xf5\x4b\x86\x15\x9a\x04\x16\x68\x02\xf5\x00\x04\xb3\x4a\xc2\xe0\xa9\x26\x80\x94\x82\xf2\xda\x49\xe5\xf3\xde\xf3\x4a\xa7\x14\x00\x5b\x92\x60\x1a\x0d\xa1\x74\x35\xc7\x40\xc0\x16\x2e\xc8\xca\xdd\x0c\xce\x22\xf8\x97\x3d\xe4\xec\x09\xb4\x5d\xb0\xcf\xab\xce\x4d\x5f\x00\x9c\x73\x21\x50\x04\x6d\x33\x90\xa5\x0e\xbb\x1e\x55\x9c\x7d\xd0\x56\x99\x22\x2d\x8f\xef\x1c\xd9\x59\x69\x0a\x14\xdb\xa0\x53\xf2\xb5\xc8\x3e\x04\x22\x58\x8a\xb8\x90\xc4\x71\xa6\x65\x59\xcc\x23\xc5\x79\x1c\x94\x61\x9f\xc5\xbb\x90\x06\x8a\xad\xa0\xb6\xe4\x63\xf1\x44\x71\x8e\x41\xc8\xc7\xd3\x68\x18\x3f\x5c\x9d\x5f\xbe\xb9\x8a\xf2\x34\x6a\xa4\x69\xc5\xf6\xc2\x60\x08\x49\xf5\x71\xb0\x17\xf5\xc1\x93\x2a\x63\x79\xee\xf7\xae\xce\xd0\x0f\xf6\x2f\x3e\x50\x0a\xff\xa3\xf4\xe1\xda\xaa\x8d\x90\x6a\x30\xb0\xd4\x69\x4a\xb6\xff\x44\xc5\x6a\x43\xdf\xc9\x34\x1a\x9e\x54\xc5\x85\xe7\x7c\x33\xb8\x9a\xbe\x4b\x56\x8f\xe4\x2b\x06\x9b\x7a\xfd\x5c\x5a\xd5\x4b\x3d\x5b\x71\xed\xb4\xa6\xc3\x81\x22\x2b\x1c\xce\x12\x83\x42\x41\xaa\xcb\x19\xd9\x26\xf9\x04\x6a\x6f\x3a\x77\xec\xa5\x61\x0b\xbe\x7c\xeb\xed\x5e\xd8\xa9\xf2\xb4\x20\x4f\x56\x51\x9b\x41\x00\x59\x3b\x4a\xe0\xa6\x64\xf1\xb7\xe0\x1b\xbd\x5e\xf8\x46\x47\x84\x6f\xd4\x25\x7c\x9b\x74\x7e\x4c\xe1\xe8\xd7\x29\xac\x69\xdb\x43\x70\xd4\x05\x82\xa3\x17\x41\x70\xfc\x7a\x11\x1c\x1f\x11\xc1\x71\x27\x08\x1e\xc6\xde\xb8\x53\xf6\xc6\x5d\xb0\x37\x7e\x11\xf6\x26\xaf\x97\xbd\xc9\x11\xd9\x9b\xbc\x20\x7b\x93\x4e\xd9\x9b\x74\xc1\xde\xa4\x53\xf6\xbe\x0e\xb6\xe4\x3c\x8f\xe1\xe1\x08\xfe\x89\xe8\x6d\xcd\x7d\x38\x7f\xb8\xbd\xbe\xfd\x2f\x81\x7f\xd6\x10\xc8\x90\x92\xad\x4a\xc1\xac\x0f\x6b\x2e\x3c\xa0\x73\x46\xab\xda\xcc\x67\x6d\x0c\x60\x21\x5c\x9a\x53\x68\xcc\x1a\x0a\x97\xa2\x10\x08\x43\x11\x08\x64\x49\x50\x8f\x71\x43\x0c\xf0\xa2\x9d\x1c\xae\x50\x1b\x9c\x9b\x2a\xba\xad\xe1\x76\x0a\x39\x7e\x64\xbf\xb9\x1d\x9a\xfe\xa1\xe3\x85\xf9\xeb\xa6\x12\xf9\xf7\x51\xb7\xe6\xe9\x82\xb4\xfe\x1c\xbd\xc3\x6c\x6f\x47\x76\x10\xb7\xd9\x3f\xfd\x19\xfb\xad\x9d\x39\x00\xfe\xef\x01\x00\x00\xff\xff\x10\xfe\x40\x37\xc5\x0d\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftPostgresqlYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftPostgresqlYaml,
		"ImageStream.image.openshift.io/openshift/postgresql.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftPostgresqlYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftPostgresqlYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/postgresql.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftPythonYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x98\x5b\x8f\x22\x37\x10\x85\xdf\xf9\x15\xa5\x7d\x4a\x24\xda\xad\xa5\xb9\x48\xfd\xb6\xb7\x24\x23\x6d\x76\x57\x4c\x94\x3c\x17\xee\xa2\xf1\x8e\xdb\x65\xd9\x6e\x12\x94\xe4\xbf\x47\x7d\x05\x34\x48\x33\x61\x9a\x11\xbc\xd1\x76\x97\x7d\x4e\xd5\x77\x10\x02\xad\xfa\x9d\x9c\x57\x6c\x52\x50\x05\xe6\x24\xd8\x92\xf1\x1b\xb5\x0e\x42\x71\xbc\x7d\x3b\x7a\x50\x26\x4b\xe1\xae\xda\xbb\x0f\x8e\xb0\x18\x15\x14\x30\xc3\x80\xe9\x08\x00\x8d\xe1\x80\x41\xb1\xf1\xd5\x23\xc0\x51\x79\xa6\xbc\xd5\xb8\x8b\x0c\x16\x94\xc2\xb7\x5d\xd8\xb0\x19\x01\x34\x8f\xf6\xf0\xd1\x5b\x94\x94\xee\xab\x47\xde\x92\xac\x4e\xd4\xcc\x0f\xa5\xfd\xc6\x5a\xc9\x5d\x73\x83\x66\x89\x3a\x85\x35\x6a\x4f\x23\x80\x80\x79\x7d\x75\xf4\x58\x0b\x40\x46\x5e\x3a\x65\x43\xed\xef\x7d\xa9\x74\x06\x68\x32\x70\xa5\x69\xd5\xc0\x44\x2c\x00\xad\xd5\x4a\x36\x95\xc0\x06\x3e\x90\x09\x5f\xef\x61\x21\xe0\x27\x76\x50\xb0\x23\x50\x66\xcd\xae\xa8\x5f\x69\x8f\x06\xc0\x15\x97\x01\x4a\xaf\x4c\x0e\x61\xa3\x3c\xac\xaa\x0b\xc8\x35\x8d\x1c\x83\x32\x52\x97\x59\xb5\xfb\xd5\x92\xb9\xaf\x6c\x81\x64\xe3\x55\x46\xae\xb9\x6c\x0c\x9e\x08\x36\x21\x58\x9f\xc6\x71\xae\xc2\xa6\x5c\x09\xc9\x45\xec\xa5\x66\x97\xc7\x7e\xa2\xa2\xa6\x4d\x91\x64\x13\x50\x19\x72\xf1\x4a\xf3\x2a\x2e\xd0\x07\x72\xf1\x44\x2c\xe2\xe5\xa7\x77\x1f\x7f\xfd\x24\x8a\x4c\xb4\xca\x94\x64\xf3\x41\xa3\xf7\x69\xfd\x31\xea\x1b\xfd\xac\xf9\x54\x1d\x39\xf5\xae\x75\xbc\xad\x94\x47\xc7\x45\x4b\xca\xe0\x17\x0c\x63\xb8\x33\xb2\x13\xe0\xb1\xb0\x9a\x96\x64\x39\x3d\x65\xae\x3f\x36\xce\xbe\xa3\xc9\x39\xa2\xbf\x44\xae\x42\x57\x5c\x5a\xcb\x2e\xf8\x0e\x90\x74\x22\x16\xe3\x23\x0b\xf5\xc4\xbb\x66\x1f\x6f\x6d\x3b\x96\xdf\x4c\xc4\xe2\x4d\xbd\xb8\x76\x5c\x74\x38\x34\x2c\x7f\x64\xf9\x40\xae\x26\xba\x5d\x6f\xac\x64\xf5\x7a\xe5\x55\x92\x09\xec\xe3\xb6\xf5\x93\x45\xd4\x2c\x2c\x52\x8d\x81\x7c\xa3\x34\x27\xd3\x8e\x31\x85\x49\xbd\xa2\x8a\x4a\x78\x8b\x2a\xfc\xfd\xef\x68\x7f\xf4\x5e\x8e\xa3\x35\x39\x32\x92\x0e\x91\x06\x08\x3b\x4b\x29\x7c\xae\xd0\x3e\x9f\xe5\x44\x24\x37\xcc\x72\x22\x92\xc1\x59\x4e\x44\x72\x55\x2c\x27\x22\x39\xc5\xf2\x46\x65\x19\x99\xf1\x13\x48\x27\x22\x39\x1f\xe9\xbd\xd0\x76\x08\x49\xf2\x72\xaa\x7b\x45\x97\xa5\x7a\x7a\xd3\x54\x4f\x2f\x40\xf5\xf4\xca\xa8\x9e\xbe\x84\xea\xe9\x50\x5f\xd4\xc9\x74\x08\xa4\xa7\xaf\x81\xf4\xec\xa6\x91\x9e\x5d\x00\xe9\xd9\x95\x21\x3d\x3b\xe3\x47\x47\x22\x66\x83\xb1\x3c\x1b\x82\xe5\xd9\x6b\xb0\x3c\xbf\x69\x96\xe7\x17\x60\x79\x7e\x65\x2c\xcf\xcf\x62\x79\x3e\x18\xcb\xf3\x21\x58\x9e\x0f\xca\xf2\x3f\x51\x8f\xe1\x49\xac\xff\x1f\xd2\x57\x88\x72\x6f\xef\x8f\x77\xcb\x2f\x77\x5f\x7e\x4e\xe1\xfd\x0e\x3c\x69\x92\xa1\x17\x19\x30\x1f\xc3\x8e\x4b\x77\x68\x17\xfe\x54\x5a\x03\x96\x81\x2b\x6f\x12\xb5\xde\x41\x69\x33\x0c\x04\x81\xa1\xf4\x04\x61\x43\xd0\x0c\xb2\xe3\x05\x78\xdd\x37\x6e\x8b\x4a\xe3\x4a\x53\xd5\xb5\xde\xec\x61\x07\x0a\xfc\xce\xae\xab\xf4\xed\xd9\x7e\xa0\xf0\xfd\xf0\xb9\x16\xf6\xe3\x35\x25\xf0\xa9\xd8\x3d\x4e\xd8\xc1\xdf\x2d\xbf\x61\x7e\x14\xb2\x7d\x12\x0e\x03\xf4\xf6\xa9\x00\x1d\x04\xef\x19\x09\xfa\x2f\x00\x00\xff\xff\x9c\x91\x7c\x4b\x17\x12\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftPythonYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftPythonYaml,
		"ImageStream.image.openshift.io/openshift/python.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftPythonYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftPythonYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/python.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftRedisYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x41\x6f\xdb\x3e\x0c\xc5\xef\xfe\x14\x44\x4f\xff\x3f\x10\xdb\x68\x72\x28\xe0\x5b\xd7\x76\x5b\x81\xae\x2d\xda\x61\x3b\x33\x32\xe3\x68\x95\x45\x41\xa4\x33\x04\xdb\xbe\xfb\x60\xd9\x49\x5c\x64\xc0\x72\xe8\x61\xb7\x48\x0a\xa9\xf7\x1e\x7f\x32\x06\xfb\x85\xa2\x58\xf6\x15\xd8\x16\x1b\x2a\x38\x90\x97\xb5\x5d\x69\x61\xb9\xdc\x9c\x67\x2f\xd6\xd7\x15\xdc\xf6\x67\xcf\x1a\x09\xdb\xac\x25\xc5\x1a\x15\xab\x0c\x00\xbd\x67\x45\xb5\xec\xa5\x5f\x02\xbc\x2a\xaf\xad\x04\x87\xdb\xdc\x63\x4b\x15\x3c\x51\x6d\x25\x03\x18\x56\x71\xb2\x92\x80\x86\xaa\x43\x6d\x26\x81\x4c\xdf\xcf\x31\xbf\x74\xe1\x91\x9d\x35\xdb\xa1\xbf\x63\x83\xae\x82\x15\x3a\xa1\x0c\x40\xb1\x49\x17\xe7\xc7\x4a\x00\x6a\x12\x13\x6d\xd0\xe4\xee\x31\xf2\xc6\xd6\x24\x80\x83\x10\x58\x14\x73\xe8\x6d\x2c\x51\x08\xd8\xc3\x15\x79\x7d\x78\x86\x8b\x02\xde\x73\x84\x96\x23\x81\xf5\x2b\x8e\x6d\x6a\x3a\xb6\x04\xc0\x25\x77\x0a\x9d\x58\xdf\x80\xae\xad\x1c\x7a\xa4\xfc\x66\x60\xbd\x71\x5d\xdd\x1f\x3f\x04\xf2\xcf\xbd\x1f\x30\xec\xc5\xd6\x14\x07\x7d\x33\x10\x22\x58\xab\x06\xa9\xca\xb2\xb1\xba\xee\x96\x85\xe1\xb6\x14\xe3\x38\x36\x65\x8a\x26\x37\xec\x15\xad\xa7\x58\x6a\x24\x2a\x5b\x14\xa5\x58\x2e\x8a\x79\xf9\x74\x73\x79\xfd\xe9\xa6\x68\xeb\x62\x54\x65\x0d\xfb\x2b\x87\x22\x55\xfa\x99\xef\xb2\x3d\x65\x20\x7d\x0e\x7f\xfa\x6b\x18\xf2\x8a\xf9\x51\x0d\x7c\x44\x9d\xc1\xad\x37\xbb\xeb\xd3\x10\x60\x7a\xe9\x66\xc7\xd4\xd9\xa2\x98\x9f\xa5\xcd\x55\xe4\x76\x37\x98\x81\xa9\x6b\x36\x2f\x14\x13\x59\xe3\xfe\x70\x45\x9d\xf6\x7b\x0d\x86\xbc\xb2\x8c\x79\x2c\xe6\xf9\xb0\xbe\xa8\x1c\x2a\x89\xa6\xa2\x86\xfc\x18\x6b\x05\x83\x0f\xdb\x06\x8e\x3a\x32\x03\x3f\x7e\x65\x87\xce\x07\x35\x91\x56\x14\xc9\x1b\x9a\xb2\x05\xa0\xdb\x40\x15\xdc\xf5\x8c\x9d\x04\xd5\xcf\x7c\xcf\xc5\x11\x5f\xa7\xb3\xf5\x8f\x31\xb5\xb7\xf4\xf5\xf2\xe9\xfe\xf6\xfe\x43\x05\xef\xb6\x20\xe4\xc8\xe8\x5e\xa0\x62\x33\x83\x2d\x77\x11\x30\x04\x67\xcd\xe0\xe3\xbb\x75\x0e\xb0\x53\xee\x7d\x19\x74\x6e\x0b\x5d\xa8\x51\x09\x94\xa1\x13\x02\x5d\x13\x0c\xc3\xdb\x21\x02\xbc\x1a\xf3\xc2\x0d\x5a\x87\x4b\x97\x02\xdb\xdb\x9c\x7a\x6f\xf1\x1b\xc7\x5d\xa1\x8c\xad\xe5\x4d\x1e\xc1\x7f\x77\x49\xd5\xff\x6f\xfc\x12\x8e\xa1\x9f\x7c\x48\x3f\x63\xf3\x8a\xfb\x03\x9d\x53\xa8\xcf\xff\x06\xf5\xe4\x31\x9c\x40\xf5\xef\x00\x00\x00\xff\xff\xf6\xdc\xd1\xae\xf1\x05\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftRedisYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftRedisYaml,
		"ImageStream.image.openshift.io/openshift/redis.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftRedisYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftRedisYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/redis.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftRubyYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x97\x5b\x6f\xe3\x36\x10\x85\xdf\xfd\x2b\x06\x79\x6a\x01\x4b\x72\x64\x03\x01\xf4\x96\x5b\xdb\x00\x69\x52\x38\x45\xfb\x3c\xa6\xc6\x32\x1b\x8a\x43\x90\x23\x77\x8d\xdd\xfd\xef\x0b\x5d\x6c\x2b\x17\x6c\x2e\x50\x00\xe7\xcd\x22\x35\xc3\x73\x86\xdf\x31\x6c\x74\xfa\x1f\xf2\x41\xb3\xcd\x40\x97\x58\x50\xcc\x8e\x6c\x58\xe9\xa5\xc4\x9a\x93\xf5\xf1\xe8\x5e\xdb\x3c\x83\xab\x7a\xef\x4e\x3c\x61\x39\x2a\x49\x30\x47\xc1\x6c\x04\x80\xd6\xb2\xa0\x68\xb6\xa1\x7e\x04\x78\x50\x9e\xeb\xe0\x0c\x6e\x22\x8b\x25\x65\x30\xaf\x16\x9b\x11\x40\xfb\xe0\xf7\x0f\xc1\xa1\xa2\x6c\x5f\x39\x0a\x8e\x54\xdd\xcd\x30\xdf\x57\xee\x2f\x36\x5a\x6d\xda\xee\x86\x15\x9a\x0c\x96\x68\x02\x8d\x00\x04\x8b\xe6\xd8\xe8\xa9\x0e\x80\x9c\x82\xf2\xda\x49\xe3\xed\xac\xd2\x26\x07\xb4\x39\xf8\xca\x36\x4a\x20\x8d\x27\x80\xce\x19\xad\xda\x3a\x60\x0b\xe7\x64\xe5\xf6\x0e\x4e\x62\xf8\x8d\x3d\x94\xec\x09\xb4\x5d\xb2\x2f\x9b\x57\xba\xc6\x00\xb8\xe0\x4a\xa0\x0a\xda\x16\x20\x2b\x1d\x60\x51\xb7\x27\xdf\x8e\x70\x0c\xda\x2a\x53\xe5\xf5\xee\xad\x23\x7b\x57\x9b\x02\xc5\x36\xe8\x9c\x7c\x7b\xd8\x18\x02\x11\xac\x44\x5c\xc8\x92\xa4\xd0\xb2\xaa\x16\xb1\xe2\x32\x09\xca\xb0\x2f\x92\x90\xea\xa8\x1e\x51\xa4\xd8\x0a\x6a\x4b\x3e\x11\x4f\x94\x94\x18\x84\x7c\x92\xc6\x93\x64\x7e\x79\x7a\xf1\xe7\x65\x5c\xe6\x71\xa7\x4b\x2b\xb6\xe7\x06\x43\xc8\x9a\x8f\x51\x37\xe2\x57\xdc\x4a\x3d\x8b\xe7\xde\x74\x9e\xd7\xb5\xe6\xe8\x51\x09\xe5\xf0\x07\xca\x18\xae\xac\xda\x1e\x1e\xb0\x74\x86\xe6\xe4\x38\x7b\xce\xd6\xae\x6d\xd2\xb8\xa2\x2f\x71\xa1\x65\x5b\x5a\x39\xc7\x5e\x42\x0b\x45\x96\xc6\x93\x71\x4f\x7a\x73\xc7\xb0\xd2\x79\x4e\x76\xdc\xcd\xb9\xbf\xbf\xde\xe2\x7b\x94\xc6\x93\xa3\x66\x71\xe9\xb9\xdc\x52\xd0\xe2\x7b\xc1\xea\x9e\x7c\x03\x71\xb7\xde\x3a\xc9\x9b\xf5\xda\xea\x23\x81\xe9\x24\x52\x64\x85\xc3\x49\x66\x50\x28\xb4\x5a\x0b\xb2\xdd\x05\x66\x90\x36\x2b\xba\xac\xa5\x77\x88\xc2\xd7\xef\xa3\x7d\xef\xbd\x1e\x4f\x4b\xf2\x64\x15\xf5\x51\x06\x90\x8d\xa3\x0c\xae\x6b\xa4\xdf\xcf\x70\xfa\x89\x19\x4e\x07\x66\x38\x3d\x20\x86\xd3\xf7\x32\x9c\xbe\x9f\xe1\x96\xd8\x0e\xe0\x74\x08\x80\xd3\x8f\x07\x78\xfa\xa9\x00\x5e\x18\x5e\xec\x01\x9e\x0e\x0c\xf0\xf4\x80\x00\x9e\x3e\x05\xf8\x05\x72\xa7\x03\x91\x3b\x1d\x82\xdc\xe9\xc7\x93\x3b\xfb\xc4\xe4\xce\x06\x26\x77\x76\x40\xe4\xce\xde\x4c\xee\x6c\x20\x72\x67\x43\x90\x3b\x1b\x94\xdc\x6f\xd1\x0e\xbb\x67\x20\x7e\x1b\xc0\x87\xf0\x9b\xe1\xc1\x57\xee\xce\xda\xbf\xa7\xf3\x9b\xab\x9b\xdf\x33\x38\xdb\x40\x20\x43\x4a\x76\x12\x05\x8b\x31\x6c\xb8\xf2\x7d\xb3\xf0\xbf\x36\x06\xb0\x12\xae\x9d\x29\x34\x66\x03\x95\xcb\x51\x08\x84\xa1\x0a\x04\xb2\x22\x68\x2f\x71\x4b\x0a\xf0\xb2\x1b\xda\x1a\xb5\xc1\x85\xa1\x7a\x62\x3b\xa3\x7d\xf7\x25\xfe\xc7\x7e\x5b\x17\xba\xce\x61\x80\xa0\xfd\x72\xdd\x48\xfa\xf5\x50\xd2\xf6\xf3\x90\x3d\xcd\x53\xef\x6f\xe4\xdf\x58\x3c\x88\xd4\x9e\xfc\x7e\x60\x8e\x5f\x0a\x4c\x2f\x68\xaf\x48\xcc\x8f\x00\x00\x00\xff\xff\x7f\xf3\x5d\x1b\xef\x0e\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftRubyYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftRubyYaml,
		"ImageStream.image.openshift.io/openshift/ruby.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftRubyYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftRubyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/ruby.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imagestreamImageOpenshiftIoOpenshiftWildflyYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x4d\x6f\xdb\x3c\x0c\xc7\xef\xf9\x14\x44\x4f\xcf\x03\xc4\x76\xec\x4b\x13\xdf\xfa\xba\x15\xe8\xda\x21\x1d\xd6\x33\x23\x33\x8e\x52\x59\x12\x24\x39\x43\xb0\xed\xbb\x0f\xf2\x4b\xe2\xa0\xc5\xd6\x22\x46\x90\x43\x6e\x91\x2c\x4a\xe4\x5f\x3f\x12\x54\x50\xf3\xef\x64\x2c\x57\x32\x05\x5e\x60\x4e\xa1\xd2\x24\xed\x82\xcf\x5d\xc8\x55\xb4\x8a\x07\x2f\x5c\x66\x29\xdc\xf9\x6f\x4f\xce\x10\x16\x83\x82\x1c\x66\xe8\x30\x1d\x00\xa0\x94\xca\xa1\xe3\x4a\x5a\x3f\x04\xd8\x31\xcf\xb8\xd5\x02\xd7\x81\xc4\x82\x52\x78\xe6\x22\xbb\x15\xeb\x01\x40\x3d\xfe\xc1\x45\x36\xdf\x8c\xad\x46\x46\xe9\xd6\x7e\x60\x35\x31\xbf\xa7\x50\xea\xa5\xd4\x5f\x95\xe0\x6c\x5d\x9f\x21\x14\x43\x91\xc2\x1c\x85\xa5\x01\x80\xc3\xbc\x3a\x3c\x78\xed\x0d\x40\x46\x96\x19\xae\x5d\x15\xe1\x65\xc9\x45\x06\x28\x33\x30\xa5\x6c\xfd\x81\x78\x14\x8e\x00\xb5\x16\x9c\xd5\xb6\xa0\x24\x5c\x91\x74\x8f\x4f\x70\x1e\xc2\xad\x32\x50\x28\x43\xc0\xe5\x5c\x99\xa2\x5a\xd2\x6c\x0e\x80\x33\x55\x3a\x28\x2d\x97\x39\xb8\x05\xb7\x30\xf3\x47\x90\xa9\xc5\x1c\x02\x97\x4c\x94\x99\xff\xfa\xa8\x49\x3e\xf9\xc0\x80\x29\x69\x79\x46\xa6\x3e\x6c\x08\x96\x08\x16\xce\x69\x9b\x46\x51\xce\xdd\xa2\x9c\x85\x4c\x15\xd1\x46\x89\xc0\x26\x3c\xb2\x09\x0f\x1a\xc1\xa2\x99\x50\xb3\xa8\x40\xeb\xc8\x44\xd3\x9b\x8b\xeb\x2f\x37\x61\x91\x85\x8d\x4f\x9c\x29\x79\x25\xd0\xda\xb4\xfa\x19\x6c\x55\x7e\xdf\xf5\x54\x72\xbc\xb5\x5a\x1b\xb5\xf2\x6e\x07\xbb\x66\x53\xca\xe0\x33\xba\x21\xdc\x49\xd6\xfa\x60\xb1\xd0\x82\xa6\xa4\x55\xfa\xd7\xc8\x3a\x31\x2e\x89\x82\xda\x2c\xcc\xb9\x6b\xf7\x29\xb5\x56\xc6\xd9\x0d\x2b\xa9\x77\x6e\xb8\x24\x1a\x2e\x71\x85\xcd\xaa\xea\xfe\x5b\xe1\x87\xcd\xca\xee\x82\x55\x4b\xf8\x99\x37\x3f\xab\x66\xe7\x46\x15\x2d\x23\x35\xe2\xd7\x8a\xbd\x90\xa9\x40\x6f\xe6\xeb\x00\xb3\x6a\xde\x2b\xb0\xf5\xbb\x39\x24\x88\x47\xa3\x80\x91\x74\xca\x9e\xa7\x02\x1d\xd9\xda\xf3\x9c\x64\x73\xbd\x29\x24\xd5\x0c\x2f\x7c\x20\x0d\xc4\xf0\xf3\xf7\x60\xbb\x7f\xc7\x29\x43\x73\x32\x24\x19\x75\x69\x07\x70\x6b\x4d\x29\xdc\x7b\xea\xf7\xc3\x3c\x3e\x61\xbe\x23\xc7\x31\x63\x1e\xef\x87\x79\xdc\x2f\xe6\x71\x2f\x98\xc7\x87\xc0\xfc\x04\x79\x07\xf2\x23\x46\x7c\x2f\xc0\xe3\x9e\xeb\x78\xdc\x47\x1d\x8f\x0f\x53\xc7\x93\x13\xe0\x1d\x31\x8e\x17\xf0\x64\x1f\xc0\x93\x9e\x01\x4f\xfa\x00\x3c\x39\x08\xe0\xe3\x53\x9f\xd2\x21\x7c\x7c\xc4\x6d\xca\x78\xaf\x2e\x65\xdc\x6f\x93\x32\xee\xa1\x47\x19\x1f\xa4\x45\x99\x9c\xde\x9b\x1d\xc0\x27\x47\xfc\xdc\x9c\xec\xf5\xda\x9c\xf4\x5b\xc3\x27\x3d\x94\xf0\x49\xcf\x15\xfc\x57\xb0\x41\xf3\x6d\xd6\x3f\xc6\xf9\x51\xf1\xbd\x89\xec\xf9\x62\xfa\x70\xf7\xf0\x29\x85\xcb\x35\x58\x12\xc4\xdc\xc6\x3d\x87\xf9\x10\xd6\xaa\x34\xdd\x40\x3d\x3e\x02\xb0\x74\xca\x47\xc5\x50\x88\x35\x94\x3a\x43\x47\xe0\x14\x94\x96\xc0\x2d\x08\xea\x3b\x6c\x71\x01\x35\xdf\x6a\xb6\x42\x2e\x70\x26\xc8\x0b\xb6\x89\xb3\x1b\x7c\x81\x4b\x65\x5a\x53\xdb\x6c\x6e\x7b\x4b\xc9\xff\xee\x2b\xdf\xfe\x3f\xba\xbc\xfc\x58\x2e\xbe\x4e\xbb\xce\xdf\x98\xdf\x30\xdf\xc9\xbc\x4e\x77\xd3\x4d\xa9\xf8\x5f\x29\xd5\x49\xc5\x77\xe4\xd4\x9f\x00\x00\x00\xff\xff\x14\x22\x8c\x21\x70\x15\x00\x00")

func imagestreamImageOpenshiftIoOpenshiftWildflyYamlBytes() ([]byte, error) {
	return bindataRead(
		_imagestreamImageOpenshiftIoOpenshiftWildflyYaml,
		"ImageStream.image.openshift.io/openshift/wildfly.yaml",
	)
}

func imagestreamImageOpenshiftIoOpenshiftWildflyYaml() (*asset, error) {
	bytes, err := imagestreamImageOpenshiftIoOpenshiftWildflyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ImageStream.image.openshift.io/openshift/wildfly.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceDefaultYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\x31\x12\x82\x40\x0c\x46\xe1\x3e\xa7\xc8\xd0\xa3\x63\xbb\x87\xb0\xb4\x8f\xec\x8f\x66\x80\x64\x67\x13\x2c\x3c\xbd\x03\x9d\xe5\x2b\xde\x27\x4d\x1f\xe8\xa1\x6e\x85\x3f\x37\x5a\xd4\x6a\xe1\xbb\x6c\x88\x26\x13\x68\x43\x4a\x95\x94\x42\xcc\x62\xe6\x29\xa9\x6e\x71\x24\xb3\x37\x58\xbc\x75\xce\x8b\xfa\xd5\xbc\x62\x0c\xac\x98\xd2\x7b\xe1\x61\x20\x66\x93\x0d\x85\x2b\x66\xd9\xd7\xa4\x68\x98\x8e\x71\x56\x93\x55\xbf\xe8\x27\x33\xf2\xb2\x3f\xd1\x0d\x89\x38\xf3\x4f\xf5\xae\x2f\x35\xfa\x05\x00\x00\xff\xff\x73\xfe\x2f\xf0\xa6\x00\x00\x00")

func namespaceDefaultYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceDefaultYaml,
		"Namespace/default.yaml",
	)
}

func namespaceDefaultYaml() (*asset, error) {
	bytes, err := namespaceDefaultYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/default.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceKubePublicYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xca\x31\x0e\xc2\x40\x0c\x44\xd1\xde\xa7\xf0\x05\x52\xd0\xfa\x10\x94\xf4\x93\xcd\x20\x59\xc9\x1a\x6b\xbd\xa1\xe0\xf4\x28\x29\xbf\xfe\x43\xfa\x8b\xa3\xfc\x13\xa6\xdf\x87\xec\x1e\x9b\xe9\x13\x9d\x95\x68\x94\xce\x89\x0d\x13\x26\xaa\x81\x4e\xd3\xfd\x5c\xb9\xe4\xb9\x1e\xde\xa4\x92\xed\x3a\x6f\x0f\x1c\xfe\xe3\xa8\xab\x96\xdb\x8c\xe0\x64\xc9\x3f\x00\x00\xff\xff\x88\xc4\x10\xd9\x60\x00\x00\x00")

func namespaceKubePublicYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceKubePublicYaml,
		"Namespace/kube-public.yaml",
	)
}

func namespaceKubePublicYaml() (*asset, error) {
	bytes, err := namespaceKubePublicYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/kube-public.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceKubeServiceCatalogYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x42\xf0\xae\x16\x5d\x7d\x88\x8e\xdd\x59\xe9\xdb\x25\x2c\x93\x82\xc8\x1a\x48\x4e\x1f\xc8\xc9\x12\xc0\x23\xf9\x1f\x1e\x1e\x35\xfe\x41\x37\x56\x99\xe3\xf1\x15\x36\x96\x32\xc7\x6f\xda\x61\x8d\x32\xc2\x0e\xa7\x42\x4e\x73\x88\x91\x44\xd4\xc9\x59\xc5\xc6\x19\xa3\x36\x88\xfd\xf1\xe2\x1f\xac\x9f\x05\x96\x3b\x37\x3f\x4d\xd3\x74\x01\xb0\xb5\x4a\xb7\x24\xb4\xe3\x9a\x10\x2d\x48\x86\x8a\xec\xda\x5f\xc8\x93\xde\xfe\x7f\xc7\xd2\x0f\xce\x48\x99\x9c\xaa\xae\xc1\x1a\xf2\x08\x59\x58\xa8\xf2\x1d\xfd\xcc\x4a\xef\x4e\xed\xbc\xb2\x9c\xff\x21\xe9\x02\x87\x85\x47\x00\x00\x00\xff\xff\xbd\xb7\x07\x91\xf6\x00\x00\x00")

func namespaceKubeServiceCatalogYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceKubeServiceCatalogYaml,
		"Namespace/kube-service-catalog.yaml",
	)
}

func namespaceKubeServiceCatalogYaml() (*asset, error) {
	bytes, err := namespaceKubeServiceCatalogYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/kube-service-catalog.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceKubeSystemYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xca\xb1\x0d\xc2\x50\x0c\x45\xd1\xde\x53\x78\x81\x14\xb4\x1e\x82\x92\xfe\x91\x3c\x24\x2b\xd8\x7c\x7d\x1b\x24\x98\x1e\x25\xe5\xd5\x3d\x18\x7e\xe3\x2c\x7f\xa5\xe9\xe7\x22\xbb\xe7\x66\x7a\x45\xb0\x06\x56\x4a\xb0\xb1\xa1\x61\xa2\x9a\x08\x9a\xee\xef\x3b\x97\xfa\x56\x33\xa4\x06\xd7\xe3\x3c\x3c\xf1\xf4\x1f\x67\x1d\xb5\x9c\x66\x26\x9b\x25\xff\x00\x00\x00\xff\xff\xb6\x20\x94\x2f\x60\x00\x00\x00")

func namespaceKubeSystemYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceKubeSystemYaml,
		"Namespace/kube-system.yaml",
	)
}

func namespaceKubeSystemYaml() (*asset, error) {
	bytes, err := namespaceKubeSystemYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/kube-system.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftAnsibleServiceBrokerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x41\x4a\xc6\x40\x0c\xc5\xf1\xfd\x9c\x62\xe8\x7e\x14\xb7\x3d\x84\x4b\xf7\xe9\xcc\xab\x86\x4e\x93\x21\x89\x05\x3d\xbd\xb4\x8a\xf0\x41\x97\x09\x3f\x1e\x7f\x1a\xfc\x06\x73\x56\x99\xf3\xf1\x92\x36\x96\x36\xe7\x57\xda\xe1\x83\x2a\xd2\x8e\xa0\x46\x41\x73\xca\x99\x44\x34\x28\x58\xc5\xcf\x33\x67\x1d\x10\xff\xe0\x35\x9e\x58\x9f\x1b\xbc\x1a\x8f\xb8\x96\xa6\xe9\x06\xb0\x8f\x4e\x5f\x45\x68\xc7\xbd\x10\x6d\x28\x8e\x8e\x1a\x6a\x7f\xe4\x57\xff\xb3\x42\xe2\xbc\xf4\x93\xd9\xc1\x15\x65\x31\xdd\x60\xc9\x07\xea\x19\xb5\xb2\x50\xe7\x6f\xd8\x95\x58\x1e\xf7\xd5\xf8\x9d\xe5\xfa\x6f\x9f\x0b\x4c\x10\xf0\xf4\x13\x00\x00\xff\xff\x43\xec\x1d\x42\x02\x01\x00\x00")

func namespaceOpenshiftAnsibleServiceBrokerYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftAnsibleServiceBrokerYaml,
		"Namespace/openshift-ansible-service-broker.yaml",
	)
}

func namespaceOpenshiftAnsibleServiceBrokerYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftAnsibleServiceBrokerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift-ansible-service-broker.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftAzureYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\xb1\x0e\x82\x50\x0c\x46\xe1\xfd\x3e\x45\xc3\x8e\xc6\xf5\x3e\x84\xa3\x7b\x85\x1f\x6d\x80\xf6\xa6\x2d\x0e\x3c\xbd\x81\xc5\x38\x9e\xe4\xe4\xe3\x26\x0f\x78\x88\x69\xa5\xcf\xad\xcc\xa2\x63\xa5\x3b\xaf\x88\xc6\x03\xca\x8a\xe4\x91\x93\x6b\x21\x62\x55\x4b\x4e\x31\x8d\x23\x89\xac\x41\xe3\x2d\x53\x5e\xc4\xae\x6a\x23\xfa\xc0\x82\x21\xcd\x2b\x75\x5d\x21\x52\x5e\x51\x7f\x5b\xcf\xfb\xe6\x28\xd1\x30\x1c\xc0\x24\xca\x8b\xec\xf0\x93\xeb\x69\xde\x9e\x70\x45\x22\xce\xfc\xd3\xcd\xe5\x25\x5a\xbe\x01\x00\x00\xff\xff\x30\x1a\xb9\x4f\xae\x00\x00\x00")

func namespaceOpenshiftAzureYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftAzureYaml,
		"Namespace/openshift-azure.yaml",
	)
}

func namespaceOpenshiftAzureYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftAzureYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift-azure.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftEtcdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\x31\x0e\xc2\x30\x0c\x85\xe1\x3d\xa7\xb0\xba\x17\xc4\x9a\x43\x30\xb2\x9b\xe4\x15\xac\x36\x76\x14\x1b\x06\x4e\x8f\xda\x05\x31\xfe\xd2\x7b\x1f\x77\xb9\x61\xb8\x98\x66\x7a\x5f\xd2\x2a\x5a\x33\x5d\xb9\xc1\x3b\x17\xa4\x86\xe0\xca\xc1\x39\x11\xb1\xaa\x05\x87\x98\xfa\x9e\x44\xd6\xa1\xfe\x94\x25\x4e\x62\x67\xb5\x8a\xd9\xb1\xa1\x84\x8d\x4c\xd3\x94\x88\x94\x1b\xf2\x6f\x36\x23\x4a\x4d\xde\x51\xf6\xff\x22\xca\x9b\x7c\x30\x0e\x6d\xa6\xf5\x75\xc7\x50\x04\xfc\xc8\x3f\xdc\x86\x3c\x44\xd3\x37\x00\x00\xff\xff\x29\x58\x27\x0e\xad\x00\x00\x00")

func namespaceOpenshiftEtcdYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftEtcdYaml,
		"Namespace/openshift-etcd.yaml",
	)
}

func namespaceOpenshiftEtcdYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftEtcdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift-etcd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftInfraYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xc9\x31\x0e\xc2\x30\x0c\x05\xd0\xdd\xa7\xf0\x05\x3a\xb0\xe6\x10\x8c\xec\x9f\xf6\x47\x58\x25\x6e\x64\x1b\x06\x4e\x8f\x32\x3e\x3d\x4c\x7b\x30\xd2\x2e\x6f\xfa\xbd\xc9\x69\x7e\x34\xbd\x63\x30\x27\x76\xca\x60\xe1\x40\xa1\x89\xaa\x63\xb0\xe9\x35\xe9\xf9\xb2\x5e\x9b\x79\x0f\x48\x4e\xee\x6b\xbb\x39\xde\xf6\x63\xe4\xd2\xa6\xe7\xe7\xc9\x70\x16\x53\xfe\x01\x00\x00\xff\xff\x30\x80\x9d\x4b\x64\x00\x00\x00")

func namespaceOpenshiftInfraYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftInfraYaml,
		"Namespace/openshift-infra.yaml",
	)
}

func namespaceOpenshiftInfraYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftInfraYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift-infra.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftMetricsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x41\x4a\x06\x31\x0c\xc5\xf1\x7d\x4f\x51\xbe\x7d\x15\xb7\x3d\x84\xb8\x72\x1f\xdb\x37\x4e\x98\x69\x52\x92\x8c\xa0\xa7\x97\x19\x45\x10\x5d\x26\xfc\x78\xfc\x69\xf2\x33\xcc\x59\xa5\xe6\xb7\x87\xb4\xb1\xf4\x9a\x1f\x69\xc0\x27\x35\xa4\x81\xa0\x4e\x41\x35\xe5\x4c\x22\x1a\x14\xac\xe2\xe7\x99\xb3\x4e\x88\xaf\xbc\xc4\x1d\xeb\x7d\x87\x37\xe3\x19\xd7\xd2\x93\xe9\x40\xac\x38\xfc\x1f\xc8\x3e\x77\x7a\x2f\x42\x03\x35\xdf\x6e\x7f\x85\x68\x47\x71\xec\x68\xa1\xf6\x4d\xbe\xf4\x0f\x2b\x03\x61\xdc\x3c\xf9\x44\x3b\x6b\x16\x16\xda\xf9\x03\x76\xb5\x95\xdf\x83\x6a\xfc\xca\x72\xfd\xb7\xe3\x05\x26\x08\x78\xfa\x0c\x00\x00\xff\xff\xfe\x8b\xfa\xc3\xfb\x00\x00\x00")

func namespaceOpenshiftMetricsYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftMetricsYaml,
		"Namespace/openshift-metrics.yaml",
	)
}

func namespaceOpenshiftMetricsYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftMetricsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift-metrics.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftNodeYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcc\xb1\xae\xc2\x30\x0c\x85\xe1\xdd\x4f\x61\x75\xef\xbd\x62\xcd\x43\x30\xb2\x9b\xe6\x54\x58\x6d\xec\x28\x36\x0c\x3c\x3d\x0a\x0b\xe3\x91\xbe\xf3\x4b\xd7\x1b\x46\xa8\x5b\xe1\xd7\x85\x0e\xb5\x5a\xf8\x2a\x0d\xd1\x65\x03\x35\xa4\x54\x49\x29\xc4\x2c\x66\x9e\x92\xea\x16\x73\x32\x7b\x87\xc5\x43\xf7\xfc\x53\xff\x37\xaf\x58\x03\x27\xb6\xf4\x51\x78\x59\x88\xd9\xa4\xa1\xfc\xd8\x3a\x0d\x45\xc7\x36\xff\xbb\x9a\x9c\xfa\xc6\xf8\xd6\x56\x3e\x9e\x77\x0c\x43\x22\xe8\x13\x00\x00\xff\xff\xe8\x62\xbc\x5e\x95\x00\x00\x00")

func namespaceOpenshiftNodeYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftNodeYaml,
		"Namespace/openshift-node.yaml",
	)
}

func namespaceOpenshiftNodeYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftNodeYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift-node.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftSdnYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xc1\xaa\xc2\x30\x10\x85\xe1\x7d\x9e\x22\x74\x9f\x7b\x71\xdb\x87\x70\xe9\x7e\x4c\x4e\x75\x68\x3b\x13\x32\xa3\xa0\x4f\x2f\x8d\x22\x08\x5d\xce\xf0\x71\xf8\xa9\xf2\x09\xcd\x58\x65\x8c\xf7\x43\x98\x59\xca\x18\x8f\xb4\xc2\x2a\x65\x84\x15\x4e\x85\x9c\xc6\x10\x23\x89\xa8\x93\xb3\x8a\x6d\x67\x8c\x5a\x21\x76\xe5\xc9\xff\x58\xff\x0b\x2c\x37\xae\xde\x97\x86\x61\x07\xb0\xd5\x85\x1e\x49\x68\xc5\xbe\x10\x2d\x48\x86\x05\xd9\xb5\x7d\xc8\x5b\x7f\x59\xb2\x22\xc1\x2a\xf2\x56\x30\xb1\xd0\xc2\x4f\xb4\xde\x93\x7e\xc7\xb4\xf1\x85\xa5\xff\xe7\xdb\x19\x4d\xe0\xb0\xf0\x0a\x00\x00\xff\xff\x88\x50\xfd\x31\xef\x00\x00\x00")

func namespaceOpenshiftSdnYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftSdnYaml,
		"Namespace/openshift-sdn.yaml",
	)
}

func namespaceOpenshiftSdnYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftSdnYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift-sdn.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftTemplateServiceBrokerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x41\x4a\x05\x31\x0c\xc6\xf1\x7d\x4f\x51\xde\xbe\x8a\xdb\x39\x84\x4b\xf7\x79\xed\x37\x1a\xa6\x4d\x4a\x12\x07\xf4\xf4\x32\xa3\x08\x0f\x66\x99\xf0\x23\xf9\xd3\xe4\x37\x98\xb3\xca\x92\xf7\x97\xb4\xb1\xb4\x25\xbf\xd2\x80\x4f\xaa\x48\x03\x41\x8d\x82\x96\x94\x33\x89\x68\x50\xb0\x8a\x1f\x63\xce\x3a\x21\xfe\xc1\x6b\x3c\xb1\x3e\x37\x78\x35\x9e\x71\x5e\xba\xdd\x2e\x00\xfb\xec\xf4\x55\x84\x06\xae\x85\x68\x43\x71\x74\xd4\x50\xfb\x23\xbf\xfa\x9f\x95\xc0\x98\x9d\xe2\x70\xb6\x73\x45\xb9\x9b\x6e\xb0\xe4\x13\xf5\xa8\x5a\x59\xa8\xf3\x37\xec\x6c\x2c\x8f\x0f\xd4\xf8\x9d\xe5\xdc\x6f\x9f\x77\x98\x20\xe0\xe9\x27\x00\x00\xff\xff\x88\xf7\x76\x4a\x03\x01\x00\x00")

func namespaceOpenshiftTemplateServiceBrokerYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftTemplateServiceBrokerYaml,
		"Namespace/openshift-template-service-broker.yaml",
	)
}

func namespaceOpenshiftTemplateServiceBrokerYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftTemplateServiceBrokerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift-template-service-broker.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftWebConsoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x41\x8a\xc3\x30\x0c\x85\xe1\xbd\x4f\x61\xb2\xf7\x0c\xb3\xcd\x21\x66\x39\x7b\xc5\x7e\x99\x8a\x38\x92\xb1\xd4\x96\xf6\xf4\x25\x69\x29\x14\xb2\x94\xf8\x78\xfc\xd4\xf8\x0f\xdd\x58\x65\x8c\x97\x9f\xb0\xb0\x94\x31\xfe\xd2\x0a\x6b\x94\x11\x56\x38\x15\x72\x1a\x43\x8c\x24\xa2\x4e\xce\x2a\xb6\x9d\x31\x6a\x83\xd8\x89\x67\xff\x62\xfd\x2e\xb0\xdc\xb9\xf9\xbe\x34\x0c\x07\x80\xad\x55\xba\x25\xa1\x15\xc7\x42\xb4\x20\x19\x2a\xb2\x6b\x7f\x91\xa7\x7e\xb3\x74\xc5\x94\xb2\x8a\x69\x45\xb0\x86\xbc\x95\xcc\x2c\x54\xf9\x8e\xbe\x77\xa5\xcf\x51\xed\xfc\xcf\xb2\xff\x97\xf3\x84\x2e\x70\x58\x78\x04\x00\x00\xff\xff\x05\xa8\x11\x6c\xf7\x00\x00\x00")

func namespaceOpenshiftWebConsoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftWebConsoleYaml,
		"Namespace/openshift-web-console.yaml",
	)
}

func namespaceOpenshiftWebConsoleYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftWebConsoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift-web-console.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _namespaceOpenshiftYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\x31\x0e\x02\x31\x0c\x44\xd1\xde\xa7\xf0\x05\x00\xd1\xe6\x10\x94\xf4\x66\x77\x16\x46\x4b\x9c\x28\x36\x14\x9c\x1e\x85\x82\xf2\x7d\xe9\x5b\xe7\x15\x23\xd8\xbc\xe8\xfb\x2c\x3b\x7d\x2d\x7a\xb1\x8a\xe8\xb6\x40\x2a\xd2\x56\x4b\x2b\xa2\xea\x56\x51\xb4\x75\x78\x3c\xb8\xa5\x44\xc7\x32\xfb\x46\xb7\x27\x3f\x18\x31\x75\xd0\xfd\x75\xc3\x70\x24\xe2\xc7\xff\x70\x64\x3b\xb5\xc1\x3b\x5d\xbe\x01\x00\x00\xff\xff\x8b\xb7\xd1\xb5\x76\x00\x00\x00")

func namespaceOpenshiftYamlBytes() ([]byte, error) {
	return bindataRead(
		_namespaceOpenshiftYaml,
		"Namespace/openshift.yaml",
	)
}

func namespaceOpenshiftYaml() (*asset, error) {
	bytes, err := namespaceOpenshiftYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Namespace/openshift.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _oauthclientOauthOpenshiftIoCockpitOauthClientYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\x31\xcb\xc2\x30\x10\x40\xf7\xfc\x8a\xdb\x0a\x81\xf4\xe3\x5b\xb3\x15\x2d\xe2\xa2\x50\xd4\xfd\x4c\x4f\x7b\x34\x4d\x42\xee\x2a\xf8\xef\x45\x5d\xdd\x1e\x3c\x78\x0f\x0b\x5f\xa8\x0a\xe7\xe4\x21\xe3\xaa\x53\x9b\x0b\x25\x99\xf8\xa6\x2d\xe7\xbf\xc7\xbf\x99\x39\x8d\x1e\x8e\xdd\xaa\xd3\x26\x32\x25\x35\x0b\x29\x8e\xa8\xe8\x0d\x40\xc4\x2b\x45\x79\x13\x00\x96\xe2\xa1\xd2\x9d\x45\xeb\xd3\x85\x9c\x24\x47\x32\x00\x09\x17\xf2\x10\x72\x98\x0b\xab\xfb\x5c\x5c\xf8\xa6\x2a\x8d\x5c\x29\xe8\x79\xd8\x8b\x37\x0e\x1a\x6b\x2d\xec\xfa\x43\x3f\x74\xa7\x7e\x0b\xd6\xda\xc6\x08\x85\x4a\xea\x7f\xba\x57\x00\x00\x00\xff\xff\x83\xea\x54\x93\xbf\x00\x00\x00")

func oauthclientOauthOpenshiftIoCockpitOauthClientYamlBytes() ([]byte, error) {
	return bindataRead(
		_oauthclientOauthOpenshiftIoCockpitOauthClientYaml,
		"OAuthClient.oauth.openshift.io/cockpit-oauth-client.yaml",
	)
}

func oauthclientOauthOpenshiftIoCockpitOauthClientYaml() (*asset, error) {
	bytes, err := oauthclientOauthOpenshiftIoCockpitOauthClientYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "OAuthClient.oauth.openshift.io/cockpit-oauth-client.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xb1\x4e\xec\x40\x0c\x45\xfb\xf9\x0a\x6b\xfb\xec\xd3\xeb\xd0\xfc\x00\x1d\x05\x05\xbd\x33\xf1\x66\xad\x9d\xd8\x23\xdb\xb3\x08\xbe\x1e\x25\x1b\x21\x40\x48\x6c\x15\xc7\xf2\x3d\xf7\x68\xb0\xf1\x0b\x99\xb3\x4a\x06\x1b\xb1\x1c\xb1\xc7\x59\x8d\xdf\x31\x58\xe5\x78\x79\xf0\x23\xeb\xbf\xeb\xff\x74\x61\x99\x32\x3c\x6b\xa5\xb4\x50\xe0\x84\x81\x39\x01\xa0\x88\xc6\x76\xeb\xeb\x2f\xfc\x0a\xe9\x23\x99\x50\xd0\xc6\xc2\x1e\xda\xdb\x84\x41\x19\x0e\x61\x9d\x0e\x09\xa0\xe2\x48\x75\x27\x7c\x3f\x1f\x55\xc3\xc3\xb0\x35\x96\xf9\xe6\x38\x4c\x74\xc2\x5e\xc3\x13\x80\xe0\x42\x19\xfc\xcd\x83\x96\x5c\x54\xc2\xb4\x56\xb2\xfc\x19\x1b\x9c\x67\x21\xdb\x4f\xbd\x61\xa1\xbc\x55\x0c\xad\x8f\x95\x4b\xb2\x5e\xc9\x73\x1a\x00\x1b\x3f\x9a\xf6\xb6\x69\x0c\x70\x58\xbd\x8c\x5c\xbb\x15\xda\x77\x45\xe5\xc4\xf3\x82\x6d\xad\xbe\x92\x8d\xfb\x7e\xa6\xd8\xbe\x95\xfd\x36\xbc\x62\x94\xf3\x1f\xcc\xa7\xd5\x67\xe7\xd6\xee\x41\x36\xb0\x9c\xf4\xfe\xd6\xdb\x2b\xde\x67\x4e\x57\x92\xf8\x91\x2f\x46\x6b\x7e\x1d\xdb\xe6\xfb\x05\xfa\x11\x00\x00\xff\xff\xba\xe7\xbb\x89\x18\x02\x00\x00")

func roleRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYaml,
		"Role.rbac.authorization.k8s.io/kube-public/system-controller-bootstrap-signer.yaml",
	)
}

func roleRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/kube-public/system-controller-bootstrap-signer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8d\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\x91\x5d\x2e\xba\x15\xfa\x81\x6e\x1d\x3a\x74\xa7\x65\xc6\x21\x2c\x8b\x02\x49\xb9\x40\xbf\xbe\x70\x1c\x03\xde\x0e\xef\x1d\xee\xb0\xf1\x0f\xa9\xb1\xd4\x04\x3a\x62\x1e\xb0\xfb\x43\x94\xff\xd0\x59\xea\xb0\x7c\xd8\xc0\xf2\xb6\xbd\x87\x85\xeb\x94\xe0\x5b\x0a\x85\x95\x1c\x27\x74\x4c\x01\xa0\xe2\x4a\x09\x72\xe9\xe6\xa4\x91\xeb\x5d\x62\x96\x7a\xe7\x79\xc5\xf6\xd2\xd6\x30\x53\x82\xa5\x8f\x14\x8d\x74\xe3\x4c\x31\xa3\x63\x91\x39\x68\x2f\x64\x29\x44\xc0\xc6\x9f\x2a\xbd\xd9\x3e\x1a\xe1\x76\x0b\x00\x4a\x26\x5d\x33\x7d\xed\x23\x07\xbf\x1e\x5d\x1a\xa7\x3d\x9f\x2d\x00\x6c\xa4\xe3\x8b\xcf\xe4\x87\x57\x42\xa7\x67\x2c\x6c\x07\xfb\x45\xcf\x8f\x67\xea\x6d\xda\xed\x7f\x00\x00\x00\xff\xff\x67\xe9\x55\xbf\x12\x01\x00\x00")

func roleRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapYaml,
		"Role.rbac.authorization.k8s.io/kube-service-catalog/cluster-info-configmap.yaml",
	)
}

func roleRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/kube-service-catalog/cluster-info-configmap.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcd\x31\x4e\xc5\x30\x0c\xc6\xf1\x3d\xa7\xb0\xde\x9e\x22\x36\x94\x0b\xb0\x33\xb0\xbb\xae\xe9\xb3\x9a\xc6\x91\xed\x14\x89\xd3\xa3\x96\x8a\xed\xa7\xbf\x25\x7f\xd8\xe5\x93\xcd\x45\x5b\x01\x9b\x91\x26\x1c\xf1\x54\x93\x1f\x0c\xd1\x36\x6d\x6f\x3e\x89\xbe\x1c\xaf\x69\x93\xb6\x14\xf8\xd0\xca\x69\xe7\xc0\x05\x03\x4b\x02\x68\xb8\x73\x01\xd2\xf6\x25\xeb\x8e\x3d\x23\x11\xbb\xab\xdd\x27\xef\x48\x5c\x60\x1b\x33\x67\x67\x3b\x84\x38\x13\x06\x56\x5d\x93\x8d\xca\x5e\x52\x06\xec\xf2\x6e\x3a\xba\x9f\x0f\x33\x3c\x1e\x09\xc0\xd8\x75\x18\xf1\xdd\xfe\x07\x3c\x01\x1c\x6c\xf3\xdd\xab\x78\x5c\xf8\xc6\xa0\xe7\xa5\x95\xff\x0a\x19\x63\xf0\xc5\xd1\x97\x93\xbf\x01\x00\x00\xff\xff\xac\x38\xcd\x99\xec\x00\x00\x00")

func roleRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorYaml,
		"Role.rbac.authorization.k8s.io/kube-service-catalog/configmap-accessor.yaml",
	)
}

func roleRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/kube-service-catalog/configmap-accessor.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xb1\x4e\xc4\x30\x10\x44\x7b\x7f\xc5\xea\x7a\x07\xd1\x21\xff\x00\x1d\x05\x05\xfd\x26\x99\x0b\xd6\x25\x5e\x6b\x77\x1d\x01\x5f\x8f\x9c\x4b\x01\x12\x12\xa5\x57\xf3\x66\x9e\xb9\xe6\x37\xa8\x65\x29\x89\x74\xe4\x69\xe0\xe6\xef\xa2\xf9\x8b\x3d\x4b\x19\x6e\x4f\x36\x64\x79\xd8\x1f\xc3\x2d\x97\x39\xd1\xab\xac\x08\x1b\x9c\x67\x76\x4e\x81\x88\x4b\x11\x3f\xb2\xd6\x9f\xf4\x67\x49\x1b\xa1\x05\x8e\xa3\x8b\x9b\x4b\xab\x33\x3b\x12\x5d\x5c\x1b\x2e\x81\x68\xe5\x11\xeb\xd9\xf0\x3b\x3e\x8a\xb8\xb9\x72\xad\xb9\x2c\x77\xc7\x38\xe3\xca\x6d\x75\x0b\x44\x85\x37\x24\xc2\x87\xa3\xf4\x4f\x44\xae\xd9\xa0\x3b\x34\x76\x07\x14\xcf\xd3\x21\x11\x15\x3c\x43\x4f\xc2\x2a\x4f\x48\xc7\x52\xb4\x4f\x73\x6c\x41\xdb\x0a\x4b\x21\x12\xd7\xfc\xac\xd2\xea\x61\x13\xe9\xd2\xf5\x14\x26\x4d\x27\xbc\x74\xf6\x7e\xff\x7f\xf2\x07\x77\x32\x93\x94\x6b\x5e\x36\xae\xdd\x7c\x87\x8e\xe7\x7d\x81\x87\xef\x00\x00\x00\xff\xff\x6e\x6b\x36\x62\x89\x01\x00\x00")

func roleRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderYaml,
		"Role.rbac.authorization.k8s.io/kube-system/extension-apiserver-authentication-reader.yaml",
	)
}

func roleRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/kube-system/extension-apiserver-authentication-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xbd\x4e\xc4\x30\x10\x84\x7b\x3f\xc5\xea\x7a\x07\xd1\x21\xbf\x00\x1d\x05\x05\xfd\xc6\x99\xcb\x59\x71\xbc\xd6\x7a\x7d\x08\x9e\x1e\xe5\xa7\x41\x02\x41\x65\x79\x34\xfe\xe6\x93\xb9\xa6\x37\x68\x4b\x52\x02\xe9\xc8\x71\xe0\x6e\x37\xd1\xf4\xc9\x96\xa4\x0c\xcb\x53\x1b\x92\x3c\xdc\x1f\xdd\x92\xca\x14\xe8\x55\x32\xdc\x0a\xe3\x89\x8d\x83\x23\xe2\x52\xc4\xf6\x6e\xdb\xae\xf4\x23\xa4\x8f\xd0\x02\xc3\xce\xe2\x6e\xd2\xeb\xc4\x86\x40\x17\xd3\x8e\x8b\x23\xca\x3c\x22\x9f\x84\xef\xf5\x51\xc4\x9a\x29\xd7\x9a\xca\x7c\x38\xfa\x09\x57\xee\xd9\x9a\x23\x2a\xbc\x22\x50\xfb\x68\x86\x35\x84\x0c\x9e\xa0\x3e\x4b\x5c\x52\x99\xfd\x46\xf2\x51\x8a\xa9\xe4\x0c\xf5\x2b\x17\x9e\xa1\xe7\xb3\x56\x39\x22\xec\x73\xfe\x00\x38\xed\x19\x2d\x38\x4f\x5c\xd3\xb3\x4a\xaf\xbb\x92\xa7\xcb\xe6\xa8\x68\xd2\x35\xe2\xcc\xa2\x94\x6b\x9a\x57\xae\x9b\xc6\x1d\x3a\x9e\xf9\x3b\x5b\xbc\xfd\x81\x78\xd9\xe6\x8f\xfc\x77\xc7\x7f\xee\xcd\xb0\xfd\x3c\xfe\xd4\x7d\x05\x00\x00\xff\xff\xaf\x63\x8d\xea\xd1\x01\x00\x00")

func roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYaml,
		"Role.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-controller-manager.yaml",
	)
}

func roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-controller-manager.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xbf\x4e\xc6\x30\x0c\xc4\xf7\x3c\x85\xd5\x3d\x45\x6c\x28\x2f\xc0\xc6\xc0\xc0\xee\x26\xfe\xda\xa8\x69\x1c\xd9\xce\x87\xe0\xe9\x51\xff\x2c\x08\x24\x98\xa2\x9c\xcf\xbf\x3b\x19\x5b\x7e\x23\xd1\xcc\x35\x80\x4c\x18\x47\xec\xb6\xb0\xe4\x4f\xb4\xcc\x75\x5c\x9f\x74\xcc\xfc\x70\x7f\x74\x6b\xae\x29\xc0\x2b\x17\x72\x1b\x19\x26\x34\x0c\x0e\x00\x6b\x65\x3b\xbc\xba\x7f\xe1\x57\x48\x9f\x48\x2a\x19\x1d\x2c\xec\xc6\xbd\x25\x34\x0a\x30\x98\x74\x1a\x1c\x40\xc1\x89\xca\x45\xf8\x6e\x9f\x98\x4d\x4d\xb0\xb5\x5c\xe7\xb3\xa3\x4f\x74\xc3\x5e\x4c\x1d\x40\xc5\x8d\x02\xe8\x87\x1a\x6d\x21\x14\xc2\x44\xe2\x0b\xc7\x35\xd7\xd9\xef\x24\xaf\x71\xa1\xd4\x0b\xc9\xe5\xd6\x86\x91\x02\x9c\xb3\x63\xcf\x49\x2f\xa4\xc1\x79\xc0\x96\x9f\x85\x7b\x3b\x9a\x78\x18\xf6\x6a\x42\xca\x5d\x22\x5d\x5a\xe4\x7a\xcb\xf3\x86\x6d\x4f\xbf\x93\x4c\x97\xfe\x8e\x16\x97\x3f\x10\x2f\x7b\xfc\xa9\xff\xa8\xf6\xcf\x98\x99\xec\x78\xcf\x0b\xba\xaf\x00\x00\x00\xff\xff\x60\xe3\xfc\x60\xbf\x01\x00\x00")

func roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYaml,
		"Role.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-scheduler.yaml",
	)
}

func roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-scheduler.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x3d\x4e\xc4\x30\x10\x85\x7b\x9f\x62\xb4\x7d\x82\xe8\x90\x2f\x40\x4f\x41\x3f\x71\x1e\x59\x6b\x1d\x8f\x35\x33\x5e\x04\xa7\x47\xeb\x44\x48\x48\x54\xf6\x3c\xbd\x9f\x8f\x5b\x7e\x87\x5a\x96\x1a\x49\x17\x4e\x33\x77\xbf\x8a\xe6\x6f\xf6\x2c\x75\xbe\xbd\xd8\x9c\xe5\xe9\xfe\x1c\x6e\xb9\xae\x91\xde\xa4\x20\xec\x70\x5e\xd9\x39\x06\x22\xae\x55\x7c\x78\xed\x71\xd2\xbf\x25\x7d\x81\x56\x38\x46\x17\x77\x97\xde\x56\x76\x44\xba\xb8\x76\x5c\x02\x51\xe1\x05\xe5\x6c\xf8\x6b\x5f\x44\xdc\x5c\xb9\xb5\x5c\xb7\x83\x71\x5a\xf1\xc1\xbd\xb8\x05\xa2\xca\x3b\x22\xd9\x97\x39\xf6\x98\xa4\xba\x4a\x29\xd0\xf8\x1b\x9b\x2c\x6f\x15\x7a\x5a\xad\x71\x42\x1c\x13\xd3\x11\x0a\xda\x0b\x2c\x86\x89\xb8\xe5\x57\x95\xde\x06\xc6\x44\x97\x07\x97\xc2\xa4\x6b\xc2\xa9\x19\x92\x62\xec\xde\xa1\xcb\x29\x6e\xf0\xf1\x96\x6c\xc7\xe7\x93\x3d\x5d\xc3\x4f\x00\x00\x00\xff\xff\xd6\x41\xb3\x07\x5a\x01\x00\x00")

func roleRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYaml,
		"Role.rbac.authorization.k8s.io/kube-system/system-controller-bootstrap-signer.yaml",
	)
}

func roleRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/kube-system/system-controller-bootstrap-signer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xb1\x6e\xf4\x20\x10\x84\x7b\x9e\x62\x75\xbd\xfd\xeb\xef\x22\x5e\x20\x7d\x8a\xf4\x6b\x98\xf3\xa1\xc3\x2c\x5a\x16\x47\xc9\xd3\x47\xc6\x4e\x11\x29\x15\xc3\x68\x76\xe6\xe3\x9a\xde\xa1\x2d\x49\xf1\xa4\x0b\x87\x99\xbb\x3d\x44\xd3\x17\x5b\x92\x32\x3f\x5f\xda\x9c\xe4\xdf\xfe\xdf\x3d\x53\x89\x9e\xde\x24\xc3\x6d\x30\x8e\x6c\xec\x1d\x11\x97\x22\x36\xb2\xed\xf8\xd2\x9f\x25\x7d\x81\x16\x18\x46\x17\x77\x93\x5e\x23\x1b\x3c\xdd\x4c\x3b\x6e\x8e\x28\xf3\x82\x7c\x35\xfc\x8e\x2f\x22\xd6\x4c\xb9\xd6\x54\xd6\x93\x71\x8a\xb8\x73\xcf\xd6\x1c\x51\xe1\x0d\x9e\xda\x67\x33\x6c\x3e\x48\x31\x95\x9c\xa1\x3e\x64\xe9\x71\xaa\x2a\x7b\x8a\xd0\x2b\xd8\x2a\x07\xf8\x31\x30\x9d\x27\x4e\x7b\x46\xf3\x6e\x22\xae\xe9\x55\xa5\xd7\x01\x31\xd1\xed\xa0\x52\x34\xe9\x1a\x70\x79\x41\xca\x3d\xad\x1b\xd7\x63\x78\x87\x2e\x3f\xbe\x82\x0d\x43\xae\xb0\xf1\xe6\xd4\x4e\xf1\xc1\x16\x1e\xee\x3b\x00\x00\xff\xff\xec\xcb\x4d\xfb\x66\x01\x00\x00")

func roleRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYaml,
		"Role.rbac.authorization.k8s.io/kube-system/system-controller-cloud-provider.yaml",
	)
}

func roleRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/kube-system/system-controller-cloud-provider.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x31\x6e\xec\x30\x0c\x44\x7b\x9d\x82\xd8\xde\xfb\xf1\xbb\x40\x17\x48\x9f\x22\x3d\x2d\x4f\x76\x85\x95\x45\x81\xa4\x1c\x24\xa7\x0f\x2c\xbb\x49\x90\x22\x95\x46\x83\xe1\xe3\x80\xdc\xf2\x2b\xd4\xb2\xd4\x48\x3a\x73\xba\x72\xf7\xbb\x68\xfe\x64\xcf\x52\xaf\x8f\x27\xbb\x66\xf9\xb7\xfd\x0f\x8f\x5c\x97\x48\x2f\x52\x10\x56\x38\x2f\xec\x1c\x03\x11\xd7\x2a\x3e\xb2\xb6\x7f\xe9\x57\x48\x9f\xa1\x15\x8e\xc1\xe2\xee\xd2\xdb\xc2\x8e\x48\x17\xd7\x8e\x4b\x20\x2a\x3c\xa3\x9c\x84\xef\xf1\x59\xc4\xcd\x95\x5b\xcb\xf5\x76\x74\x9c\x16\xbc\x71\x2f\x6e\x81\xa8\xf2\x8a\x48\xf6\x61\x8e\x35\x26\xa9\xae\x52\x0a\x34\xba\x3c\x50\xa7\x54\xc0\x15\x7a\xe6\xac\x71\x42\x1c\xfc\xe9\x98\x08\xda\x0b\x2c\x86\x89\xb8\xe5\x67\x95\xde\x46\x87\x89\x2e\x7b\x29\x85\x49\xd7\x84\xd3\x33\x24\xc5\x58\xba\x41\xe7\xd3\x5c\x50\xe0\x18\xf2\x06\x1f\x6f\xc9\x76\x88\x77\xf6\x74\xff\x1b\x1b\x1b\xea\x4f\x74\x52\xf0\x89\x6e\x83\xb4\xab\xe3\x72\xe1\x2b\x00\x00\xff\xff\xaa\x28\x7c\xe6\xb7\x01\x00\x00")

func roleRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYaml,
		"Role.rbac.authorization.k8s.io/kube-system/system-controller-token-cleaner.yaml",
	)
}

func roleRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/kube-system/system-controller-token-cleaner.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoOpenshiftSharedResourceViewerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x8e\xb1\x52\xc4\x30\x0c\x44\x7b\x7f\x85\x26\x7d\x72\x43\xc7\xf8\x07\xe8\x29\xe8\x75\xc9\x72\xd1\x5c\x62\x7b\x24\x39\x37\xf0\xf5\x0c\xbe\x1c\x05\x1c\x43\x47\x25\x79\xfd\xb4\xbb\x5c\xe4\x05\x6a\x92\x53\x24\x3d\xf2\x38\x70\xf5\x39\xab\xbc\xb3\x4b\x4e\xc3\xf9\xd1\x06\xc9\x87\xed\x21\x9c\x25\x4d\x91\x9e\xf3\x82\xb0\xc2\x79\x62\xe7\x18\x88\x38\xa5\xec\x8d\xb5\xcf\x27\xdd\x35\xa9\x47\x68\x82\xa3\x79\x71\xf5\x5c\xcb\xc4\x8e\x48\x9d\x6b\x45\x17\x88\x12\xaf\x88\x64\x33\x2b\xa6\x5e\x61\xb9\xea\x88\x7e\x13\x5c\xa0\xfb\xb7\x15\x1e\x11\x29\x17\x24\x9b\xe5\xd5\x83\xd6\x05\x16\x43\x4f\x5c\xe4\x49\x73\x2d\xad\x41\x4f\x5d\xd7\x86\x63\x2d\x0b\x3b\x86\xaf\x8b\x41\x72\x20\xba\xb9\xef\xf4\x0d\xb3\x40\xb4\x41\x8f\xbb\x7c\x82\xb7\xb9\x88\x5d\x97\x0b\xfb\x38\xff\x1a\x26\x2b\x9f\xfe\x4a\x6a\x8c\xb9\x82\xd7\xeb\xfa\x5d\xfd\x21\x38\x9f\xfe\xb5\x96\x1d\x16\x7e\x83\xde\xc9\xfc\x08\x00\x00\xff\xff\x5b\x29\x1f\xec\x27\x02\x00\x00")

func roleRbacAuthorizationK8sIoOpenshiftSharedResourceViewerYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoOpenshiftSharedResourceViewerYaml,
		"Role.rbac.authorization.k8s.io/openshift/shared-resource-viewer.yaml",
	)
}

func roleRbacAuthorizationK8sIoOpenshiftSharedResourceViewerYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoOpenshiftSharedResourceViewerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/openshift/shared-resource-viewer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\xc1\x4a\xc5\x30\x10\x45\xf7\xf9\x8a\xd0\xa5\xd0\x88\x3b\xc9\x0f\xb8\x77\xe1\x7e\x9a\x5c\x7d\xe1\xb5\x99\x61\x66\x5a\xd0\xaf\x97\x3e\xab\x88\x0f\x41\x77\x33\x97\xcb\xb9\x87\xa4\x3d\x41\xad\x71\xcf\x51\x27\x2a\x89\x56\x3f\xb1\xb6\x37\xf2\xc6\x3d\x9d\xef\x2d\x35\xbe\xdd\xee\xc2\xb9\xf5\x9a\xe3\x23\xcf\x08\x0b\x9c\x2a\x39\xe5\x10\x63\xa7\x05\x39\xc2\x4b\x1d\x59\xa0\xe4\xac\x47\x6a\x42\x05\x39\xb2\xa0\xdb\xa9\x3d\xfb\xb8\x97\x82\xae\x33\x2c\x87\x31\x92\xb4\x07\xe5\x55\x6c\xa7\x8c\x17\x42\xda\xa1\x13\x19\x52\x61\x05\x5b\x2a\xbc\x84\x18\x15\xc6\xab\x16\x7c\x6b\x4e\x54\xce\xab\xd8\xd7\xaf\x30\x67\xc5\x1e\x6c\xd0\xe9\x68\x0e\x37\xc3\xf5\xd0\x30\x5c\x23\x85\xeb\x07\xcb\xa0\x5b\x2b\x38\xc0\xbd\x0a\xb7\xee\xc7\xb7\xe1\xf3\x34\x14\x85\xff\x65\x8c\xe4\x22\xf9\x63\xae\x42\x66\x7e\x5d\x0e\xde\x3f\x85\xe3\xef\x0a\x2f\xf0\xf0\x1e\x00\x00\xff\xff\x95\xde\xe7\x93\xd0\x01\x00\x00")

func roleRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYaml,
		"Role.rbac.authorization.k8s.io/openshift-etcd/etcd-operator.yaml",
	)
}

func roleRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/openshift-etcd/etcd-operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsResizerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xbd\x4e\xec\x40\x0c\x85\xfb\x79\x0a\x2b\xf5\x4d\xae\xe8\xd0\xbc\x00\x1d\x05\x05\x0d\x4a\xe1\x24\x07\xd6\x4a\x32\x1e\xd9\x9e\x15\xec\xd3\xa3\xac\x40\xe2\xaf\xfe\x7c\x3e\x9f\xc3\x55\x1e\x61\x2e\x5a\x32\xd9\xc4\xf3\xc0\x2d\x4e\x6a\x72\xe1\x10\x2d\xc3\x7a\xeb\x83\xe8\xff\xf3\x4d\x5a\xa5\x2c\x99\x1e\x74\x43\xda\x11\xbc\x70\x70\x4e\x44\x85\x77\x78\xe5\x19\x99\xb4\xa2\xf8\x49\x9e\xa3\xdf\x11\x26\xb3\x7f\xe0\x4c\x6b\x9b\xd0\x7b\x70\xe0\x13\xf5\x06\x97\x0b\x2c\x59\xdb\xe0\x39\xf5\xc4\x55\xee\x4c\x5b\xf5\x4c\x4f\x5d\x37\x26\x22\x83\x6b\xb3\xf9\xc0\x44\x3d\x55\x5d\x0e\xe3\x19\x36\x5d\x6f\x5e\x10\xdd\xf8\x33\x88\xd7\x40\x39\xd6\xf8\x5f\x8a\x05\x75\xd3\xb7\x1d\x25\xfc\x0b\xbc\x3f\x26\x1c\xe1\xdf\x35\xaf\x92\x6f\x1f\xff\x51\xd7\xea\xc2\x81\x6e\x4c\xef\x01\x00\x00\xff\xff\x87\x39\x5e\x45\x3c\x01\x00\x00")

func roleRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsResizerYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsResizerYaml,
		"Role.rbac.authorization.k8s.io/openshift-metrics/kube-state-metrics-resizer.yaml",
	)
}

func roleRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsResizerYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsResizerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/openshift-metrics/kube-state-metrics-resizer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x31\x6e\xc3\x30\x0c\x85\xe1\x5d\xa7\x20\xbc\xcb\x45\xb7\x42\x17\xe8\xde\xa1\x3b\x6d\xbd\x24\x42\x62\x52\x20\xa9\x00\xed\xe9\x0b\xbb\x1e\x33\xf2\xe1\xc7\x07\x72\x6f\xdf\x30\x6f\x2a\x85\x6c\xe1\x75\xe6\x11\x37\xb5\xf6\xcb\xd1\x54\xe6\xfb\x87\xcf\x4d\xdf\x9e\xef\xe9\xde\xa4\x16\xfa\xd2\x07\xd2\x86\xe0\xca\xc1\x25\x11\xb1\x88\xc6\xd1\xfa\x7e\xd2\x4b\x64\x2c\x30\x41\xe0\xb0\x78\x84\x8e\x5e\x39\x50\x68\x0a\x1b\x98\x12\x91\xf0\x86\x42\xfe\xe3\x81\xad\x88\x56\xe4\x55\xe5\xd2\xae\xd9\xc0\x15\x76\x16\xde\x79\x45\x21\xed\x10\xbf\xb5\x4b\xe4\xbd\x4c\x36\x1e\xf0\x92\x32\x71\x6f\x9f\xa6\xa3\x1f\x9f\x64\x9a\x76\xd8\xe0\x3a\x6c\xc5\xb9\xfd\xab\x1b\x77\x4f\x44\x4f\xd8\x72\xee\x57\x44\xfa\x0b\x00\x00\xff\xff\x31\x34\xd1\x56\x0b\x01\x00\x00")

func roleRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYaml,
		"Role.rbac.authorization.k8s.io/openshift-node/system-node-config-reader.yaml",
	)
}

func roleRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/openshift-node/system-node-config-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _roleRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x4e\xc6\x30\x0c\x04\xe0\x3d\x4f\x61\xfd\x7b\x8a\xd8\x50\x5e\x80\x8d\x81\x81\xdd\x4d\x0f\x7e\xab\x6d\x1c\xd9\x6e\x07\x9e\x1e\x55\x7f\x90\x18\x58\x4f\xf7\x9d\xcd\x5d\x3e\x60\x2e\xda\x0a\xd9\xcc\x75\xe2\x23\xee\x6a\xf2\xcd\x21\xda\xa6\xf5\xc5\x27\xd1\xa7\xf3\x39\xad\xd2\x96\x42\xef\xba\x21\xed\x08\x5e\x38\xb8\x24\xa2\xc6\x3b\x0a\x05\xf6\xbe\x71\xc0\x61\xa7\x54\xcc\xa6\x2b\x2c\x5f\x53\xd9\xc0\x0b\x6c\x34\xbd\x73\x45\x21\xed\x68\x7e\x97\xcf\xc8\xbf\x30\x0f\x99\x1f\x34\xd9\xb1\xc1\x4b\xca\xc4\x5d\x5e\x4d\x8f\xee\xd7\xb1\x4c\xb7\x5b\x22\x32\xb8\x1e\x56\xf1\x76\x2d\x3e\xf2\xff\x1f\xa8\x9b\xa0\xc5\x1f\x31\xda\x8e\x6a\x08\x4f\x44\x27\x6c\x1e\xe1\x17\x22\xfd\x04\x00\x00\xff\xff\x99\x8d\x8f\xd8\x0e\x01\x00\x00")

func roleRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_roleRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYaml,
		"Role.rbac.authorization.k8s.io/openshift-template-service-broker/templateservicebroker-auth-reader.yaml",
	)
}

func roleRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYaml() (*asset, error) {
	bytes, err := roleRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Role.rbac.authorization.k8s.io/openshift-template-service-broker/templateservicebroker-auth-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x4b\x43\x41\x0c\x84\xef\xfb\x2b\x42\xef\xaf\xe2\x4d\xf6\xa6\x17\xef\x15\xbc\x67\xf7\xa5\x35\x76\x9b\x2c\x49\xb6\xa0\xbf\x5e\x7c\x7d\x54\x04\x11\x3d\x06\x66\xbe\x99\x0c\x76\x7e\x26\x73\x56\xc9\x60\x05\xeb\x16\x47\xbc\xa8\xf1\x3b\x06\xab\x6c\x8f\x77\xbe\x65\xbd\x39\xdf\xa6\x23\xcb\x9c\x61\xa7\x8d\x1e\x58\x66\x96\x43\x3a\x51\xe0\x8c\x81\x39\x01\xa0\x88\xc6\x62\xf1\xcf\x13\x7e\x64\x8d\x42\x26\x14\xb4\x20\x71\x84\x8e\x3e\x63\x50\x86\x4d\xd8\xa0\x4d\x02\x68\x58\xa8\xad\x84\xef\xf2\xa2\x1a\x1e\x86\xbd\xb3\x1c\x2e\x55\xa7\x99\xf6\x38\x5a\x78\x02\x10\x3c\x51\x06\x7f\xf3\xa0\x53\xae\x2a\x61\xda\x1a\x59\xbe\xda\x26\xe7\x83\x90\xad\x52\xef\x58\x29\x2f\x11\x53\x1f\xa5\x71\x4d\xa6\x8d\x76\xb4\x5f\x9e\xe9\xfc\x68\x3a\xfa\x2f\x8b\x24\x80\xaf\x41\xfe\x93\xef\xa3\xbc\x52\x0d\xcf\x69\x5a\x09\x4f\x64\x67\xae\x74\x5f\xab\x0e\x89\x2b\xeb\x0f\xcd\x2f\x71\xe9\x23\x00\x00\xff\xff\x5c\x99\x7d\x3a\xc3\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYaml,
		"RoleBinding.rbac.authorization.k8s.io/kube-public/system-controller-bootstrap-signer.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/kube-public/system-controller-bootstrap-signer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x5f\x20\x45\x6c\x28\x1b\x2c\xec\x87\xc4\xee\xba\x6e\x31\x4d\xed\xc8\x71\x6e\xe0\xe9\xd1\xe9\x4e\x20\x31\x00\xbb\xbf\xcf\xdf\x8f\x4d\x5e\xd9\xbb\x98\x16\xf0\x19\x69\xc2\x11\x6f\xe6\xf2\x81\x21\xa6\xd3\xfe\xd0\x27\xb1\xbb\xf3\x7d\xda\x45\x97\x02\x27\xab\xfc\x24\xba\x88\x6e\xe9\xe0\xc0\x05\x03\x4b\x02\x50\x3c\xb8\x00\xd5\xd1\x83\x3d\x8b\xae\x96\xc9\x74\x95\xed\xc0\x96\xe7\x1b\x70\x3d\xeb\x0d\x89\x0b\xec\x63\xe6\xdc\xd9\xcf\x42\x9c\x09\x03\xab\x6d\xc9\xad\xf2\x89\xd7\x8b\x11\x9b\x3c\xbb\x8d\xf6\x4b\x56\x02\xf8\xae\xfa\x23\x22\xf5\x31\xbf\x33\x45\x2f\x29\xdf\xa8\x97\xeb\xf3\x47\x22\x1b\x1a\x5f\xfc\x8f\xa6\x8b\x22\xdc\x6a\x65\xff\xc7\x80\xcf\x00\x00\x00\xff\xff\x19\x3a\x19\x66\x4f\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapBindingYaml,
		"RoleBinding.rbac.authorization.k8s.io/kube-service-catalog/cluster-info-configmap-binding.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapBindingYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/kube-service-catalog/cluster-info-configmap-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xb1\x4e\xc4\x30\x0c\xc6\xf1\x3d\x4f\x91\x17\x48\x11\x1b\xca\x06\x0b\xfb\x21\xb1\xbb\xae\xaf\x98\xa6\x76\x64\x3b\x37\xf0\xf4\x08\xdd\x09\x24\x86\xea\xf6\xef\x6f\xff\xa0\xf3\x3b\x99\xb3\x4a\xcd\x36\x03\x4e\x30\xe2\x43\x8d\xbf\x20\x58\x65\xda\x9e\x7c\x62\x7d\xb8\x3c\xa6\x8d\x65\xa9\xf9\xa4\x8d\x5e\x58\x16\x96\x35\xed\x14\xb0\x40\x40\x4d\x39\x0b\xec\x54\x33\xaa\x9c\x79\xdd\xa1\x17\x40\x24\x77\xb5\x32\xdf\xc6\xd7\x89\x77\x40\xaa\x79\x1b\x33\x15\x27\xbb\x30\x52\x41\x08\x68\xba\x26\xd3\x46\x27\x3a\xff\x5c\x83\xce\xaf\xa6\xa3\x1f\x90\x52\xce\x7f\xa2\x03\x40\xf2\x31\x7f\x12\x86\xd7\x54\x6e\xc5\xdb\xf5\xf1\x33\xa2\x0e\x89\xdf\xf6\x9f\xa7\xa0\x4a\x98\xb6\x46\x76\x07\xfe\x3b\x00\x00\xff\xff\x63\x83\xf8\xf8\x47\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorBindingYaml,
		"RoleBinding.rbac.authorization.k8s.io/kube-service-catalog/configmap-accessor-binding.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorBindingYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/kube-service-catalog/configmap-accessor-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xc1\x4a\xc4\x40\x0c\xc6\xf1\xfb\x3c\xc5\xbc\xc0\x54\xbc\xc9\xdc\xf4\xe2\x7d\x05\xef\xe9\xf4\x73\x8d\x6d\x27\x43\x92\x29\xea\xd3\x4b\xdd\xc5\x45\x10\x61\xaf\x21\xf9\xf1\x0f\x35\x7e\x86\x1a\x4b\xcd\x51\x47\x2a\x03\x75\x7f\x15\xe5\x4f\x72\x96\x3a\xcc\x77\x36\xb0\xdc\x6c\xb7\x61\xe6\x3a\xe5\x78\x90\x05\x0f\x5c\x27\xae\xc7\xb0\xc2\x69\x22\xa7\x1c\x62\xac\xb4\x22\x47\xbc\x3b\xea\x6e\x25\x6a\x6c\xd0\x0d\x9a\x76\x0f\xd5\xb9\x7c\x83\x49\x41\x13\x34\x8d\x67\xe3\x74\x69\x8d\x0a\x72\x9c\xfb\x88\x64\x1f\xe6\x58\x83\xca\x82\x03\x5e\x76\x9b\x1a\x3f\xaa\xf4\xf6\x4f\x60\x88\xf1\xd2\x77\x7d\x4e\xb0\x3e\xbe\xa1\xb8\xe5\x90\xce\xd0\x13\x74\xe3\x82\xfb\x52\xa4\x57\xff\x21\xed\x34\x4e\x85\x9c\x16\x39\x5e\xe0\xbf\x3e\xf9\xbd\x1b\xbe\x02\x00\x00\xff\xff\x4f\xf0\x81\x8b\x6b\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderBindingYaml,
		"RoleBinding.rbac.authorization.k8s.io/kube-system/extension-apiserver-authentication-reader-binding.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderBindingYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/kube-system/extension-apiserver-authentication-reader-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderOpenshiftTemplateServiceBrokerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xb1\x4e\xc4\x30\x0c\xc6\xf1\x3d\x4f\x91\x17\x48\x11\x1b\xca\x06\x0b\xfb\x21\xb1\xbb\xe9\x77\x9c\x69\x6b\x47\x8e\x73\x02\x9e\x1e\x15\x4e\x45\x2c\xa0\xdb\xad\x9f\xff\x1f\x55\x7e\x86\x35\x56\xc9\xd1\x46\x2a\x03\x75\x3f\xa9\xf1\x07\x39\xab\x0c\xf3\x5d\x1b\x58\x6f\xce\xb7\x61\x66\x99\x72\x3c\xe8\x82\x07\x96\x89\xe5\x25\xac\x70\x9a\xc8\x29\x87\x18\x85\x56\xe4\x88\x37\x87\x6c\x56\xa2\xca\x0d\x76\x86\xa5\xcd\x83\x38\x97\x2f\x30\x19\x68\x82\x25\xad\x90\x76\xe2\xa3\x27\xc7\x5a\x17\x72\xa4\xed\x9e\x0b\xd2\x68\x3a\xc3\x2e\x66\xab\x54\x90\xe3\xdc\x47\xa4\xf6\xde\x1c\x6b\x30\x5d\x70\xc0\x71\xfb\x4a\x95\x1f\x4d\x7b\xfd\x23\x3d\xc4\xf8\x53\x7e\x7d\x68\x68\x7d\x7c\x45\xf1\x96\x43\xba\x40\x4f\xdf\x9d\xf7\xa5\x68\x17\xdf\xc9\x1d\xfa\x5d\xfe\xff\xd0\xcf\x00\x00\x00\xff\xff\xee\x8e\x57\x77\x82\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderOpenshiftTemplateServiceBrokerYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderOpenshiftTemplateServiceBrokerYaml,
		"RoleBinding.rbac.authorization.k8s.io/kube-system/extension-apiserver-authentication-reader-openshift-template-service-broker.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderOpenshiftTemplateServiceBrokerYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderOpenshiftTemplateServiceBrokerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/kube-system/extension-apiserver-authentication-reader-openshift-template-service-broker.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\xc1\x4a\x04\x31\x0c\x06\xe0\x7b\x9f\x22\xec\xbd\x2b\xde\xa4\x37\xbd\x78\x5f\xc1\x7b\xa6\xcd\x8e\x71\x3b\x49\x49\xd3\x05\x7d\x7a\xd9\xd9\x41\x11\x44\xd0\x63\xa1\xf9\x92\xff\xc7\xc6\xcf\x64\x9d\x55\x12\xd8\x84\x79\x8f\xc3\x5f\xd4\xf8\x1d\x9d\x55\xf6\xa7\xbb\xbe\x67\xbd\x39\xdf\x86\x13\x4b\x49\x70\xd0\x4a\x0f\x2c\x85\x65\x0e\x0b\x39\x16\x74\x4c\x01\x00\x45\xd4\xd7\x91\x7e\x79\xc2\x8f\xd6\x98\xc8\x84\x9c\x56\x12\x87\xeb\x68\x05\x9d\x12\xec\xdc\x06\xed\x02\x40\xc5\x89\xea\x26\x7c\xff\x3e\xa9\x7a\x77\xc3\xd6\x58\xe6\xeb\xa9\xb1\xd0\x11\x47\xf5\x1e\x00\x04\x17\x4a\xd0\xdf\xba\xd3\x92\x52\x25\x2c\x64\xb1\x6a\x3e\xb1\xcc\xf1\x22\xc5\xac\xe2\xa6\xb5\x92\xc5\x05\x05\x67\xb2\x6d\xac\x37\xcc\x94\xd6\x75\xf1\x0a\x04\xd3\x4a\x07\x3a\xae\xc1\x1a\x3f\x9a\x8e\xf6\x4b\x3b\x01\xe0\xab\x9c\xff\xde\xd2\xc7\xf4\x4a\xd9\x7b\x0a\x71\xd3\x9e\xc8\xce\x9c\xe9\x3e\x67\x1d\xe2\x9f\xee\x9f\xc3\x7c\x04\x00\x00\xff\xff\x01\xd0\x29\x09\xe2\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYaml,
		"RoleBinding.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-controller-manager.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-controller-manager.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x41\x4b\x34\x31\x0c\x86\xef\xfd\x15\x61\xef\x33\x1f\xdf\x4d\x7a\xd3\x8b\xf7\x15\xbc\x67\xda\xec\x6c\x9c\x4e\x52\x9a\x74\x41\x7f\xbd\xec\xec\xa0\x08\x22\x7a\x2c\x7d\xdf\x87\x27\x2f\x56\x7e\xa6\x66\xac\x12\xa1\x4d\x98\x46\xec\x7e\xd6\xc6\x6f\xe8\xac\x32\x2e\x77\x36\xb2\xfe\xbb\xfc\x0f\x0b\x4b\x8e\x70\xd4\x42\x0f\x2c\x99\x65\x0e\x2b\x39\x66\x74\x8c\x01\x00\x45\xd4\xb7\x8a\x5d\x9f\xf0\x2d\xab\x4f\xd4\x84\x9c\x36\x24\x76\xd7\x5e\x33\x3a\x45\x38\x78\xeb\x74\x08\x00\x05\x27\x2a\x3b\xe1\x6b\x7c\x52\x75\xf3\x86\xb5\xb2\xcc\x37\xd5\x21\xd3\x09\x7b\x71\x0b\x00\x82\x2b\x45\xb0\x57\x73\x5a\x63\x2c\x84\x99\xda\x50\x34\x2d\x2c\xf3\x70\x25\x0d\x96\xce\x94\x7b\xa1\xb6\xa7\xad\x62\xa2\x08\xb7\xbf\xad\x17\x9a\x16\x3a\xd2\x69\xbb\xa7\xf2\x63\xd3\x5e\x7f\x18\x25\x00\x7c\x6e\xf2\x47\x05\xeb\xd3\x0b\x25\xb7\x18\x86\x1d\xf2\x44\xed\xc2\x89\xee\x53\xd2\x2e\xfe\x81\xfb\xad\xfa\x7b\x00\x00\x00\xff\xff\xc9\x90\x0f\x58\xc7\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYaml,
		"RoleBinding.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-scheduler.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-scheduler.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x31\x4b\x04\x41\x0c\x85\xfb\xf9\x15\xe1\xfa\x3d\xb1\x93\xe9\xb4\xb1\x3f\xc1\x3e\x3b\x9b\x5b\xe3\xcd\x26\x43\x92\x39\xd0\x5f\x2f\xee\x2d\x27\x82\x88\x96\x81\xf7\xbe\xf7\xf2\xb0\xf1\x33\x99\xb3\x4a\x06\x1b\xb1\xec\xb1\xc7\x8b\x1a\xbf\x63\xb0\xca\xfe\x74\xe7\x7b\xd6\x9b\xf3\x6d\x3a\xb1\x4c\x19\x0e\x5a\xe9\x81\x65\x62\x99\xd3\x42\x81\x13\x06\xe6\x04\x80\x22\x1a\xab\xc5\x3f\x4f\xf8\x91\xd5\x47\x32\xa1\xa0\x15\x89\x3d\xb4\xb7\x09\x83\x32\xec\xc2\x3a\xed\x12\x40\xc5\x91\xea\x46\xf8\x2e\x1f\x55\xc3\xc3\xb0\x35\x96\xf9\x52\x75\x98\xe8\x88\xbd\x86\x27\x00\xc1\x85\x32\xf8\x9b\x07\x2d\xb9\xa8\x84\x69\xad\x64\xf9\x6a\x1b\x9c\x67\x21\xdb\xa4\xde\xb0\x50\x5e\x23\x86\x8b\x29\x99\x56\x3a\xd0\x71\x7d\xa6\xf1\xa3\x69\x6f\xbf\x2c\x92\x00\xbe\x06\xf9\x4f\xbe\xf7\xf1\x95\x4a\x78\x4e\xc3\x46\x78\x22\x3b\x73\xa1\xfb\x52\xb4\x4b\x5c\x59\x7f\x6f\xfe\x11\x00\x00\xff\xff\x79\x3b\x81\x84\xc3\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYaml,
		"RoleBinding.rbac.authorization.k8s.io/kube-system/system-controller-bootstrap-signer.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/kube-system/system-controller-bootstrap-signer.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x4a\x34\x41\x0c\x84\xef\xfd\x14\x61\xef\x33\x3f\xff\x4d\xfa\xa6\x17\xef\x2b\x78\x4f\x77\x67\xd7\xb8\x3d\x49\x93\x4e\x0f\xe8\xd3\x8b\xb3\x83\x22\x88\xec\x31\x50\xf5\x55\xa5\xb0\xf1\x33\x59\x67\x95\x08\x96\x30\xcf\x38\xfc\x45\x8d\xdf\xd1\x59\x65\xbe\xdc\xf5\x99\xf5\xdf\xfa\x3f\x5c\x58\x4a\x84\xa3\x56\x7a\x60\x29\x2c\xe7\xb0\x90\x63\x41\xc7\x18\x00\x50\x44\x7d\xb3\xf4\xcf\x13\x7e\x65\x8d\x44\x26\xe4\xb4\x21\x71\xb8\x8e\x56\xd0\x29\xc2\xc1\x6d\xd0\x21\x00\x54\x4c\x54\x77\xc2\x4f\x79\x52\xf5\xee\x86\xad\xb1\x9c\xaf\x55\xa7\x42\x27\x1c\xd5\x7b\x00\x10\x5c\x28\x42\x7f\xeb\x4e\x4b\xcc\x2a\x6e\x5a\x2b\x59\xcc\x55\x47\x99\x9a\xe9\xca\x85\x6c\x17\xf6\x86\x99\xe2\x16\x30\x5d\x2d\xc1\xb4\xd2\x91\x4e\xdb\x2b\x8d\x1f\x4d\x47\xfb\x63\x8f\x00\xf0\x3d\xc7\xed\xe9\x7d\xa4\x57\xca\xde\x63\x98\x76\xff\x13\xd9\xca\x99\xee\x73\xd6\x21\xfe\x45\xba\xb5\xf5\x47\x00\x00\x00\xff\xff\xc2\xef\x75\x7a\xbd\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYaml,
		"RoleBinding.rbac.authorization.k8s.io/kube-system/system-controller-cloud-provider.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/kube-system/system-controller-cloud-provider.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x4a\x34\x31\x10\x84\xef\x79\x8a\x66\xef\x33\x3f\xff\x4d\x72\xd3\x8b\xf7\x15\xbc\xf7\x64\x6a\xd7\x38\x99\xee\xd0\xe9\x2c\xe8\xd3\x8b\xb3\x83\x22\x88\xec\x31\x50\xdf\x97\xea\xe2\x9a\x9f\x61\x2d\xab\x44\xb2\x89\xd3\xc8\xdd\x5f\xd4\xf2\x3b\x7b\x56\x19\x97\xbb\x36\x66\xfd\x77\xf9\x1f\x96\x2c\x73\xa4\xa3\x16\x3c\x64\x99\xb3\x9c\xc3\x0a\xe7\x99\x9d\x63\x20\x62\x11\xf5\x0d\x69\x9f\x4f\xfa\xd5\xd5\x27\x98\xc0\xb1\x29\xb9\xbb\xf6\x3a\xb3\x23\xd2\xc1\xad\xe3\x10\x88\x0a\x4f\x28\xbb\xe1\x67\x7c\x52\xf5\xe6\xc6\xb5\x66\x39\x5f\xab\x0e\x33\x4e\xdc\x8b\xb7\x40\x24\xbc\x22\x52\x7b\x6b\x8e\x35\x26\x15\x37\x2d\x05\x16\x5d\x17\xc8\x90\x0a\x58\x60\x7b\xae\x55\x4e\x88\x9b\x7f\xb8\x12\xc1\xb4\xe0\x88\xd3\x76\x49\xcd\x8f\xa6\xbd\xfe\x31\x47\x20\xfa\x5e\xe3\xe6\xcf\x5b\x9f\x5e\x91\xbc\xc5\x30\xec\xf8\x13\xec\x92\x13\xee\x53\xd2\x2e\xfe\x25\xba\xb1\xf3\x47\x00\x00\x00\xff\xff\x7c\xdb\x26\xe9\xba\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYaml,
		"RoleBinding.rbac.authorization.k8s.io/kube-system/system-controller-token-cleaner.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/kube-system/system-controller-token-cleaner.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoOpenshiftSharedResourceViewersYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xb1\x4e\x2b\x41\x0c\x45\xfb\xf9\x0a\x2b\x7d\xf2\xf4\x3a\x34\x25\x0d\x7d\x0a\x7a\xef\xce\x0d\x6b\x92\xb5\x47\xb6\x27\x08\xbe\x1e\x65\x85\x94\x06\x81\x28\x2d\xfb\x1e\xdf\xc3\x5d\x9e\xe1\x21\xa6\x95\x7c\xe2\xf9\xc0\x23\x17\x73\xf9\xe0\x14\xd3\xc3\xf9\x21\x0e\x62\xff\xae\xff\xcb\x59\xb4\x55\x3a\xda\x05\x8f\xa2\x4d\xf4\xa5\xac\x48\x6e\x9c\x5c\x0b\x11\xab\x5a\x6e\x91\xb8\x8d\xf4\x2d\x6b\x4c\x70\x45\x62\x43\xf2\x48\x1b\xbd\x71\xa2\xd2\x2e\x7d\x60\x57\x88\x94\x57\x54\x8a\x85\x1d\x6d\xef\x08\x1b\x3e\x63\x7f\x15\xbc\xc1\xe3\x6b\x1f\x9d\x67\x54\xb2\x0e\x8d\x45\x4e\x59\xdc\x2e\x38\xe2\xb4\xd5\xe8\xf2\xe4\x36\xfa\x0f\x2e\x85\xe8\xae\xf2\xcb\xcb\x12\x63\x7a\xc5\x9c\x51\xcb\xfe\x4f\xec\xed\xf0\x0e\x7f\x8f\xc4\x5a\x6f\x09\x68\xca\xcc\x89\x56\x3e\x03\x00\x00\xff\xff\xb7\x70\x51\x80\x79\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoOpenshiftSharedResourceViewersYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoOpenshiftSharedResourceViewersYaml,
		"RoleBinding.rbac.authorization.k8s.io/openshift/shared-resource-viewers.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoOpenshiftSharedResourceViewersYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoOpenshiftSharedResourceViewersYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/openshift/shared-resource-viewers.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcd\xb1\x6e\x84\x30\x0c\xc6\xf1\x3d\x4f\xe1\x17\x80\xaa\x5b\x95\xad\x5d\xba\x53\xa9\xbb\x49\xcc\xe1\x03\xec\xc8\x71\x18\xee\xe9\x4f\x48\x48\x37\x71\xeb\xa7\xef\xaf\x1f\x16\xfe\x27\xab\xac\x12\xc1\x46\x4c\x3d\x36\x9f\xd5\xf8\x81\xce\x2a\xfd\xf2\x55\x7b\xd6\x8f\xfd\x33\x2c\x2c\x39\xc2\xa0\x2b\xfd\xb0\x64\x96\x5b\xd8\xc8\x31\xa3\x63\x0c\x00\x82\x1b\x45\x20\x4f\xb9\xd3\x42\x86\xae\x76\xae\xb5\x60\xa2\x08\x5a\x48\xea\xcc\x93\x77\xc7\x29\x98\xae\x34\xd0\x74\xa4\x58\xf8\xd7\xb4\x95\x37\x7e\x00\x78\xf1\x17\x5a\x6d\xe3\x9d\x92\xd7\x18\xba\xf3\xfc\x47\xb6\x73\xa2\xef\x94\xb4\x89\x5f\x64\xcf\x00\x00\x00\xff\xff\x61\x0d\x58\x99\x00\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYaml,
		"RoleBinding.rbac.authorization.k8s.io/openshift-etcd/etcd-operator.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/openshift-etcd/etcd-operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xce\x31\x4e\x03\x41\x0c\x85\xe1\x7e\x4e\xe1\x0b\xec\x22\x3a\x34\x1d\x34\xf4\x41\xa2\xf7\xce\xbe\x10\xb3\x59\x7b\x64\x7b\x52\xe4\xf4\x08\x29\x82\x2e\x4d\xea\x5f\xf6\xfb\xb8\xcb\x27\x3c\xc4\xb4\x92\x2f\xdc\x66\x1e\x79\x32\x97\x2b\xa7\x98\xce\xdb\x4b\xcc\x62\x4f\x97\xe7\xb2\x89\xae\x95\x0e\x76\xc6\x9b\xe8\x2a\xfa\x55\x76\x24\xaf\x9c\x5c\x0b\x91\xf2\x8e\x4a\xdb\x58\x30\x45\x72\x62\xda\x91\x2e\x2d\x6e\x29\x3a\x37\x54\xb2\x0e\x8d\x93\x1c\xf3\x2f\xbb\x9d\x71\xc0\xf1\xf7\x05\x77\x79\x77\x1b\xfd\x8e\xa3\x10\xfd\x33\xee\xac\x4e\x8e\x90\x2b\xbc\xc4\x58\xbe\xd1\x32\x6a\x99\x6e\x97\x1f\xf0\x8b\x34\xbc\xb6\x66\x43\xf3\x01\xf9\x4f\x00\x00\x00\xff\xff\x15\x73\x38\x62\x39\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsYaml,
		"RoleBinding.rbac.authorization.k8s.io/openshift-metrics/kube-state-metrics.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/openshift-metrics/kube-state-metrics.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoOpenshiftNodeSyncNodeConfigReaderBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcf\xc1\x4e\x03\x41\x08\x80\xe1\xfb\x3c\x05\x2f\x30\x6b\xbc\x99\xb9\xe9\xc5\x7b\x4d\xbc\xb3\x0c\xdb\x62\xbb\x30\x01\xb6\x89\x3e\xbd\x51\x9b\xa8\x69\xd2\x3b\x3f\x7c\xe0\x90\x57\xf6\x10\xd3\x06\x3e\x23\x4d\xb8\xe5\xc1\x5c\x3e\x30\xc5\x74\x3a\x3e\xc4\x24\x76\x77\xbe\x2f\x47\xd1\xde\x60\x67\x27\x7e\x12\xed\xa2\xfb\xb2\x72\x62\xc7\xc4\x56\x00\x14\x57\x6e\x10\xef\x4a\x55\xad\x73\x25\xd3\x45\xf6\xd5\x19\x3b\x7b\x9d\x2f\xc5\xcf\x5c\x0c\x24\x6e\x60\x83\x35\x0e\xb2\xe4\x77\x51\xdc\x4e\xbc\xe3\xe5\x6b\x19\x0e\x79\x76\xdb\xc6\x0d\x51\x01\xf8\x05\xfd\xb9\x1f\xc9\x6b\xbb\x16\x94\xd8\xe6\x37\xa6\x8c\x56\xea\x25\x7c\x61\x3f\x0b\xf1\x23\x91\x6d\x9a\xff\x5e\xb8\xe9\xfc\x0c\x00\x00\xff\xff\xe1\xce\x2c\xb3\x31\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoOpenshiftNodeSyncNodeConfigReaderBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoOpenshiftNodeSyncNodeConfigReaderBindingYaml,
		"RoleBinding.rbac.authorization.k8s.io/openshift-node/sync-node-config-reader-binding.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoOpenshiftNodeSyncNodeConfigReaderBindingYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoOpenshiftNodeSyncNodeConfigReaderBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/openshift-node/sync-node-config-reader-binding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\x31\x4f\x03\x31\x0c\x46\xf7\xfc\x0a\xab\xfb\x1d\x62\x43\x19\x59\xd8\x3b\xb0\xfb\x2e\xdf\xb5\xa6\x3d\x3b\x8a\x1d\x24\xf8\xf5\xa8\x11\x12\x4b\x85\x60\xb4\xf4\xfc\xec\xc7\x55\x5e\xd1\x5c\x4c\x33\xb5\x85\xd7\x99\x7b\x9c\xad\xc9\x27\x87\x98\xce\x97\x27\x9f\xc5\x1e\xde\x1f\xd3\x45\xb4\x64\x3a\xda\x15\xcf\xa2\x45\xf4\x94\x76\x04\x17\x0e\xce\x89\x88\x55\x2d\xc6\x8a\xdf\x46\xba\xeb\xea\x0b\x9a\x22\x30\x94\xdc\xc3\x7a\x2d\x1c\xc8\x74\x88\xd6\x71\x48\x44\xca\x3b\x32\xf9\x87\x07\xf6\xac\x56\x30\xad\xa6\x9b\x9c\xa6\x06\x2e\x68\xdf\x84\x57\x5e\x91\xc9\x2a\xd4\xcf\xb2\xc5\x74\x23\x53\xb3\x2b\x8e\xd8\xc6\x37\x55\x5e\x9a\xf5\xfa\x4b\x52\x22\xfa\x29\xfa\xc3\x65\xef\xcb\x1b\xd6\xf0\x9c\xa6\x7f\xe9\x07\x78\xcf\xef\xe9\x2b\x00\x00\xff\xff\xd0\xc7\x6f\x0e\x7b\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYaml,
		"RoleBinding.rbac.authorization.k8s.io/openshift-node/system-node-config-reader.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/openshift-node/system-node-config-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xb1\x4e\x03\x31\x0c\x86\xf7\x3c\x45\x5e\x20\x87\xd8\x50\x36\x58\xd8\x8b\xc4\xee\xf3\xb9\xad\xb9\x9c\x1d\x39\x4e\x07\x9e\x1e\x55\x4d\x39\x89\x01\xa9\xfb\xff\x7d\xfe\x0c\x95\x3f\xc9\x1a\xab\xe4\x68\x33\xe0\x04\xdd\xcf\x6a\xfc\x0d\xce\x2a\xd3\xfa\xd2\x26\xd6\xa7\xcb\x73\x58\x59\x96\x1c\x0f\x5a\xe8\x8d\x65\x61\x39\x85\x8d\x1c\x16\x70\xc8\x21\x46\x81\x8d\x72\x74\xda\x6a\x01\xa7\x46\x76\x61\xa4\xd9\x74\x25\x4b\x57\x63\x32\x82\x85\x6c\x2c\x5b\x05\xa4\x1c\xb5\x92\xb4\x33\x1f\x3d\xdd\xc1\x34\xc8\x74\x43\x83\x69\xa1\x03\x1d\xaf\x17\xa0\xf2\xbb\x69\xaf\xff\x64\x86\x18\xf7\xca\x07\xa2\x5a\x9f\xbf\x08\xbd\xe5\x90\x86\xe0\xe3\xb6\x7d\x45\xd4\x2e\xfe\xab\xba\xd7\x21\x38\x14\x3d\x25\x54\x71\xd3\x52\xfe\x3e\xb6\xf6\x79\x7f\x65\x8c\xc3\x4f\x00\x00\x00\xff\xff\xbb\x0f\x66\x26\x6a\x01\x00\x00")

func rolebindingRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYaml,
		"RoleBinding.rbac.authorization.k8s.io/openshift-template-service-broker/templateservicebroker-auth-reader.yaml",
	)
}

func rolebindingRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYaml() (*asset, error) {
	bytes, err := rolebindingRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "RoleBinding.rbac.authorization.k8s.io/openshift-template-service-broker/templateservicebroker-auth-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routeRouteOpenshiftIoDefaultDockerRegistryYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x31\x6b\x03\x31\x0c\x85\x77\xff\x8a\x47\x96\x80\xa1\xd7\x64\xf5\x56\xe8\xd1\x2d\x94\xb4\x74\x17\xb6\x72\x27\x72\x67\x1d\xb6\x2e\x21\xff\xbe\x38\xc9\xd2\xa1\xa3\xde\x7b\x7a\xfa\x44\x8b\xfc\x70\xa9\xa2\x39\xa0\xe8\x6a\xdc\xe9\xc2\xb9\x8e\x72\xb2\x4e\xf4\xf5\xb2\x77\x67\xc9\x29\xe0\xd8\x3c\x37\xb3\x51\x22\xa3\xe0\x00\xca\x59\x8d\x4c\x34\xd7\x36\x02\x7f\x16\x47\xad\xd6\x0d\x9c\xb9\x90\x71\x0a\xd8\x58\x59\x79\xe3\x80\x4c\x33\x07\x24\x8d\x67\x2e\x2f\x85\x07\xa9\x56\x6e\x4f\xbd\x2e\x14\x9b\xc9\x27\x5a\x27\x73\x75\xe1\xd8\xaa\x5b\x57\xc0\xd6\x7b\x8f\x8f\xfe\xd0\x1f\xdf\xbe\xfb\x77\x78\xef\xb7\x0e\xb0\xe9\x79\xdd\xb8\xcc\x92\xef\x3c\x01\x0b\xd5\x6a\x63\xd1\x75\x18\x5b\x46\x1f\x91\xc7\x27\x5f\x5c\x2e\x12\xf9\xae\xfc\x07\x03\x5c\x59\x86\xd1\x02\xf6\xbb\x9d\x03\xae\x32\xa5\x48\x25\x7d\xea\x24\xf1\x16\x70\xd0\xcc\xee\x37\x00\x00\xff\xff\xaf\xfb\x36\xa1\x3b\x01\x00\x00")

func routeRouteOpenshiftIoDefaultDockerRegistryYamlBytes() ([]byte, error) {
	return bindataRead(
		_routeRouteOpenshiftIoDefaultDockerRegistryYaml,
		"Route.route.openshift.io/default/docker-registry.yaml",
	)
}

func routeRouteOpenshiftIoDefaultDockerRegistryYaml() (*asset, error) {
	bytes, err := routeRouteOpenshiftIoDefaultDockerRegistryYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Route.route.openshift.io/default/docker-registry.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routeRouteOpenshiftIoDefaultRegistryConsoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xb1\x6a\x33\x41\x0c\x84\xfb\x7d\x8a\xc1\x8d\x61\xe1\xf7\x6f\xb7\xdb\x05\x72\xa4\x33\xc1\x09\xe9\xc5\xae\x7c\x27\x72\x27\x1d\xbb\x3a\x1b\xbf\x7d\x38\xdb\x4d\x8a\x94\xd2\x8c\x46\xdf\xd0\x2c\x5f\x5c\x9b\x98\x26\x54\x5b\x9c\x77\x36\xb3\xb6\x41\xce\xbe\x13\xfb\x7f\x39\x84\x6f\xd1\x92\x70\x5a\xb5\x30\xb1\x53\x21\xa7\x14\x00\x52\x35\x27\x17\xd3\xb6\x8e\xc0\xaf\xc3\xc1\x9a\xef\x7a\x56\xae\xe4\x5c\x12\x36\x5e\x17\xde\x04\x40\x69\xe2\x84\xca\xbd\x34\xaf\xb7\x7f\xd9\xb4\xd9\xc8\x4f\xa1\xcd\x94\x39\xa1\xf0\x99\x96\xd1\x43\x9b\x39\xaf\xd9\x6b\x58\xc2\x36\xc6\x88\xb7\xee\xd8\x9d\x5e\x3e\xbb\x57\xc4\x18\xb7\x01\xf0\xf1\xf9\xde\xb9\x4e\xa2\x77\xa0\x84\x99\x5a\xf3\xa1\xda\xd2\x0f\xab\xc7\x1e\x96\x47\x95\x0f\xae\x17\xc9\x7c\xdf\xfc\x49\x03\x5c\x59\xfa\xc1\x13\x0e\xfb\x7d\x00\xae\x32\x96\x4c\xb5\xbc\xdb\x28\xf9\x96\x70\x34\xe5\xf0\x13\x00\x00\xff\xff\x3e\xdd\xb7\x51\x3d\x01\x00\x00")

func routeRouteOpenshiftIoDefaultRegistryConsoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_routeRouteOpenshiftIoDefaultRegistryConsoleYaml,
		"Route.route.openshift.io/default/registry-console.yaml",
	)
}

func routeRouteOpenshiftIoDefaultRegistryConsoleYaml() (*asset, error) {
	bytes, err := routeRouteOpenshiftIoDefaultRegistryConsoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Route.route.openshift.io/default/registry-console.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routeRouteOpenshiftIoKubeServiceCatalogApiserverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x4f\x6b\x32\x41\x0c\xc6\xef\xf3\x29\x1e\xbc\x08\x0b\xfa\xea\x75\x6e\x2f\x54\x7a\x13\xb1\xa5\xf7\x74\x36\xdd\x0d\xae\x93\x21\x93\x55\xfa\xed\xcb\xb8\x5e\x4a\x8f\xcf\x9f\x24\xbf\x50\x91\x0f\xb6\x2a\x9a\x23\x4c\x67\xe7\xad\x16\xce\x75\x94\x2f\xdf\x8a\xfe\xbb\xed\xc3\x45\x72\x1f\x71\x6e\x59\xb8\xb2\x53\x4f\x4e\x31\x00\x94\xb3\x3a\xb9\x68\xae\x4d\x02\xbf\x06\x47\xad\xbe\x1d\x38\xb3\x91\x73\x1f\xb1\x72\x9b\x79\x15\x80\x4c\x57\x8e\xa0\x22\x95\xed\xc6\xf6\x74\x6a\xa1\xc4\x11\x97\xf9\x93\x37\x2d\x90\xc4\x9b\x44\x4e\x93\x0e\xa1\x16\x4e\xed\x42\x5b\x19\xb1\xee\xba\x0e\xaf\x87\xe3\xe1\xfc\xff\xfd\xf0\x82\xae\xeb\xd6\x01\x28\x6a\xbe\x50\x38\xd9\xc0\x7e\x6a\x1a\x95\xd3\x6c\x1c\x00\x9f\x9e\x8c\xce\x76\x95\xfc\xa0\x8e\x28\x54\xab\x8f\xa6\xf3\x30\xb6\x8e\x2e\x95\xe5\xdf\xb7\x05\xe2\xe1\xfc\x45\x06\xee\x2c\xc3\xe8\x11\xfb\xdd\x2e\x00\x77\x99\xfa\x44\xd6\x9f\x74\x92\xf4\x1d\x71\xd4\xcc\xe1\x27\x00\x00\xff\xff\x7a\xff\xaa\xc0\x5b\x01\x00\x00")

func routeRouteOpenshiftIoKubeServiceCatalogApiserverYamlBytes() ([]byte, error) {
	return bindataRead(
		_routeRouteOpenshiftIoKubeServiceCatalogApiserverYaml,
		"Route.route.openshift.io/kube-service-catalog/apiserver.yaml",
	)
}

func routeRouteOpenshiftIoKubeServiceCatalogApiserverYaml() (*asset, error) {
	bytes, err := routeRouteOpenshiftIoKubeServiceCatalogApiserverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Route.route.openshift.io/kube-service-catalog/apiserver.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routeRouteOpenshiftIoOpenshiftAnsibleServiceBrokerAsb1338Yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\xc1\x6a\xeb\x40\x0c\xbc\xef\x57\x88\x5c\x02\x06\xe7\x25\xe4\xf2\xd8\x5b\xa1\xa1\xb7\x10\xd2\xd2\xbb\x6c\xab\x89\x88\x2d\x2d\x5a\x25\x21\x7f\x5f\xd6\x76\x5b\x7a\xea\x6d\x67\x76\x46\x33\x0c\x26\x7e\x27\xcb\xac\x12\xc1\xf4\xea\xb4\xd2\x44\x92\xcf\xfc\xe1\x2b\xd6\x7f\xb7\x4d\xb8\xb0\x74\x11\x8e\xe5\x2f\x0c\xe4\xd8\xa1\x63\x0c\x00\x28\xa2\x8e\xce\x2a\xb9\x40\x80\x5f\xc6\xb3\x66\x5f\x9d\x48\xc8\xd0\xa9\x8b\xb0\x70\xbb\xd2\x22\x00\xf4\xd8\x50\x3f\x3b\x30\xa5\xf8\x63\xab\x51\x32\x37\x3d\xd5\x99\xec\xc6\x2d\xd5\x8d\xe9\x85\x6c\x54\xce\x54\x04\xcc\x4d\x00\x10\x1c\xa6\x77\xbd\xd9\x6e\xff\xcf\x44\x4e\x58\x14\x7f\xde\xcb\x89\xda\x92\x5f\x2a\x46\x58\x56\x55\x05\x2f\xbb\xfd\xee\xf8\xf4\xb6\x7b\x86\xaa\xaa\x96\x01\x20\xa9\xf9\xd4\xd1\xd1\x4e\xe4\x87\x82\x61\x0e\xf3\xaf\xfe\x4e\x36\xb0\x8c\x1b\x44\x30\x22\x69\xed\x91\xbc\x28\x74\x12\x4c\xdb\xbd\x4e\xf9\x23\xf3\xdd\x7c\x44\x77\xe2\xd3\xb9\x1c\x5e\xaf\x03\xc0\x9d\xfb\xae\x45\xeb\x0e\xda\x73\xfb\x88\xb0\x57\xa1\xf0\x19\x00\x00\xff\xff\x5d\xe8\xbe\x1a\xa1\x01\x00\x00")

func routeRouteOpenshiftIoOpenshiftAnsibleServiceBrokerAsb1338YamlBytes() ([]byte, error) {
	return bindataRead(
		_routeRouteOpenshiftIoOpenshiftAnsibleServiceBrokerAsb1338Yaml,
		"Route.route.openshift.io/openshift-ansible-service-broker/asb-1338.yaml",
	)
}

func routeRouteOpenshiftIoOpenshiftAnsibleServiceBrokerAsb1338Yaml() (*asset, error) {
	bytes, err := routeRouteOpenshiftIoOpenshiftAnsibleServiceBrokerAsb1338YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Route.route.openshift.io/openshift-ansible-service-broker/asb-1338.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routeRouteOpenshiftIoOpenshiftMetricsAlertmanagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x3d\x4b\x03\x41\x14\x45\xfb\xf9\x15\xb7\x0b\x0c\x18\x93\x76\x3a\xc1\xc5\x2e\x48\x14\xfb\xc7\xec\x35\xfb\x70\xe7\x83\x99\x67\xc2\xfe\x7b\x59\x57\xac\xd2\x9e\x77\xde\xe5\x48\xd5\x0f\xb6\xae\x25\x07\xb4\xf2\x6d\xdc\x97\xca\xdc\x27\xfd\xb4\xbd\x96\xc7\xeb\xd1\x7d\x69\x1e\x03\xce\xeb\xcd\x25\x9a\x8c\x62\x12\x1c\x90\x25\x31\x40\x66\x36\x4b\x92\xe5\xc2\xf6\x07\x7b\x95\xc8\x80\xff\x9d\x87\x44\x6b\x1a\xbb\xeb\x95\x71\xfd\x9c\x4a\xb7\x80\x9d\xf7\x1e\x2f\xc3\x69\x38\x3f\xbd\x0f\xcf\xf0\xde\xef\x1c\x60\x73\x5f\x15\xc0\xd8\x92\x66\xb1\xad\x8c\xcc\xb1\x2d\xd5\x56\xa3\x6c\xc2\xd6\xf5\xc6\x76\xd5\xc8\x5f\x72\xb7\x08\xb8\x51\x2f\x93\x05\x1c\x0f\x07\x07\xdc\x74\x1e\xa3\xb4\xf1\xb5\xcc\x1a\x97\x80\x53\xc9\x74\x3f\x01\x00\x00\xff\xff\x98\xae\x02\x56\x06\x01\x00\x00")

func routeRouteOpenshiftIoOpenshiftMetricsAlertmanagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_routeRouteOpenshiftIoOpenshiftMetricsAlertmanagerYaml,
		"Route.route.openshift.io/openshift-metrics/alertmanager.yaml",
	)
}

func routeRouteOpenshiftIoOpenshiftMetricsAlertmanagerYaml() (*asset, error) {
	bytes, err := routeRouteOpenshiftIoOpenshiftMetricsAlertmanagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Route.route.openshift.io/openshift-metrics/alertmanager.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routeRouteOpenshiftIoOpenshiftMetricsAlertsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xc1\x4a\x03\x41\x10\x44\xef\xf3\x15\x75\x0b\x0c\x18\x93\xeb\xdc\x04\x17\x6f\x41\xa2\x78\x6f\x66\x4b\xb7\x71\x77\x66\x98\x6e\x13\xf2\xf7\xb2\xae\x78\xf0\xd8\x5d\xaf\x8a\x27\x4d\xdf\xd8\x4d\x6b\x49\xe8\xf5\xcb\xb9\xaf\x8d\xc5\x26\x7d\xf7\xbd\xd6\xfb\xcb\x31\x7c\x6a\x19\x13\xce\x6b\x16\x16\xba\x8c\xe2\x92\x02\x50\x64\x61\x82\xcc\xec\x6e\xbf\xa7\x35\xc9\x4c\xf8\x5b\xb8\x5b\xe8\x5d\xb3\x05\x6b\xcc\x6b\x67\xaa\xe6\x09\xbb\x18\x23\x9e\x86\xd3\x70\x7e\x78\x1d\x1e\x11\x63\xdc\x05\xc0\x67\x5b\x11\xc0\xd9\x17\x2d\xe2\x9b\x13\x59\x72\xbf\x35\x5f\x89\xba\x01\x9b\xd1\x0b\xfb\x45\x33\x7f\x3e\xff\x5c\x80\x2b\xf5\x63\xf2\x84\xe3\xe1\x10\x80\xab\xce\x63\x96\x3e\x3e\xd7\x59\xf3\x2d\xe1\x54\x0b\xc3\x77\x00\x00\x00\xff\xff\xda\xd2\x87\x4d\xfa\x00\x00\x00")

func routeRouteOpenshiftIoOpenshiftMetricsAlertsYamlBytes() ([]byte, error) {
	return bindataRead(
		_routeRouteOpenshiftIoOpenshiftMetricsAlertsYaml,
		"Route.route.openshift.io/openshift-metrics/alerts.yaml",
	)
}

func routeRouteOpenshiftIoOpenshiftMetricsAlertsYaml() (*asset, error) {
	bytes, err := routeRouteOpenshiftIoOpenshiftMetricsAlertsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Route.route.openshift.io/openshift-metrics/alerts.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _routeRouteOpenshiftIoOpenshiftMetricsPrometheusYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4b\x03\x31\x10\x85\xef\xf9\x15\xef\x56\x08\x58\xdb\x6b\x6e\x82\x8b\xb7\x22\x55\xbc\x87\xec\xd3\x1d\xdc\x64\x42\x32\x6d\xd9\x7f\x2f\xeb\x8a\xa7\x5e\xbf\xf9\xe6\xf1\xc5\x2a\x1f\x6c\x5d\xb4\x04\x34\xbd\x18\xf7\x5a\x59\xfa\x24\x9f\xb6\x17\x7d\xbc\x1e\xdd\xb7\x94\x31\xe0\xbc\xde\x5c\xa6\xc5\x31\x5a\x0c\x0e\x28\x31\x33\xa0\x36\xcd\xb4\x89\x97\xfe\x87\x7a\x8d\x89\x01\xff\x2b\x0f\x99\xd6\x24\x75\xd7\x2b\xd3\xfa\x37\x69\xb7\x80\x9d\xf7\x1e\x2f\xc3\x69\x38\x3f\xbd\x0f\xcf\xf0\xde\xef\x1c\x60\x73\x5f\x15\xc0\xd8\xb2\x94\x68\x5b\x17\x59\x52\x5b\xaa\xad\x86\x6e\xc2\x56\xf5\xc6\x76\x95\xc4\x5f\x72\xa7\x07\xb8\x51\xbe\x26\x0b\x38\x1e\x0e\x0e\xb8\xc9\x3c\xa6\xd8\xc6\x57\x9d\x25\x2d\x01\x27\x2d\x74\x3f\x01\x00\x00\xff\xff\x84\x4b\xce\x6f\x02\x01\x00\x00")

func routeRouteOpenshiftIoOpenshiftMetricsPrometheusYamlBytes() ([]byte, error) {
	return bindataRead(
		_routeRouteOpenshiftIoOpenshiftMetricsPrometheusYaml,
		"Route.route.openshift.io/openshift-metrics/prometheus.yaml",
	)
}

func routeRouteOpenshiftIoOpenshiftMetricsPrometheusYaml() (*asset, error) {
	bytes, err := routeRouteOpenshiftIoOpenshiftMetricsPrometheusYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Route.route.openshift.io/openshift-metrics/prometheus.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretDefaultEtcOriginCloudproviderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcc\xb1\x0a\xc2\x40\x0c\x00\xd0\xfd\xbe\x22\x5b\x21\x50\xc1\x35\x9b\xd0\xe2\xe6\xa0\xe2\x1e\xee\xd2\x12\x6c\x73\x25\xcd\x75\xf0\xeb\x5d\xba\x3f\x1e\x6f\xfa\x11\xdf\xb5\x1a\xc1\x71\x4d\x5f\xb5\x42\xf0\x92\xec\x12\x69\x95\xe0\xc2\xc1\x94\x00\x8c\x57\x21\x90\xc8\x7d\x75\x9d\xd5\xfa\xbc\xd4\x56\x36\xaf\x87\x16\xf1\x13\xec\x1b\x67\x21\x28\x32\x71\x5b\x22\xed\xe1\x6a\xf3\x70\x0e\xfc\x6b\x2e\x97\x5c\x6d\x22\xe8\x10\x11\xee\xe3\x63\x7c\xde\xde\xe3\x00\x88\xd8\xa5\x7f\x00\x00\x00\xff\xff\x6c\x68\x5e\x6c\x8a\x00\x00\x00")

func secretDefaultEtcOriginCloudproviderYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretDefaultEtcOriginCloudproviderYaml,
		"Secret/default/etc-origin-cloudprovider.yaml",
	)
}

func secretDefaultEtcOriginCloudproviderYaml() (*asset, error) {
	bytes, err := secretDefaultEtcOriginCloudproviderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/default/etc-origin-cloudprovider.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretDefaultRegistryCertificatesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\xb1\x0a\xc2\x40\x0c\x87\xf1\xfd\x9e\x22\x5b\x21\xa0\xe0\x9a\x4d\x68\x71\x73\x50\x71\x0f\xd7\x7f\x4b\xa8\x3d\x4b\x2e\x0a\x7d\x7b\x97\x0a\x0e\xce\xdf\xf7\xd3\xc5\xee\xf0\x6a\xcf\x22\xf4\x3e\xa4\xc9\x4a\x2f\x74\x45\x76\x44\x9a\x11\xda\x6b\xa8\x24\xa2\xa2\x33\x84\x1c\xa3\xd5\xf0\x75\x97\xe1\x61\x83\x65\x0d\xd4\xad\xd6\x45\x33\x84\x7a\x0c\xfa\x7a\x44\xaa\xe1\x56\xc6\x76\xe3\x5f\xb8\xcf\x1e\x42\x0d\x33\xd3\xa9\x3b\x77\x97\xe3\xad\x6b\x89\x99\x9b\xdf\x67\xc2\xfa\xff\xf9\x04\x00\x00\xff\xff\xe1\x6c\x2e\x8d\xad\x00\x00\x00")

func secretDefaultRegistryCertificatesYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretDefaultRegistryCertificatesYaml,
		"Secret/default/registry-certificates.yaml",
	)
}

func secretDefaultRegistryCertificatesYaml() (*asset, error) {
	bytes, err := secretDefaultRegistryCertificatesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/default/registry-certificates.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretDefaultRegistryConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x31\x6f\xdb\x30\x10\x85\x77\xfd\x8a\xdb\x02\x08\x88\xa1\x14\xe8\xc2\xad\x40\x8c\x6e\x1d\xda\xa2\xfb\x89\x3c\x49\x44\x48\x1e\x7b\x3c\xda\x70\xd1\x1f\x5f\x58\x31\x2b\xc5\x43\xb2\x49\xef\x7d\x14\xdf\x3b\x1d\x66\xff\x8b\xa4\x78\x4e\x06\x4e\x4f\xdd\x8b\x4f\xce\xc0\x0f\xb2\x42\xda\x45\x52\x74\xa8\x68\x3a\x80\x84\x91\x0c\x08\xcd\xbe\xa8\x5c\x1e\x2d\xa7\xc9\xcf\x37\xbd\x64\xb4\x64\xc0\xd1\x84\x35\x68\x57\x54\x7c\x9a\x9f\x6f\x07\x5f\xc9\xc3\x25\x06\x03\x7f\x3b\x00\x00\xac\xba\x98\xf5\x09\x80\x33\xa5\xb2\xf8\x49\x9b\x00\x20\x84\x21\x9a\xcd\x59\x8d\x45\x35\x37\x04\x9d\x13\x03\xe6\xf3\x30\x0c\xab\x12\x78\x6e\x56\xa0\x13\x85\x6b\x92\xb1\xce\xab\x14\xbd\x73\x81\xce\x28\xd4\x90\x56\xa1\xbd\x3f\xde\xaa\xbd\xbd\xef\xca\x65\x2e\x5e\xf9\x63\xf2\xda\x42\x3d\xa7\xb2\x75\x00\x40\x6b\x29\x6b\xb1\x0b\x45\xfc\x64\x40\xa5\xd2\xce\xa5\x34\xb1\x58\xfa\x5d\x59\xd1\xc0\x84\xa1\xec\xdd\x5c\x43\xd0\x45\xb8\xce\xcb\x9b\x93\x45\x59\x70\xa6\xf7\xf3\xdc\x41\xf8\xa7\x6e\xdd\xd7\x58\x5c\x93\xbe\xd0\xc5\xc0\x43\xdf\xf7\xf0\xf5\xf8\xed\xf8\xfd\xcb\xcf\xe3\x33\xf4\x7d\xff\x70\xcf\xbd\x5e\xf0\x1e\x68\x39\x29\xfa\x44\xb2\x2d\xc7\xfd\x9f\xb4\x2c\x74\x38\xfb\xe4\xf8\x5c\x0e\x89\xda\xd8\x2c\xda\x65\x97\x6c\x0c\x3c\x3a\x2a\x56\x7c\x56\x16\x03\x3e\x45\x8a\xfc\xff\x6b\x8e\x02\xe9\x0e\xa7\x84\x63\x20\xb7\x9b\xcf\xa9\xad\xf1\x70\x78\xea\xfe\x05\x00\x00\xff\xff\xdc\xe6\x18\xfa\xd7\x02\x00\x00")

func secretDefaultRegistryConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretDefaultRegistryConfigYaml,
		"Secret/default/registry-config.yaml",
	)
}

func secretDefaultRegistryConfigYaml() (*asset, error) {
	bytes, err := secretDefaultRegistryConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/default/registry-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretDefaultRouterCertsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcb\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\x71\x5b\x21\x60\xc5\xf5\x36\xa1\xc5\xcd\x41\xc5\xfd\x4c\xff\x4a\x68\x9b\x96\xbb\xab\xd0\xb7\x77\xc9\xe8\xfa\xfd\xf8\x64\xcd\x4f\xa8\xe5\xa5\x30\x7d\x4f\x61\xcc\x65\x60\xba\x23\x29\x3c\xcc\x70\x19\xc4\x85\x03\x51\x91\x19\x4c\xba\x6c\x0e\x3d\x24\xa8\x5b\x8d\xb6\x4a\x02\xd3\x80\xb7\x6c\x93\x07\x73\xcd\xe5\xd3\xd5\xcb\x27\x6b\x93\x3a\x53\x13\x63\xa4\x4b\x7f\xed\x6f\xe7\x47\xdf\x51\x8c\xb1\xa9\x3c\x62\xff\xcf\xbe\xaf\x60\x1a\xb7\x17\xb4\xc0\x61\x6d\x5e\x8e\x3e\x59\xf8\x05\x00\x00\xff\xff\x9f\x1a\x7e\x44\xb2\x00\x00\x00")

func secretDefaultRouterCertsYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretDefaultRouterCertsYaml,
		"Secret/default/router-certs.yaml",
	)
}

func secretDefaultRouterCertsYaml() (*asset, error) {
	bytes, err := secretDefaultRouterCertsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/default/router-certs.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretKubeServiceCatalogApiserverSslYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x31\xcb\xc2\x40\x0c\xc6\xf1\xfd\x3e\x45\xb6\xc2\xc1\xbd\xf0\xae\xb7\x09\x2d\x6e\x0e\x2a\xee\x31\x7d\x28\xa1\xed\xb5\xdc\xc5\x82\xdf\x5e\xc4\x22\x38\x54\x5c\x93\x5f\xfe\xe1\x59\x2f\xc8\x45\xa7\x14\x69\xf9\x77\xbd\xa6\x36\xd2\x09\x92\x61\x6e\x84\x71\xcb\xc6\xd1\x11\x25\x1e\x11\x89\x67\x2d\xc8\x0b\x72\x28\x65\x58\xa7\x65\x66\x41\xa4\xfe\x76\x45\x78\x2e\x55\x10\x84\x8d\x87\xa9\x73\xc5\xb2\xa6\xae\x5e\x1b\xef\xeb\x3f\xc9\x16\xa9\xf2\xde\xd3\xbe\x39\x34\xc7\xdd\xb9\xa9\xc9\x7b\x5f\x7d\xa0\x1e\xf7\x2d\x04\x93\x36\x08\x7f\xeb\xbc\xc8\xa0\x48\xf6\x2b\xdb\x7c\xf8\x08\x00\x00\xff\xff\x3a\xff\x93\x72\x25\x01\x00\x00")

func secretKubeServiceCatalogApiserverSslYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretKubeServiceCatalogApiserverSslYaml,
		"Secret/kube-service-catalog/apiserver-ssl.yaml",
	)
}

func secretKubeServiceCatalogApiserverSslYaml() (*asset, error) {
	bytes, err := secretKubeServiceCatalogApiserverSslYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/kube-service-catalog/apiserver-ssl.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretOpenshiftAnsibleServiceBrokerAsbClientYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8d\x31\x0e\xc2\x30\x0c\x45\xf7\x9c\xc2\x17\x48\x11\x6b\xae\x81\xc4\xee\xa4\x1f\x61\xa5\xb5\xa3\xd8\xad\xc4\xed\x11\x03\x23\x8c\xef\x0d\xef\xf1\x90\x3b\xa6\x8b\x69\xa1\xf3\x9a\xba\xe8\x5a\xe8\x86\x36\x11\x69\x47\xf0\xca\xc1\x25\x11\xb1\xaa\x05\x87\x98\xfa\x07\x89\xfa\x51\x31\x15\x01\x5f\xc4\x2e\x8e\x79\x4a\x43\xe6\xd6\xec\xd0\x58\x94\x77\x14\x62\xaf\xb9\x6d\x02\x8d\x44\xf4\x43\xf9\xe0\x86\x42\x36\xa0\xfe\x94\x47\x64\x56\x97\xba\x21\x7f\x93\x75\x5a\xc7\x4c\xf1\x1a\x28\xff\xaf\x39\xac\x43\xd3\x3b\x00\x00\xff\xff\xba\xb1\x09\xad\xd3\x00\x00\x00")

func secretOpenshiftAnsibleServiceBrokerAsbClientYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretOpenshiftAnsibleServiceBrokerAsbClientYaml,
		"Secret/openshift-ansible-service-broker/asb-client.yaml",
	)
}

func secretOpenshiftAnsibleServiceBrokerAsbClientYaml() (*asset, error) {
	bytes, err := secretOpenshiftAnsibleServiceBrokerAsbClientYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/openshift-ansible-service-broker/asb-client.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretOpenshiftEtcdEtcdBackupAbsCredentialsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xb1\xaa\xc2\x30\x14\x87\xf1\x3d\x4f\x71\xb6\x42\x20\xc3\x5d\xb3\x5d\x68\xb9\xdb\x15\x54\xdc\x4f\x93\xbf\x35\xd4\x26\x31\xe7\x54\xe8\xdb\x8b\xd0\xc1\xc1\xfd\xf7\x7d\x5c\xd3\x05\x4d\x52\xc9\x9e\x9e\x3f\x66\x4e\x39\x7a\x3a\x21\x34\xa8\x59\xa0\x1c\x59\xd9\x1b\xa2\xcc\x0b\x3c\x41\x43\x74\x23\x87\x79\xad\x8e\x47\x71\xa1\x21\x22\x6b\xe2\xbb\xec\x46\x2a\x07\x78\x2a\x15\x59\x6e\xe9\xaa\xee\x9d\x18\xdd\x2a\x3c\x1d\x2a\x3f\x56\x18\xd1\x96\xf2\xd4\xef\x63\xd1\xd2\x78\x82\xe3\x10\xca\x9a\xd5\x53\x67\xad\xa5\xbf\xe1\x7f\x38\xfe\x9e\x87\x9e\xac\xb5\xdd\x07\x9b\xb1\x7d\x27\xaf\x00\x00\x00\xff\xff\x07\x1f\x0c\xdf\xc9\x00\x00\x00")

func secretOpenshiftEtcdEtcdBackupAbsCredentialsYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretOpenshiftEtcdEtcdBackupAbsCredentialsYaml,
		"Secret/openshift-etcd/etcd-backup-abs-credentials.yaml",
	)
}

func secretOpenshiftEtcdEtcdBackupAbsCredentialsYaml() (*asset, error) {
	bytes, err := secretOpenshiftEtcdEtcdBackupAbsCredentialsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/openshift-etcd/etcd-backup-abs-credentials.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretOpenshiftEtcdEtcdClientTlsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcb\xb1\x0a\xc2\x40\x0c\x80\xe1\xfd\x9e\x22\x5b\x21\x50\xc1\x35\x9b\xd0\xe2\xe6\xa0\xe2\x1e\xd2\xa8\xa1\x6d\x7a\xdc\x05\xc1\xb7\x17\xa1\x83\x82\x83\xeb\xcf\xf7\x73\xb6\x8b\x96\x6a\x8b\x13\x3c\xb6\x69\x34\x1f\x08\x4e\x2a\x45\x23\xcd\x1a\x3c\x70\x30\x25\x00\xe7\x59\x09\x34\x64\x68\x65\x32\xf5\x68\x63\xaa\x6b\xaf\x99\x45\x09\x96\xac\x5e\xef\x76\x8d\xf6\xcd\x52\x8d\x62\x7e\xeb\xd6\xff\xf3\x14\xde\x48\x09\x82\x06\x11\x61\xdf\x1f\xfa\xe3\xee\xdc\x77\x80\x88\xcd\xb7\xfc\x97\x8d\xfa\xfc\xcd\x5e\x01\x00\x00\xff\xff\x0c\x1a\x9d\x11\xde\x00\x00\x00")

func secretOpenshiftEtcdEtcdClientTlsYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretOpenshiftEtcdEtcdClientTlsYaml,
		"Secret/openshift-etcd/etcd-client-tls.yaml",
	)
}

func secretOpenshiftEtcdEtcdClientTlsYaml() (*asset, error) {
	bytes, err := secretOpenshiftEtcdEtcdClientTlsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/openshift-etcd/etcd-client-tls.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretOpenshiftMetricsAlertmanagerProxyYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcd\xb1\x8a\xc3\x30\x10\x84\xe1\x5e\x4f\xb1\x9d\x41\xe0\xe2\x5a\x75\x07\x36\xd7\x5d\x71\x17\xd2\x86\x45\x9e\x38\x22\xd6\x4a\xec\x2e\x21\x79\xfb\x90\xe0\x36\xf5\x0c\xff\xc7\xbd\x1c\xa1\x56\x9a\x24\xba\x7d\x85\x6b\x91\x25\xd1\x3f\xb2\xc2\x43\x85\xf3\xc2\xce\x29\x10\x09\x57\x24\xe2\x0d\xea\x95\x85\x57\xe8\xd8\xb5\xdd\x1f\xfb\x64\x9d\x33\x12\xb5\x0e\xb1\x4b\x39\xfb\x58\xe1\x5a\xb2\x05\x73\x2d\xb2\x4e\x7b\xc5\x60\x2f\xea\x64\x6f\x20\xd1\x10\x63\xa4\x9f\xf9\x77\xfe\xfb\x3e\xcc\x13\xc5\x18\x87\x40\x94\x9b\x58\xdb\x30\x66\xe8\x87\xcf\x33\x00\x00\xff\xff\x3c\x21\xed\x45\xb6\x00\x00\x00")

func secretOpenshiftMetricsAlertmanagerProxyYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretOpenshiftMetricsAlertmanagerProxyYaml,
		"Secret/openshift-metrics/alertmanager-proxy.yaml",
	)
}

func secretOpenshiftMetricsAlertmanagerProxyYaml() (*asset, error) {
	bytes, err := secretOpenshiftMetricsAlertmanagerProxyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/openshift-metrics/alertmanager-proxy.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretOpenshiftMetricsAlertsProxyYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8d\xb1\x0a\xc2\x40\x10\x44\xfb\xfb\x8a\xed\x02\x07\x29\x6c\xaf\x13\x12\xec\x2c\x54\x6c\x65\xb9\x8c\x7a\x98\xec\x1d\xbb\x8b\xe8\xdf\x8b\x92\xd6\x76\x98\xf7\x1e\xb7\x72\x86\x5a\xa9\x92\xe8\xb9\x09\x8f\x22\x53\xa2\x23\xb2\xc2\xc3\x02\xe7\x89\x9d\x53\x20\x12\x5e\x90\x88\x67\xa8\x5b\xdf\xb4\xbe\xde\xeb\x68\x8d\x33\x12\xd5\x06\xb1\x7b\xb9\x7a\xbf\xc0\xb5\x64\x0b\xe6\x5a\xe4\x36\xac\xbc\xc1\xbe\x91\x8b\xfd\xd4\x89\xba\x18\x23\xed\xc6\xfd\x78\xd8\x9e\xc6\x81\x62\x8c\x5d\x20\xca\x55\xac\xce\xe8\x33\xf4\xcf\xe7\x13\x00\x00\xff\xff\xed\xf4\x2f\xf6\xb0\x00\x00\x00")

func secretOpenshiftMetricsAlertsProxyYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretOpenshiftMetricsAlertsProxyYaml,
		"Secret/openshift-metrics/alerts-proxy.yaml",
	)
}

func secretOpenshiftMetricsAlertsProxyYaml() (*asset, error) {
	bytes, err := secretOpenshiftMetricsAlertsProxyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/openshift-metrics/alerts-proxy.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretOpenshiftMetricsPrometheusProxyYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcd\xb1\xaa\x02\x31\x10\x85\xe1\x3e\x4f\x31\xdd\x42\x60\x8b\xdb\xa6\xbb\xb0\xc1\xce\x42\xc5\x56\x42\xf6\xe8\x06\x4d\x26\xcc\x8c\xa2\x6f\x2f\xca\xb6\xd6\xe7\xf0\xfd\xa9\x97\x23\x44\x0b\xb7\x40\x8f\x3f\x77\x2d\x6d\x0e\xb4\x47\x16\x98\xab\xb0\x34\x27\x4b\xc1\x11\xb5\x54\x11\xa8\x0b\x57\xd8\x82\xbb\x8e\x5d\xf8\xf9\x5a\x07\xed\x29\x23\x10\x77\x34\x5d\xca\xd9\xc6\x0a\x93\x92\xd5\xa9\x49\x69\x97\x69\x35\x14\xfa\x09\x9d\xf4\xcb\x07\x1a\xbc\xf7\xb4\x89\xdb\xb8\xfb\x3f\xc4\x89\xbc\xf7\x83\x23\xca\xdc\x94\x6f\x18\x33\xe4\xc7\xe7\x1d\x00\x00\xff\xff\x2f\x8d\x53\x48\xb4\x00\x00\x00")

func secretOpenshiftMetricsPrometheusProxyYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretOpenshiftMetricsPrometheusProxyYaml,
		"Secret/openshift-metrics/prometheus-proxy.yaml",
	)
}

func secretOpenshiftMetricsPrometheusProxyYaml() (*asset, error) {
	bytes, err := secretOpenshiftMetricsPrometheusProxyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/openshift-metrics/prometheus-proxy.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _secretOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x41\xaa\xc3\x30\x0c\x44\xf7\x3e\x85\x2e\xe0\x7c\xfe\xd6\xd7\x28\x74\xaf\x38\x53\x2a\x9c\x48\xc6\x52\x02\xbd\x7d\x29\x6d\xb6\xa5\xcb\x61\xe6\x31\x8f\xbb\x5c\x31\x5c\x4c\x0b\x1d\xff\xa9\x89\x2e\x85\x2e\xa8\x03\x91\x36\x04\x2f\x1c\x5c\x12\x11\xab\x5a\x70\x88\xa9\xbf\x22\x51\xdb\x67\x0c\x45\xc0\x27\xb1\x3f\xc7\x38\xa4\x22\x73\xad\xb6\x6b\x4c\xca\x1b\x0a\x05\xb6\xbe\x72\xe0\xd3\xce\xc3\x1a\x46\xae\xab\x40\x23\x11\xfd\x3c\xf2\xce\x15\x85\xac\x43\xfd\x2e\xb7\xc8\x27\x93\xcf\xdf\x37\x95\xe2\xd1\x51\xbe\xab\xe5\xb0\x06\x4d\xcf\x00\x00\x00\xff\xff\xf4\x89\x63\xfe\xf8\x00\x00\x00")

func secretOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYamlBytes() ([]byte, error) {
	return bindataRead(
		_secretOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYaml,
		"Secret/openshift-template-service-broker/templateservicebroker-client.yaml",
	)
}

func secretOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYaml() (*asset, error) {
	bytes, err := secretOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Secret/openshift-template-service-broker/templateservicebroker-client.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _securitycontextconstraintsSecurityOpenshiftIoAnyuidYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\x41\x6e\x1b\x3b\x0c\x86\xf7\x3a\x05\x2f\xe0\xbc\x97\xed\xec\x8c\x19\x34\x35\xda\x24\x46\x82\x64\x53\x74\xc1\x58\x1c\x87\x8d\x86\x52\x49\xca\xce\xdc\xbe\xd0\xd4\x6d\x61\x38\x3b\xe9\x27\xf1\x93\xfc\x48\x4c\x29\x1f\x3f\x67\xf3\x81\xf5\x39\xa7\x3a\xd1\x36\xd5\x3d\x4b\x07\x23\x26\xa3\xf0\x37\xbe\xd9\xf6\x17\xda\x1d\xf9\x31\xeb\xdb\x85\xbe\xdd\x0c\x97\x5a\x56\xb7\x33\x75\xab\x7c\xe0\x44\x7b\x8a\x7d\x16\x47\x16\xd2\xb3\x38\xc5\x1e\x0b\xbe\x70\x62\x67\xb2\x0e\xa4\xa6\x14\xb0\xf0\x33\xa9\x71\x96\x0e\x8c\x76\x55\xd9\xe7\xab\x5c\x48\xec\x95\x47\xbf\xe2\xfc\xdf\xe1\x3a\x44\x1a\xb1\x26\x5f\xc7\x8f\x1c\x46\xbb\xd1\x5c\x4b\x17\x00\x7c\x2e\xd4\xc1\x43\x95\xb5\xad\x65\x0e\xfb\xa6\x5b\x17\x56\x60\xb3\x39\x4d\xdd\x2e\x55\x73\xd2\x15\xc6\x89\xc5\xc2\x1b\x4b\xec\xe0\xf1\x54\xb5\x35\x4d\xef\xde\x67\x31\x57\x64\x71\x0b\x13\x39\x46\x74\x6c\xde\x28\x92\x1d\x9d\xb3\x58\xfb\x02\xbc\xd5\x17\x52\x21\x27\x6b\x5d\x46\xb2\x9d\x72\xf1\x65\x10\x94\xb9\x72\x84\xa2\xf9\xc0\x91\x0c\x30\x25\x18\x09\xbd\x2a\x19\xe4\x11\xfc\x95\x40\xc9\x5c\x79\xe7\x14\xe1\xb1\xef\x17\x47\x80\x97\xea\xb0\xb0\x32\xa8\x46\x6a\xe0\x19\xb4\x0a\x1c\xd9\x5f\x9b\x2b\x3c\x6d\x06\x40\x89\xcb\xfb\x66\x33\x5c\x05\x00\xc1\x89\xfe\x94\x0c\x45\x39\xb7\x61\x3a\xb8\xfe\x3f\x28\x61\xbc\x97\x34\x3f\xe4\xec\x9f\x38\xd1\x89\xc2\x69\x27\x4a\x3f\x2b\x2b\xc5\x41\x73\x39\xc3\x1a\x56\x70\xfb\xe5\xee\x7e\x08\xda\x40\x3e\x19\xe9\x07\x6c\x8d\xbe\xb2\xd4\xf7\x13\xb4\x7f\x09\xb7\xd5\x7c\x49\x0a\x56\x4b\x49\x34\x91\x38\xa6\x9b\xd3\x26\x2e\x6c\x96\x29\x3b\xf8\xf6\x3d\x1c\x96\x63\x5d\xaa\xef\xb2\x8c\xbc\xbf\xc5\x12\x56\x10\xf3\x51\x8e\xa8\x71\xbd\xdd\x84\x15\xd0\x54\x7c\x1e\x58\xc3\x0a\x4a\xbb\x1a\x73\x12\xff\x7d\xe6\x7d\x42\x9e\x9a\xae\xf9\x07\x35\xac\x6d\xed\xb4\x53\xf2\xf0\x2b\x00\x00\xff\xff\x94\x72\x92\x5b\x14\x03\x00\x00")

func securitycontextconstraintsSecurityOpenshiftIoAnyuidYamlBytes() ([]byte, error) {
	return bindataRead(
		_securitycontextconstraintsSecurityOpenshiftIoAnyuidYaml,
		"SecurityContextConstraints.security.openshift.io/anyuid.yaml",
	)
}

func securitycontextconstraintsSecurityOpenshiftIoAnyuidYaml() (*asset, error) {
	bytes, err := securitycontextconstraintsSecurityOpenshiftIoAnyuidYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SecurityContextConstraints.security.openshift.io/anyuid.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _securitycontextconstraintsSecurityOpenshiftIoHostaccessYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x41\x73\xfa\x36\x10\xc5\xef\xfa\x14\x7b\xfb\x5f\x62\x3a\xbd\xfa\xc6\xe0\x94\x7a\x92\x10\x06\x9a\xf4\xd0\xe9\x61\xb1\x16\xac\x46\x96\xd4\xdd\x15\xc4\xdf\xbe\x23\xe3\x84\x36\xcd\x0d\xbd\x15\x6f\x7f\x5a\x3d\x19\xbd\x8f\x97\x5f\xa3\x68\xe3\xf8\x35\xfa\x3c\xd0\xd6\xe7\x93\x0b\x35\x28\x67\x32\x9f\xe5\x76\xbb\xfa\x2a\x6d\x48\x2f\x91\xdf\xbe\xca\xdb\xb6\xf9\x9f\x14\x59\xe5\xdf\xe2\x96\xdd\xd9\x79\x3a\x91\x5d\xc5\xa0\xe8\x02\x71\x0d\x47\xf4\x32\xd7\xc9\xae\x30\xe1\xc1\x79\xa7\x8e\xa4\x86\x90\xbd\x37\x98\xdc\x2b\xb1\xb8\x18\x6a\x10\xea\x32\x3b\x1d\x17\x31\x51\x90\xde\x1d\x75\xe1\xe2\x4f\xe7\x9f\x8d\xa5\x23\x66\xaf\x4b\xfb\x9d\xc3\x51\xd6\x1c\x73\xaa\x0d\x80\x8e\x89\x6a\x78\xca\xa2\xbb\x1c\x96\x62\x4e\xa5\x20\x35\xfc\xf1\xa7\x79\x73\xc1\xd6\xb0\x9f\x3b\x14\x40\x7a\xd7\x55\x0c\xa2\x8c\x2e\xa8\x98\x81\x14\x2d\x2a\x16\x1f\x0c\x21\x2a\xaa\x8b\x41\xca\x12\xe0\x2d\x1f\x88\x03\x29\x49\x21\xb2\x24\x1d\xbb\xa4\x13\xf4\x8f\x3e\x8a\x62\xd7\x91\x08\x4c\xc7\x14\x98\x57\x1a\x8b\x00\xa5\x0e\x01\x07\x92\x84\x1d\x09\x1c\xb2\x4e\x9e\x00\xa2\xce\x7b\x60\xfa\x3b\x3b\x26\x81\x14\xed\xf4\xa7\x03\x01\xe7\x00\x17\xa7\x3d\x20\xbc\xb4\x0d\x60\xb0\xb0\xbf\x7f\x74\x21\xbf\x43\x77\x45\x07\xed\x51\x01\x99\xa6\xa6\x1d\x2a\xd9\xd9\x55\x23\x68\x4f\xb7\x8e\x0b\xf8\x7d\xb9\xdb\xb4\x9b\x75\x0d\xda\x3b\x81\xfd\x6a\xf5\x01\x3a\xa1\xdd\x68\x6f\x90\x77\x70\x74\x9e\x40\x46\x51\x1a\xe4\x6e\x76\x2e\x18\xdb\xb6\xd9\x2f\x00\x5a\x05\xe9\x63\xf6\x16\x62\xf0\x63\x41\xce\x42\x16\x0e\x63\xc9\x83\x28\xd9\xe9\x34\x0b\x80\x35\x63\xd0\xeb\x59\x3a\xcc\x65\x64\x8b\x1f\x06\xa6\x56\x35\xdc\x46\x67\x12\xbb\x58\x6e\x66\xbe\x54\x26\xb4\xcf\xc1\x8f\xbb\x18\xf5\x17\xe7\xe9\x4a\xf2\x11\xa7\x79\x64\xb6\xe1\x98\xfe\x93\x08\x53\xc1\x43\xfb\xf8\x68\x2a\x78\x7a\xd8\x3c\x37\xa6\x82\xfd\xfd\x6f\x2f\xed\xfc\x63\xdd\x36\x86\x4b\x30\x5e\x84\xf8\x9b\xbc\xec\x30\x9c\xc8\x08\x4d\x83\x9e\x23\xf2\x5d\xac\x24\xa7\xe4\x69\xa0\xa0\xe8\xd7\xd7\x88\x7d\xee\x9a\x76\x2c\xc3\x68\xb2\x10\x4f\x40\x33\xba\x10\x9f\x5d\x47\xd8\x75\x31\x07\xad\x3f\x23\x5e\x0d\xa4\xec\x3a\xa9\x13\xc7\x81\xb4\xa7\x2c\x55\x88\x96\x2a\x7a\x4f\x91\x95\xd8\x9c\xa7\x17\x3c\x79\x75\x31\x1c\xdd\xe9\x09\x93\xa9\xc0\xc6\x4b\xb8\x20\xdb\xe5\xb6\x35\x15\xd0\x90\x74\x6c\x1c\x9b\x6a\x9a\xea\x16\xb5\x37\x15\xa4\xf2\xb4\x44\x29\xe8\xf5\x33\xb0\xf2\xe8\x86\xa2\x73\xfc\x8b\xba\x92\x99\xaa\xbc\x3a\x26\x35\xff\x04\x00\x00\xff\xff\x67\x29\x5f\xad\x34\x04\x00\x00")

func securitycontextconstraintsSecurityOpenshiftIoHostaccessYamlBytes() ([]byte, error) {
	return bindataRead(
		_securitycontextconstraintsSecurityOpenshiftIoHostaccessYaml,
		"SecurityContextConstraints.security.openshift.io/hostaccess.yaml",
	)
}

func securitycontextconstraintsSecurityOpenshiftIoHostaccessYaml() (*asset, error) {
	bytes, err := securitycontextconstraintsSecurityOpenshiftIoHostaccessYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SecurityContextConstraints.security.openshift.io/hostaccess.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _securitycontextconstraintsSecurityOpenshiftIoHostmountAnyuidYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\x41\x72\xe3\x36\x10\xbc\xe3\x15\x73\xdb\x4b\xa8\x24\x57\xde\x54\x52\xc5\x51\x25\xf6\xaa\xbc\xd9\xcd\x21\x95\xc3\x88\x18\x4a\x13\x83\x03\x64\x66\x20\x2d\x7f\x9f\x02\x25\x6f\xec\xb5\x8f\x68\xa0\xba\x9b\xdd\x4d\x4c\x29\x5f\x7e\xcd\xe6\x5b\xd6\x2f\x39\xd5\x89\xf6\xa9\x1e\x59\x7a\x70\xad\x14\xbe\x5d\xef\xf6\x9b\x1e\x46\x4c\xf6\x02\x7b\x20\xbf\x64\x7d\x7a\x83\xef\x77\xdb\xb7\x58\x56\xb7\x57\xe8\x5e\xf9\xcc\x89\x8e\x14\x37\x59\x1c\x59\x48\x5f\xdd\x53\xdc\x60\xc1\x03\x27\x76\x26\xeb\x41\x6a\x4a\x01\x0b\x7f\x21\x35\xce\xd2\x83\xd1\x50\x95\x7d\x5e\xe5\x42\x62\x27\x1e\x7d\xc5\xf9\xc7\xf3\xcf\x21\xd2\x88\x35\xf9\x3a\xbe\xc7\x30\xda\x9d\xe6\x5a\xfa\x00\xe0\x73\xa1\x1e\x1e\xab\xac\x6d\x2d\x73\x38\x36\xdc\x7a\xf8\xeb\xef\xf0\xc4\x12\x7b\xf8\x74\x13\x68\xfe\xe8\xab\x6f\xb2\x98\x2b\xb2\xb8\x85\x89\x1c\x23\x3a\x36\x1a\x14\xc9\x8e\xce\x59\xac\x1d\x01\x9e\xea\x81\x54\xc8\xc9\x9a\xa1\x48\x36\x28\x17\x5f\x3c\x7f\x38\x65\xf3\x29\x57\xf1\x0e\x65\xae\x1c\xa1\x68\x3e\x73\x24\x03\x4c\x09\xfc\x44\x30\x12\x7a\x55\x32\xc8\x63\x3b\x2f\x8c\x00\x4a\xe6\xca\x83\x53\x84\x4f\x9b\x0d\x1c\xaa\xc3\x92\x92\x41\x63\x84\x85\xd2\x00\x25\x02\xca\x0c\x9f\x77\x5b\x38\xcc\x80\x50\x72\x5c\x01\xfc\x71\x62\x03\x36\x28\xca\x13\x2a\xa7\xf9\x46\x5a\x8d\x62\x7b\xd7\x64\x4b\x8b\xd5\x9c\xc4\xe1\xbc\xec\x00\x94\x86\x79\x48\xa4\x2b\xf8\x73\xfd\xf8\xb0\x7b\xb8\xeb\xc1\x1b\x51\xd3\x7f\xa9\x3d\x72\x22\xb0\xd9\x9c\xa6\x1b\x2f\x0e\x03\x99\x01\xda\xb3\x99\x1f\x80\x65\x48\x35\xb2\x1c\x17\x6f\x3f\xad\x00\xee\x14\xc5\xe1\xc2\x7e\x82\x01\x6b\x8b\x67\xf5\x21\x00\x08\x4e\xd4\xc3\xf7\x31\x85\xa2\x9c\x5b\x17\xb7\x16\x95\x30\x7e\x94\x34\x3f\xe6\xec\xbf\x70\xa2\xab\xfc\xf3\x7e\x94\xfe\xad\xac\x14\xb7\x9a\xcb\xab\x09\x84\x0e\xee\x7f\x7b\xf8\xb8\x0d\xda\x4a\xff\x6c\xa4\xef\xec\xc0\xe8\x77\x96\xfa\xf5\xd6\xfa\xff\x0f\xee\xab\xf9\xf2\x28\x58\x2d\x25\xd1\x44\xe2\x98\xee\xae\xab\x79\x4b\x53\x8d\x74\x51\xbc\x79\x33\xd2\x33\x0f\x84\xc3\xd0\xbe\xab\xff\x36\xda\x8e\x65\x54\xec\xcb\xb9\x7b\x0e\xbc\x1b\xb2\xb8\xe6\x94\x48\xc3\xb5\x8b\x85\x67\xc8\x32\xf2\xf1\x1e\x4b\xe8\x20\xe6\x8b\x5c\x50\xe3\x7a\xbf\x0b\x1d\xd0\x54\x7c\xde\xb2\x86\x6e\x09\x6e\x8f\x7e\x0a\x1d\xc8\x68\xa1\x7b\xd1\xeb\xf5\xf7\xde\x24\xe4\xa9\xe1\x9a\xff\xa1\xb6\xa7\xe6\x90\x06\x25\x0f\xff\x05\x00\x00\xff\xff\x82\x37\x13\x0a\x0c\x04\x00\x00")

func securitycontextconstraintsSecurityOpenshiftIoHostmountAnyuidYamlBytes() ([]byte, error) {
	return bindataRead(
		_securitycontextconstraintsSecurityOpenshiftIoHostmountAnyuidYaml,
		"SecurityContextConstraints.security.openshift.io/hostmount-anyuid.yaml",
	)
}

func securitycontextconstraintsSecurityOpenshiftIoHostmountAnyuidYaml() (*asset, error) {
	bytes, err := securitycontextconstraintsSecurityOpenshiftIoHostmountAnyuidYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SecurityContextConstraints.security.openshift.io/hostmount-anyuid.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _securitycontextconstraintsSecurityOpenshiftIoHostnetworkYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\xcd\x6e\x1b\x3d\x0c\xbc\xeb\x29\xf8\x02\xce\x87\xef\xba\xb7\xc0\x4e\x53\x23\x7f\x46\xd2\xe4\x52\xf4\x40\xaf\x68\x9b\x8d\x96\x52\x49\xca\x8e\xdf\xbe\xd0\x7a\x5b\x24\x88\x81\xde\x96\x3f\x3b\x1a\xce\x90\x98\x52\x3e\x7c\xcd\xe6\x0b\xd6\x97\x9c\xea\x40\xab\x54\xb7\x2c\x1d\x6c\x30\x19\x85\xbf\xf5\xe5\x6a\xfe\x29\x77\x4f\x7e\xc8\xfa\xda\x81\x6b\x7d\x97\x5e\x2d\x17\x9f\x5a\x57\x59\xdd\xde\x37\xae\x94\xf7\x9c\x68\x4b\x71\x9e\xc5\x91\x85\xf4\xc3\x4f\x14\xe7\x58\x70\xcd\x89\x9d\xc9\x3a\x90\x9a\x52\xc0\xc2\x2f\xa4\xc6\x59\x3a\x30\xea\xab\xb2\x1f\x2f\x72\x21\xb1\x1d\x6f\xfc\x82\xf3\x7f\xfb\xff\x43\xa4\x0d\xd6\xe4\x97\xf1\x1c\xc2\xc6\xae\x35\xd7\xd2\x05\x00\x3f\x16\xea\xe0\xae\x9a\x3f\x56\xb9\xb4\xb0\x6d\x05\xeb\xe0\xfb\x8f\xf0\xca\x12\x3b\x78\x9a\x5e\x68\x04\xe9\xcd\xe7\x59\xcc\x15\x59\xdc\xc2\x40\x8e\x11\x1d\x1b\x0e\x8a\x64\x47\xe7\x2c\xd6\x42\x80\xd7\xba\x26\x15\x72\xb2\xc6\x28\x92\xf5\xca\xc5\x47\xd2\xbb\x6c\x2e\x27\xd5\x60\x1c\xd3\xa0\x1a\xcb\x76\x2c\xc0\x54\x69\x31\x4a\x3c\xe5\x4a\x13\x6e\x84\x05\x58\x57\x07\x73\x4e\x09\x94\x7e\x55\x56\x32\x28\x39\x1a\x78\x86\x35\x81\x56\x81\x03\xfb\x0e\x10\x9e\x97\x8b\x11\xe1\xe9\xea\x96\xa5\xbe\x41\x7f\x9a\x00\x7c\x87\x0e\xa8\x34\xbe\xdd\xa3\x53\x9c\x90\x3d\x83\xef\x08\x04\x07\xb2\x82\x3d\x5d\x04\x18\x83\x0f\x8c\x43\x51\xce\x4d\x90\x49\x4b\x25\x8c\x0f\x92\x8e\x8f\x39\xfb\x17\x4e\x64\x47\x73\x1a\xfe\xb8\x38\x51\x8c\x0b\xcd\xe5\x83\x11\x61\x06\x37\xcb\xdb\xdb\x30\x83\xbb\x9b\xfb\x87\x45\x98\xc1\xd3\xd5\xb7\xe7\xe5\xf4\x71\xbd\x5c\x04\x6d\x7e\x3c\x1b\xe9\x19\x9b\x1e\x51\xb6\x14\x8c\xc6\xc1\x26\x67\xce\xb9\x69\xb5\x94\x44\x03\x89\x63\xba\x3e\x39\x7b\xa6\xab\x1a\xe9\xc8\x68\xe2\x6e\xa4\x7b\xee\x09\xfb\x3e\x57\xf1\x6e\x5a\xa5\x4e\x73\x75\xd2\x7f\xb7\xd1\x96\xcd\xf5\x18\xf6\xe3\x25\x8d\xc0\x7d\x96\x0d\x6f\xef\xb0\x84\x19\xc4\x7c\x90\x03\x6a\xbc\x5c\x2d\xc3\x0c\x68\x28\x7e\x5c\x70\x83\x2d\x6d\xa9\xcd\x49\xfc\x74\x83\xf3\x84\x3c\xb4\xbc\xe6\x9f\xd4\x37\x9b\x66\x6d\xdf\x95\x3c\xfc\x0e\x00\x00\xff\xff\xfe\x08\xcb\x3c\xb1\x03\x00\x00")

func securitycontextconstraintsSecurityOpenshiftIoHostnetworkYamlBytes() ([]byte, error) {
	return bindataRead(
		_securitycontextconstraintsSecurityOpenshiftIoHostnetworkYaml,
		"SecurityContextConstraints.security.openshift.io/hostnetwork.yaml",
	)
}

func securitycontextconstraintsSecurityOpenshiftIoHostnetworkYaml() (*asset, error) {
	bytes, err := securitycontextconstraintsSecurityOpenshiftIoHostnetworkYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SecurityContextConstraints.security.openshift.io/hostnetwork.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _securitycontextconstraintsSecurityOpenshiftIoNonrootYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\xcd\x72\xdb\x3c\x0c\xbc\xf3\x29\xf0\x02\xf2\x37\xdf\xd5\x37\x8f\xd5\xa6\x9e\xfc\x79\xf2\x77\xe9\xf4\x40\x5b\x90\x8d\x86\x02\x58\x00\xb4\xa3\xb7\xef\x50\x76\xd2\xc9\x38\x37\x69\xb9\xb3\x58\x62\x97\x31\x25\x39\xfe\x10\xf3\x96\xf4\x45\x52\x19\x70\x9d\xca\x8e\x78\x0e\x7d\x4c\x86\xe1\xe3\x7c\xb5\x5e\x5e\x60\x77\xe8\x47\xd1\xd7\x0b\x7c\xbd\x6a\x2f\x31\x51\xb7\x4f\xe8\x5a\xe9\x40\x09\x77\xd8\x2d\x85\x3d\x12\xa3\x7e\x3a\xc7\x6e\x19\x73\xdc\x50\x22\x27\xb4\x39\x70\x49\x29\xc4\x4c\x2f\xa8\x46\xc2\x73\x30\xdc\x16\x25\x1f\x67\x92\x91\x6d\x4f\xbd\xcf\x48\xfe\x3b\xfc\x1f\x3a\xec\x63\x49\xbe\xe8\xbe\x52\xe8\xed\x4a\xa5\xe4\x79\x00\xf0\x31\xe3\x1c\x1e\x0a\x2f\x6c\xc1\x63\xd8\x55\xdc\xe6\xf0\xf3\x57\x78\x25\xee\xe6\xf0\x78\x1e\x50\xfd\xe1\x9b\x2f\x85\xcd\x35\x12\xbb\x85\x01\x3d\x76\xd1\x63\x95\x89\xcc\xe2\xd1\x49\xd8\xea\x2f\xc0\x6b\xd9\xa0\x32\x3a\x5a\x35\xd4\xa1\x6d\x95\xb2\x4f\x9e\x59\x58\x45\x1c\xb2\xca\x81\x3a\x34\x88\x29\x41\x8f\xd1\x8b\xa2\x81\xf4\xe0\x7b\x04\x45\x73\xa5\xad\x63\x07\x8f\xcb\xe5\x24\x09\xb0\x29\x0e\xd3\x5e\x0c\x8a\xa1\x1a\xb8\x80\x16\x86\x23\xf9\x1e\x22\x8f\x55\xba\x99\xb4\x9f\x57\xed\x0c\xe0\x69\x8f\x13\x11\x86\x62\x0e\x96\x71\x4b\xfd\x38\xc9\x3f\xaf\xda\xb3\xa6\x28\x90\x9f\x08\x1b\x3c\x73\x08\x3b\x10\x9e\x88\x9b\x13\x7f\x88\x4c\x3d\x9a\xbf\xdb\xdb\xbe\xc7\x55\xe7\x3b\x0d\x38\x0b\x00\x1c\x07\xfc\xb8\x5e\xc8\x4a\x52\x37\x77\xde\xb9\x62\xec\xee\x39\x8d\x0f\x22\xfe\x9d\x12\xda\x68\x8e\xc3\x7b\xda\x8a\x7f\x0a\x29\x76\xad\x4a\xfe\x14\x58\x68\xe0\x7a\x75\x73\x13\x1a\xb8\xbd\xbe\xbb\x6f\x43\x03\x8f\xdf\x9e\xaa\xfb\xe9\xe3\x6a\xd5\x06\xad\xd9\x3d\x1b\xea\xbf\x38\x6f\x8b\xf9\x14\xe9\x9d\x70\x9d\x17\x0c\x6f\x88\xcb\xdb\x39\xc4\x2f\x88\xc1\x4a\xce\x09\x07\x64\x8f\xe9\xea\x54\x82\xcb\x76\x4c\x4b\x9f\xca\x71\x98\xde\xc9\x64\x6f\x2b\xdc\xd3\xee\x36\xe6\xd0\x40\x27\x47\x3e\x46\xed\x16\xeb\x55\x68\x00\x87\xec\x63\x4b\x1a\x1a\xc8\xb5\xb0\xe6\xc8\x7e\x7a\x61\xcb\x14\x69\xa8\xb8\xca\x6f\xac\x29\x87\xa6\x76\x59\xd1\xc3\xdf\x00\x00\x00\xff\xff\x6b\xd9\x00\x06\x8f\x03\x00\x00")

func securitycontextconstraintsSecurityOpenshiftIoNonrootYamlBytes() ([]byte, error) {
	return bindataRead(
		_securitycontextconstraintsSecurityOpenshiftIoNonrootYaml,
		"SecurityContextConstraints.security.openshift.io/nonroot.yaml",
	)
}

func securitycontextconstraintsSecurityOpenshiftIoNonrootYaml() (*asset, error) {
	bytes, err := securitycontextconstraintsSecurityOpenshiftIoNonrootYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SecurityContextConstraints.security.openshift.io/nonroot.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _securitycontextconstraintsSecurityOpenshiftIoPrivilegedYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\xc1\x6e\xdb\x30\x0c\x86\xef\x7e\x0a\xde\x02\x0c\x4d\x86\x5d\x7d\x0b\xd2\x2d\x2b\x30\x74\x41\x8b\x75\x67\xc5\xa2\x1b\xa2\x32\xe9\x91\x54\x5a\xbf\xfd\x20\xd5\x4b\xb3\xb6\x87\xde\xac\x9f\x22\x29\x7e\xfc\xe1\x90\x92\x3c\x7e\x17\xf3\x4b\xd2\x3b\x49\x79\xc0\x5d\xca\xf7\xc4\x2d\xb8\x66\x6c\x4e\xe1\xab\xdd\xe6\xb5\x74\x8d\xfe\x28\xfa\xf0\x5a\xde\x5d\x5d\xbe\x91\x44\xdd\xce\xc5\x9d\xd2\x91\x12\xde\x63\xdc\x08\x7b\x20\x46\x3d\x0f\x63\xdc\x84\x31\xec\x29\x91\x13\x5a\xdb\x2c\x61\xf1\x69\xd1\x84\x91\xee\x50\x8d\x84\x5b\x30\xec\xb2\x92\x4f\x2b\x19\x91\xed\x40\xbd\xaf\x48\x3e\x1f\xbf\x34\x11\xfb\x90\x93\xaf\xe3\xff\x25\x80\x73\x4a\x4d\x6f\x5b\x95\x3c\xb6\x0d\x80\x4f\x23\xb6\x70\x93\x79\x6d\x6b\x9e\x9a\xfb\xa2\xd7\x4e\x36\x99\xe3\xd0\x76\x29\x9b\xa3\x2e\x43\x1c\x88\xed\x45\x67\x89\x78\x76\x1c\x42\xb9\x65\xcd\x03\x71\x6c\xe1\x76\x7e\x55\x19\x0a\x9f\x7c\x23\x6c\xae\x81\xd8\xad\x19\xd0\x43\x0c\x1e\x4a\xef\xc0\x2c\x1e\x9c\x84\xad\x1c\x01\x1e\xf2\x1e\x95\xd1\xd1\xca\x14\x11\xad\x53\x1a\xbd\x0e\xba\x18\x4f\xa8\xa0\xb2\x31\x08\x5d\x87\x66\xe0\x52\x04\x38\x8f\x73\x84\x83\x98\xd7\x9a\x00\x3d\x06\xcf\x8a\x56\x75\x3f\x20\x3c\xe3\x98\x4a\xa6\x66\x86\x50\x22\x13\x64\x43\xbd\xa8\x5f\x15\xc2\xf3\xe7\x4c\xea\xa2\xe6\x3e\x92\x1f\xe6\x9a\x25\x76\xfb\xf5\x07\x71\x7e\x82\xee\x79\xca\x15\xc0\xef\xf5\xcd\xf5\xd5\xf5\xb6\x05\x3f\x90\x01\x59\xed\x36\x88\x39\x28\xa6\xf0\x84\x11\x6e\x37\x9b\x5a\xca\x0e\x92\x53\x84\x3d\x96\xb6\x71\x2e\x2a\x9c\x26\xe8\x45\x61\x86\x0e\x15\x3a\x15\x76\x05\xc2\x0a\xb6\x1a\xd8\xeb\x33\xa0\x0b\xb9\x6a\x8b\x06\x80\xc3\x80\xed\x19\x80\x66\x54\x92\xc2\x7f\x5e\xb7\x62\x88\x3f\x39\x4d\x37\x22\xfe\x8d\x12\xce\x3b\x83\x3e\x24\xc3\x46\xf1\x4f\x26\xc5\x78\xa9\x32\xbe\xe3\x15\x2d\xd6\xf8\x65\xa8\xef\xb8\xc5\xb0\x12\x98\xd7\xfc\xee\x85\xae\x93\x61\xdc\xa9\xf4\xa5\xef\x3f\x07\x5b\x1e\xc7\x84\x03\xb2\x87\xb4\x9d\x1d\xf7\x26\xb7\xec\xe3\xdc\x89\x15\xc6\xcb\xd1\x50\x8f\xd4\x61\xe8\x3a\xc9\xec\xed\xc9\xff\x4b\xe2\x5e\x43\xbb\xcf\x94\xe2\xb2\xac\x46\x25\x25\xd4\x0f\x24\x5a\xe4\xd6\xe2\x47\x5a\x14\xf3\xb7\x36\x71\xd7\x1c\xeb\xaf\xe2\x34\xd8\xdf\x00\x00\x00\xff\xff\x64\x5d\xcf\x52\x46\x04\x00\x00")

func securitycontextconstraintsSecurityOpenshiftIoPrivilegedYamlBytes() ([]byte, error) {
	return bindataRead(
		_securitycontextconstraintsSecurityOpenshiftIoPrivilegedYaml,
		"SecurityContextConstraints.security.openshift.io/privileged.yaml",
	)
}

func securitycontextconstraintsSecurityOpenshiftIoPrivilegedYaml() (*asset, error) {
	bytes, err := securitycontextconstraintsSecurityOpenshiftIoPrivilegedYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SecurityContextConstraints.security.openshift.io/privileged.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _securitycontextconstraintsSecurityOpenshiftIoRestrictedYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\x4d\x73\x22\x3b\x0c\xbc\xfb\x57\xe8\x07\xbc\xe1\xd5\xbb\xce\x8d\x82\xbc\x2c\x95\x2f\x2a\x24\xb9\x6c\xed\x41\x8c\x05\x68\xe3\xb1\xbd\x92\x0c\xe1\xdf\x6f\xd9\x99\x6c\x2d\x95\xdc\x40\xea\x91\x5a\xdd\x6d\x0c\x21\x9d\xbe\x25\xb5\x25\xcb\x4b\x0a\x65\xa4\x75\x28\x7b\x8e\x3d\xec\x30\x28\xb9\x3f\xfd\xd5\x7a\xf1\xa9\x76\x4f\x76\x4a\xf2\xfa\xa9\xbe\x5e\x2d\x3f\xd7\x92\x98\x5e\x54\xd7\xc2\x47\x0e\xb4\x27\xbf\x48\xd1\x90\x23\xc9\x45\x9f\xfc\x02\x33\x6e\x39\xb0\x31\x69\x0f\xb1\x84\xe0\x30\xf3\x0b\x89\x72\x8a\x3d\x28\x0d\x45\xd8\xce\xb3\x94\x29\xea\x81\x77\x36\xe3\xf4\xef\xf1\x3f\xe7\x69\x87\x25\xd8\xdc\x7f\x35\x61\xa7\xd7\x92\x4a\xee\x1d\x80\x9d\x33\xf5\x70\x57\xd4\x1e\x4b\x9c\xab\xdb\xd7\x86\xf6\xae\x03\x3d\xab\xd1\xd8\x63\xb1\x03\x45\xe3\x01\x8d\xbc\x7b\xe5\xe8\x7b\xd8\x4c\x5b\x2b\x69\x7a\xb3\x45\x8a\x6a\x82\x1c\x4d\xdd\x48\x86\x1e\x0d\xeb\x6c\x8c\x31\x19\x1a\xa7\xa8\xf5\x2f\xc0\x6b\xd9\x92\x44\x32\xd2\xca\xd2\x93\x0e\xc2\xd9\xda\x21\x42\x6a\xc2\x83\x91\x07\x4f\x91\x49\x01\x87\x81\x54\xc1\x12\x60\x08\x70\x48\x6a\xb0\x23\xb4\x22\xb5\x17\x3d\x08\xfd\x2a\x2c\xa4\x6d\x32\x40\x4e\xbe\x81\xb7\x04\x52\x22\x9c\xd8\x0e\x80\xf0\xbc\x5a\xfe\xd3\xd0\x9b\xab\x5b\x8e\xe5\x0d\x86\x77\xca\x60\x07\x34\x40\xa1\x3a\x3c\xb5\xdb\xea\xc7\x76\x20\x88\x38\x92\x66\x1c\x68\x06\xf0\x74\xe0\x8f\xf9\xac\xad\x3b\x56\x1e\x1f\x64\xf9\x48\xb0\x59\x2c\xda\x02\xb6\x0a\x29\x4a\x1e\xb6\x67\x98\xe4\x87\x5d\x12\xb8\x50\xb0\x22\x44\x67\x0e\xda\x9e\xbf\xef\x76\x59\x38\x55\x55\x27\x93\x84\xd0\x3f\xc4\x70\x7e\x4c\xc9\xfe\xe7\x40\x93\x1f\x53\x3c\xa6\xeb\xfd\x52\x52\xbe\x70\xd8\x75\x70\xb3\xba\xbd\x75\x1d\xdc\xdd\xdc\x3f\x2c\x5d\x07\x9b\xab\xa7\xe7\xd5\xf4\xe3\x7a\xb5\x74\x52\x8d\x7e\x56\x92\x2f\xfc\x7f\xc4\xb8\x27\xa7\xd4\xc4\x9a\xec\xfd\x2a\x26\x5a\x72\x0e\x34\x52\x34\x0c\xd7\x53\x64\x3e\x50\x0d\x31\x8f\x67\xd7\x4e\xed\xe1\xfb\x0f\x77\x6c\xcf\xaa\x91\x1b\x52\xdc\xf1\xfe\x0e\xb3\xeb\xc0\xa7\x53\x3c\xa1\xf8\xf9\x7a\xe5\x3a\xa0\x31\xdb\x79\xc9\xe2\x3a\xc8\x35\xdf\x6a\x14\xed\xfd\x41\x2e\x02\xf2\x58\xeb\x92\x7e\x52\x13\xab\xab\xd1\x17\x32\xf7\x3b\x00\x00\xff\xff\x7d\x79\x6f\x58\xbe\x03\x00\x00")

func securitycontextconstraintsSecurityOpenshiftIoRestrictedYamlBytes() ([]byte, error) {
	return bindataRead(
		_securitycontextconstraintsSecurityOpenshiftIoRestrictedYaml,
		"SecurityContextConstraints.security.openshift.io/restricted.yaml",
	)
}

func securitycontextconstraintsSecurityOpenshiftIoRestrictedYaml() (*asset, error) {
	bytes, err := securitycontextconstraintsSecurityOpenshiftIoRestrictedYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "SecurityContextConstraints.security.openshift.io/restricted.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceDefaultDockerRegistryYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xbd\x6a\x43\x31\x0c\x85\x77\x3f\x85\x5e\xe0\x82\x33\x14\x8a\xb7\x92\xa9\x5b\x21\xd0\x5d\x95\xcf\x0d\x22\xbe\xb6\xb1\x94\x40\xde\xbe\xdc\x1f\x28\xb4\x43\x37\xe9\x9c\xa3\x4f\x12\x77\xfd\xc4\x30\x6d\x35\xd1\xe3\x14\x6e\x5a\x73\xa2\x0b\xc6\x43\x05\x61\x81\x73\x66\xe7\x14\x88\x0a\x7f\xa1\xd8\x5a\x11\xe5\x26\x37\x8c\x69\xe0\xaa\xe6\xe3\x99\x28\x63\xe6\x7b\xf1\x40\x54\x79\x41\xfa\x1d\x38\x74\xeb\x2c\xf8\x09\x5b\x87\xac\xbc\xde\x86\x6f\xe0\xe9\x98\x7e\x89\x31\x4e\x2e\x7d\xdb\xb5\xba\xbb\x14\x88\x0c\x05\xe2\x6d\xfc\x7b\x86\xc1\xd6\x9f\xde\xe6\x59\xab\xfa\x33\xd1\xb9\x28\xaa\xbf\x7f\xfc\xf5\xce\xad\xce\x7a\xdd\x89\x72\xa4\xf6\x8e\xc8\x75\x41\xbb\xfb\x05\xd2\x6a\xb6\x44\xa7\xf8\x1a\x63\xf8\x0e\x00\x00\xff\xff\x5e\xe5\x77\x92\x34\x01\x00\x00")

func serviceDefaultDockerRegistryYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceDefaultDockerRegistryYaml,
		"Service/default/docker-registry.yaml",
	)
}

func serviceDefaultDockerRegistryYaml() (*asset, error) {
	bytes, err := serviceDefaultDockerRegistryYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/default/docker-registry.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceDefaultRegistryConsoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\x41\x0a\xc2\x40\x0c\x45\xf7\x73\x8a\x5c\xa0\x50\x97\xcd\x29\x04\xc1\x7d\x9c\x7e\xcb\xe0\x74\x66\x48\x62\xc1\xdb\x4b\x47\x97\xda\x5d\xf2\x5f\xc2\xfb\xd2\xd2\x15\x6a\xa9\x16\xa6\xed\x14\x1e\xa9\xcc\x4c\x17\xe8\x96\x22\xc2\x0a\x97\x59\x5c\x38\x10\x65\xb9\x21\xdb\x3e\x11\x49\x6b\x4c\x8a\x25\x99\xeb\x6b\x88\xb5\x58\xcd\xe8\xa4\xc8\x8a\x9f\xe8\x10\x58\x93\x08\xa6\x19\x77\x79\x66\x0f\xd6\x10\x77\x51\xab\xea\xdd\x38\xfc\x7f\xff\x5c\x31\x4d\xe3\x38\xf6\xd5\x45\x17\xf8\xf9\x1b\x4e\x7b\x68\xc8\x88\x5e\x95\x8f\x2a\xbe\x03\x00\x00\xff\xff\x03\xc1\x08\xf1\x09\x01\x00\x00")

func serviceDefaultRegistryConsoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceDefaultRegistryConsoleYaml,
		"Service/default/registry-console.yaml",
	)
}

func serviceDefaultRegistryConsoleYaml() (*asset, error) {
	bytes, err := serviceDefaultRegistryConsoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/default/registry-console.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceDefaultRouterStatsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x50\xc1\x4a\x04\x31\x0c\xbd\xf7\x2b\xc2\x1c\x0b\xa3\x2c\x82\x60\x6f\x82\x83\x37\x0f\x2a\xde\x63\x9b\x65\x8b\x33\x4d\x49\xd2\xf5\xf7\xa5\x33\x73\x73\xd8\x53\xc8\x4b\xde\xcb\x7b\xc1\x9a\xbf\x48\x34\x73\x09\x70\x3d\xb9\x9f\x5c\x52\x80\x0f\x92\x6b\x8e\xe4\x16\x32\x4c\x68\x18\x1c\x00\x96\xc2\x86\x96\xb9\x68\x6f\x01\xaa\xf0\x42\x76\xa1\xa6\x77\x99\xef\x2b\x8b\x05\x18\x4e\x4f\x0f\x8f\xc3\xc1\x58\xa3\x60\xa5\x00\x83\x49\xa3\x7f\x0b\x5c\xa9\xe8\x25\x9f\x6d\x55\x42\xd5\x5f\x96\x14\x60\xf0\xde\xc3\xeb\xf4\x36\xbd\x3f\x7f\x4e\x2f\xe0\xbd\xbf\xcd\x6c\x4a\x52\x70\xa1\x00\x98\x96\x5c\x1c\xc0\x8c\xdf\x34\xef\x7e\x85\x9b\x91\x84\xbd\x8e\x6a\x68\xea\x00\x36\xc2\x01\xa8\x15\x23\x05\x48\x74\xc6\x36\x9b\xd3\x4a\xb1\x0b\xf5\xa0\xab\xe2\xb8\x53\x7b\xe4\xd1\x62\xdd\xac\xad\x6f\xe8\x90\x03\x50\x9a\x29\x1a\xcb\xd1\x7d\xf7\x17\x00\x00\xff\xff\xdc\xb3\x6f\x65\x79\x01\x00\x00")

func serviceDefaultRouterStatsYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceDefaultRouterStatsYaml,
		"Service/default/router-stats.yaml",
	)
}

func serviceDefaultRouterStatsYaml() (*asset, error) {
	bytes, err := serviceDefaultRouterStatsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/default/router-stats.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceDefaultRouterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x31\x4b\x04\x31\x10\x85\xfb\xfc\x8a\xe9\x0e\x02\x59\x95\xdb\x42\xd2\x29\x2e\x36\x62\xa1\x62\x3f\x9b\x3c\x21\x5c\x2e\x09\xc9\xec\x81\xfe\x7a\xc9\xee\x16\x2a\x58\x0d\x6f\xde\x7b\x1f\x33\x5c\xc2\x3b\x6a\x0b\x39\x59\xba\xdc\xa8\x53\x48\xde\xd2\x2b\xea\x25\x38\xa8\x33\x84\x3d\x0b\x5b\x45\xc4\x29\x65\x61\x09\x39\xb5\x2e\x89\xda\x16\x1a\x66\x08\x0f\xa7\x65\x46\x4d\x10\xb4\x21\xe4\x2b\xfe\x5a\x2a\x8c\x4f\xcd\x44\x9e\x11\x4d\xe2\x33\x2c\x1d\xb4\xd6\xf4\x38\x3d\x4f\x2f\x77\x6f\xd3\x03\x69\xad\x0f\x8a\x68\x4d\xec\xc8\x9a\x17\x41\xb5\xfb\x54\x44\x5b\xf1\x97\x6c\x85\x1d\x2c\x79\x7c\xf0\x12\x45\xb5\x02\xd7\xcb\x25\x57\x59\x29\x66\x2f\xdd\x5e\x1b\x71\x65\xc5\x76\xaf\x2f\x7e\xb8\xe3\x78\xfc\x63\x8f\xe3\x51\xf5\xa7\x22\x9c\xe4\xfa\xcf\x3d\xf2\x59\x60\xe9\x29\xb3\xbf\xe7\xc8\xc9\xa1\xaa\xef\x00\x00\x00\xff\xff\xa6\xf6\xe2\x53\x41\x01\x00\x00")

func serviceDefaultRouterYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceDefaultRouterYaml,
		"Service/default/router.yaml",
	)
}

func serviceDefaultRouterYaml() (*asset, error) {
	bytes, err := serviceDefaultRouterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/default/router.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceKubeServiceCatalogApiserverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8d\x41\xaa\xc3\x30\x0c\x44\xf7\x3e\x85\x2e\x90\xc5\xe7\x87\x2e\x74\x8a\x42\xa1\x7b\xd5\x19\x82\x49\x62\x0b\x49\xf5\xf9\x4b\x9c\x2e\xba\x7b\x3c\xe6\x31\xa2\xe5\x09\xf3\xd2\x2a\x53\xff\x4b\x5b\xa9\x0b\xd3\x03\xd6\x4b\x46\x3a\x10\xb2\x48\x08\x27\xa2\x2a\x07\x98\x44\x8b\xc3\x3a\xec\x6b\x5c\x25\x83\x69\x7b\xbf\x30\xf9\x55\x4d\x59\x42\xf6\xb6\x26\x57\xe4\xb3\xd4\x66\xe1\x27\x4c\x03\x99\xe6\xf9\x3f\x11\x11\x85\xd8\x8a\xb8\x0f\x77\xbb\xa4\x63\x47\x8e\x66\x3c\x06\xa2\xfa\x7b\xf9\x09\x00\x00\xff\xff\xfb\xf2\xa5\x68\xac\x00\x00\x00")

func serviceKubeServiceCatalogApiserverYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceKubeServiceCatalogApiserverYaml,
		"Service/kube-service-catalog/apiserver.yaml",
	)
}

func serviceKubeServiceCatalogApiserverYaml() (*asset, error) {
	bytes, err := serviceKubeServiceCatalogApiserverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/kube-service-catalog/apiserver.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceKubeServiceCatalogControllerManagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x4d\x6a\x03\x31\x0c\x85\xf7\x73\x0a\x91\xbd\xd3\x94\x66\x11\x7c\x8a\x42\xa1\x7b\xd5\x79\x9d\x31\xf1\x58\x42\xd2\xe4\xfc\x65\x7e\x56\x25\x4b\xf9\x13\xef\xf9\x13\x6b\xfd\x86\x79\x95\x9e\xe9\xf9\x3e\x3c\x6a\xbf\x67\xfa\x82\x3d\x6b\xc1\x30\x23\xf8\xce\xc1\x79\x20\xe2\xde\x25\x38\xaa\x74\x5f\x47\x22\x35\x99\x11\x13\x16\x3f\x57\x79\xf3\x32\x61\x46\xa6\x29\x42\xfd\x25\x37\x56\x64\x3a\x85\x2d\x38\x6d\x0b\xbe\xb7\x9c\xb9\xe9\xc4\x67\x51\x74\x9f\xea\x6f\x6c\xdb\x2b\xea\x63\x2a\xb0\x48\x8e\x62\x88\xd4\x79\xcd\x2f\xd2\xc3\xa4\x35\xd8\xcc\x9d\x47\x58\x72\x6f\x03\xd1\x7f\x9a\x0e\x7c\x20\x57\x2e\xc8\xf4\x58\x7e\x90\x8e\xde\x54\x38\xb8\xc9\x38\xb8\xa2\xac\x4a\x2a\x16\x9b\x5b\x3a\xd2\x1c\x65\x31\xec\x32\x62\x91\xe9\x7a\xfd\xd8\xa6\x60\x1b\x11\x9f\xdb\xdb\xed\x72\xbb\x0c\xab\x4c\x43\x09\xb1\xfd\x36\xac\xfa\xf2\x33\x7f\x01\x00\x00\xff\xff\x1b\x6b\xc8\x4e\x6e\x01\x00\x00")

func serviceKubeServiceCatalogControllerManagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceKubeServiceCatalogControllerManagerYaml,
		"Service/kube-service-catalog/controller-manager.yaml",
	)
}

func serviceKubeServiceCatalogControllerManagerYaml() (*asset, error) {
	bytes, err := serviceKubeServiceCatalogControllerManagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/kube-service-catalog/controller-manager.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceOpenshiftAnsibleServiceBrokerAsbYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x8f\x41\x4e\x03\x31\x0c\x45\xf7\x39\x85\x2f\xe0\x41\x55\x17\xa0\x5c\x03\x89\xbd\x27\x35\x34\x6a\xea\x58\xb6\xd5\xf3\xa3\x84\x68\x04\x6c\x58\xb0\xcb\xcf\xff\x7a\x2f\x21\xad\x6f\x6c\x5e\xbb\x64\x78\x9c\xd2\xad\xca\x25\xc3\x2b\xdb\xa3\x16\x4e\x77\x0e\xba\x50\x50\x4e\x00\x24\xd2\x83\xa2\x76\xf1\x11\x01\xfc\x6b\xb4\x51\xd3\x2b\x6d\x5d\x59\xfc\x5a\xdf\x63\xab\xfd\x69\x56\xf2\x81\x85\x2d\xd0\xb9\x18\x07\x0a\xdd\x39\x03\xf9\x8e\xd1\x3c\x01\x34\xda\xb9\x2d\x14\xa9\x66\x38\x08\x48\xe2\x75\x6f\x8c\xcb\x80\xbb\xf5\x1b\xdb\x77\xe9\x04\x25\x80\x03\xba\xce\xae\x34\xca\x3f\x51\xae\x5c\x86\x5a\xbb\xc5\x7c\x03\x2e\xd4\xb8\xc0\xd3\xf9\xfc\x32\x6d\x23\x65\x58\xf1\xf7\xe4\xf9\xe7\x64\x44\xe7\xc6\x25\xba\xfd\xeb\x57\x9f\x01\x00\x00\xff\xff\xce\x8f\x48\xe4\x92\x01\x00\x00")

func serviceOpenshiftAnsibleServiceBrokerAsbYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceOpenshiftAnsibleServiceBrokerAsbYaml,
		"Service/openshift-ansible-service-broker/asb.yaml",
	)
}

func serviceOpenshiftAnsibleServiceBrokerAsbYaml() (*asset, error) {
	bytes, err := serviceOpenshiftAnsibleServiceBrokerAsbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/openshift-ansible-service-broker/asb.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceOpenshiftMetricsAlertmanagerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x4b\x4e\x04\x31\x0c\x44\xf7\x39\x85\x2f\x90\x86\x11\xb3\xca\x29\x90\x90\xd8\x9b\x4c\xd1\x1d\x91\x8f\x65\x9b\x39\x3f\xea\x4e\x0b\x09\x31\xcb\xaa\x57\x79\x31\x4b\x79\x87\x5a\x19\x3d\xd1\xfd\x12\xbe\x4a\xbf\x25\x7a\x83\xde\x4b\x46\x68\x70\xbe\xb1\x73\x0a\x44\xdc\xfb\x70\xf6\x32\xba\xed\x91\xc8\xe6\x68\xe1\x2a\x1b\x2f\x43\xd0\x6d\x2b\x9f\xbe\x94\xf1\x74\xa0\xbe\xc6\x0c\xf5\x68\xc8\x0a\x8f\x9d\x1b\x12\x71\x85\x7a\xe3\xce\x2b\x34\x7a\xb5\x40\x54\xf9\x03\xf5\x74\xce\x91\xe8\x68\xf0\x0d\xdf\x3b\xfe\xff\xee\x2c\x4d\x38\x23\xd1\xef\xc7\xb1\xc1\xb5\x64\x0b\x26\xc8\xbb\x4e\x86\xfa\xe1\x8d\x8f\xbc\x93\x27\xba\x5e\x5f\x8e\xe4\xac\x2b\xfc\xf5\xe8\x2e\xcf\xb3\x35\x54\x64\x1f\x3a\x8f\x63\x91\x3f\x8e\x9f\x00\x00\x00\xff\xff\x51\x8b\x15\xaa\x3b\x01\x00\x00")

func serviceOpenshiftMetricsAlertmanagerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceOpenshiftMetricsAlertmanagerYaml,
		"Service/openshift-metrics/alertmanager.yaml",
	)
}

func serviceOpenshiftMetricsAlertmanagerYaml() (*asset, error) {
	bytes, err := serviceOpenshiftMetricsAlertmanagerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/openshift-metrics/alertmanager.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceOpenshiftMetricsAlertsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4e\xc4\x30\x0c\x45\xf7\x39\x85\x2f\x90\x22\xc4\x6c\xc8\x29\x90\x90\xd8\x9b\xcc\x67\x1a\x91\xc6\x96\x6d\xe6\xfc\xa8\x4d\x85\x40\x62\xf9\xff\xb3\x9f\xcd\xda\xde\x60\xde\x64\x14\xba\x3f\xa6\xcf\x36\xae\x85\x5e\x61\xf7\x56\x91\x36\x04\x5f\x39\xb8\x24\x22\x1e\x43\x82\xa3\xc9\xf0\x3d\x12\xf9\x1c\x5a\xb8\xeb\xca\x8b\x28\x86\xaf\xed\x23\x96\x26\x0f\x07\x1a\xb7\x5c\x61\x91\x1d\xd5\x10\x79\xf0\x86\x42\xdc\x61\xe1\x39\xba\x27\xa2\xce\xef\xe8\xa7\x6d\x62\x35\xd9\x10\x2b\xbe\x76\xfc\x7b\xe3\x8c\xae\x5c\x51\xe8\xe7\x58\xde\x10\xd6\xaa\x27\x57\xd4\x5d\xa4\x62\x71\x18\xf3\x7f\xc6\xc9\x0b\x5d\x2e\x4f\x47\x0a\xb6\x1b\xe2\xe5\xe8\x9e\x67\xe9\xe8\xa8\x21\x36\xbf\x62\xd5\x3f\x8a\xef\x00\x00\x00\xff\xff\xd2\xf8\x63\x86\x2e\x01\x00\x00")

func serviceOpenshiftMetricsAlertsYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceOpenshiftMetricsAlertsYaml,
		"Service/openshift-metrics/alerts.yaml",
	)
}

func serviceOpenshiftMetricsAlertsYaml() (*asset, error) {
	bytes, err := serviceOpenshiftMetricsAlertsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/openshift-metrics/alerts.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceOpenshiftMetricsKubeStateMetricsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd0\xb1\x4e\xc3\x30\x10\xc6\xf1\x3d\x4f\x71\x5b\xa7\x40\xbb\x45\x5e\x79\x81\x4a\x20\xf6\xab\xfb\x41\xac\x24\xbe\xd3\xdd\xa5\x12\x6f\x8f\x12\x32\x84\x56\x88\xd1\xfe\xfe\xfa\xc9\x32\x6b\x79\x87\x79\x91\x9a\xe8\x76\x6a\x86\x52\xaf\x89\x5e\x61\xb7\x92\xd1\x4c\x08\xbe\x72\x70\x6a\x88\x2a\x4f\x48\x34\xcc\x17\xb4\x1e\x1c\x68\x27\x84\x95\xec\xdb\xe4\xca\x19\x89\x44\x51\xbd\x2f\x1f\xb1\x9b\x47\xbe\x60\xf4\xc5\x20\x1a\x3a\x6f\x59\xf5\x0f\x88\x6b\x95\xe0\x28\x52\xb7\x5c\x4d\x26\x44\x8f\xd9\x9f\x8a\x3c\x7b\x36\x56\x24\x3a\x84\xcd\x38\x34\xae\xc8\x4b\xa6\x62\xb1\xf6\xed\xf6\xc8\x3e\x42\x77\xea\x4f\x91\xa8\x3b\x76\xc7\xf5\x18\x6c\x9f\x88\xf3\x7a\xf9\xd8\x9a\x84\x64\x19\x13\xbd\xbd\x9c\x77\x68\x60\xc4\xd2\x7d\xfd\x16\x4f\x0f\xe2\x5d\x78\xc7\x39\x46\xe4\x10\xfb\xff\x3b\x9a\xef\x00\x00\x00\xff\xff\xc4\x37\x36\x01\x9b\x01\x00\x00")

func serviceOpenshiftMetricsKubeStateMetricsYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceOpenshiftMetricsKubeStateMetricsYaml,
		"Service/openshift-metrics/kube-state-metrics.yaml",
	)
}

func serviceOpenshiftMetricsKubeStateMetricsYaml() (*asset, error) {
	bytes, err := serviceOpenshiftMetricsKubeStateMetricsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/openshift-metrics/kube-state-metrics.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceOpenshiftMetricsPrometheusNodeExporterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x31\x4e\x03\x41\x0c\x85\xe1\x7e\x4e\x61\xa5\x5f\x48\x4a\xe6\x1a\x48\xf4\x66\xf6\xa1\x58\xec\xd8\x96\xed\x44\x1c\x1f\x2d\xd9\x82\x0e\x4a\x4b\x9f\xfc\x7e\x76\x79\x43\xa4\x98\x76\xba\x5f\xda\xa7\xe8\xda\xe9\x15\x71\x97\x81\x36\x51\xbc\x72\x71\x6f\x44\xac\x6a\xc5\x25\xa6\xb9\x9f\x44\x1e\x36\x51\x57\xdc\xf2\x49\xec\x39\x47\xb0\xa3\xd3\xa9\xe2\x86\x53\x23\xda\xf8\x1d\xdb\x41\xd9\xbd\xff\xf2\x8b\xda\x8a\x05\x5f\x6e\x51\x88\x46\xa4\x3c\xf1\x27\x48\xe7\x81\x4e\xe6\xd0\xbc\xca\x47\x2d\x13\x15\x32\xb2\xa5\x63\xec\x3b\xbb\xfe\x19\x5c\x8e\x87\x8f\xa6\x47\xac\x45\x75\x7a\xb9\x9c\xcf\x8d\x28\xb1\x61\x94\xc5\x7f\xe2\xbe\x03\x00\x00\xff\xff\x3d\xcd\xbd\x15\x20\x01\x00\x00")

func serviceOpenshiftMetricsPrometheusNodeExporterYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceOpenshiftMetricsPrometheusNodeExporterYaml,
		"Service/openshift-metrics/prometheus-node-exporter.yaml",
	)
}

func serviceOpenshiftMetricsPrometheusNodeExporterYaml() (*asset, error) {
	bytes, err := serviceOpenshiftMetricsPrometheusNodeExporterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/openshift-metrics/prometheus-node-exporter.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceOpenshiftMetricsPrometheusYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\xc1\x4e\x03\x31\x0c\x44\xef\xfb\x15\x56\xef\x59\x84\xe8\x01\xe5\x2b\x90\x90\xb8\x9b\x74\x68\x22\xb2\x89\x65\xbb\xfd\x7e\x94\x2c\x02\x81\xda\xa3\xc7\xa3\xf7\x86\xa5\xbc\x41\xad\xf4\x16\xe9\xfa\xb8\x7c\x96\x76\x8a\xf4\x0a\xbd\x96\x84\x65\x83\xf3\x89\x9d\xe3\x42\xc4\xad\x75\x67\x2f\xbd\xd9\x38\x89\xba\x68\xdf\xe0\x19\x17\x5b\x4b\x7f\xb0\x94\xb1\x21\x52\x76\x17\xbb\x5d\x50\x16\x44\x3a\xb8\x5e\x70\x98\x0d\xdb\x3d\x2b\x57\xc9\xbc\x76\x41\xb3\x5c\x3e\x7c\xb6\xc7\xab\x9d\x43\x82\x7a\x30\x24\x85\x87\xc6\x43\xf0\x4b\x0d\x5e\x87\xa9\xf2\x3b\xea\xf7\xa8\xff\x95\xe5\x6e\x64\xc2\x09\x91\x7e\xa4\x61\x83\x6b\x49\xb6\x98\x20\x0d\x98\x74\xf5\x49\x0d\xb7\x10\xfb\x3f\xd2\xf1\xf8\x34\x2f\x67\x3d\xc3\x5f\x66\xf6\xbc\x87\x86\x8a\xe4\x5d\xf7\x65\x2c\xf2\x07\xf1\x15\x00\x00\xff\xff\x4d\x2f\xa5\x3f\x79\x01\x00\x00")

func serviceOpenshiftMetricsPrometheusYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceOpenshiftMetricsPrometheusYaml,
		"Service/openshift-metrics/prometheus.yaml",
	)
}

func serviceOpenshiftMetricsPrometheusYaml() (*asset, error) {
	bytes, err := serviceOpenshiftMetricsPrometheusYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/openshift-metrics/prometheus.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceOpenshiftTemplateServiceBrokerApiserverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xc1\x6a\xc3\x40\x0c\x44\xef\xfb\x15\x22\xf7\x75\x29\xcd\xa1\xec\x57\x14\x0a\xbd\xab\x9b\x69\xb2\xc4\x5e\x09\x49\xcd\xf7\x17\xaf\x8d\x29\xb9\x49\x33\x83\xe6\x89\xb5\x7d\xc1\xbc\x49\x2f\xf4\x78\x4d\xf7\xd6\x2f\x85\x3e\x61\x8f\x56\x91\x16\x04\x5f\x38\xb8\x24\x22\xee\x5d\x82\xa3\x49\xf7\x75\x25\xf2\x2d\x34\xf1\xac\x37\x9e\x44\xd1\xfd\xd6\x7e\x62\x6a\xf2\x32\xac\x7e\xcd\x15\x16\xd9\x51\x0d\x91\x3b\x2f\x28\xc4\xda\x56\x13\x96\xff\x67\x12\xd1\x93\xbd\x2b\xae\x5c\x51\xe8\x38\x9e\x03\x8b\xce\x1c\xc8\x7b\x7b\xfe\x36\xb9\xc3\x92\x2b\xea\x8a\xa5\x62\x31\xf8\xf2\x18\x0b\x9d\xcf\x6f\x83\x36\xd8\xae\x88\x8f\xa1\xbd\x6f\xa2\x63\x46\x0d\xb1\xed\x9d\xa3\xba\xd0\x29\xec\x17\xa7\xf4\x17\x00\x00\xff\xff\x39\x6c\x0a\x80\x1b\x01\x00\x00")

func serviceOpenshiftTemplateServiceBrokerApiserverYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceOpenshiftTemplateServiceBrokerApiserverYaml,
		"Service/openshift-template-service-broker/apiserver.yaml",
	)
}

func serviceOpenshiftTemplateServiceBrokerApiserverYaml() (*asset, error) {
	bytes, err := serviceOpenshiftTemplateServiceBrokerApiserverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/openshift-template-service-broker/apiserver.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceOpenshiftWebConsoleWebconsoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xcd\x4e\xc3\x40\x0c\x84\xef\x79\x0a\xab\xf7\x0d\x42\xf4\x80\xf6\x29\x90\x90\xb8\x3b\xdb\xa1\x59\x91\xac\x2d\xdb\x6d\x5f\x1f\xe5\x47\xa5\x42\x70\xf4\x78\xfc\xcd\xec\xb2\xd6\x0f\x98\x57\x69\x99\xae\xcf\xdd\x57\x6d\xa7\x4c\xef\xb0\x6b\x2d\xe8\x66\x04\x9f\x38\x38\x77\x44\xdc\x9a\x04\x47\x95\xe6\xcb\x48\xa4\x26\x33\x62\xc4\xc5\xfb\x2a\x4f\x5e\x46\xcc\xc8\x34\x46\xa8\xff\xb9\x37\x56\x64\x3a\x84\x5d\x70\x58\x0d\xbe\xa5\xf4\x3c\xe9\xc8\xbd\x28\x9a\x8f\xf5\x33\x56\xf7\xb2\x6a\xe7\x54\x60\x91\x1c\xc5\x10\xa9\xf1\xc2\xbf\x61\x28\xd2\x5c\x26\xa4\x47\x53\x47\x34\xf1\x80\x69\xef\xc6\xaa\x99\xee\xc4\x74\xc3\x90\xf6\xab\x8e\xe8\x37\x68\x97\x5c\xb9\xe0\xbf\x2b\x57\x94\x05\xad\x62\xb1\x66\xa4\x1d\xf3\xf0\x5e\xb1\xc8\x74\x3c\xbe\xac\x53\xb0\x9d\x11\x6f\xab\xf6\xba\x89\x8e\x09\x25\xc4\xb6\x8a\x3f\xf9\xf7\x4f\xf9\x0e\x00\x00\xff\xff\x4e\xf3\x1e\x33\x8c\x01\x00\x00")

func serviceOpenshiftWebConsoleWebconsoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceOpenshiftWebConsoleWebconsoleYaml,
		"Service/openshift-web-console/webconsole.yaml",
	)
}

func serviceOpenshiftWebConsoleWebconsoleYaml() (*asset, error) {
	bytes, err := serviceOpenshiftWebConsoleWebconsoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Service/openshift-web-console/webconsole.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountDefaultDefaultYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\x31\x0e\xc2\x50\x08\x87\xf1\x9d\x53\x70\x81\x0e\xae\x6c\x9e\xc1\xc4\x9d\xf0\xfe\x35\x44\x4b\x1b\xa0\x4d\xbc\xbd\xcb\x1b\x1c\xbf\x2f\x3f\x3d\xfc\x89\x2c\xdf\x43\xf8\xba\xd1\xdb\x63\x08\x3f\x90\x97\x1b\xee\x66\xfb\x19\x4d\x1b\x5a\x87\xb6\x0a\x31\x87\x6e\x10\x1e\x58\xf5\xfc\xf4\xec\x3a\xd4\xfe\x66\xc1\x12\x5d\x42\xcb\xd4\x89\x97\x57\xe7\x77\x31\x64\xfb\xea\xa6\x8d\xa2\x5f\x00\x00\x00\xff\xff\xe3\x24\x74\x27\x7a\x00\x00\x00")

func serviceaccountDefaultDefaultYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountDefaultDefaultYaml,
		"ServiceAccount/default/default.yaml",
	)
}

func serviceaccountDefaultDefaultYaml() (*asset, error) {
	bytes, err := serviceaccountDefaultDefaultYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/default/default.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountDefaultRegistryYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xca\xb1\x0d\xc2\x40\x0c\x46\xe1\xde\x53\x78\x81\x14\xb4\xee\x98\x01\x89\xde\xf2\xfd\x17\x59\x90\xbb\xc8\x76\x22\xb1\x3d\x0d\x15\x4a\xfb\xde\xa7\xbb\x3f\x11\xe9\x73\x08\x9f\x37\x7a\xf9\x68\xc2\x0f\xc4\xe9\x86\xbb\xd9\x3c\x46\xd1\x86\xd2\xa6\xa5\x42\xcc\x43\x37\x08\x07\x56\xcf\x8a\xcf\x2f\xe4\xae\x06\xe1\x86\xae\xc7\xbb\x28\x61\x81\x4a\xa1\xe5\x8f\x2f\x86\x28\xef\x6e\x5a\xc8\x8b\x3b\x47\xf7\x95\xbe\x01\x00\x00\xff\xff\x5a\x57\xf0\x5d\x93\x00\x00\x00")

func serviceaccountDefaultRegistryYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountDefaultRegistryYaml,
		"ServiceAccount/default/registry.yaml",
	)
}

func serviceaccountDefaultRegistryYaml() (*asset, error) {
	bytes, err := serviceaccountDefaultRegistryYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/default/registry.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountDefaultRouterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc7\xb1\x0d\x03\x31\x08\x05\xd0\x9e\x29\x58\x21\x2d\x5d\x66\x88\x94\x1e\xe1\x1f\x09\xe5\x8c\x2d\x8c\x3d\xff\x35\x57\x3e\x9d\xfe\x45\x2e\x1f\x21\x7c\x5e\xf4\xf7\x68\xc2\x1f\xe4\x71\xc3\xdb\x6c\xec\x28\xea\x28\x6d\x5a\x2a\xc4\x1c\xda\x21\x9c\x63\x17\xf2\xe1\x9a\x6a\x10\x6e\xf8\xe9\xbe\x8a\xee\x00\x00\x00\xff\xff\x8c\xa3\x64\xd2\x52\x00\x00\x00")

func serviceaccountDefaultRouterYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountDefaultRouterYaml,
		"ServiceAccount/default/router.yaml",
	)
}

func serviceaccountDefaultRouterYaml() (*asset, error) {
	bytes, err := serviceaccountDefaultRouterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/default/router.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeServiceCatalogServiceCatalogApiserverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xca\xb1\x0d\x02\x31\x0c\x05\xd0\x3e\x53\x78\x81\x14\xb4\xee\x98\x01\x89\xfe\xe3\xfb\x42\xd6\x71\x4e\x94\xf8\x32\x3f\x42\x50\xd1\x3e\x3d\x74\xbf\x73\x4c\x6f\xa1\xb2\x2e\x65\xf7\xd8\x54\x6e\x1c\xcb\x8d\x57\xb3\x76\x46\x96\x83\x89\x0d\x09\x2d\x22\x81\x83\x2a\xf3\x1b\xaa\x21\xf1\x6a\xcf\x8a\xee\x1f\xe2\xf8\x8d\xd9\x61\x54\xd9\xcf\x07\xeb\xdf\x2d\xef\x00\x00\x00\xff\xff\x49\x40\x87\x23\x72\x00\x00\x00")

func serviceaccountKubeServiceCatalogServiceCatalogApiserverYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeServiceCatalogServiceCatalogApiserverYaml,
		"ServiceAccount/kube-service-catalog/service-catalog-apiserver.yaml",
	)
}

func serviceaccountKubeServiceCatalogServiceCatalogApiserverYaml() (*asset, error) {
	bytes, err := serviceaccountKubeServiceCatalogServiceCatalogApiserverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-service-catalog/service-catalog-apiserver.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeServiceCatalogServiceCatalogControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xca\x31\x0e\xc2\x30\x0c\x05\xd0\x3d\xa7\xf0\x05\x32\xb0\x7a\xe3\x0c\x48\xec\x1f\xf7\x0b\x45\x4d\xed\x2a\x71\x73\x7e\x06\x98\xd8\x1f\xce\xf6\xe4\x98\x2d\x5c\x65\xdd\xca\xde\x7c\x53\x79\x70\xac\x66\xbc\x9b\xc5\xe5\x59\x0e\x26\x36\x24\xb4\x88\x38\x0e\xaa\xcc\x2f\xa8\x86\x44\x8f\x77\xb5\xf0\x1c\xd1\x3b\xc7\x8f\xcc\x13\x46\x95\xfd\x7a\xb1\xfe\xe1\xf2\x09\x00\x00\xff\xff\x80\x4c\x62\xbd\x73\x00\x00\x00")

func serviceaccountKubeServiceCatalogServiceCatalogControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeServiceCatalogServiceCatalogControllerYaml,
		"ServiceAccount/kube-service-catalog/service-catalog-controller.yaml",
	)
}

func serviceaccountKubeServiceCatalogServiceCatalogControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeServiceCatalogServiceCatalogControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-service-catalog/service-catalog-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemAttachdetachControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0a\xc3\x30\x0c\x05\xd0\xdd\xa7\xd0\x05\x32\x74\xd5\xd6\x33\x14\xba\xff\xca\x1f\x6a\x12\xcb\xc1\x52\x0c\xbd\x7d\x29\x74\x79\xcb\xc3\xd9\x9e\x9c\xd1\x86\xab\xac\x5b\xd9\x9b\x57\x95\x07\xe7\x6a\xc6\xbb\xd9\xb8\x3c\x4b\x67\xa2\x22\xa1\x45\xc4\xd1\xa9\x82\x4c\xd8\xbb\xf2\xe7\x66\xc3\x73\x8e\xe3\xe0\xfc\x7f\x9c\x30\xaa\xec\xd7\x8b\x5b\x7c\x22\xd9\xcb\x37\x00\x00\xff\xff\xdd\xb0\x45\x02\x67\x00\x00\x00")

func serviceaccountKubeSystemAttachdetachControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemAttachdetachControllerYaml,
		"ServiceAccount/kube-system/attachdetach-controller.yaml",
	)
}

func serviceaccountKubeSystemAttachdetachControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemAttachdetachControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/attachdetach-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemCertificateControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\xc2\x50\x08\x06\xe0\xfd\x9d\x82\x0b\x74\x70\x65\xf3\x0c\x26\xee\x48\x7f\x13\xd2\x3e\x68\x80\x36\xf1\xf6\x2e\x9d\x3f\x39\xec\x8d\x2c\x0b\x67\xba\x1e\x63\x33\x5f\x99\x5e\xc8\xcb\x14\x4f\xd5\x38\xbd\xc7\x44\xcb\x2a\x2d\x3c\x88\x5c\x26\x98\x14\xd9\xf6\x35\x95\xc6\xa2\xe1\x9d\xb1\xef\xc8\x9b\xeb\x10\x05\xd3\x76\x7e\xb0\xd4\xaf\x1a\x73\xfc\x03\x00\x00\xff\xff\xbb\x0d\xf4\x61\x66\x00\x00\x00")

func serviceaccountKubeSystemCertificateControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemCertificateControllerYaml,
		"ServiceAccount/kube-system/certificate-controller.yaml",
	)
}

func serviceaccountKubeSystemCertificateControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemCertificateControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/certificate-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemClusterroleAggregationControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\xb1\x0d\x02\x31\x0c\x05\xd0\x3e\x53\x78\x81\x14\xb4\xe9\x98\x01\x89\xde\xf8\xbe\xa2\xe8\x12\xfb\x64\x3b\x27\xb1\x3d\x0d\xfd\xe3\x6b\xbc\xe1\x31\x4c\x1b\xdd\x8f\x72\x0e\x3d\x1a\xbd\xe0\xf7\x10\x3c\x45\x6c\x6b\x96\x85\xe4\x83\x93\x5b\x21\x52\x5e\x68\x24\x73\x47\xc2\xdd\x26\x2a\xf7\xee\xe8\x9c\xc3\xb4\x8a\x69\xba\xcd\x09\xff\xd3\xb8\x58\xd0\xe8\xdc\x1f\xd4\xf8\x46\x62\x95\x5f\x00\x00\x00\xff\xff\x57\xfb\xa5\xf7\x72\x00\x00\x00")

func serviceaccountKubeSystemClusterroleAggregationControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemClusterroleAggregationControllerYaml,
		"ServiceAccount/kube-system/clusterrole-aggregation-controller.yaml",
	)
}

func serviceaccountKubeSystemClusterroleAggregationControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemClusterroleAggregationControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/clusterrole-aggregation-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemCronjobControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x21\x0e\xc3\x50\x08\x06\x60\xff\x4e\xc1\x05\x2a\x66\x71\x3b\xc3\x92\x79\x4a\x7f\xc1\xda\x07\x0d\xd0\x26\xbb\xfd\xcc\xf4\x27\xa7\xbd\x91\x65\xe1\x4c\xf7\x63\xec\xe6\x1b\xd3\x0b\x79\x9b\xe2\xa9\x1a\x97\xf7\x98\x68\xd9\xa4\x85\x07\x91\xcb\x04\x93\x66\xf8\x27\xd6\x45\xc3\x3b\xe3\x38\x90\x7f\xaa\x53\x14\x4c\xfb\xb5\x62\xa9\x6f\x35\xe6\xf8\x05\x00\x00\xff\xff\x7b\x5f\xab\xfe\x62\x00\x00\x00")

func serviceaccountKubeSystemCronjobControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemCronjobControllerYaml,
		"ServiceAccount/kube-system/cronjob-controller.yaml",
	)
}

func serviceaccountKubeSystemCronjobControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemCronjobControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/cronjob-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemDaemonSetControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\xb1\x0d\x03\x31\x08\x05\xd0\xde\x53\xb0\x80\x8b\xb4\x74\x99\x21\x52\x7a\x82\x7f\x61\xdd\x19\x4e\xc0\x59\xca\xf6\x69\x52\x3f\xb9\xe6\x1b\x91\xd3\x8d\x69\x3f\xda\x31\x6d\x30\xbd\x10\x7b\x2a\x9e\xaa\x7e\x5b\xb5\x85\x92\x21\x25\xdc\x88\x4c\x16\x98\x86\x60\xb9\xf5\x44\x75\x75\xab\xf0\xf3\x44\xfc\x35\x2f\x51\x30\x1d\xf7\x07\x3d\xbf\x59\x58\xed\x17\x00\x00\xff\xff\x35\x22\x26\xff\x65\x00\x00\x00")

func serviceaccountKubeSystemDaemonSetControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemDaemonSetControllerYaml,
		"ServiceAccount/kube-system/daemon-set-controller.yaml",
	)
}

func serviceaccountKubeSystemDaemonSetControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemDaemonSetControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/daemon-set-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemDeploymentControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x21\x0e\xc3\x30\x0c\x05\x50\x9e\x53\xf8\x02\x05\xa3\x66\x3b\xc3\xa4\x71\xcf\xf9\x20\x6a\x62\x47\xb1\x5b\x29\xb7\x1f\x29\x7e\x32\xdb\x17\x2b\x9a\x1b\xd3\xfd\x2a\x67\xb3\xca\xf4\xc1\xba\x9b\xe2\xad\xea\x97\x65\x19\x48\xa9\x92\xc2\x85\xc8\x64\x80\xa9\x62\x76\xdf\x03\x96\x87\xba\xe5\xf2\xde\xb1\x1e\x8d\x29\x0a\xa6\xf3\xfa\xe1\x88\x1d\x89\x51\xfe\x01\x00\x00\xff\xff\x72\x66\xdb\x91\x65\x00\x00\x00")

func serviceaccountKubeSystemDeploymentControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemDeploymentControllerYaml,
		"ServiceAccount/kube-system/deployment-controller.yaml",
	)
}

func serviceaccountKubeSystemDeploymentControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemDeploymentControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/deployment-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemDisruptionControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\xb1\x0d\x03\x31\x08\x05\xd0\xde\x53\xb0\xc0\x15\x69\xdd\x65\x86\x48\xe9\x09\xfe\x05\xba\x33\x58\x80\x4f\xca\xf6\x69\x52\x3f\x5e\xfa\x46\xa4\xba\x75\xba\x1f\xed\x54\x1b\x9d\x5e\x88\x5b\x05\x4f\x11\xdf\x56\x6d\xa2\x78\x70\x71\x6f\x44\xc6\x13\x9d\x86\x66\xec\x55\xea\x76\x88\x5b\x85\x5f\x17\xe2\xaf\xb9\x58\xd0\xe9\xdc\x1f\x1c\xf9\xcd\xc2\x6c\xbf\x00\x00\x00\xff\xff\xce\xeb\xff\x1b\x65\x00\x00\x00")

func serviceaccountKubeSystemDisruptionControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemDisruptionControllerYaml,
		"ServiceAccount/kube-system/disruption-controller.yaml",
	)
}

func serviceaccountKubeSystemDisruptionControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemDisruptionControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/disruption-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemEndpointControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\xb1\x0d\x03\x31\x08\x05\xd0\xde\x53\xb0\xc0\x15\x69\xe9\x32\x43\xa4\xf4\x04\xff\x02\xdd\x19\x2c\xc3\x59\xca\xf6\x69\x52\x3f\x99\xf6\xc6\x4a\x0b\x67\xda\x8f\x76\x9a\x77\xa6\x17\xd6\x36\xc5\x53\x35\x6e\xaf\x36\x50\xd2\xa5\x84\x1b\x91\xcb\x00\x13\xbc\xcf\x30\xaf\x43\xc3\x6b\xc5\x75\x61\xfd\x2d\xa7\x28\x98\xce\xfb\x83\x23\xbf\x59\x18\xed\x17\x00\x00\xff\xff\x85\x62\x4f\x04\x63\x00\x00\x00")

func serviceaccountKubeSystemEndpointControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemEndpointControllerYaml,
		"ServiceAccount/kube-system/endpoint-controller.yaml",
	)
}

func serviceaccountKubeSystemEndpointControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemEndpointControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/endpoint-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemGenericGarbageCollectorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\xc3\x30\x08\x05\xd0\xdd\xa7\xe0\x02\x1e\xba\xb2\xf5\x0c\x95\xba\x13\xf2\x65\xa1\xc4\x38\xc2\xc4\x52\x6f\xdf\x25\xfb\x93\xcb\xbe\x88\x69\xc3\x99\xd6\xab\x1c\xe6\x3b\xd3\x07\xb1\x4c\xf1\x56\x1d\xb7\x67\xe9\x48\xd9\x25\x85\x0b\x91\x4b\x07\x53\x83\x23\x4c\x6b\x93\xd8\xa4\xa1\xea\x38\x4f\x68\x8e\x78\xc4\xbc\x44\xc1\x74\xdc\x1b\xea\xfc\xcd\x44\x2f\xff\x00\x00\x00\xff\xff\x97\xae\x4a\x71\x69\x00\x00\x00")

func serviceaccountKubeSystemGenericGarbageCollectorYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemGenericGarbageCollectorYaml,
		"ServiceAccount/kube-system/generic-garbage-collector.yaml",
	)
}

func serviceaccountKubeSystemGenericGarbageCollectorYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemGenericGarbageCollectorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/generic-garbage-collector.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemJobControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\x21\x0e\xc3\x50\x08\x06\x60\xff\x4e\xc1\x05\x2a\x66\x71\x3b\xc3\x92\x79\x4a\x7f\xc1\xda\x07\x0d\xd0\x26\xbb\xfd\xcc\xec\x27\xa7\xbd\x91\x65\xe1\x4c\xf7\x63\xec\xe6\x1b\xd3\x0b\x79\x9b\xe2\xa9\x1a\x97\xf7\x98\x68\xd9\xa4\x85\x07\x91\xcb\x04\xd3\x27\xd6\x45\xc3\x3b\xe3\x38\x90\x7f\xae\x53\x14\x4c\xfb\xb5\x62\xa9\x6f\x35\xe6\xf8\x05\x00\x00\xff\xff\x7b\x3f\x8a\x44\x5e\x00\x00\x00")

func serviceaccountKubeSystemJobControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemJobControllerYaml,
		"ServiceAccount/kube-system/job-controller.yaml",
	)
}

func serviceaccountKubeSystemJobControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemJobControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/job-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemNamespaceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\xb1\x0d\xc3\x40\x08\x46\xe1\xfe\xa6\x60\x01\x17\x69\xe9\x32\x43\xa4\xf4\x04\xff\x05\xb2\x0f\x2c\xc0\x96\xb2\x7d\x24\x2b\xcd\x2b\xde\x27\x87\xbd\x91\x65\xe1\x4c\xd7\x63\x6c\xe6\x2b\xd3\x0b\x79\x99\xe2\xa9\x1a\xa7\xf7\x98\x68\x59\xa5\x85\x07\x91\xcb\x04\xdf\xad\x43\x14\x8b\x86\x77\xc6\xbe\x23\xff\x78\x6f\xa6\xed\xfc\x60\xa9\x6f\x35\xe6\xf8\x05\x00\x00\xff\xff\x46\xe2\x6c\x3e\x64\x00\x00\x00")

func serviceaccountKubeSystemNamespaceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemNamespaceControllerYaml,
		"ServiceAccount/kube-system/namespace-controller.yaml",
	)
}

func serviceaccountKubeSystemNamespaceControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemNamespaceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/namespace-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemNodeControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xb1\x0d\xc3\x40\x08\x05\xd0\xfe\xa6\x60\x01\x17\x69\xe9\x32\x43\xa4\xf4\x84\xfb\x05\xb2\x0f\x2c\xc0\x96\xb2\x7d\x9a\xb4\x4f\x4e\x7b\x23\xcb\xc2\x99\xee\xc7\xd8\xcd\x27\xd3\x0b\x79\x9b\xe2\xa9\x1a\x97\xf7\x58\x68\x99\xd2\xc2\x83\xc8\x65\x81\xc9\x63\x62\xd3\xf0\xce\x38\x0e\xe4\xdf\xeb\x14\x05\xd3\x7e\x7d\xb0\xd5\xb7\x1a\x6b\xfc\x02\x00\x00\xff\xff\x3b\x44\x9c\x61\x5f\x00\x00\x00")

func serviceaccountKubeSystemNodeControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemNodeControllerYaml,
		"ServiceAccount/kube-system/node-controller.yaml",
	)
}

func serviceaccountKubeSystemNodeControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemNodeControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/node-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemPersistentVolumeBinderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x0a\x43\x21\x0c\x06\xe0\xdd\x53\xe4\x02\x0e\x5d\xb3\xf5\x0c\x85\xee\x79\xfa\x0f\xc1\x1a\xc5\x44\xa1\xb7\x2f\x85\xb7\x7f\x9f\x4c\x7d\x63\xb9\x0e\x63\x3a\x8f\xd4\xd4\x2a\xd3\x0b\xeb\x68\xc1\xb3\x94\xb1\x2d\x52\x47\x48\x95\x10\x4e\x44\x26\x1d\x4c\xf3\x5f\x3c\x60\x91\xcf\xf8\xec\x8e\x7c\xa9\x55\xac\x1b\xf8\x94\x02\xa6\xb6\x2f\x64\xff\x7a\xa0\xa7\x5f\x00\x00\x00\xff\xff\xe6\xad\x24\x4b\x68\x00\x00\x00")

func serviceaccountKubeSystemPersistentVolumeBinderYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemPersistentVolumeBinderYaml,
		"ServiceAccount/kube-system/persistent-volume-binder.yaml",
	)
}

func serviceaccountKubeSystemPersistentVolumeBinderYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemPersistentVolumeBinderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/persistent-volume-binder.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemPodGarbageCollectorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\xc3\x20\x0c\x05\xd0\x9d\x53\xf8\x02\x0c\x5d\xbd\xf5\x0c\x95\xba\xff\x98\xaf\x08\x25\x60\x04\x4e\xa4\xde\xbe\x4b\xe6\x87\x51\xbf\x9c\xab\x7a\x57\xb9\x5f\xe9\xa8\xbd\xa8\x7c\x38\xef\x6a\x7c\x9b\xf9\xd5\x23\x35\x06\x0a\x02\x9a\x44\x3a\x1a\x55\x86\x97\xbc\x63\x6e\xd8\x99\xcd\xcf\x93\x16\x3e\x1f\x5d\x03\x46\x95\xe3\xda\x98\xd7\x6f\x05\x5b\xfa\x07\x00\x00\xff\xff\x10\xde\xd2\x47\x65\x00\x00\x00")

func serviceaccountKubeSystemPodGarbageCollectorYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemPodGarbageCollectorYaml,
		"ServiceAccount/kube-system/pod-garbage-collector.yaml",
	)
}

func serviceaccountKubeSystemPodGarbageCollectorYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemPodGarbageCollectorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/pod-garbage-collector.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemPvProtectionControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\xb1\x0d\x03\x31\x08\x05\xd0\xde\x53\xb0\x80\x8b\xb4\x74\x99\x21\x52\x7a\xc2\xfd\x02\xdd\x19\x2c\xcc\x59\xca\xf6\x69\xd2\x3f\x99\xf6\x46\x2e\x0b\x67\xda\x8f\x76\x9a\x1f\x4c\x2f\xe4\x36\xc5\x53\x35\x6e\xaf\x36\x50\x72\x48\x09\x37\x22\x97\x01\xa6\xb9\xfb\xcc\x28\x68\x59\x78\xd7\xf0\xca\xb8\x2e\xe4\x1f\xac\x29\x0a\xa6\xf3\xfe\xa0\xaf\xef\x2a\x8c\xf6\x0b\x00\x00\xff\xff\x31\xf1\x4f\xb5\x68\x00\x00\x00")

func serviceaccountKubeSystemPvProtectionControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemPvProtectionControllerYaml,
		"ServiceAccount/kube-system/pv-protection-controller.yaml",
	)
}

func serviceaccountKubeSystemPvProtectionControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemPvProtectionControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/pv-protection-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemPvcProtectionControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\xb1\x0d\x03\x31\x08\x05\xd0\xde\x53\xb0\x80\x8b\xb4\x74\x99\x21\x52\x7a\xc2\xfd\x02\xdd\x19\x2c\xcc\x59\xca\xf6\x69\xd2\x3f\x99\xf6\x46\x2e\x0b\x67\xda\x8f\x76\x9a\x1f\x4c\x2f\xe4\x36\xc5\x53\x35\x6e\xaf\x36\x50\x72\x48\x09\x37\x22\x97\x01\xa6\xb9\xb5\xcf\x8c\x82\x96\x85\x77\x0d\xaf\x8c\xeb\x42\xfe\xc5\x9a\xa2\x60\x3a\xef\x0f\xfa\xfa\xae\xc2\x68\xbf\x00\x00\x00\xff\xff\x4c\xd1\xac\x16\x69\x00\x00\x00")

func serviceaccountKubeSystemPvcProtectionControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemPvcProtectionControllerYaml,
		"ServiceAccount/kube-system/pvc-protection-controller.yaml",
	)
}

func serviceaccountKubeSystemPvcProtectionControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemPvcProtectionControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/pvc-protection-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemReplicasetControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\xb1\x0d\x03\x31\x08\x05\xd0\xde\x53\xb0\xc0\x15\x69\xe9\x32\x43\xa4\xf4\x84\xfb\x05\x3a\x1b\x5b\xc0\x59\xca\xf6\x69\x52\x3f\x59\xf6\x46\xa4\x4d\x67\xda\x8f\x76\x99\x9f\x4c\x2f\xc4\x36\xc5\x53\x75\xde\x5e\x6d\xa0\xe4\x94\x12\x6e\x44\x2e\x03\x4c\x81\xd5\x4d\x25\x51\x87\x4e\xaf\x98\xbd\x23\xfe\x9a\x4b\x14\x4c\xd7\xfd\xc1\x91\xdf\x2c\x8c\xf6\x0b\x00\x00\xff\xff\xf3\x6b\x35\x86\x65\x00\x00\x00")

func serviceaccountKubeSystemReplicasetControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemReplicasetControllerYaml,
		"ServiceAccount/kube-system/replicaset-controller.yaml",
	)
}

func serviceaccountKubeSystemReplicasetControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemReplicasetControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/replicaset-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemReplicationControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\xb1\x0d\x03\x31\x08\x05\xd0\xde\x53\xb0\xc0\x15\x69\xe9\x32\x43\xa4\xf4\x84\xfb\x05\x3a\x1b\x2c\xcc\x59\xca\xf6\x69\x52\x3f\x99\xf6\x46\x2e\x0b\x67\xda\x8f\x76\x99\x9f\x4c\x2f\xe4\x36\xc5\x53\x35\x6e\xaf\x36\x50\x72\x4a\x09\x37\x22\x97\x01\xa6\xc4\xec\xa6\x52\x16\x7e\x68\x78\x65\xf4\x8e\xfc\xf3\x9a\xa2\x60\xba\xee\x0f\x8e\xf5\x5d\x85\xd1\x7e\x01\x00\x00\xff\xff\xdf\xa4\xbe\xb4\x66\x00\x00\x00")

func serviceaccountKubeSystemReplicationControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemReplicationControllerYaml,
		"ServiceAccount/kube-system/replication-controller.yaml",
	)
}

func serviceaccountKubeSystemReplicationControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemReplicationControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/replication-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemResourcequotaControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\xc3\x30\x08\x05\xd0\xdd\xa7\xe0\x02\x19\xba\xb2\xf5\x0c\x95\xba\x53\xf2\x07\x2b\x31\xa4\x80\x2d\xf5\xf6\x5d\xb2\x3f\xb9\xfa\x1b\x91\xdd\x8d\x69\x3d\xda\xd1\x6d\x67\x7a\x21\x56\x57\x3c\x55\x7d\x5a\xb5\x81\x92\x5d\x4a\xb8\x11\x99\x0c\x30\x05\xd2\x67\x28\xbe\xd3\x4b\x36\x75\xab\xf0\xf3\x44\xdc\x20\x2f\x51\x30\x1d\xf3\x83\x2d\x7f\x59\x18\xed\x1f\x00\x00\xff\xff\x81\x8b\x68\xa0\x68\x00\x00\x00")

func serviceaccountKubeSystemResourcequotaControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemResourcequotaControllerYaml,
		"ServiceAccount/kube-system/resourcequota-controller.yaml",
	)
}

func serviceaccountKubeSystemResourcequotaControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemResourcequotaControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/resourcequota-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemServiceAccountControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\xc3\x30\x08\x05\xd0\xdd\xa7\xe0\x02\x1e\xba\xb2\xf5\x0c\x95\xba\x53\xf2\x07\x2b\x31\x44\x40\x22\xf5\xf6\x1d\xdc\xfd\xc9\x39\xde\x88\x1c\x6e\x4c\xf7\xa3\xed\xc3\x36\xa6\x17\xe2\x1e\x8a\xa7\xaa\x5f\x56\x6d\xa2\x64\x93\x12\x6e\x44\x26\x13\x4c\xb9\x40\x97\x25\xba\xba\x55\xf8\x71\x20\xfe\x24\x4f\x51\x30\xed\xd7\x07\x3d\xbf\x59\x98\xed\x17\x00\x00\xff\xff\xbb\x35\x9b\xf3\x6a\x00\x00\x00")

func serviceaccountKubeSystemServiceAccountControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemServiceAccountControllerYaml,
		"ServiceAccount/kube-system/service-account-controller.yaml",
	)
}

func serviceaccountKubeSystemServiceAccountControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemServiceAccountControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/service-account-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemServiceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\xb1\x0d\xc3\x40\x08\x05\xd0\xfe\xa6\x60\x01\x17\x69\xe9\x32\x43\xa4\xf4\x04\xff\x02\xd9\x07\x16\x60\x4b\xd9\x3e\x45\x5c\xbf\x27\x87\xbd\x91\x65\xe1\x4c\xd7\x63\x6c\xe6\x2b\xd3\x0b\x79\x99\xe2\xa9\x1a\xa7\xf7\x98\x68\x59\xa5\x85\x07\x91\xcb\x04\x53\xfd\xc3\xa2\xe1\x9d\xb1\xef\xc8\x9b\xea\x10\x05\xd3\x76\x7e\xb0\xd4\xb7\x1a\x73\xfc\x02\x00\x00\xff\xff\x9c\x39\xaa\x74\x62\x00\x00\x00")

func serviceaccountKubeSystemServiceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemServiceControllerYaml,
		"ServiceAccount/kube-system/service-controller.yaml",
	)
}

func serviceaccountKubeSystemServiceControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemServiceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/service-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountKubeSystemStatefulsetControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\xc2\x30\x0c\x05\xd0\x3d\xa7\xf0\x05\x3a\xb0\x7a\xe3\x0c\x48\xec\xc6\xfd\x48\x51\x13\xa7\x8a\x7f\x2a\x71\x7b\x96\xce\xcf\xce\xfa\xc6\xcc\x3a\x42\xe5\x7a\x94\xa3\xc6\xae\xf2\xc2\xbc\xaa\xe3\xe9\x3e\x56\xb0\x74\xd0\x76\xa3\x69\x11\x09\xeb\x50\x49\x1a\xf1\x5d\x2d\xc1\xcd\x47\x70\x8e\xd6\x30\x6f\xce\xd3\x1c\x2a\xc7\xfa\x60\xcb\x5f\x12\xbd\xfc\x03\x00\x00\xff\xff\xda\xec\x8c\x68\x66\x00\x00\x00")

func serviceaccountKubeSystemStatefulsetControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountKubeSystemStatefulsetControllerYaml,
		"ServiceAccount/kube-system/statefulset-controller.yaml",
	)
}

func serviceaccountKubeSystemStatefulsetControllerYaml() (*asset, error) {
	bytes, err := serviceaccountKubeSystemStatefulsetControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/kube-system/statefulset-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftAnsibleServiceBrokerAsbClientYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcc\x31\x0e\xc2\x30\x0c\x05\xd0\x3d\xa7\xf0\x05\x32\xb0\x7a\xe3\x0c\x48\xec\x8e\xfb\x11\x56\x5b\x27\xb2\x4d\xcf\xcf\x00\xeb\x1b\x9e\x2c\x7b\x22\xd2\xa6\x33\x5d\xb7\xb6\x9b\x6f\x4c\x0f\xc4\x65\x8a\xbb\xea\xfc\x78\xb5\x13\x25\x9b\x94\x70\x23\x72\x39\xc1\x24\x39\xba\x1e\x06\xaf\x3f\xe5\x12\x05\xd3\x5c\xf0\x7c\xdb\xab\xba\x78\xda\x38\xd0\xf3\x57\xf5\x11\x73\x47\xb4\x6f\x00\x00\x00\xff\xff\xd7\x34\xcf\xb8\x6f\x00\x00\x00")

func serviceaccountOpenshiftAnsibleServiceBrokerAsbClientYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftAnsibleServiceBrokerAsbClientYaml,
		"ServiceAccount/openshift-ansible-service-broker/asb-client.yaml",
	)
}

func serviceaccountOpenshiftAnsibleServiceBrokerAsbClientYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftAnsibleServiceBrokerAsbClientYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-ansible-service-broker/asb-client.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftAnsibleServiceBrokerAsbYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcc\x31\x0e\xc2\x30\x0c\x05\xd0\x3d\xa7\xf0\x05\x32\xb0\x7a\xe3\x0c\x48\xec\x3f\xe9\x47\x58\xa5\x4e\x14\x9b\x9e\x9f\x81\x6e\x6f\x7a\x98\xf6\xe4\x0a\x1b\xae\x72\xde\xca\x6e\xbe\xa9\x3c\xb8\x4e\xeb\xbc\xf7\x3e\xbe\x9e\xe5\x60\x62\x43\x42\x8b\x88\xe3\xa0\x0a\xa2\x5d\x8e\x89\x4e\x95\x31\xe9\xf1\xb6\x57\x56\x78\x58\xfb\xb0\xc6\xff\xa8\x6d\x8d\x9d\xab\xfc\x02\x00\x00\xff\xff\x34\xc9\x9d\xab\x68\x00\x00\x00")

func serviceaccountOpenshiftAnsibleServiceBrokerAsbYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftAnsibleServiceBrokerAsbYaml,
		"ServiceAccount/openshift-ansible-service-broker/asb.yaml",
	)
}

func serviceaccountOpenshiftAnsibleServiceBrokerAsbYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftAnsibleServiceBrokerAsbYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-ansible-service-broker/asb.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftAzureAzureClusterReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\x42\x31\x08\x06\xe0\xbd\xa7\xe0\x02\x1d\x5c\xd9\x3c\x83\x89\x3b\xa1\xbf\x91\xe8\xa3\x0d\xd0\x37\x78\x7a\x13\xe3\xfc\x7d\xb2\xec\x8e\x48\x9b\xce\x74\x5e\xda\xcb\x7c\x30\xdd\x10\xa7\x29\xae\xaa\x73\x7b\xb5\x03\x25\x43\x4a\xb8\x11\xb9\x1c\x60\x92\xcf\x0e\x74\x7d\xef\x2c\x44\x0f\xc8\x40\xfc\x31\x97\x28\x98\xe6\x82\xe7\xd3\x1e\xd5\x7f\xb7\x7d\x03\x00\x00\xff\xff\xfa\xa3\x43\xcc\x68\x00\x00\x00")

func serviceaccountOpenshiftAzureAzureClusterReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftAzureAzureClusterReaderYaml,
		"ServiceAccount/openshift-azure/azure-cluster-reader.yaml",
	)
}

func serviceaccountOpenshiftAzureAzureClusterReaderYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftAzureAzureClusterReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-azure/azure-cluster-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftEtcdEtcdOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0a\x02\x41\x0c\x05\xd0\x7e\x4e\x91\x0b\x6c\x61\x9b\xce\x33\x08\xf6\x21\xf3\xc5\x20\x9b\x84\x4c\x9c\xf3\x8b\xb0\xed\xe3\x49\xda\x13\xb5\x2c\x9c\x69\xdf\xc6\xc7\x7c\x32\x3d\x50\xdb\x14\x77\xd5\xf8\x7a\x8f\x13\x2d\x53\x5a\x78\x10\xb9\x9c\x60\x42\xeb\x3c\x22\x51\xd2\x51\x97\xae\x14\x05\x53\x24\x7c\xbd\xed\xd5\xc7\x3f\x8d\x5f\x00\x00\x00\xff\xff\x88\xc7\xce\xbb\x60\x00\x00\x00")

func serviceaccountOpenshiftEtcdEtcdOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftEtcdEtcdOperatorYaml,
		"ServiceAccount/openshift-etcd/etcd-operator.yaml",
	)
}

func serviceaccountOpenshiftEtcdEtcdOperatorYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftEtcdEtcdOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-etcd/etcd-operator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraBootstrapAutoapproverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\xb1\x0d\xc3\x40\x08\x05\xd0\xfe\xa6\x60\x01\x17\x69\xe9\x32\x43\xa4\xf4\x3f\x67\xac\xa0\xc8\x80\x00\xdf\xfc\x69\x5c\x3f\x84\xbe\x25\x4b\xdd\x98\xd6\x63\xfc\xd4\x76\xa6\x97\xe4\xd2\x29\xcf\x39\xfd\xb2\x1e\xa7\x34\x76\x34\x78\x10\x19\x4e\x61\xfa\xb8\x77\x75\x22\x36\x5c\xed\x88\x48\x5f\x92\x37\x57\x60\x0a\x93\x87\x58\x7d\xf5\xe8\x4d\xed\x48\x8c\x7f\x00\x00\x00\xff\xff\xf9\x58\xe3\x0b\x6a\x00\x00\x00")

func serviceaccountOpenshiftInfraBootstrapAutoapproverYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraBootstrapAutoapproverYaml,
		"ServiceAccount/openshift-infra/bootstrap-autoapprover.yaml",
	)
}

func serviceaccountOpenshiftInfraBootstrapAutoapproverYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraBootstrapAutoapproverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/bootstrap-autoapprover.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraBuildConfigChangeControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\xc3\x30\x08\x00\xc0\xdd\xaf\xe0\x03\x1e\xba\xb2\xf5\x0d\x95\xba\x53\x8c\x13\x54\x07\x2c\x4c\xf2\xfe\xaa\x52\xc6\x93\x8e\xa6\xbe\x25\x96\xba\x21\x5c\x8f\xf2\x55\x6b\x08\x2f\x89\x4b\x59\x9e\xcc\x7e\x5a\x96\x43\x92\x1a\x25\x61\x01\x30\x3a\x04\xe1\x73\xea\x68\x95\xdd\xba\x6e\x95\x77\xb2\x4d\xfe\xca\xf0\x31\x24\xee\xb6\x26\xb1\x20\xf8\x14\x5b\xbb\xf6\xac\x6a\x3d\xa8\xfc\x02\x00\x00\xff\xff\xbd\xbe\xa8\x31\x72\x00\x00\x00")

func serviceaccountOpenshiftInfraBuildConfigChangeControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraBuildConfigChangeControllerYaml,
		"ServiceAccount/openshift-infra/build-config-change-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraBuildConfigChangeControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraBuildConfigChangeControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/build-config-change-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraBuildControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\xc3\x30\x08\x05\xd0\xdd\xa7\xe0\x02\x19\xba\xb2\xf5\x0c\x95\xba\x53\xfc\xa3\xa2\x3a\x60\x61\x92\xf3\x77\xc9\xfc\x64\xda\x1b\xb9\x2c\x9c\xe9\x7a\xb4\x9f\x79\x67\x7a\x21\x2f\x53\x3c\x55\xe3\xf4\x6a\x07\x4a\xba\x94\x70\x23\x72\x39\xc0\xf4\x39\x6d\xf4\x4d\xc3\x2b\x63\x0c\xe4\x0d\x6b\x8a\x82\x29\x26\x7c\x7d\x6d\xaf\xcd\x7c\x4f\x69\xff\x00\x00\x00\xff\xff\x0b\x91\xf1\xef\x64\x00\x00\x00")

func serviceaccountOpenshiftInfraBuildControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraBuildControllerYaml,
		"ServiceAccount/openshift-infra/build-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraBuildControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraBuildControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/build-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraClusterQuotaReconciliationControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\xb1\xad\x03\x31\x08\x06\xe0\xde\x53\xb0\x80\x8b\xd7\xd2\xbd\x19\x22\xa5\x47\xdc\x7f\x0a\x8a\x0f\x1c\x8c\x6f\xfe\x34\xe9\x3f\x99\xf6\x44\x2e\x0b\x67\xba\xff\xda\xdb\xfc\x60\x7a\x20\x6f\x53\xfc\xab\xc6\xf6\x6a\x17\x4a\x0e\x29\xe1\x46\xe4\x72\x81\x49\xc7\x5e\x85\xec\x9f\x1d\x25\x3d\xa1\xe1\x6a\xc3\xa4\x2c\xbc\x6b\x78\x65\x8c\x81\xfc\xf9\x35\x45\xc1\x14\x13\xbe\x5e\x76\x56\x37\x3f\x53\xda\x37\x00\x00\xff\xff\x37\xc4\x82\x2f\x7b\x00\x00\x00")

func serviceaccountOpenshiftInfraClusterQuotaReconciliationControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraClusterQuotaReconciliationControllerYaml,
		"ServiceAccount/openshift-infra/cluster-quota-reconciliation-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraClusterQuotaReconciliationControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraClusterQuotaReconciliationControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/cluster-quota-reconciliation-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraCustomerAdminControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\xb1\x0d\x03\x31\x08\x05\xd0\xde\x53\xb0\x80\x8b\xb4\x74\x99\x21\x52\x7a\x84\xff\x29\x28\x67\xb0\x30\x77\xf3\xa7\x49\xff\x64\xd9\x1b\xb9\x2d\x9c\xe9\x7e\xb4\xaf\xf9\x60\x7a\x21\x6f\x53\x3c\x55\xe3\xf2\x6a\x13\x25\x43\x4a\xb8\x11\xb9\x4c\x30\xe9\xb5\x2b\x26\xb2\xcb\x98\xe6\x5d\xc3\x2b\xe3\x3c\x91\x7f\xb1\x97\x28\x98\x62\xc1\xf7\xc7\x8e\xea\xe6\x47\x4a\xfb\x05\x00\x00\xff\xff\x67\xaf\xd6\x38\x6d\x00\x00\x00")

func serviceaccountOpenshiftInfraCustomerAdminControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraCustomerAdminControllerYaml,
		"ServiceAccount/openshift-infra/customer-admin-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraCustomerAdminControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraCustomerAdminControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/customer-admin-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraDefaultRolebindingsControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x12\x02\x21\x0c\x05\xd0\x9e\x53\xe4\x02\x14\xb6\x74\x9e\xc1\x19\xfb\x18\x3e\x9a\x91\x4d\x98\x90\xdd\xf3\xdb\xd8\x3f\x5e\xfa\x44\x6c\x75\x6b\x74\xdd\xca\x57\xad\x37\x7a\x20\x2e\x15\xdc\x45\xfc\xb4\x2c\x07\x92\x3b\x27\xb7\x42\x64\x7c\xa0\x51\xc7\xe0\x73\x66\x0d\x9f\x78\xa9\x75\xb5\xf7\xae\xe2\x96\xe1\x73\x22\xfe\x6e\x2f\x16\x34\xf2\x05\xdb\x1f\x1d\x59\xd5\x46\x70\xf9\x05\x00\x00\xff\xff\x38\x13\xad\x27\x73\x00\x00\x00")

func serviceaccountOpenshiftInfraDefaultRolebindingsControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraDefaultRolebindingsControllerYaml,
		"ServiceAccount/openshift-infra/default-rolebindings-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraDefaultRolebindingsControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraDefaultRolebindingsControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/default-rolebindings-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraDeployerControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\x42\x31\x08\x06\xe0\xbd\xa7\xe0\x02\x6f\x70\x65\xf3\x0c\x26\xee\x84\xfe\x2f\x12\xfb\xa0\xa1\xd8\xc4\xdb\xbb\x38\x7f\x32\xed\x89\x5c\x16\xce\xb4\x6f\xed\x6d\xde\x99\x1e\xc8\x6d\x8a\xbb\x6a\x7c\xbc\xda\x85\x92\x2e\x25\xdc\x88\x5c\x2e\x30\x75\xcc\x11\x5f\xe4\xa1\xe1\x95\x31\x06\xf2\x6f\x6b\x8a\x82\x29\x26\x7c\xbd\xec\xac\xc3\xfc\x4c\x69\xbf\x00\x00\x00\xff\xff\x16\x69\x39\x17\x67\x00\x00\x00")

func serviceaccountOpenshiftInfraDeployerControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraDeployerControllerYaml,
		"ServiceAccount/openshift-infra/deployer-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraDeployerControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraDeployerControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/deployer-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraDeploymentconfigControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\xb1\x0d\x02\x31\x0c\x05\xd0\x3e\x53\x78\x81\x2b\x68\xd3\x31\x03\x12\xbd\xe5\xfc\x80\x45\x62\x47\x8e\x39\x89\xed\x69\xae\x7f\xbc\xf4\x89\xd8\xea\x56\xe9\xbc\x95\x8f\x5a\xab\xf4\x40\x9c\x2a\xb8\x8b\xf8\xd7\xb2\x4c\x24\x37\x4e\xae\x85\xc8\x78\xa2\x52\xc3\x1a\xfe\x9b\xb0\x14\xb7\xae\xaf\x43\xdc\x32\x7c\x0c\xc4\x65\xf6\x62\x41\x25\x5f\xb0\xfd\xd6\x9e\x87\x5a\x0f\x2e\xff\x00\x00\x00\xff\xff\x33\x96\x1a\x86\x6f\x00\x00\x00")

func serviceaccountOpenshiftInfraDeploymentconfigControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraDeploymentconfigControllerYaml,
		"ServiceAccount/openshift-infra/deploymentconfig-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraDeploymentconfigControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraDeploymentconfigControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/deploymentconfig-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraHorizontalPodAutoscalerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\xc3\x30\x08\x05\xd0\xdd\xa7\xe0\x02\x1e\xba\xb2\xf5\x0c\x95\xba\x7f\x61\xa2\xa0\x26\x60\x61\x92\xa1\xa7\xef\xd2\xfd\x61\xda\x5b\x73\x59\x38\xd3\xfd\x68\x1f\xf3\xc1\xf4\xd2\xbc\x4d\xf4\x29\x12\x97\x57\x3b\xb5\x30\x50\xe0\x46\xe4\x38\x95\x69\x8f\xb4\x6f\x78\xe1\xe8\x33\x46\xc7\x55\xb1\x04\x87\xe6\x5f\xac\x09\x51\xa6\x98\xea\x6b\xb7\xad\xba\xf9\x96\x68\xbf\x00\x00\x00\xff\xff\x6e\x42\xca\x14\x6d\x00\x00\x00")

func serviceaccountOpenshiftInfraHorizontalPodAutoscalerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraHorizontalPodAutoscalerYaml,
		"ServiceAccount/openshift-infra/horizontal-pod-autoscaler.yaml",
	)
}

func serviceaccountOpenshiftInfraHorizontalPodAutoscalerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraHorizontalPodAutoscalerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/horizontal-pod-autoscaler.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraImageImportControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\x42\x31\x08\x06\xe0\xbd\xa7\xe0\x02\x1d\x5c\xd9\x3c\x83\x89\x3b\xe1\xfd\x4f\x89\xaf\xd0\x50\xec\xf9\x5d\x9c\x3f\x99\xf6\x44\x2e\x0b\x67\xda\xb7\xf6\x31\x3f\x98\x1e\xc8\x6d\x8a\xbb\x6a\x7c\xbd\xda\x40\xc9\x21\x25\xdc\x88\x5c\x06\x98\x6c\xc8\x0b\xdd\xc6\x8c\xac\xae\xe1\x95\x71\x5d\xc8\xbf\xaf\x29\x0a\xa6\x98\xf0\xf5\xb6\xb3\xba\xf9\x99\xd2\x7e\x01\x00\x00\xff\xff\xea\x35\xca\xf5\x6b\x00\x00\x00")

func serviceaccountOpenshiftInfraImageImportControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraImageImportControllerYaml,
		"ServiceAccount/openshift-infra/image-import-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraImageImportControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraImageImportControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/image-import-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraImageTriggerControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\xb1\xad\x03\x31\x08\x06\xe0\xde\x53\xb0\x80\x8b\xd7\xd2\xbd\x19\x22\xa5\x47\xdc\x7f\x0e\xca\x19\x2c\x4c\x6e\xfe\x34\xe9\x3f\x59\xf6\x44\x6e\x0b\x67\xba\xff\xda\xdb\xfc\x60\x7a\x20\x6f\x53\xfc\xab\xc6\xc7\xab\x4d\x94\x1c\x52\xc2\x8d\xc8\x65\x82\xc9\xa6\x0c\xf4\x4a\x1b\x03\xd9\x35\xbc\x32\xae\x0b\xf9\x03\x7b\x89\x82\x29\x16\x7c\xbf\xec\xac\x6e\x7e\xa6\xb4\x6f\x00\x00\x00\xff\xff\xfd\x55\xc3\x0b\x6c\x00\x00\x00")

func serviceaccountOpenshiftInfraImageTriggerControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraImageTriggerControllerYaml,
		"ServiceAccount/openshift-infra/image-trigger-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraImageTriggerControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraImageTriggerControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/image-trigger-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraIngressToRouteControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\xb1\xad\xc3\x40\x08\x06\xe0\xfe\xa6\x60\x81\x2b\x5e\x4b\xf7\x66\x88\x94\x1e\xe1\xdf\x09\x8a\x0d\x27\xc0\x9e\x3f\x4d\xfa\x4f\x96\x3d\x91\x65\xe1\x4c\xf7\xdf\xf8\x98\x6f\x4c\x0f\xe4\x6d\x8a\x7f\xd5\xb8\xbc\xc7\x89\x96\x4d\x5a\x78\x10\xb9\x9c\x60\x32\x7f\x25\xaa\x66\xc7\xcc\xb8\x1a\x53\xc3\x3b\xe3\x38\x90\x3f\x53\x4b\x14\x4c\xb1\xe0\xf5\xb6\xbd\xa7\xf9\x9e\x32\xbe\x01\x00\x00\xff\xff\xc1\x42\x5c\xf7\x6f\x00\x00\x00")

func serviceaccountOpenshiftInfraIngressToRouteControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraIngressToRouteControllerYaml,
		"ServiceAccount/openshift-infra/ingress-to-route-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraIngressToRouteControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraIngressToRouteControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/ingress-to-route-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraNamespaceSecurityAllocationControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\x31\x8a\xc3\x40\x0c\x46\xe1\x7e\x4e\xa1\x0b\x4c\xb1\xad\xba\x3d\x43\x20\xbd\x90\x7f\x13\x91\xb1\x34\x68\x64\x43\x6e\x1f\x30\x69\x5e\xf5\x3e\x99\xf6\x44\x2e\x0b\x67\xba\xfe\xda\xdb\x7c\x63\x7a\x20\x2f\x53\xfc\xab\xc6\xe9\xd5\x0e\x94\x6c\x52\xc2\x8d\xc8\xe5\x00\xdf\x5d\x53\x14\x7d\x41\xcf\xb4\xfa\x74\x19\x23\x54\xca\xc2\xbb\x86\x57\xc6\x18\xc8\x1f\xb8\x57\xa6\x98\xf0\xf5\xb2\xbd\xba\xf9\x9e\xd2\xbe\x01\x00\x00\xff\xff\x30\x91\x69\x32\x7c\x00\x00\x00")

func serviceaccountOpenshiftInfraNamespaceSecurityAllocationControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraNamespaceSecurityAllocationControllerYaml,
		"ServiceAccount/openshift-infra/namespace-security-allocation-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraNamespaceSecurityAllocationControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraNamespaceSecurityAllocationControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/namespace-security-allocation-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraNodeBootstrapperYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\xb6\xb0\xa5\xf3\x0c\x26\xf6\x38\xf3\x37\x12\xb3\x40\x00\xe7\xfc\x36\xd6\x4f\x42\x9f\xc8\x52\x37\xa6\x7d\x1b\x1f\xb5\xc5\xf4\x40\x6e\x9d\xb8\xcf\xe9\x5f\xeb\x71\xa1\x65\x49\x0b\x0f\x22\x93\x0b\x4c\xe6\x0b\xc7\xcb\xbd\xab\x53\x22\x90\x7f\xa9\x90\x09\x26\x0f\x58\xbd\xf5\xec\x43\xed\x4c\x19\xbf\x00\x00\x00\xff\xff\x47\x1b\xf2\xce\x65\x00\x00\x00")

func serviceaccountOpenshiftInfraNodeBootstrapperYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraNodeBootstrapperYaml,
		"ServiceAccount/openshift-infra/node-bootstrapper.yaml",
	)
}

func serviceaccountOpenshiftInfraNodeBootstrapperYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraNodeBootstrapperYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/node-bootstrapper.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraOriginNamespaceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\x02\x41\x08\x46\xe1\x7e\x4e\xc1\x05\xa6\xb0\xa5\xf3\x0c\x26\xf6\x84\x65\x95\xb8\xfb\x33\x61\x70\xce\x6f\x34\x96\xef\xe5\x93\xe1\x77\xcb\xe9\x01\xa6\x75\x69\x2f\xc7\xc6\x74\xb3\x5c\xae\x76\x55\x8d\x37\xaa\x9d\x56\xb2\x49\x09\x37\x22\xc8\x69\x4c\x91\xfe\x70\xf4\x6f\xcc\x21\x6a\x5d\x03\x95\x71\x1c\x96\x7f\xf3\xdb\x4c\x31\x0c\xf3\xe9\x7b\x75\xc7\x9e\xd2\x3e\x01\x00\x00\xff\xff\x28\xd4\x5f\x1a\x6f\x00\x00\x00")

func serviceaccountOpenshiftInfraOriginNamespaceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraOriginNamespaceControllerYaml,
		"ServiceAccount/openshift-infra/origin-namespace-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraOriginNamespaceControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraOriginNamespaceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/origin-namespace-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraPvRecyclerControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\x42\x31\x08\x06\xe0\xbd\xa7\xe0\x02\x1d\x5c\xd9\x3c\x83\x89\x3b\xe1\xfd\x2f\x12\xfb\xa0\xa1\xd8\xc4\xdb\xbb\x38\x7f\x32\xed\x89\x5c\x16\xce\xb4\x6f\xed\x6d\x7e\x30\x3d\x90\xdb\x14\x77\xd5\xf8\x78\xb5\x0b\x25\x87\x94\x70\x23\x72\xb9\xc0\x34\x77\x4f\xe8\x57\x07\xb2\x6b\x78\x65\x8c\x81\xfc\xf3\x9a\xa2\x60\x8a\x09\x5f\x2f\x3b\xab\x9b\x9f\x29\xed\x17\x00\x00\xff\xff\x49\xaa\x4c\xb2\x6a\x00\x00\x00")

func serviceaccountOpenshiftInfraPvRecyclerControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraPvRecyclerControllerYaml,
		"ServiceAccount/openshift-infra/pv-recycler-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraPvRecyclerControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraPvRecyclerControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/pv-recycler-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraResourcequotaControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\xc3\x30\x08\x05\xd0\xdd\xa7\xe0\x02\x19\xba\xb2\xf5\x0c\x95\xba\x23\xf2\xa3\xa2\x26\xe0\x62\xec\xf3\x77\xc9\xfe\xa4\xdb\x1b\x39\x2c\x9c\x69\x3d\xda\xd7\x7c\x67\x7a\x21\x97\x29\x9e\xaa\x31\xbd\xda\x85\x92\x5d\x4a\xb8\x11\xb9\x5c\x60\x4a\x8c\x98\xa9\xf8\xcd\x28\xd9\x34\xbc\x32\xce\x13\x79\x83\xd1\x45\xc1\x14\x1d\x3e\x3e\x76\xd4\x66\x7e\xa4\xb4\x7f\x00\x00\x00\xff\xff\xdc\x1c\x29\x4b\x6c\x00\x00\x00")

func serviceaccountOpenshiftInfraResourcequotaControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraResourcequotaControllerYaml,
		"ServiceAccount/openshift-infra/resourcequota-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraResourcequotaControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraResourcequotaControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/resourcequota-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraSdnControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xb1\x0d\xc3\x40\x08\x05\xd0\xfe\xa6\x60\x01\x17\x69\xe9\x32\x43\xa4\xf4\x88\xc3\x0a\x8a\xfd\x39\x01\xf1\xfc\x69\xdc\x3e\x59\xfe\xb6\x2c\x0f\x30\x5d\x8f\xf1\x75\x4c\xa6\x97\xe5\xe5\x6a\x4f\xd5\xf8\xa1\xc7\x69\x2d\x53\x5a\x78\x10\x41\x4e\x63\xaa\x89\x4d\x03\x9d\x71\x1c\x96\x37\xd7\x12\x35\xa6\x58\x86\xfa\xf8\xde\x9b\x63\x4f\x19\xff\x00\x00\x00\xff\xff\xd6\xf1\x54\xb8\x62\x00\x00\x00")

func serviceaccountOpenshiftInfraSdnControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraSdnControllerYaml,
		"ServiceAccount/openshift-infra/sdn-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraSdnControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraSdnControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/sdn-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraServiceServingCertControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\xa6\xb0\xa5\xf3\x0c\x26\xf6\x84\xfd\xab\xc4\x5d\x98\x30\x38\xe7\x37\x51\xab\xd7\x3c\x19\x76\x47\x4e\x0b\x67\x5a\x97\xf6\x32\xdf\x98\x6e\xc8\x65\x8a\xab\x6a\xbc\xbd\xda\x89\x92\x4d\x4a\xb8\x11\xb9\x9c\x60\x9a\xbf\xd0\xbf\xfa\xa3\x2b\xb2\xba\x86\x57\xc6\x71\x20\xff\x6f\x0e\x51\x30\xc5\x80\xcf\xa7\xed\xd5\xcd\xf7\x94\xf6\x09\x00\x00\xff\xff\xea\xed\x7b\x4d\x73\x00\x00\x00")

func serviceaccountOpenshiftInfraServiceServingCertControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraServiceServingCertControllerYaml,
		"ServiceAccount/openshift-infra/service-serving-cert-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraServiceServingCertControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraServiceServingCertControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/service-serving-cert-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraServiceaccountControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\xc2\x50\x08\x06\xe0\xfd\x9d\x82\x0b\x74\x70\x65\xf3\x0c\x26\xee\x84\xfe\x8d\xc4\x16\x5e\x00\x7b\x7e\x87\x76\xff\x64\xda\x1b\x59\x16\xce\x74\x3e\xc6\xd7\x7c\x65\x7a\x21\x4f\x53\x3c\x55\xe3\xe7\x3d\x0e\xb4\xac\xd2\xc2\x83\xc8\xe5\x00\x53\x5d\x40\x2e\xb0\x68\x78\x67\xec\x3b\xf2\x16\x35\x45\xc1\x14\x13\x5e\x1f\xdb\x7a\x31\xdf\x52\xc6\x3f\x00\x00\xff\xff\x19\x19\x54\xad\x6d\x00\x00\x00")

func serviceaccountOpenshiftInfraServiceaccountControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraServiceaccountControllerYaml,
		"ServiceAccount/openshift-infra/serviceaccount-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraServiceaccountControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraServiceaccountControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/serviceaccount-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraServiceaccountPullSecretsControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\x31\x0e\xc3\x30\x08\x05\xd0\xdd\xa7\xe0\x02\x1e\xba\x7a\xeb\x19\x2a\x75\x47\xe4\x47\x45\x75\xc0\x02\x92\xf3\x77\x48\xf7\xc7\x4b\xdf\x88\x54\xb7\x41\xd7\xa3\x7d\xd5\xb6\x41\x2f\xc4\xa5\x82\xa7\x88\x9f\x56\xed\x40\xf1\xc6\xc5\xa3\x11\x19\x1f\x18\x94\x37\xe0\x1b\xf4\x75\xce\xd9\x13\x12\xa8\xec\xe2\x56\xe1\x73\x22\xfe\x3c\x17\x0b\x06\xf9\x82\xe5\x47\xf7\xea\x6a\x7b\x70\xfb\x05\x00\x00\xff\xff\xd8\x23\x64\x4d\x7a\x00\x00\x00")

func serviceaccountOpenshiftInfraServiceaccountPullSecretsControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraServiceaccountPullSecretsControllerYaml,
		"ServiceAccount/openshift-infra/serviceaccount-pull-secrets-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraServiceaccountPullSecretsControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraServiceaccountPullSecretsControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/serviceaccount-pull-secrets-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraTemplateInstanceControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\xb1\x0d\x03\x31\x08\x05\xd0\xde\x53\xb0\x80\x8b\xb4\x74\x99\x21\x52\x7a\xc4\xfd\x53\x50\x6c\xb0\x30\xb9\xf9\xd3\x5c\xff\x64\xd9\x1b\xb9\x2d\x9c\xe9\x7a\xb4\xaf\xf9\xc1\xf4\x42\x5e\xa6\x78\xaa\xc6\xcf\xab\x4d\x94\x1c\x52\xc2\x8d\xc8\x65\x82\xa9\x30\xd7\x90\x42\x37\xdf\x25\xae\xe8\x1a\x5e\x19\x63\x20\x6f\xb4\x97\x28\x98\x62\xc1\xf7\xc7\xce\xea\xe6\x67\x4a\xfb\x07\x00\x00\xff\xff\x8f\x5a\x7b\x9d\x70\x00\x00\x00")

func serviceaccountOpenshiftInfraTemplateInstanceControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraTemplateInstanceControllerYaml,
		"ServiceAccount/openshift-infra/template-instance-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraTemplateInstanceControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraTemplateInstanceControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/template-instance-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraTemplateInstanceFinalizerControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\xb1\x0d\x02\x31\x0c\x05\xd0\x3e\x53\x78\x81\x14\xb4\xe9\x98\x01\x89\xde\xf2\xfd\x13\x16\xc9\x4f\xe4\x98\x2b\x98\x9e\x86\xfe\xe9\xf2\x27\x62\xfb\x64\x93\xeb\x56\xde\xce\xa3\xc9\x03\x71\xb9\xe1\x6e\x36\x3f\xcc\x32\x90\x7a\x68\x6a\x2b\x22\xd4\x81\x26\x89\xb1\xba\x26\xaa\x73\xa7\xd2\x50\x4f\xa7\x76\xff\x22\xaa\x4d\x66\xcc\xde\x11\x7f\xbe\x97\x1a\x9a\xcc\x05\xee\x97\x9f\x59\x9d\x67\x68\xf9\x05\x00\x00\xff\xff\x66\xa0\x1b\x33\x7a\x00\x00\x00")

func serviceaccountOpenshiftInfraTemplateInstanceFinalizerControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraTemplateInstanceFinalizerControllerYaml,
		"ServiceAccount/openshift-infra/template-instance-finalizer-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraTemplateInstanceFinalizerControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraTemplateInstanceFinalizerControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/template-instance-finalizer-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftInfraUnidlingControllerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\xc3\x30\x08\x05\xd0\xdd\xa7\xe0\x02\x19\xba\xb2\xf5\x0c\x95\xba\x23\x4c\x5a\x54\xe7\x63\x61\x92\xf3\x77\xc9\xfc\x64\xfa\xdb\x72\x79\x80\xe9\x7a\xb4\x9f\xa3\x33\xbd\x2c\x2f\x57\x7b\xaa\xc6\x89\x6a\x87\x95\x74\x29\xe1\x46\x04\x39\x8c\xe9\x84\xf7\xe1\xf8\x6c\x1a\xa8\x8c\x31\x2c\x6f\x5b\x53\xd4\x98\x62\x1a\xd6\xd7\xf7\xda\x1c\x7b\x4a\xfb\x07\x00\x00\xff\xff\xe6\x4a\xb3\xba\x67\x00\x00\x00")

func serviceaccountOpenshiftInfraUnidlingControllerYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftInfraUnidlingControllerYaml,
		"ServiceAccount/openshift-infra/unidling-controller.yaml",
	)
}

func serviceaccountOpenshiftInfraUnidlingControllerYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftInfraUnidlingControllerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-infra/unidling-controller.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftMetricsKubeStateMetricsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xc9\x31\x0e\x42\x21\x0c\x06\xe0\x9d\x53\xf4\x02\x6f\x70\xed\xe6\x19\x4c\xdc\x6b\xf9\x8d\x0d\xa1\x10\x5a\x38\xbf\x8b\x71\xfe\x64\xda\x13\x2b\x6c\x38\xd3\xb9\x95\x66\x5e\x99\x1e\x58\xc7\x14\x77\xd5\xb1\x3d\x4b\x47\x4a\x95\x14\x2e\x44\x2e\x1d\x4c\x6d\xbf\x70\x45\x4a\xe2\xea\xc8\x65\x1a\x3f\x8a\x29\x0a\xa6\x31\xe1\xf1\xb1\x77\xfe\xf9\x1b\x00\x00\xff\xff\x65\xfc\xa6\x13\x68\x00\x00\x00")

func serviceaccountOpenshiftMetricsKubeStateMetricsYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftMetricsKubeStateMetricsYaml,
		"ServiceAccount/openshift-metrics/kube-state-metrics.yaml",
	)
}

func serviceaccountOpenshiftMetricsKubeStateMetricsYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftMetricsKubeStateMetricsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-metrics/kube-state-metrics.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftMetricsPrometheusNodeExporterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xca\xb1\x0d\x03\x31\x08\x05\xd0\xde\x53\xb0\x80\x8b\xb4\xee\x32\x43\xa4\xf4\xc8\xfe\xd1\xa1\xc8\x80\x80\x3b\x65\xfc\x34\xd7\x3f\x76\x79\x23\x52\x4c\x07\x5d\x8f\xf6\x15\x5d\x83\x5e\x88\x4b\x26\x9e\x73\xda\xa9\xd5\x36\x8a\x17\x17\x8f\x46\xa4\xbc\x31\xc8\xc3\x36\xea\xc0\x99\x5d\x6d\xa1\xe3\xe7\x16\x85\xb8\x41\x3a\x4f\x0c\x32\x87\xe6\x21\x9f\xea\x1b\x15\x32\xb3\xfd\x03\x00\x00\xff\xff\x92\xbd\xe3\x1f\x6e\x00\x00\x00")

func serviceaccountOpenshiftMetricsPrometheusNodeExporterYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftMetricsPrometheusNodeExporterYaml,
		"ServiceAccount/openshift-metrics/prometheus-node-exporter.yaml",
	)
}

func serviceaccountOpenshiftMetricsPrometheusNodeExporterYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftMetricsPrometheusNodeExporterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-metrics/prometheus-node-exporter.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftMetricsPrometheusReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\x31\x0e\x02\x41\x08\x05\xd0\x7e\x4e\xc1\x05\xb6\xb0\xa5\xf3\x0c\x26\xf6\x84\xf9\x66\x89\x19\x86\x00\xbb\xe7\xb7\xb1\x7e\x12\xf6\x46\x96\x6d\x67\xba\x1f\xe3\x6b\x3e\x99\x5e\xc8\xdb\x14\x4f\xd5\x7d\x79\x8f\x85\x96\x29\x2d\x3c\x88\x5c\x16\x98\x22\xf7\x42\x9f\xb8\xea\x48\xc8\x44\xfe\xa5\x42\x14\x4c\x3b\xe0\x75\xda\xa7\x8f\x85\x4e\xd3\x1a\xbf\x00\x00\x00\xff\xff\xeb\x01\x3f\x21\x67\x00\x00\x00")

func serviceaccountOpenshiftMetricsPrometheusReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftMetricsPrometheusReaderYaml,
		"ServiceAccount/openshift-metrics/prometheus-reader.yaml",
	)
}

func serviceaccountOpenshiftMetricsPrometheusReaderYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftMetricsPrometheusReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-metrics/prometheus-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftMetricsPrometheusYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x8e\xb1\x6e\xc3\x30\x0c\x44\x77\x7f\x85\xc0\x25\x4b\xe2\x22\x2b\xb7\x7c\x41\x01\x17\xe8\x4e\xc8\x97\x5a\x68\x4d\x19\x14\xe5\xa5\xc8\xbf\x17\x42\x12\xa7\x7b\x90\x91\x87\xc7\xbb\x27\x4b\xfa\x84\x95\x94\x95\xc3\x7a\xec\xbe\x93\x8e\x1c\x3e\x60\x6b\x8a\x38\xc5\x98\xab\x7a\x37\xc3\x65\x14\x17\xee\x42\x10\xd5\xec\xe2\x29\x6b\x69\x67\x08\xe5\xca\xca\x95\x2d\x7d\x5e\xa0\x65\x4a\x67\xef\x53\x7e\xcb\x52\x7d\x3a\x18\xc6\x64\x88\x6e\x38\xc3\xa0\x11\xbd\xfc\xc0\x7c\x16\x95\x2f\x18\x87\xdd\x2f\xb5\x5d\x62\x7a\x3f\x55\x9f\x86\x1b\x3e\xdc\x71\xda\xd3\x43\x93\x98\xd6\x23\xed\x69\x2b\x23\xde\xde\x87\x5c\xbd\xd1\x2a\x33\x88\xe9\xff\x0a\x5d\x2e\xbb\x27\x7d\xcb\x8b\x4d\xcb\x73\x8e\x8b\xe5\xf9\x75\x86\xad\x1d\x3e\xa1\xde\x2d\x5b\xce\xe1\x11\xdf\xa2\xb2\x48\x04\x87\xcd\xf8\x30\xc3\x2d\xc5\xd2\xfd\x05\x00\x00\xff\xff\xcc\x98\x2f\x4b\x69\x02\x00\x00")

func serviceaccountOpenshiftMetricsPrometheusYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftMetricsPrometheusYaml,
		"ServiceAccount/openshift-metrics/prometheus.yaml",
	)
}

func serviceaccountOpenshiftMetricsPrometheusYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftMetricsPrometheusYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-metrics/prometheus.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftNodeSyncYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc7\x31\x0e\x02\x30\x08\x05\xd0\x9d\x53\x70\x01\x07\x57\x36\xcf\x60\xe2\x4e\xe8\x37\x12\x53\x68\x0a\x36\xf1\xf6\x2e\x8e\x4f\x97\x3f\xb0\xcb\x33\x84\xcf\x95\xde\x1e\x43\xf8\x8e\x7d\xdc\x70\x33\xcb\x4f\x34\x4d\xb4\x0e\x6d\x15\x62\x0e\x9d\x10\xae\x6f\xd8\x1f\xb5\xd4\x20\x9c\x0b\x51\x2f\x7f\xf6\x25\x72\x80\x7e\x01\x00\x00\xff\xff\x13\xbd\x2d\x92\x57\x00\x00\x00")

func serviceaccountOpenshiftNodeSyncYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftNodeSyncYaml,
		"ServiceAccount/openshift-node/sync.yaml",
	)
}

func serviceaccountOpenshiftNodeSyncYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftNodeSyncYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-node/sync.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftSdnSdnYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\xb1\x09\xc4\x30\x0c\x05\xd0\xde\x53\x68\x81\x2b\xae\x55\x77\x33\x1c\xa4\x17\xf2\x0f\x11\xc1\xb2\xb1\x14\xcf\x1f\x02\xe9\x1e\x3c\x19\xb6\x61\x86\x75\x67\x5a\xdf\x72\x9a\x57\xa6\x3f\xe6\x32\xc5\x4f\xb5\x5f\x9e\xa5\x21\xa5\x4a\x0a\x17\x22\x97\x06\xa6\xa8\xfe\x3a\x86\x28\x98\xfa\x80\xc7\x61\x7b\x7e\x9e\xba\x03\x00\x00\xff\xff\x55\x00\xdf\x84\x55\x00\x00\x00")

func serviceaccountOpenshiftSdnSdnYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftSdnSdnYaml,
		"ServiceAccount/openshift-sdn/sdn.yaml",
	)
}

func serviceaccountOpenshiftSdnSdnYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftSdnSdnYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-sdn/sdn.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftTemplateServiceBrokerApiserverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcc\x31\x0e\x42\x31\x08\x06\xe0\xbd\xa7\xe0\x02\x1d\x5c\xd9\x3c\x83\x89\x3b\xf6\xfd\x46\xf2\x2c\x25\x80\x3d\xbf\x83\xae\xdf\xf0\x89\xeb\x1d\x91\xba\x8c\x69\x5f\xda\xa9\x76\x30\xdd\x10\x5b\x07\xae\x63\xac\x8f\x55\x9b\x28\x39\xa4\x84\x1b\x91\xc9\x04\x93\xb8\x26\x62\x23\xfe\x92\x2e\x03\x4c\xcb\x61\xf9\xd2\x67\xf5\xc2\xf4\xb7\x14\x7a\xfe\xaa\xfe\x88\x75\x22\xda\x37\x00\x00\xff\xff\x76\x8f\x24\x13\x6f\x00\x00\x00")

func serviceaccountOpenshiftTemplateServiceBrokerApiserverYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftTemplateServiceBrokerApiserverYaml,
		"ServiceAccount/openshift-template-service-broker/apiserver.yaml",
	)
}

func serviceaccountOpenshiftTemplateServiceBrokerApiserverYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftTemplateServiceBrokerApiserverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-template-service-broker/apiserver.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\x3d\xa7\xf0\x05\x32\xb0\x7a\xe3\x0c\x48\xec\xc6\xfd\x08\xab\x8d\x13\xc5\xa6\xe7\x67\x68\xd8\xdf\x93\x61\x4f\xcc\xb0\xee\x4c\xe7\xad\xec\xe6\x1b\xd3\x03\xf3\x34\xc5\x5d\xb5\x7f\x3d\x4b\x43\xca\x26\x29\x5c\x88\x5c\x1a\x98\x12\x6d\x1c\x92\x88\x0b\xbe\x66\xdf\x31\xab\x1e\x06\xcf\x85\x62\x88\x82\xa9\x0f\x78\x7c\xec\x9d\xf5\x7f\xea\x4a\xf5\x5a\xe5\x17\x00\x00\xff\xff\x58\xec\xdd\x2a\x82\x00\x00\x00")

func serviceaccountOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYaml,
		"ServiceAccount/openshift-template-service-broker/templateservicebroker-client.yaml",
	)
}

func serviceaccountOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-template-service-broker/templateservicebroker-client.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceaccountOpenshiftWebConsoleWebconsoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcb\x31\x0e\xc2\x30\x0c\x85\xe1\x3d\xa7\x78\x17\xe8\xc0\x9a\x8d\x33\x20\xb1\x3b\xe9\x43\x58\xa4\xb6\x55\x87\xf6\xfa\x88\x91\x81\xed\xd7\x2f\x7d\x12\x7a\xe7\x9e\xea\x56\x71\x5c\xca\x4b\x6d\xad\xb8\x71\x3f\xb4\xf3\xda\xbb\xbf\x6d\x96\x8d\x53\x56\x99\x52\x0b\x30\xa4\x71\xe4\xb7\x00\x89\xa8\xf0\xa0\xe5\x53\x1f\x73\x39\xd9\x96\xee\x96\x3e\x58\x00\x93\x8d\x15\x27\xdb\xef\xca\x90\xce\x7f\xea\x13\x00\x00\xff\xff\x26\xf2\x62\xe1\x8d\x00\x00\x00")

func serviceaccountOpenshiftWebConsoleWebconsoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_serviceaccountOpenshiftWebConsoleWebconsoleYaml,
		"ServiceAccount/openshift-web-console/webconsole.yaml",
	)
}

func serviceaccountOpenshiftWebConsoleWebconsoleYaml() (*asset, error) {
	bytes, err := serviceaccountOpenshiftWebConsoleWebconsoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ServiceAccount/openshift-web-console/webconsole.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _statefulsetAppsOpenshiftMetricsPrometheusYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5f\x6f\xdb\x36\x10\x7f\xf7\xa7\xb8\x19\x05\xda\x1a\xa3\x95\x34\xdd\xd0\xa8\xf0\x80\x62\x2d\xba\x87\xa5\x0b\x9a\x76\x7b\x28\xba\x81\xa6\xce\x16\x61\xfe\x1b\xef\xe4\xc6\x68\xfa\xdd\x07\xf9\xaf\x24\x2b\xae\x9d\x25\x1d\x06\x44\x4f\x12\x79\xf7\xe3\xdd\x91\xf7\xe3\x91\x92\x41\xff\x8e\x91\xb4\x77\x29\xc8\x10\x28\x99\x1e\x77\x26\xda\x65\x29\x5c\xb0\x64\x1c\x15\xe6\x02\xb9\x63\x91\x65\x26\x59\xa6\x1d\x00\x23\x87\x68\xa8\x7c\x83\x52\x23\x85\x10\xbd\x45\xce\xb1\xa0\x0e\x80\x93\x16\x5b\x9a\x28\x48\x85\x29\xf8\x80\x8e\x72\x3d\x62\x61\x91\xa3\x56\xd4\xa1\x80\xaa\xc4\x0a\x3e\x3b\x93\x4e\x8e\xd1\xa2\xe3\x73\x6f\xb4\x9a\xa5\x70\x2e\xa3\x34\x06\x4d\x07\x20\x62\x30\x5a\x49\x4a\xe1\xb8\x03\x40\x68\x50\xb1\x8f\x0b\x2b\xac\x64\x95\xff\x5a\x31\xab\xcd\x30\x46\x1b\x8c\x64\x5c\xaa\x54\x1c\x2a\x1f\x53\xd3\x6e\xd3\x2f\x9f\x16\xe7\x00\x56\x1e\x94\x8f\xf2\x8e\xa5\x76\x18\xd7\x50\x02\x64\x1c\x57\x80\x05\x88\x10\xfd\x54\x67\x18\x07\xeb\x68\x54\x7b\x73\xe6\x40\x42\x66\x59\x44\xa2\x41\xfa\xec\xe9\xd3\x93\x66\xf7\xba\xb7\xda\x81\x56\x6a\x23\x32\x6f\xa5\x76\x83\x5e\xb5\xa7\x08\xc4\x11\xa5\x1d\x94\xba\x69\x92\x18\xaf\xa4\xc9\x3d\x71\x7a\x7a\x74\x7a\x54\x95\x54\x46\xa3\x63\xa1\xb3\x01\xcd\x88\xd1\xa6\x84\x71\xaa\x15\x4a\xa5\x7c\xe1\x38\xdd\x9a\xbe\x74\x2b\x44\x25\xce\x43\xb1\x11\x24\x19\x07\x9f\xbb\x11\xc9\x17\x51\x61\x37\x85\xee\x7a\x39\x50\xf7\x7b\xe8\x4e\x31\x0e\xcb\xd6\x31\x72\xf9\xb9\x12\x7c\x23\x2d\x76\x37\x51\x03\xe8\x6e\x8d\x5d\x8a\xaf\xb1\x4a\x88\x6d\x89\x2f\x0f\xaf\xb1\x2a\x43\x83\x63\xc9\x28\x8a\x68\x68\xf0\xb9\x9b\x74\x53\xd8\xdb\xca\xaa\x55\x75\x7b\x6f\x68\x65\xcd\x4c\xc1\x86\x84\xc2\xc8\x83\x04\x59\x25\x6c\x28\x09\x51\x4f\x25\x63\xf9\xde\x57\x91\x9b\xc2\x13\x9c\xb5\xcb\x4e\x70\xd6\x32\xbb\x84\x2a\x22\x8b\x91\x36\x38\x48\xa6\x32\x26\xb1\x70\xc9\xa2\x91\x92\x49\x31\xc4\xe8\x90\x91\xfa\xda\x27\xf5\xe9\x4f\xd8\x4f\xd0\xd5\x10\xbd\x9f\x68\xac\x23\x96\x86\x84\xe8\x2f\x67\x6b\x4c\x42\x2a\xf9\xe5\xaf\xc5\x77\x55\x7f\x13\x0b\x25\x97\x9a\x13\x3d\x77\xa3\x0c\x40\x3f\xa0\xbd\x5e\xfa\x20\xcb\x95\x6c\x06\xae\x65\xe8\x9a\xd1\xca\x3b\xf2\x06\xe7\x33\x51\xd5\xa3\x89\x0e\x42\x16\x9c\x8b\x88\x63\xbc\x1c\xfc\x99\xac\x98\x6c\x25\xa4\xad\x1c\x63\x0a\x0f\x7b\xbd\x1e\xbc\x7e\xf5\xe6\xd5\xdb\x17\xef\x5e\xbd\x84\x5e\xaf\xb7\x99\xe5\x0d\x8f\x88\xf9\xa8\xeb\x8e\xe0\x23\xd7\xc8\x62\x4d\x28\xe7\x3e\x72\x0a\x35\x36\x58\xe1\x7c\xc2\xe1\xba\x6d\xea\x4d\x61\xf1\xac\x74\xba\x86\x63\xcb\x96\x73\xc9\x79\x0a\xcd\xa5\xb2\x85\xb7\xc9\xe9\xf9\xf2\xda\x9a\xb6\x26\x56\x2d\x70\xbb\xd0\xe6\x82\xbb\xf1\x5a\xf8\xa4\x05\xa8\x64\xee\xeb\xf9\x55\x10\xfb\x28\xc7\xd8\x67\xca\x86\xfd\x88\x8c\x8e\xb5\x77\x83\x93\xac\x26\xa5\xbc\x1b\xe9\x71\xbf\xb6\x6a\x97\x03\x54\x5e\xfb\x33\x6b\x6a\x6a\x9f\x70\xd8\x37\x9a\x18\xdd\x9a\x86\xaf\x21\xd4\x3d\x16\x82\xd1\x53\x74\x48\x74\x1e\xfd\x10\xab\x74\x87\x97\x9b\x4d\x65\xf1\x28\x6f\xad\x74\x59\xbd\x51\x40\x32\xd4\x2e\x19\x4a\xca\x1b\xed\x42\x35\x1a\xae\x44\xad\xa1\xdc\x43\x19\x04\x16\x1e\x82\x0e\x38\x92\xda\x3c\x6f\x08\xb0\x2f\x54\x0e\x09\xdb\x50\x89\xc7\x32\x6a\xb9\xa4\xbc\x29\xaf\x47\xf0\xe1\x03\x3c\x78\x34\xd2\x2e\x83\x46\x44\x41\xf0\x2c\x20\x8c\xe0\x0a\xc8\x47\x86\x2b\xb8\x2c\xe7\x0d\x6c\xf6\x03\x15\x16\xae\x96\x2f\x8f\xe1\xbb\x01\x3c\x78\xa4\x24\xef\x18\xf7\x31\x7c\xfc\xf8\x1c\x38\xaf\x70\xd1\xea\xf9\x17\x43\xc3\x4f\x07\xb8\x0a\x30\xd1\xc6\x80\xf8\xe5\xfd\x39\x1c\x37\x3b\x47\xba\xd2\xa0\x9d\x66\x2d\xcd\x4b\x34\x72\x76\x81\xca\xbb\x8c\x52\xf8\xf1\xa8\x22\x11\x30\x6a\x9f\xb5\xf5\xb5\x96\x1b\x70\x40\x96\xef\x97\x4d\x0b\x3f\xef\x30\x21\x0f\x2a\x78\x4e\xef\xb8\xe0\x39\xbd\x2f\x78\xee\x0b\x9e\xfb\x82\xe7\xbf\x28\x78\xa4\xc1\xc8\x74\x60\xc9\x73\xfa\x2d\x4a\x9e\xa5\x65\xb7\x50\xee\x54\x7d\xac\x63\xed\xa8\x54\x44\x90\x9c\x0f\x92\xb9\xae\x18\x16\xa3\x11\xc6\xc4\x22\x91\x1c\x23\xf5\xb3\xe1\x0d\x23\xbd\x44\x3a\x28\x50\xad\x8a\x0d\xdf\x6e\x91\xec\x8f\x8f\xee\x98\xed\x4f\xee\x80\xed\xff\x87\x59\x7c\xbf\x41\xdd\x6f\x50\x7b\x6d\x50\xb7\xcd\xf6\x76\x7e\xa7\x17\x0f\xe4\xfc\x3a\x2d\xdc\x29\xe9\xaf\x0c\xbc\x2d\xea\xaf\x39\xfc\xf5\x0d\x60\xeb\x10\x5a\x05\xa9\x7d\xd4\x0e\xa2\x37\x9a\x84\x83\x83\xd7\xaa\xdc\xea\xed\xce\x23\xc4\xfe\x30\x95\x9d\xc5\xf9\x0c\x2f\x6a\xb7\xbc\xe5\x13\x71\x3c\xbf\xa9\xd6\x6e\x14\x57\x92\xcb\x94\x78\xb1\x48\x89\x37\xed\x67\xa6\x85\xcb\x95\x5b\xd9\x85\xc5\x67\x32\xa4\x3b\xce\x35\xd7\x9e\xc4\xea\x0e\x8b\x3d\xaf\x3a\x16\x9f\xd5\x01\x17\x2d\x4d\x9b\x6b\xd9\xd2\x02\xde\xb2\x56\xf7\x86\x66\x43\xfb\xc4\xa0\x75\xce\xbe\x36\xf1\x62\xcf\x44\xf8\x9a\xb9\xd7\x32\x47\xeb\x00\x07\x47\xa3\xa9\xdd\x06\x7e\x83\x20\x6f\xf4\xda\x01\x6f\x1a\x88\xe6\x72\x40\x1b\x78\xf6\x52\xc7\x14\x3e\x7f\x69\x2f\xb0\x97\x69\x54\x84\x4c\x32\x5e\x70\x94\x8c\xe3\xd9\x62\x0c\x9e\x05\x4c\xe1\xad\x37\x46\xbb\xf1\xfb\xb9\x40\x67\x95\x1d\x3f\x1b\xa9\xed\xbb\xe5\x6f\x92\x79\xaa\x88\xad\xff\x24\xbb\x92\xb6\xfa\x23\x44\x2a\x85\x44\x67\x3e\x43\x4a\xe1\x03\x74\xdf\xa2\xcc\xfe\x88\x9a\xf1\x37\xa7\xb0\x0b\x1f\x97\x62\xab\xcd\x9a\xaa\x29\xfe\x77\x81\x54\x25\x26\x80\x65\x99\x9c\xc2\xc9\x93\xd7\x7a\x87\x5d\x6d\x37\x12\xdf\xc0\xaa\xe3\x27\xcf\x5e\xeb\xce\x3f\x01\x00\x00\xff\xff\x87\x34\xc9\xd8\x4a\x1b\x00\x00")

func statefulsetAppsOpenshiftMetricsPrometheusYamlBytes() ([]byte, error) {
	return bindataRead(
		_statefulsetAppsOpenshiftMetricsPrometheusYaml,
		"StatefulSet.apps/openshift-metrics/prometheus.yaml",
	)
}

func statefulsetAppsOpenshiftMetricsPrometheusYaml() (*asset, error) {
	bytes, err := statefulsetAppsOpenshiftMetricsPrometheusYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "StatefulSet.apps/openshift-metrics/prometheus.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _storageclassStorageK8sIoAzureYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\x4b\x4b\xc3\x40\x14\x85\xf7\xf3\x2b\x2e\xdd\x14\x06\x12\x71\x27\xb3\x53\x1b\x44\xd0\x52\x5a\x71\x2b\xd7\xcc\x31\x5c\x32\x8f\x30\x8f\x80\xfe\x7a\xc9\x14\x17\x2e\xef\x83\xef\x3b\x87\x17\x79\x47\xca\x12\x83\xa1\x5c\x62\xe2\x09\xfd\x7c\x97\x7b\x89\x37\xeb\xad\x9a\x25\x58\x43\x97\xeb\xfe\xd1\x71\xce\xca\xa3\xb0\xe5\xc2\x46\x11\x71\x08\xb1\x70\x91\x18\xf2\x36\xd2\x1f\x61\xdc\x3e\xfb\xb9\x7e\x22\x05\x14\x34\x9a\xe4\xce\xe2\x8b\xab\x2b\x5d\x3b\x1b\xda\x95\x54\xb1\x53\x44\x81\x3d\x0c\xf1\x4f\x4d\x50\x0b\x27\xf6\x28\x48\x8d\x78\xf5\x7b\x0e\x3c\xc1\x2a\x22\x17\xc7\xa6\x33\xb4\xd7\x5a\xd3\xd3\x70\x1c\xce\xf7\x6f\xc3\x81\xb4\xd6\x7b\x45\x94\xe7\x7a\x6c\xb0\x53\x82\x97\xea\x3f\x5e\xce\x17\xb5\xa4\xb8\xca\xd6\x10\xc9\xd0\xff\x50\xcd\xd9\x59\xc9\xb3\x4a\x5b\x6a\xf1\xa7\xe8\x64\xfc\x36\x74\x80\x43\x81\x5a\xa3\xab\x1e\x0f\x12\xac\x84\xe9\x35\x5a\x18\x7a\xf6\x1e\x56\xb8\x40\xfd\x06\x00\x00\xff\xff\x9b\x10\x1c\x70\x3c\x01\x00\x00")

func storageclassStorageK8sIoAzureYamlBytes() ([]byte, error) {
	return bindataRead(
		_storageclassStorageK8sIoAzureYaml,
		"StorageClass.storage.k8s.io/azure.yaml",
	)
}

func storageclassStorageK8sIoAzureYaml() (*asset, error) {
	bytes, err := storageclassStorageK8sIoAzureYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "StorageClass.storage.k8s.io/azure.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshift3scaleGatewayYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x57\x5d\x93\xa3\xb8\x15\x7d\xf7\xaf\xb8\xb5\x95\xaa\x49\xaa\x0c\x76\x77\x27\x3b\xbb\x3c\x85\xd8\x74\x8f\x13\x1a\x28\x70\xf7\xd6\x3e\xb9\x64\xb8\xc6\x4a\x0b\x89\x48\xc2\x3d\x4e\x6a\xff\x7b\x4a\x60\x6c\xa0\xb1\x67\x92\xf5\x93\x41\x57\xe7\x7e\xea\xe8\x40\x4a\xfa\x8a\x52\x51\xc1\x1d\xd0\x58\x94\x8c\x68\xb4\x45\x89\x5c\xed\xe9\x4e\xdb\x54\xcc\x0e\x77\x93\x37\xca\x33\x07\xd6\xa7\xe5\x49\x81\x9a\x64\x44\x13\x67\x02\x40\x38\x17\x9a\x68\x2a\xb8\x32\x8f\x00\x19\xaa\x54\xd2\x52\xd7\x88\x0f\x2a\x25\x0c\xc1\x8d\x56\xf0\x44\x34\xbe\x93\x63\x6d\x43\x53\xc1\x17\x8c\x28\xe5\xd4\x7f\x2d\x26\x48\x66\x6d\x09\x23\x3c\x45\x59\x5b\x68\x92\x2b\x07\x48\x49\xa7\x79\xb3\x6f\xda\x40\x4d\x00\x38\x29\xb0\x45\xb6\xf2\x33\xaa\x79\xad\x4a\x92\xa2\x03\xe7\xf0\x27\x62\xfb\x4f\x4c\xb5\x72\x26\x16\x74\x13\x3d\xdc\x4d\x00\x9a\xa4\x96\x58\x32\x71\x2c\x90\xeb\x85\xe0\x3b\x9a\x4f\x00\xba\xe9\xb5\xee\xfe\xf0\x1f\x37\x5a\x2d\xdc\x64\xbd\x09\xdc\x67\xef\xb7\x09\x80\x2a\x31\x6d\x2c\x24\x96\x8c\xa6\x44\x39\x70\x5f\x3f\x2b\x64\x98\x6a\x21\x9b\x55\x53\x91\xd6\x45\x5a\xbb\x18\x43\x03\x50\x5a\x12\x8d\xf9\xb1\xdd\xa5\x8f\x25\x3a\x10\x0b\xc6\x28\xcf\x9b\x9a\x9c\xea\xdf\x5a\xf4\xe3\x34\x3f\x46\xb6\xc8\xd4\xe5\xf9\x7b\x7d\x77\xb3\x31\xbf\x54\x70\x4d\x28\x47\xd9\xc1\xb2\x00\xf9\xa1\x0b\x6d\x9d\x4a\xb3\xfe\x12\x7b\x5e\xb2\x70\x7d\x6f\x13\x85\xf1\xda\xf5\x37\x5e\xb0\x8c\xc2\x55\xb0\xee\x18\x03\x1c\x08\xab\xf0\x51\x8a\xc2\xe9\xbd\x36\xe5\x4a\x25\xea\x7f\xe0\x31\xc6\xdd\x70\x0d\xe0\x0d\x8f\x0e\x94\x44\xa9\x77\x21\xb3\x0f\xab\x6d\x73\x16\x61\xf0\xb8\x7a\x7a\x89\xdd\xf5\x2a\x0c\x36\x2f\xb1\xbf\x49\xbc\x45\xec\xad\x7f\xbb\x1d\x6f\xb3\x6d\xf3\xb8\xf2\xbd\x8f\xb1\x7e\xc4\x35\x76\x9b\xc8\x5d\x7f\xf9\x06\xec\xd2\x8b\xfc\xf0\xd7\x67\x2f\x58\x6f\xbc\xe0\x75\x1c\xb9\x6f\xb3\x8a\xc3\xc0\xfc\x1f\x03\x8e\xbd\x24\xf4\x5f\xbd\x78\x1c\xa7\x5d\x1d\xdb\xd9\x36\x3a\xf1\xe2\xd7\xd5\xc2\x4b\xc6\x11\xda\xd5\x8d\xbf\x4a\x46\x03\x68\x61\xfa\xc5\xf0\x43\x77\x79\x2d\xa8\x31\xcb\x5b\xc8\x7e\xf8\xb4\xf1\xbd\x57\xcf\x1f\x87\x3b\x2f\xdf\xc2\x30\x7d\xd9\xc4\xe1\xcb\x7a\x15\x3c\x6d\xbc\xc0\xfd\x9b\xef\x2d\xc7\xe1\xba\x96\xb7\x10\x63\x2f\x89\xc2\x20\x31\x63\xb2\xbc\x56\xbc\xbe\xcd\xf7\x57\x6f\xe1\x2e\xbe\x7c\xd7\xcc\xd5\x86\xe3\x63\xb1\x5c\x25\x66\xd4\xaf\x05\x76\x5a\xbe\x15\xd3\xb3\x1b\xb8\x4f\x5e\x3d\x84\x6e\xb4\x1a\x07\xea\xdb\x8c\xa1\x85\x91\x17\x24\x89\xbf\x79\xf5\xe2\xd5\xe3\xaf\xe3\x28\x7d\x9b\x2e\x0a\x2d\x48\x7e\xe1\x73\x52\x94\xf7\xf3\x19\x29\x0d\x9f\xea\x96\xdd\x9d\x3b\x7b\x6e\x3d\x0c\xf7\x44\x15\x63\x91\x60\x34\x3d\x3a\xb0\xda\x05\x42\x47\x12\x15\x72\xdd\xb1\x63\xf4\x80\x1c\x95\x8a\xa4\xd8\x62\x9f\x5b\xf6\x5a\x97\x4f\xa8\x87\x84\x53\x12\xbd\x77\x60\xa6\x34\xd1\x95\x9a\x99\xfd\x43\x03\x21\xb5\x03\x05\xe1\x24\xc7\xa2\xef\x0d\x80\x72\xaa\x29\x61\x4b\x64\xe4\x98\x60\x2a\x78\xa6\x1c\xb8\x9b\xf7\x6c\x34\x2d\x50\x54\xfa\xb2\xdc\x59\xbd\x76\xd7\x74\x9d\xab\x3e\x07\x9f\xa9\x3a\xaa\x03\xfb\x69\xfe\x53\xdf\x5d\x03\x59\x4a\xf1\xf5\xd8\x7b\x5f\x4a\xa1\x45\x2a\x98\x03\xeb\x45\x74\x1b\xf1\xe7\x31\xc4\x2b\x15\xb8\x06\x2b\x91\x64\xf4\xf7\xb4\xc2\x00\x1c\x7f\x7f\x2f\xfe\xf2\x1d\xbd\xd0\x92\xe6\xf9\xf9\xee\xb3\x4e\x37\x71\x23\x0f\x16\x7b\xc2\x73\xbc\x2e\x27\x12\x94\x07\x9a\xe2\xff\xa1\x22\x3a\xbd\xb5\x46\xba\x56\x0e\xdb\x3b\x56\x69\x4d\x64\x8e\x7a\x30\x09\xd6\xb5\x8e\x95\xc3\xfe\x7e\x1b\xf2\x64\xfa\xbf\x2b\x9c\x92\x48\x52\xa0\xae\xab\x6a\xf5\x35\xa2\xfb\x1c\x81\x44\x86\x44\xa1\x91\x7d\xf6\x59\xe2\xb9\xcf\xd1\x26\xf6\x7c\xcf\x4d\x0c\x53\x4a\xfc\x57\x45\x25\x66\x0e\x68\x59\x99\x02\x9f\xb8\xe5\xde\x9e\xdb\x73\x6b\x11\xdf\x5b\x12\xb3\x3d\xd1\xd6\xdd\xd0\x41\x40\x0a\x04\xb1\x03\xbd\xc7\x93\xd8\x68\x67\x9c\xf2\xbc\x7e\x7b\x5d\xc2\xc0\x3b\xd5\x7b\x63\x53\x67\x4a\xd2\x14\x95\xb2\xb4\x78\x43\x0e\x42\x9a\x82\x1d\x68\x86\xd2\xa8\x94\x73\xd8\xd7\xb4\xc8\x8d\x1c\x5a\xbe\x6b\xaa\x57\xc9\x5a\x4f\x5b\x95\x64\x56\x13\xef\x30\xa3\x88\x98\xa0\x04\x28\x72\xc0\x0c\xfe\x9e\x84\x01\xec\x28\xc3\x26\xd8\x1e\x08\xec\x84\xac\x53\x3c\x51\xa9\x0d\x5f\x88\x02\x2d\xea\x74\xb6\x08\x94\x1b\x81\x8c\x99\x41\x33\x66\x99\x48\xdf\x50\x36\x04\x0b\x44\xd5\xe7\x16\x04\x67\x47\x38\x08\x56\x15\x68\x5f\x49\xf3\x2c\x8d\x86\xa1\x5e\xf4\xb5\xd1\x8f\x54\x0a\x6e\xfe\xdb\xb0\x20\xdc\xf8\x57\x84\x67\x5b\xf1\xf5\x54\xcc\xac\x4a\xcd\xae\x8b\x93\x71\x95\x74\xa3\x92\x17\x90\xd1\x29\x68\xab\x31\xfa\x5d\xd2\xbf\x1b\xcd\xdc\x7e\xbb\x65\x1f\xd2\x0d\x12\x88\x51\x09\x76\x40\x59\x7b\x33\xdf\x22\x12\x95\x3e\x4e\x81\xee\x00\x8b\x52\x1f\x81\x6a\x78\xa7\x8c\x99\xfc\x49\xa5\x45\x46\x55\x2a\x0e\x28\x31\x3b\x07\x71\xd6\x7c\x03\xf8\xa4\xda\x2a\xd4\x66\x98\x55\x43\x34\xa6\x97\x20\x2b\x6e\xc3\x8b\x42\x48\x45\x51\x10\x50\x68\x4e\x9b\x69\x2a\xa3\xaa\x6b\x0c\x34\x53\x75\xe3\xff\x88\xb9\x0d\x7f\xbe\x9f\xde\x3d\x3c\x7c\xfe\xd3\xd9\x69\x4f\x08\x0e\x3d\x7f\xfa\x65\x8f\xdc\x38\x33\xdf\x6a\xfd\x19\xb3\x61\xb5\x03\xc1\xdb\x11\x03\xa5\x89\xd4\xa6\xa3\x94\xa7\xa2\x30\x67\xcc\x14\x11\x95\xb6\x6b\xe7\x2e\x63\xe2\x1d\xb3\xa6\x90\x0a\x88\x44\x07\x18\xf9\xf7\x71\x0a\x5b\x21\xb4\xfd\xe9\xca\x84\x9d\xf5\xe6\xa9\x01\xc6\xf8\x43\x90\xbe\xc8\x81\xe1\x01\x99\x0d\x21\x3f\x1f\xfa\x9d\x30\x2e\x29\xcf\x1d\xc8\x70\x5b\xe5\x53\xa0\x7c\x27\xa6\xc0\x85\xa6\x29\x4e\xe1\x9d\x48\x3e\x05\x94\x52\xc8\x69\x1d\x62\x2a\xa9\x9e\x02\x61\x28\xf5\xd4\x24\x82\x05\xca\xbc\x13\xd9\x45\xaf\x0e\x02\xf0\x38\xd9\x32\xac\xaf\x2e\x90\xa2\xd2\x94\xe7\x36\x78\x5f\x4b\x94\xd4\x8c\x3d\x61\xb0\x43\xa2\x2b\xd9\x39\x47\x5d\x35\x7a\xc9\xee\x87\x1d\x61\x0a\x7f\xb8\x82\xcf\x44\x9e\x37\x75\x55\xa5\xe0\x75\xe3\xb3\x66\x14\x9a\xc1\xb6\xbb\x83\xd4\xd7\xb0\xb7\xf1\x1f\x85\x84\xbd\x78\x07\x26\x0c\x33\x0a\x48\x49\xba\xc7\x13\x31\xbc\x73\xd3\x7a\x1c\x34\x1f\x28\x37\xa4\x6a\xee\xcf\xfa\x50\xb7\xc4\xc2\x70\xa7\x9b\x71\x9f\xc2\xdc\xd4\x30\x97\x48\x34\x9a\xe3\x47\x38\xfc\x38\xbf\x46\x24\x8d\x30\x1e\xf6\x35\xc6\x8c\x2a\x78\x89\x7d\x1b\xe2\xd3\x81\xac\x4f\x57\xe8\x56\x7a\x7f\x0f\x94\x6b\xcc\xdb\x61\xc4\xaf\x0e\x48\x63\xef\xcc\x66\x91\x9b\x24\xbf\x84\xf1\xf2\xaf\x77\xf7\x9f\xcd\x3d\x61\xdf\x39\x3f\x3e\x7c\xfe\x79\x36\xff\xd4\xa9\x50\xab\xa3\x87\x67\x2d\x15\xe5\x79\x84\x9e\xcf\x97\xa7\x21\x88\x33\x7d\x65\x54\x99\x86\x64\x53\x68\x64\x8a\x49\xb4\x1e\x31\x1b\x5c\x0d\xe6\x4e\xd3\xa7\x8f\xfb\x7a\x55\x76\x63\xdf\x23\x61\x86\xae\xf7\x98\xbe\xa9\x4b\x39\x3e\x68\xf2\x53\xc7\x1a\x88\x61\x90\xeb\x4a\x72\x10\x7c\x26\x76\x4d\x9c\x61\x89\x3c\x49\x7c\x28\x11\x25\x1c\x50\xd2\x1d\x4d\x4f\x75\x69\x19\x17\x75\x4d\xf6\xb2\xc2\x59\x3d\x04\x17\xd7\x1f\x84\xfc\x35\xf2\x6b\xa7\xe7\xbf\x01\x00\x00\xff\xff\xb4\x37\x74\xbc\x3d\x12\x00\x00")

func templateTemplateOpenshiftIoOpenshift3scaleGatewayYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshift3scaleGatewayYaml,
		"Template.template.openshift.io/openshift/3scale-gateway.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshift3scaleGatewayYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshift3scaleGatewayYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/3scale-gateway.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftAmpApicastWildcardRouterYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x57\x6f\x6f\xe2\xce\x11\x7e\xcf\xa7\x18\xa5\x91\x0e\xa4\xb3\x81\x5c\x2b\xfd\xea\x34\xad\x7c\x40\xef\x50\x13\x82\x08\x77\xa7\x4a\x95\xac\xc5\x1e\xcc\x36\xeb\xdd\xed\xee\x98\x84\xe6\xd2\xcf\x5e\xf9\x2f\x36\x7f\xf2\xcb\xc1\x2b\x7b\x67\x9e\x79\x66\xf6\xd9\x99\x35\xd3\xfc\x3b\x1a\xcb\x95\xf4\x80\x30\xd1\x82\x11\xba\x4a\xa3\xb4\x1b\xbe\x26\x97\xab\xfe\x76\xd8\x79\xe4\x32\xf2\x60\x59\x2e\x77\x12\x24\x16\x31\x62\x5e\x07\x40\xb2\x04\x3d\x60\x89\x76\x98\xe6\x21\xb3\xe4\x3c\x71\x11\x85\xcc\x44\x8e\x51\x29\xa1\x29\x6d\xac\x66\x21\x7a\x50\x23\x77\xd4\xea\xdf\x18\x92\xf5\x3a\x0e\x34\x39\x6c\x87\x1d\x80\x22\xde\x18\xb5\x50\xbb\x04\x25\x8d\x94\x5c\xf3\xb8\x03\xd0\x8c\x5c\xc7\x2e\xe3\xd6\xe1\xac\xc6\xb0\x30\x30\xa8\x45\xb6\xe8\xc1\x30\x7f\xb6\x28\x30\x24\x65\x8a\x55\x80\xa8\x8e\x10\xe6\x11\x4e\x80\x01\x58\x32\x8c\x30\xde\x55\x4e\xb4\xd3\xe8\xc1\x42\x09\xc1\x65\x9c\xbf\xab\xea\x56\x59\xb4\x59\x66\x3f\xc1\x56\x28\xec\xfe\xf9\x9d\xa1\x9b\xb9\x64\xbf\x50\x49\x62\x5c\xa2\x69\x40\x39\x10\xaa\x24\x61\x32\x6a\xa2\x3b\xb0\xe2\xb2\x5f\x22\x36\xde\xa3\xdc\xb6\xcd\x8a\x12\xfa\xf3\xe9\xc8\x7f\x58\x06\xa3\xfb\xd9\xdf\xa7\x5f\xbe\x2d\xfc\xe5\xf4\x7e\x16\xdc\xde\xfb\xe3\xc9\xa2\x61\x0e\xb0\x65\x22\x45\x0f\x04\xfb\xef\xee\xdd\x30\x23\x7f\xf4\x75\x72\x0a\xe5\x62\x70\xd1\x78\xcd\x13\x16\xa3\x07\x9f\x6c\xc8\x04\x3a\x2c\xd1\x57\x83\x2a\x01\x27\x66\x84\x4f\x6c\xe7\x0d\xdd\x81\xf3\xe9\xd0\x67\x9e\x0a\x31\x57\x82\x87\x3b\x0f\xa6\xeb\x99\xa2\xb9\x41\x8b\xb2\x99\xb6\xe0\x5b\x94\x68\xed\xdc\xa8\x15\x7a\x2d\x2e\x5c\x72\xe2\x4c\x8c\x51\xb0\xdd\x03\x86\x4a\x46\xd6\x83\x3f\xb5\x4c\x34\x1a\xae\xa2\x7a\x71\x38\x68\xad\x52\xa8\x1f\x54\xf8\x88\xd4\xc6\x05\xd0\xca\x90\x07\xad\xdd\x2c\x3d\x78\x82\x2a\xa5\x93\xd1\xce\x48\xba\x89\x69\xdb\x3b\x58\x6b\x62\x9e\xc7\xfb\x6d\xf0\xdb\x55\x2b\x5a\x81\x78\x82\x86\x36\x8a\x54\xa8\x84\x07\xcb\xd1\xfc\x6d\xc8\x3f\x0f\x4e\x40\x26\x4c\xb2\x18\x93\x76\xa5\xcf\xc3\x1a\x64\x11\x3f\xb3\x09\x1b\x22\xfd\xe5\x44\x05\x19\x6d\x3c\xe8\x5b\x62\x94\xda\x7e\x06\xb0\x3b\x59\xe3\x33\x4c\x7e\x7d\x6b\x3f\x0d\xde\xbd\x51\x5b\x25\xd2\x04\xef\x54\x2a\x0f\x37\x24\xc9\xde\xcd\x0b\xea\x4a\x53\x9f\x69\xed\x18\xa5\xa8\x6f\x4d\xd8\xb7\x9c\xd0\xba\x51\xff\x44\x3d\xdb\x9b\xee\x84\x55\xcf\x6b\x97\xf0\x5e\x8a\x9d\x07\x64\x52\xec\xb4\xa9\x1c\xb4\x84\xcc\xf9\x8e\xe9\x03\xb1\x13\x26\xb6\xfd\xca\x81\x47\xdc\x55\xfa\x70\x33\xbf\x93\x9b\x70\x6e\xfd\x7d\xd4\x7f\xcf\x8a\x0c\x8f\xe3\xba\xab\x39\x65\x8b\x2d\xba\xfe\x68\xc3\x64\x8c\xe7\xa7\xc4\x03\x9a\x2d\x0f\xf1\xd7\x87\x43\xe3\x2c\x39\xa7\x4e\x89\x2e\xc5\x5f\x3d\x9e\xd0\x35\x31\x13\x23\xcd\x0f\x0f\xfa\x2f\x8f\x99\x13\xc9\xed\x13\x69\x94\xde\x83\x9f\x4e\x89\x99\x6a\x4b\x06\x59\x02\xd5\xb8\x85\x97\xba\xe0\x16\xcd\x16\x0d\x0c\xdc\xec\x3f\xf4\x86\xd7\x9d\x7a\x69\xc5\x04\x93\x21\x9a\x60\xb5\x0b\x44\xca\x82\x95\x50\xe1\x63\xc3\x15\x40\xa8\x90\x89\x2c\xa8\x8c\x02\xa3\x56\x5c\xc2\x0d\x18\xfc\x4f\xca\x0d\xc2\x07\x83\x96\x76\x6e\x05\xe2\x36\xac\x3e\x1c\x41\x54\x56\x99\xff\xde\xce\x95\xf8\xd4\xed\x1d\x19\x6b\x44\x63\xe1\xa6\x76\xf2\xf2\x17\x5d\x19\x3f\xbb\x21\x3d\xbb\x65\xbd\x7a\x9d\x93\x8e\x1f\x01\x8d\x69\x3a\x5b\xa4\x20\x5b\xe8\xe6\x28\x2d\x2f\xbe\x06\xa9\x28\x77\x03\xda\xa0\x6c\xab\x39\x7e\x76\x8b\x6e\x03\x37\xf9\xc3\xd7\xe5\x72\x1e\x3c\x4c\x16\xdf\xa7\xa3\x49\xf0\x6d\xe6\x7f\xf7\xa7\xb7\xfe\xe7\xdb\xc9\x91\x97\x50\x71\x4e\x76\xb2\x58\x7c\x84\x8b\x35\xe3\x02\x23\x20\x05\x16\x09\xc2\xd4\x18\x94\x04\x2b\x16\x3e\xa2\x8c\xf2\xd8\x1e\x5c\xe4\xac\x7b\x47\x48\xf8\xcc\xa9\xbb\x27\xd2\x6b\x4d\xef\xa8\x7e\x7a\xdd\x27\xf5\x88\xa8\x59\x36\xe2\x60\x38\xb8\xfa\xe3\x75\xe7\xc0\xa0\x54\xc3\x7e\x8f\x05\xb7\x84\x32\x9f\x14\xd7\x07\x9a\x09\xb2\x73\x00\xff\x73\xba\x7f\xfb\x4b\x59\xf2\xbf\x56\x52\xed\x5a\x62\x31\x97\xf1\x4f\x6d\x54\x94\x86\xc4\x95\xec\xf5\xfe\xe5\xee\x11\x58\x18\xa2\xb5\x81\x50\x31\xf4\x23\xdc\xf6\x2d\x45\x2a\xa5\xec\x76\xb2\xe2\x12\xa3\x86\x08\xb3\x9d\xcb\xfc\xa1\xdf\x52\x5e\x09\x70\x56\x99\xb5\x36\xd1\x2a\xb1\x2d\x84\x55\x08\xb3\x5b\x0a\xb3\x5a\xf9\xd0\xf3\xb8\xb4\x94\x89\xa1\xdb\x3b\x81\x50\x24\x6b\x73\x80\xc2\xc3\x8b\x91\x82\xf2\x75\x5e\xfd\x2d\x33\x95\xea\x3e\xc2\x4b\xde\x0c\xe0\x26\xab\xd9\x00\x5e\x5b\x82\xca\x25\xf5\x87\x1a\xf1\x06\x06\xc7\xba\x3a\xa7\xac\xcf\xfe\x38\xf8\xe2\x2f\x27\x3f\xfc\x7f\x9e\xb0\xaf\x95\x90\xdb\xde\xff\xa3\x9d\x49\x26\x86\x23\xf1\x34\xce\x0a\xdc\x54\x69\x36\xac\x5e\x9b\x77\x09\xa3\x9e\x77\x41\x36\x7a\x83\x6d\xd1\x7a\x60\xe8\x0e\xaf\x8f\x2c\x34\xb3\x16\x2e\x6d\xb8\xc1\x04\xbd\x7e\xbf\xea\x37\xc7\x86\xd9\xa9\xdb\x20\x8b\xd0\xc0\x57\x65\x09\x2e\x37\xca\xd2\x9b\x66\x23\x25\x25\xe6\x52\x82\x8b\x8b\xeb\xce\x21\xcb\xd7\xba\xc9\x8f\xaa\x79\xf6\xae\x36\x5f\x8d\x96\xb3\x33\x63\x91\x99\x1d\x41\xb5\x2f\xe9\x4c\xeb\x3d\xee\xf1\x37\xcd\x61\xe4\x63\x8b\xfd\xa4\xc9\xea\xb0\xb7\xbc\x7c\x59\x4e\x66\xfe\x6c\x19\xcc\xfc\xbb\xc9\xab\x7b\xf9\xf2\x63\x7a\x3b\x1e\xf9\x8b\x71\x30\xbe\xbf\xf3\xa7\xb3\xd7\x7a\x3a\x79\x6f\x8f\x19\xda\x93\xe5\xd2\x62\x98\x1a\x9c\x44\x31\x2e\xd1\x24\x5c\xe6\x07\xac\xba\x16\xfb\x42\xa8\xa7\x0a\x6c\xbf\xec\x01\x46\x71\x71\x8f\x20\x55\x41\x1d\x4e\xd5\x73\x45\xce\x97\xaa\xac\xab\x40\x0f\xe9\x2a\x52\x09\xe3\xb2\xa3\x99\x61\x09\x52\x3e\xd4\x1d\x88\xd0\x86\x86\xeb\x22\xa8\x7f\x37\x07\x83\x02\x99\x45\x20\x16\xbb\xf5\x57\xa4\x7f\x37\x0f\x16\x93\xdb\x89\xff\x90\x35\xd8\xf2\x6c\x47\xf5\x6d\xa7\xfc\x6c\xb8\xca\xc6\x9a\x33\x5a\x5c\x39\x06\xa3\x0d\x23\x67\x78\x18\x60\xa1\x14\x41\xc1\x03\xd6\x2a\xef\xf3\xfb\x31\x99\xb3\xb7\x2e\x4c\x62\x17\xf0\x99\x25\x5a\xa0\x1b\xaa\x7c\x8e\x0a\x88\x51\x62\xf6\xb5\x97\x27\x57\x7d\x8a\x44\x09\x97\x6e\xc3\x74\x4f\xf8\x60\xe7\x8e\x49\x1f\x10\x1b\x17\x9c\xf2\x26\x9b\xca\xa8\x18\x41\x90\x5d\x0e\x81\x36\x8c\xc0\xcf\x42\xc1\xb7\x69\x41\x66\x85\xc0\xb6\x8c\x0b\xb6\x12\x19\x7f\xda\x40\xc1\xa5\xb8\x63\xa4\xeb\x35\x7f\xde\x53\x69\x68\xea\x8d\xda\x15\x29\x75\xfe\x1f\x00\x00\xff\xff\x56\x21\x25\x0d\xf5\x0f\x00\x00")

func templateTemplateOpenshiftIoOpenshiftAmpApicastWildcardRouterYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftAmpApicastWildcardRouterYaml,
		"Template.template.openshift.io/openshift/amp-apicast-wildcard-router.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftAmpApicastWildcardRouterYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftAmpApicastWildcardRouterYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/amp-apicast-wildcard-router.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftAmpPvcYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x90\xbd\x4e\x03\x31\x10\x84\x7b\x3f\xc5\xbe\xc0\x85\x5c\xeb\x96\x82\xea\x04\x42\x28\xd4\x1b\x7b\x00\x93\xf3\x4f\xbc\x7b\x27\xdd\xdb\xa3\x70\x4e\x94\x36\x52\x84\x44\xb9\x9f\x47\x33\x9f\xcc\x25\xec\x50\x25\xe4\x64\x49\x11\xcb\xc8\x8a\x4d\x2e\x48\xf2\x15\x3e\x74\x13\xf2\xc3\xdc\x9b\x43\x48\xde\xd2\x5b\x7b\x36\x11\xca\x9e\x95\xad\x21\x4a\x1c\x61\x89\x63\xe9\xca\xec\xda\x2d\x85\x1d\x2c\x5d\x5a\x4c\xde\x7f\xc3\xa9\x58\xd3\xd1\xf5\xde\xdc\x1b\xa2\xb5\xfb\xe5\xc4\x44\x91\x74\x97\xc7\x29\xe2\x71\xe4\x10\x0d\xd1\xf5\xd4\x79\x4c\x16\x51\xc4\x4e\x34\x57\xfe\x84\x21\x92\x02\xb7\x06\xd8\x39\x88\x0c\xd9\x43\x56\xd0\xd1\x2b\xd8\xbf\xd7\xa0\x18\x38\x2d\xbf\xac\x42\xf2\x54\xdd\x39\x72\x02\xc7\x09\xa2\x97\x9b\xa8\x75\x5b\xea\xb7\xdb\x21\xdc\x47\x3b\x2e\x72\x1c\x6f\xb6\x7e\x4e\x0e\xb7\x5b\x3f\xdd\xc9\xb9\x7d\x75\x85\x0f\xf2\xcf\xd4\xf7\xec\x0e\x48\xfe\xaf\xdd\x7f\x02\x00\x00\xff\xff\x2b\xf3\x0d\xff\x50\x03\x00\x00")

func templateTemplateOpenshiftIoOpenshiftAmpPvcYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftAmpPvcYaml,
		"Template.template.openshift.io/openshift/amp-pvc.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftAmpPvcYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftAmpPvcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/amp-pvc.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftCakephpMysqlExampleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\xdd\x6f\xdb\xb8\x96\x7f\xf7\x5f\x71\x10\x0c\x90\x16\x1b\xdb\xc9\x74\x3b\x33\x2b\x60\x1f\x5c\x5b\x4d\x8c\xc6\xb1\xc7\x76\xa6\x3b\x3b\x77\x10\xd0\xd2\xb1\xc5\x1b\x8a\x54\x49\x2a\x89\x6f\x6f\xfe\xf7\x0b\x92\x92\xac\x2f\x3b\x49\x3f\x30\xe3\x87\xa2\x21\x0f\x0f\x7f\xe7\xfb\x90\x14\x49\xe8\x6f\x28\x15\x15\xdc\x03\x8d\x71\xc2\x88\xc6\x9e\x48\x90\xab\x88\xae\x75\x8f\x8a\xfe\xdd\x59\xe7\x96\xf2\xd0\x83\x65\x36\xdd\x61\x64\x85\x4c\x79\x1d\x00\x92\x24\x1e\x04\xe4\x16\x93\x28\xe9\xc6\x5b\xf5\x89\x75\xf1\x81\xc4\x09\xc3\x0e\x14\xec\xf6\x51\xc4\xa8\x14\xd9\xa0\x07\xff\xee\x76\x00\x96\x11\xc2\x5a\x30\x26\xee\x29\xdf\x80\x42\x79\x47\x03\x7c\xa5\x5e\x43\x44\xee\x10\x56\x88\x1c\x02\x89\x44\x63\x08\x94\xc3\x56\xa4\x12\x12\x29\xfe\x89\x81\xf6\xe0\x87\xcf\x57\x83\x89\xff\x78\x02\x3f\x7c\x1e\x0d\x96\x83\x77\x83\x85\x7f\xb3\xf0\xe7\xbf\x8d\x87\xfe\x8d\x9d\xe9\x75\x3a\x00\xef\x85\x84\x58\x48\x04\xca\xd7\x42\xc6\x44\x53\xc1\x81\xac\x44\xaa\x21\x55\x66\x53\x1d\x51\x55\xa0\x3e\x01\xca\x03\x96\x86\x66\x62\x9a\x20\x5f\x18\x7d\x40\x20\xb8\xa2\x21\x4a\xbb\x58\x9d\x80\x42\x84\x48\xeb\x44\x79\xfd\xfe\x86\xea\x28\x5d\xf5\x02\x11\xf7\x0b\x05\xf6\x8d\xe8\x5d\x7c\xe8\xaf\x98\x58\xf5\x63\xa2\x34\xca\xfe\xdc\x1f\x8c\x26\x7e\x2f\x0e\x7b\x9d\x18\x35\x09\x89\x26\x56\x99\x9c\x0b\xed\x18\x9b\x3f\x01\x42\x54\x81\xa4\x89\xb6\xc6\xb1\x4a\x32\xbf\x01\x87\x4c\x83\x30\x24\xb7\x38\xbb\x98\x19\x33\x30\x1a\x38\x81\xee\xa9\x8e\x80\xc0\x64\xbb\xf8\xf5\x12\x0c\xeb\x15\x51\xd8\xfb\xeb\x84\x37\x76\xdf\x2f\x7f\x26\xd3\xc7\xc1\xfc\x6a\x7c\x75\xee\xc1\x80\x6f\x2d\x68\x50\x5a\x48\x0c\xe1\x9e\x32\x06\x2b\x04\x26\x94\x86\x34\x11\x1c\x12\x11\x1a\xc5\x68\x99\x06\x06\x46\x0f\xa6\x9c\x6d\x21\x55\x58\x95\x00\xd6\x42\x82\x46\xa5\x29\xdf\xf4\xec\x2e\x34\x10\x7c\xc8\x88\x52\x9e\xfd\x6f\x37\x89\x12\x3b\x5e\x71\xf6\x90\xaa\x84\x91\x6d\x97\x93\x18\xbd\x42\xbf\xff\x95\xa9\xf3\x95\x9f\x44\x18\xa3\x24\xec\x75\xcb\x52\x11\xa4\x31\x72\x67\xc1\x6e\x2a\x99\xf7\x5c\xe5\x34\x79\x31\xc1\x37\xdd\x8a\xf9\x97\x15\xe1\x42\x5c\x53\x8e\x0a\x24\x2a\x91\xca\x00\x15\x70\xc4\x10\x43\xd0\x02\x42\xbc\x43\x26\x92\x4c\xb3\xa4\xcd\x49\xca\xe6\x25\xb0\x4a\x29\x0b\x8d\x71\xd7\x74\x93\xca\x8c\xa0\xec\x52\x21\x26\x4c\x6c\x8d\x6c\x19\xd3\x3a\x2d\x0f\x0b\x4f\x2b\x11\x57\xc9\x7a\x2e\xc4\x0b\x3a\xaa\x32\x1b\x67\x3c\x29\x07\x6e\xac\x62\x92\x91\xd2\x66\xb9\x99\x26\x1b\x3c\x01\x25\x9c\x6d\x2b\xfc\x40\x45\x22\x65\xa1\x71\x8e\x54\x61\x68\xed\x8d\x0f\x09\x4a\x6a\x8d\xc0\x32\xb6\x49\x2a\x13\xa1\x50\x81\xe0\x6c\xdb\x6b\x6a\x3a\x91\xe2\xce\xf8\x74\xb7\x6a\xf9\x39\x86\x70\x41\xf4\x09\x8c\x79\xd0\xb2\x4a\xa5\x49\x22\xa4\xae\x5a\x99\x04\x01\x2a\xd5\x93\x18\x46\x44\x1b\x63\xdb\x75\x9a\x6c\x94\x07\x9f\x52\x1a\xdc\x2a\x4d\xa4\x3e\x49\xa2\xe4\x24\xb3\xbd\x23\x68\xcd\xba\x2b\xca\x43\xb2\x62\xe8\xc1\xd1\x9a\x30\x85\x47\x1d\x00\x07\x6d\x5f\xba\x35\xb3\x2a\x21\x01\x7a\x3b\xac\x1d\xb1\x32\x19\x52\x79\x9d\x2e\x94\x33\xfd\xdd\x59\x07\xc0\x65\xf5\x05\x06\x12\x8d\x61\xcb\xa9\x28\xdf\x2b\x4b\xac\x1d\x00\xa5\x25\xe5\x9b\x51\x31\x9f\xa3\x50\x76\x79\x57\x8b\x5b\xe4\x86\x7e\x38\xf8\xe0\xcf\x2e\x66\x37\x0b\x7f\x38\xf7\x97\x37\xcb\xe9\x07\xff\xea\xb1\xbe\x22\x95\x54\x6f\xbb\x01\x4d\x22\x94\x5d\x85\x18\xd6\x56\x5e\xcf\xc7\xcb\xdf\x6f\x86\xe3\xd9\x85\x3f\xbf\x59\xf8\xfe\x68\x0f\x07\x45\x98\x6e\x5d\xba\x18\x5c\x2e\xdd\x9a\xdc\xdf\xba\x09\x51\xea\x5e\x48\xbb\x55\x51\x24\x66\x83\xc5\xe2\xe3\x74\x3e\xaa\xd1\xa6\x0a\x65\x85\xee\x7a\xe1\xcf\x1f\x0f\xe9\xd0\x56\xab\x86\x12\x1b\x19\xbd\x96\xd3\xfd\x07\xe7\x9b\x26\x80\x98\x20\x21\xac\x08\x23\xdc\x84\xb3\x8e\xb0\x12\x82\x89\x08\x55\xc6\x21\x2b\x8d\x3d\xc2\x92\x88\x54\x9d\x26\xc4\x04\x79\x88\x3c\xa0\xa8\x3c\x38\xfe\xe3\xf3\x91\x31\xe3\x91\x07\x47\xfb\x0a\xe3\xd1\x49\xc6\x15\xe0\xc8\xc8\x62\x68\x33\x69\x8e\x1e\xff\x3c\x6e\x77\x85\x04\x03\x27\x8e\x89\x81\x4c\xb2\x6e\x46\x76\x8f\xab\x3c\xf2\x84\xd4\x1e\xfc\x72\xfa\xcb\x69\x36\xa0\x89\xdc\xa0\x9e\x55\x87\x15\x32\x0c\xb4\x90\xb9\x7e\xaa\x9b\xed\xd5\xf8\x5c\xa4\xba\xa9\xef\xfd\x48\x23\xa1\xac\xa7\x0c\x66\xb3\xcb\xf1\x70\xb0\x1c\x4f\xaf\x6e\x46\xd3\xc9\x60\x9c\x39\xa7\x16\x39\x80\xba\x45\x5f\x00\x6a\x1c\x93\x0d\x2e\xb4\x44\x12\xbf\xd8\x15\x3e\x20\x26\x0a\xb4\x24\xc1\x2d\x88\x35\x04\x11\xe1\x1b\x54\x26\x2b\xd6\x5d\x81\x9a\x5d\x5a\xc4\xdd\x0b\xeb\x9d\xc9\xef\x43\x9b\x3b\x5f\x0c\x6b\x94\x15\x9a\x48\xdc\x9b\xda\xe2\x4a\x45\x0d\x51\x6e\xde\x3c\x8f\xb5\x38\xe6\x3d\xa1\xba\xbb\x16\xb2\x2b\x91\x84\x5b\x0f\x8e\xb4\x4c\x6d\x4a\x3b\x64\x33\x91\xea\x24\xd5\x39\xac\x9d\x85\x5a\xd4\xbd\x24\x9b\x62\xb2\xc2\xd0\x33\x88\x94\xce\xbc\x55\xe9\xa1\x88\x63\x5a\xf0\x74\x82\x7a\xd0\xeb\x33\xba\xea\x9b\x42\xd9\x1f\x0a\xae\x04\x43\x5b\x9d\x6d\xff\x60\x24\x85\x01\x63\x4b\x54\xda\x85\xa0\x2b\xb9\xde\xae\x16\x6a\x7c\xd0\x23\x6a\x33\xc6\x70\x7a\xb5\xf4\xff\x6f\x79\x33\x1a\xcf\x1f\x33\x82\xcd\x6e\x3f\x00\x89\x6b\x43\xb6\x98\x5e\xcf\x87\xfe\xcd\xdc\x9f\x4d\x17\xe3\xe5\x74\xfe\xfb\xcd\xdc\x7f\xff\x58\x50\xa5\x92\xb6\x53\x5d\xcf\x2f\x73\x2a\xbd\x4d\xd0\x83\x73\xea\x64\x53\x5a\x12\x8d\x9b\x6d\x21\x99\xc5\xb8\xa8\x8d\x02\x20\xbf\xdb\xfd\x91\xc7\xec\x70\x3a\x99\x4d\x17\xfe\xfc\x66\x32\x9e\xcf\xa7\xf3\x62\x1e\xe0\x8e\xb0\x14\x9d\x5c\x15\x92\x1d\xd4\xb5\x14\xb1\x57\x5a\x71\xd0\x34\xb9\x71\x92\x28\xf1\x7e\xee\x9d\xd6\xc6\xb3\xe2\xe5\x2c\xb7\x98\x0d\x86\x7e\x55\xd6\x85\x95\xc9\x85\xab\xa4\x9b\x0d\xca\x22\xf7\x38\x02\xbb\xeb\xd0\x46\x4e\x65\xdc\xf9\x7e\x65\xc2\x75\x64\x3b\xe0\xae\x8c\x99\xcd\xcf\xc7\xcb\x8b\xeb\x77\x37\x1f\xfd\x77\x17\xd3\xe9\x87\xac\x8e\x35\x94\x7e\x91\xae\xf6\x07\xdc\xa8\x68\x81\xbe\x4d\xd4\xb9\x96\xaa\x91\x08\x4c\x21\x40\xf9\xbd\xa2\x4f\xa2\xdd\x49\x79\x70\xf6\x8c\x44\xdd\xe6\x83\x12\xdd\x81\x6d\x46\x24\x89\xd5\x4e\xd7\x89\xc4\xb2\xc7\xe0\x03\x06\x57\x78\x3f\x13\x61\x79\xd4\x04\x56\x1c\x13\x5e\x1b\xec\x42\xaf\x1f\xd3\x8d\xd9\xa8\x5b\x1c\x6e\x54\x54\x5b\xc8\x35\xa1\x1c\xe5\xd5\xc1\x7e\xa9\xf0\x60\x42\x59\x2a\x71\x26\x18\x0d\xb6\xa6\xf3\xd3\x72\x5b\x31\xf7\x3c\x93\xa3\xd2\xad\xe5\xb0\xaa\x86\x35\xbf\xdd\xe9\xb8\xea\xf4\x65\x55\xed\x1b\xdd\xa9\xbf\x22\x88\x2a\xc7\x6c\x25\x84\x77\x41\xdc\x5a\xdf\x2b\x7a\x29\x82\xb9\xbd\x15\x38\xc4\xd3\xbf\x3a\x1f\x5f\x3d\xc5\xcd\x11\x1d\xe4\xf3\x0c\x4c\x4f\x62\x31\xbd\x58\x93\xc7\xfb\x5a\x1e\x82\x22\xa8\x3f\xe0\x76\x8e\xeb\xfa\x1c\xc0\x2d\x6e\xbd\x6a\xcb\xd7\x20\x69\x37\x5c\x0b\xa6\xbc\x8f\xfc\xf6\xb8\xf2\xb6\xf5\xc5\xd8\xda\x1a\xf1\x6f\x06\xaf\xad\xfb\xff\x1a\x84\xbb\xae\xfd\x7b\x40\xdc\x1d\x16\xbe\x1e\x63\xe9\x50\xf2\xfd\xa0\x96\x4e\x46\x2f\x46\x3c\x9d\x0d\x07\xc3\x0b\xd3\x35\xfc\x36\xb8\x1c\x8f\x06\x4b\xff\xe6\xfd\xdc\xff\xb5\x3d\xea\xf6\x10\x97\xf9\xda\x76\xd3\x83\x63\x38\x2e\x0d\x32\x7a\x87\x1c\x95\x9a\x49\xb1\xc2\xaa\x54\xe6\x34\x7c\x8e\xba\x2e\x6a\x42\x74\xe4\x41\x3f\x42\xc2\x74\xd4\xcb\xcf\xbe\xa5\xf9\xfa\x69\x21\xdb\x9d\x53\x4d\x09\x1b\x21\x23\xdb\x05\x06\x82\x87\xca\x83\x37\x55\x1a\x73\xe6\x17\x61\x31\xfb\x53\x75\x56\xd3\x18\x45\xaa\x77\x8b\x1b\x89\xf9\xa9\x02\x51\x3a\xe5\xe4\xaa\x2e\x32\xf3\xac\x0d\xb6\x29\xb3\xf4\x2f\x54\xcf\x37\xd2\x4e\x71\xb9\x54\x05\xcb\x68\x4c\xb5\xaa\x0b\x10\x63\x2c\xe4\xd6\xf8\xd4\xc4\x9f\x98\x56\xf5\x72\x3c\x19\x67\x7d\x53\xbd\x5b\xa3\xbb\x3e\xad\xde\x1b\x90\x54\x8b\x98\x68\x1a\x78\x60\x9a\x94\x66\x29\x34\x35\xbd\x52\x0e\x0f\x5b\xef\x8b\xda\xd3\x96\xb3\x03\xbc\xa4\xc5\xfc\x6e\xf7\x04\xba\x7c\x81\x56\x6a\xff\x72\xd8\x7b\x0b\xfb\xc1\x23\xbb\xd5\x5c\xa7\xec\x67\x6f\xde\x9c\xfe\x94\x8b\x5d\x3a\xb4\x17\xc3\xfb\x7a\xc1\x3d\xfb\xff\x15\x8d\x72\xae\xa6\x6f\xd3\x1e\x3f\x43\xb1\xcf\xed\x97\x0f\x34\x5f\xf5\x06\xfa\x1b\xb7\x9f\x4f\xb4\x7d\xcf\x22\xfb\x8a\x06\x75\xf2\xfb\xe2\xd7\xcb\xbf\x53\xf7\xe6\x00\xfd\x0d\x5b\x37\x07\x2c\xb7\xc3\x0b\xfb\xe5\x97\xd6\xeb\xe7\x54\x58\x1d\x24\x0b\x11\xdc\xb6\x94\xad\x7a\xba\xc8\xe8\x6b\x55\xe5\xac\xe1\x8d\xe5\x9c\x03\xcf\xaa\xb1\xb5\x4d\x0e\xd5\x58\x73\xa2\xac\x23\x6d\x3d\x4d\x9a\x6d\xfa\x2b\xca\xfb\xb5\x13\xa4\x19\xef\xd2\xe6\x50\xd0\x18\xca\x7c\xe8\xe3\xe8\x7f\x8f\xdb\xae\x95\x8f\x9d\xa0\xd0\x8d\xe0\xec\xc7\x9f\x7b\xa7\xbd\xd3\xde\x19\x74\xd3\xe6\xd5\x32\xd4\x7e\xdd\x51\xc3\xc6\xd0\x45\x38\x5e\xf8\x97\xfe\x70\x09\x67\xc7\x4f\xdb\xf0\xed\xb3\x4d\xf2\x75\x85\xde\xa9\xa0\x54\xee\xdd\xef\x4e\xb0\x34\xc6\x89\x48\x79\xdd\xb0\xb1\x19\x9b\xb9\x86\xe7\x8e\x48\x7b\xf7\x66\xd5\xd4\x37\xa1\x53\xd9\xce\x39\x4b\x65\xd8\xf1\xad\x26\x9c\x38\xd1\x5b\x7b\x01\xf7\xf9\xb1\xe1\x69\xc5\xe2\xef\xda\x85\x54\xfd\xf9\x8b\xba\x0e\xcb\xc2\x7b\xdb\xfb\xb9\x36\xf3\xd4\xb5\xd8\xb3\x5a\x92\xc4\x48\x88\xda\x8a\xdf\x85\xda\xcb\x22\xda\x7d\x80\x28\x45\x37\xdc\x3d\x22\x12\xc6\x40\xac\x6d\x25\x5d\x4b\xc1\x35\xf2\x10\xb2\xb7\xa4\xec\xf1\x31\x74\x77\xd3\xa5\x57\xc9\x5e\x07\x20\x7b\x45\x73\x37\x2f\xe6\xdf\xe2\xd9\x2a\x3b\xfa\x4b\xfc\x94\x52\x89\x61\xa1\xd9\x2c\xa3\xb5\xb7\x71\x2d\x50\x77\xcf\xd1\x57\xb9\x72\xe0\x3e\x42\x89\x16\x6c\x49\xc7\xc6\xad\x69\x88\xaa\x15\x96\x5d\x57\xc1\x66\x35\x7b\x00\xe0\xee\x4d\xad\x06\x6a\x42\x1e\x68\x9c\xc6\x40\xac\x5f\x1b\xad\xb9\x10\xb1\x78\xf2\xc7\xd7\xc2\x73\x20\x20\x1c\x52\xd5\x54\xd6\xc4\x2d\xba\x34\x41\x57\x00\x2b\xf7\xd2\x07\xb0\xbd\x3d\xfb\x71\x42\x5f\x84\xcb\xbd\x67\xbf\x0c\x15\xbc\xb2\xab\x5e\xd7\xd1\x95\x12\xc0\x4b\x31\x1a\x83\x5e\xcf\x2f\x73\x57\x93\x98\x08\x45\xb5\xd9\xd1\x7e\xc6\x60\xbf\xf2\xa8\x5c\x79\xda\x3c\x05\x81\x08\x9b\x50\xcf\xa9\x86\xf9\x8e\xc1\xf5\xfc\xb2\x00\xda\x7a\x91\x7e\x00\xeb\x33\xdf\xed\x7b\x1b\xda\xf0\x86\x05\xea\x2c\x2a\x04\x10\x58\x49\xc2\x83\xc8\xa2\x38\x01\x4d\x36\x20\x24\x08\x1d\xa1\x04\x89\x6b\x23\xb5\x95\xb0\x24\x36\xb5\x43\xae\xf7\x95\x08\x5c\xec\x3e\xcf\xb0\xaf\xfe\x24\x65\x3a\xe3\xba\x47\x01\x6b\x94\xc8\x4b\xbe\xdd\xfa\xd4\x70\x08\xb5\x33\x04\x23\x9a\xde\xa1\x3d\x97\x9a\xc1\xf2\xf7\x36\x06\x24\xd5\x40\x95\x85\x97\xbd\x50\x49\x21\xdc\x49\xa9\x29\x54\x03\xe8\xd0\x3d\x99\xc0\x88\x4a\xdb\x22\x6f\x0b\xb0\xa5\xe7\x93\x36\x57\x41\x7b\x0e\x0a\xed\x6b\x9e\x4d\x59\x3a\x22\xda\x7d\x23\x22\x45\xaa\x31\x87\x9f\x47\x5d\xf6\x54\x7a\x62\x10\x33\x5c\x3b\x80\x2b\x46\xf8\x2d\x10\x67\xeb\xe2\x03\x93\x4c\xb7\x18\x36\xd0\x0e\x4a\xfe\x77\x91\x6d\x5c\x00\x6e\xbe\x27\xd6\x71\x9f\x5b\x1f\xca\xab\x4f\xd6\x40\xf6\x00\x06\x10\xd2\xf5\x9a\x06\xc6\xa0\x5a\xc0\x26\x45\xa5\xb2\x57\x76\x40\x6e\x3c\x3c\x04\xa2\x20\x21\xb2\xd0\xab\x11\xed\x1e\x57\x91\x10\xb7\xc6\xbd\x7b\x00\x57\x42\x1b\x62\xb9\x4d\xda\x90\xbb\x77\x0a\xf8\x98\x2d\x29\x5e\xfa\x6d\x79\x82\xe3\x3f\x48\xf7\x5f\x83\xee\xff\x9f\x76\xff\xe7\xcf\xcf\xff\x7d\xfa\x68\x5a\x8a\x0d\x72\x94\xf6\x93\x2d\x7c\x48\x24\x2a\xe5\x9e\xf7\x9c\xac\xad\x2f\x23\x46\xdc\xf2\x9e\xa3\xfc\x78\x9a\x9d\x75\xab\x45\x60\xdf\x25\xf5\xbe\x40\x74\x65\xb5\xa6\xd1\xe3\x62\x0f\xe4\x1b\xca\xd1\xb3\x2f\x7b\x1b\x89\xea\x13\x3b\xc9\x1a\x2e\x21\x41\x7d\x62\x54\x23\xbc\xca\x2c\xfb\xba\x77\x5c\xd7\x4f\xc1\xc7\xb7\x7c\x9a\x28\x8b\x6b\xef\x27\xf1\xb5\xb2\x6d\x17\xfd\x09\x91\x33\xb8\x7b\x99\x5e\xbb\xa3\x4e\xfb\xa5\xf8\x13\xd5\x75\x2f\xd3\xd9\xee\xa8\xd2\xe2\x1c\x67\x3f\x3d\xed\x1c\xcd\xab\xf0\x83\x89\x91\x09\xbe\x01\x49\x78\x28\xe2\xcc\xe9\x9b\x59\xa2\x08\x62\xe3\xb6\x90\xdf\x31\xe7\xf8\xfe\x71\xff\xe7\xe7\xb7\xcf\xf0\xda\xd6\x7b\xf0\x06\x36\x77\xf1\x0a\x8a\x30\x6d\xbf\x24\x52\x8e\x0b\x44\x44\x35\x13\x6d\x8e\xac\x58\xb6\x70\x57\xcb\x5f\x18\x57\xed\xf7\xe0\xfb\x20\xba\xbb\x61\x50\x98\x7d\xf3\xf4\x32\xa4\x43\xb7\x7a\xe1\x6e\x96\x73\xc0\x16\xea\x9b\x2f\x81\x5a\xbe\x0e\xaf\x21\xbe\x10\xf7\x20\xd6\x1a\xb9\xb1\x78\x10\x61\x70\x9b\xbd\xb7\xdb\xb3\x88\xd2\x24\x4e\x94\x95\x20\x4d\x42\xa2\x51\x9d\x98\x52\xa2\xdc\xf9\xa4\x07\xa7\x36\x33\x67\x37\x2b\xca\x24\x49\xca\x61\x3a\x0b\x48\x10\xa1\xe3\x66\x12\x65\x69\x39\x08\x0e\x78\x87\x72\x6b\x83\x00\x95\x6e\x28\x23\x5f\x3d\xc7\x3b\xc2\x68\xe8\x32\xfa\x7b\x4b\xcd\x83\x5d\x0d\xda\x7f\x81\x9e\x05\xd3\xd1\x8f\x47\x6d\xc5\x29\x48\x95\x16\x31\x0c\x45\x6c\x8a\x94\x84\x98\x4a\x29\x64\xd6\x87\x54\xad\x52\xa3\x9c\x94\x29\xdb\x9f\xe4\xff\x13\x00\x00\xff\xff\x96\xc2\xb9\x82\xa7\x2b\x00\x00")

func templateTemplateOpenshiftIoOpenshiftCakephpMysqlExampleYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftCakephpMysqlExampleYaml,
		"Template.template.openshift.io/openshift/cakephp-mysql-example.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftCakephpMysqlExampleYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftCakephpMysqlExampleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/cakephp-mysql-example.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftCakephpMysqlPersistentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\xdd\x6f\xdb\x38\xb6\x7f\xf7\x5f\x71\x10\x0c\x90\x19\xdc\xc8\x4e\xda\xdb\x99\xb9\x02\xee\x83\x6b\xab\x89\xd1\x38\xf6\xd8\x4e\xbb\xdd\xd9\x41\x40\x4b\xc7\x16\x37\x12\xa9\x92\x94\x53\x6f\x37\xff\xfb\x82\xa4\x24\xeb\xcb\x8e\xd3\x8f\x9d\xf1\x43\xd1\x90\x87\xe4\xef\x7c\x1f\xf2\x88\x24\xf4\x1d\x0a\x49\x39\x73\x41\x61\x9c\x44\x44\x61\x97\x27\xc8\x64\x48\x57\xaa\x4b\x79\x6f\x73\xd1\xb9\xa7\x2c\x70\x61\x91\x4d\x77\x22\xb2\xc4\x48\xba\x1d\x00\x92\x24\x2e\xf8\xe4\x1e\x93\x30\x71\xe2\xad\xfc\x18\x39\x89\xde\x4d\x2a\x64\xaa\x03\xc5\x8e\x07\x88\x62\x94\x92\xac\xd1\x85\x7f\x3b\x1d\x80\x45\x88\xb0\xe2\x51\xc4\x1f\x28\x5b\x83\x44\xb1\xa1\x3e\xfe\x28\x7f\x82\x90\x6c\x10\x96\x88\x0c\x7c\x81\x44\x61\x00\x94\xc1\x96\xa7\x02\x12\xc1\xff\x89\xbe\x72\xe1\x87\xcf\x37\xfd\xb1\xf7\x78\x06\x3f\x7c\x1e\xf6\x17\xfd\xd7\xfd\xb9\x77\x37\xf7\x66\xef\x46\x03\xef\xce\xcc\x74\x3b\x1d\x80\x37\x5c\x40\xcc\x05\x02\x65\x2b\x2e\x62\xa2\x28\x67\x40\x96\x3c\x55\x90\x4a\x7d\xa8\x0a\xa9\x2c\x80\x9f\x01\x65\x7e\x94\x06\x7a\x62\x92\x20\x9b\x6b\xa9\x80\xcf\x99\xa4\x01\x0a\xb3\x58\x9e\x81\x44\x84\x50\xa9\x44\xba\xbd\xde\x9a\xaa\x30\x5d\x76\x7d\x1e\xf7\x0a\x31\xf6\x34\xf7\x0e\x7e\xea\x2d\x23\xbe\xec\xc5\x44\x2a\x14\xbd\x99\xd7\x1f\x8e\xbd\x6e\x1c\x74\x3b\x31\x2a\x12\x10\x45\x8c\x48\x19\xe3\xca\x6e\xac\xff\x04\x08\x50\xfa\x82\x26\xca\xa8\xa8\xcf\x00\x3f\x91\x38\x89\x10\x06\xe4\x1e\xa7\x57\x53\xad\x83\x88\xfa\x96\x8f\x07\xaa\x42\x20\x30\xde\xce\x7f\xbb\x06\xbd\xe3\x92\x48\xec\xb6\xf2\x6c\xf6\x86\xff\x0a\xe7\x5a\xef\xfb\x99\xd7\x28\xa8\xcf\xd9\x20\x22\x52\xba\xe6\xbf\x4e\x12\x26\x66\xbc\x62\x88\x01\x95\x49\x44\xb6\x0e\x23\x31\xba\x05\xfb\xff\x63\xb9\x6d\x21\xe7\x7e\x1a\x23\xb3\xb2\x74\x52\x11\xb9\xc7\x22\x6d\xee\x15\x71\xb6\x76\x2a\x8a\x58\x94\x65\x05\x01\xae\x28\x43\x09\x02\x25\x4f\x85\x8f\x12\x18\x62\x80\x01\x28\x0e\x01\x6e\x30\xe2\x49\x2e\xef\x36\xbd\x95\x65\x4d\x60\x99\xd2\x28\xd0\x92\x5e\xd1\x75\x2a\x32\x82\xb2\x96\x03\x4c\x22\xbe\x8d\xad\x8b\xe9\x5f\x9d\x96\x05\x85\xf2\x4b\xc4\x55\xb2\x6e\x93\xcb\x44\xf0\x8d\x56\xae\x53\x95\xf4\x0c\x03\xb8\x22\xea\x0c\x46\xcc\x6f\x59\x25\xd3\x24\xe1\x42\x55\x25\x4c\x7c\x1f\xa5\xec\x0a\x0c\x42\xa2\xb4\xa0\xcd\x3a\x45\xd6\xd2\x85\x8f\x29\xf5\xef\xa5\x22\x42\x9d\x25\x61\x72\x96\xc9\xdd\x12\xb4\x46\xa0\x25\x65\x01\x59\x46\xe8\xc2\xc9\x8a\x44\x12\x4f\x3a\x00\x16\xda\x81\xd0\xa3\x09\x64\x42\x7c\x74\x77\x70\x3b\x7c\xa9\x43\x85\x74\x3b\x0e\x94\x03\xdf\xe6\xa2\x03\x60\x83\xdc\x1c\x7d\x81\x7a\x7d\xd9\x27\xf3\xe3\xb2\x08\xd3\x01\x90\x4a\x50\xb6\x1e\x16\xf3\x39\x10\x69\x96\x3b\x8a\xdf\x23\xd3\xf4\x83\xfe\x5b\x6f\x7a\x35\xbd\x9b\x7b\x83\x99\xb7\xb8\x5b\x4c\xde\x7a\x37\x8f\xf5\x15\xa9\xa0\x6a\xeb\xf8\x34\x09\x51\x38\x12\x31\xa8\xad\xbc\x9d\x8d\x16\x1f\xee\x06\xa3\xe9\x95\x37\xbb\x9b\x7b\xde\x70\xcf\x0e\x92\x44\xaa\x75\xe9\xbc\x7f\xbd\xb0\x6b\x72\xb3\x70\x12\x22\xe5\x03\x17\xe6\xa8\x22\x5a\x4e\xfb\xf3\xf9\xfb\xc9\x6c\x58\xa3\x4d\x25\x8a\x0a\xdd\xed\xdc\x9b\x3d\x1e\x92\xa1\x09\xdb\x0d\x21\x36\x42\x5b\x2d\xb8\x79\x9f\x12\x2e\x51\x1a\xfb\x8d\x38\x09\x60\x49\x22\xc2\xb4\x37\xa9\x10\x2b\x1e\x90\xf0\x40\x66\x3b\x64\x39\xa2\x4b\xa2\x24\x24\x55\xbb\x09\x30\x41\x16\x20\xf3\x29\x4a\x17\x4e\x7f\xff\x7c\xa2\xd5\x78\xe2\xc2\xc9\xbe\x0c\x71\x72\x96\xed\x0a\x70\xa2\x79\xd1\xb4\x19\x37\x27\x8f\x7f\x9c\xb6\x9b\x42\x82\xbe\x65\x47\xbb\x41\xc6\x99\x93\x91\x3d\xe0\x32\xdb\x51\x4f\xba\xf0\xeb\xf9\xaf\xe7\xd9\x80\x22\x62\x8d\x6a\x5a\x1d\x96\x18\xa1\xaf\xb8\xc8\xe5\x53\x3d\x6c\xaf\xc4\x67\x3c\x55\x4d\x79\xef\x47\x1a\x72\x69\x2c\xa5\x3f\x9d\x5e\x8f\x06\xfd\xc5\x68\x72\x73\x37\x9c\x8c\xfb\xa3\xcc\x38\x15\xcf\x01\xd4\x35\xfa\x0c\x50\xa3\x98\xac\x71\xae\x04\x92\xf8\xd9\xa6\xf0\x16\x31\x91\xa0\x04\xf1\xef\x81\xaf\xc0\x0f\x09\x5b\xa3\xd4\x39\xbf\x6e\x0a\x54\x9f\xd2\xc2\xee\x5e\x58\xaf\x75\x78\x1d\x98\x50\xf8\x6c\x58\xc3\x2c\xce\x87\xfc\x41\x87\x76\x1b\xa9\x6b\x88\x72\xf5\xe6\xa1\xac\xc5\x30\x1f\x08\x55\xce\x8a\x0b\x47\x20\x09\xb6\x2e\x9c\x28\x91\x9a\xa8\x76\x48\x67\x3c\x55\x49\xaa\x72\x58\x3b\x0d\xb5\x88\x7b\x41\xd6\xc5\x64\x65\x43\x57\x23\x92\x2a\xb3\x56\xa9\x06\x3c\x8e\x69\xb1\xa7\x65\xd4\x85\x6e\x2f\xa2\xcb\x9e\xce\x53\xbd\x01\x67\x92\x47\x68\x92\x23\xe8\xa5\x9a\x53\xe8\x47\xd1\x02\xa5\xb2\x2e\x68\x33\x9e\xbb\x4b\x45\x0a\x3f\xa9\x21\x35\x11\x63\x30\xb9\x59\x78\x7f\x5b\xdc\x0d\x47\xb3\xc7\x8c\x60\xbd\x3b\x0f\x40\xe0\x4a\x93\xcd\x27\xb7\xb3\x81\x77\x37\xf3\xa6\x93\xf9\x68\x31\x99\x7d\xb8\x9b\x79\x6f\x1e\x0b\xaa\x54\xd0\x76\xaa\xdb\xd9\x75\x4e\xa5\xb6\x09\xba\x70\x49\x2d\x6f\x52\x09\xa2\x70\xbd\x2d\x38\x33\x18\xe7\xb5\x51\x00\x64\x9b\xdd\x1f\xb9\xcf\x0e\x26\xe3\xe9\x64\xee\xcd\xee\xc6\xa3\xd9\x6c\x32\x2b\xe6\x01\x36\x24\x4a\xd1\xf2\x55\x21\xd9\x41\x5d\x09\x1e\xbb\xa5\x15\x07\x55\x93\x2b\x27\x09\x13\xf7\x97\xee\x79\x6d\x3c\x4b\x5e\x56\x73\xf3\x69\x7f\xe0\x55\x79\x9d\x1b\x9e\xac\xbb\x0a\xba\x5e\xa3\x28\x62\x8f\x25\x30\xa7\x0e\x8c\xe7\x54\xc6\xad\xed\x57\x26\x6c\x41\xb4\x03\x6e\xd3\x98\x3e\xfc\x72\xb4\xb8\xba\x7d\x7d\xf7\xde\x7b\x7d\x35\x99\xbc\xcd\xf2\x58\x43\xe8\x57\xe9\x72\xbf\xc3\x0d\x8b\x0a\xe4\xdb\x78\x9d\xad\x68\x1a\x81\x40\x27\x02\x14\xdf\xcb\xfb\x04\x9a\x93\xa4\x0b\x17\x47\x04\xea\x36\x1b\x14\x68\x6f\x2e\x53\x22\x48\x2c\x77\xb2\x4e\x04\x96\x2d\x06\x3f\xa1\x7f\x83\x0f\x53\x1e\x94\x47\xb5\x63\xc5\x31\x61\xb5\x41\x07\xba\xbd\x98\xae\xf5\x41\x4e\x51\xee\xcb\xb0\xb6\x90\x29\x42\x19\x8a\x9b\xa7\x4a\xa6\xc2\x88\x09\x8d\x52\x81\x53\x1e\x51\x7f\xab\xeb\x3f\x25\xb6\x15\x8d\xcf\x32\x56\x2a\x35\x5b\x8e\xac\xaa\x5b\xfd\xdb\xdd\x17\xab\x76\x5f\x96\xd6\xbe\xd1\x9d\x06\x2a\xbc\xc8\xb2\xdb\x56\xbc\x78\xe7\xc7\xad\x29\xbe\x22\x9a\xc2\x9f\xdb\xab\x81\x43\x7b\x7a\x37\x97\xa3\x9b\xa7\x76\xb3\x44\x07\xf7\x39\x02\xd3\x93\x58\x74\x39\xd6\xdc\xe3\x4d\x2d\x14\x41\xe1\xd7\x6f\x71\x3b\xc3\x55\x7d\x0e\xe0\x1e\xb7\x6e\xb5\xea\x6b\x90\xb4\x2b\xae\x05\x53\x5e\x4a\x7e\x7b\x5c\x79\xe5\xfa\x6c\x6c\x6d\xb5\xf8\x37\x83\xd7\x76\x01\xf8\x1a\x84\xbb\xc2\xfd\x7b\x40\xdc\xdd\x17\xbe\x1e\x63\xe9\x5e\xf2\xfd\xa0\x96\x2e\x47\xcf\x46\x3c\x99\x0e\xfa\x83\x2b\x5d\x38\xbc\xeb\x5f\x8f\x86\xfd\x85\x77\xf7\x66\xe6\xfd\xd6\xee\x75\x7b\x88\xcb\xfb\x9a\x8a\xd3\x85\x53\x38\x2d\x0d\x46\x74\x83\x0c\xa5\x9c\x0a\xbe\xc4\x2a\x57\xfa\x4e\x7c\x89\xaa\xce\x6a\x42\x54\xe8\x42\x2f\x44\x12\xa9\xb0\x9b\xdf\x80\x4b\xf3\xf5\x0b\x43\x76\x3a\xa3\x8a\x92\x68\x88\x11\xd9\xce\xd1\xe7\x2c\x90\x2e\xbc\xac\xd2\x24\x28\x28\x0f\x8a\xd9\x9f\xab\xb3\x8a\xc6\xc8\x53\xb5\x5b\xdc\x08\xcc\x47\xe4\x88\xd2\x5d\x27\x97\x76\x11\x9c\xa7\x6d\xc8\x75\xb2\xa5\x7f\xa2\x84\xbe\x91\x80\x8a\x17\x9e\x2a\xd8\x88\xc6\x54\xc9\x3a\x03\x31\xc6\x5c\x6c\xb5\x59\x8d\xbd\xb1\x2e\x58\xaf\x47\xe3\x51\x56\x3d\xd5\x6b\x36\xba\xab\xd6\xea\x15\x02\x49\x15\x8f\x89\xa2\xbe\x0b\xba\x54\x69\x66\x43\x9d\xd9\x2b\x19\xf1\x49\x05\x7e\x51\x9d\xda\x72\x89\x80\xe7\xd4\x9a\x7b\x2b\xc4\x69\x01\xf0\x1d\x8f\xd2\x18\x07\x11\xa1\xcd\x3b\x63\x0e\x62\x6f\xb2\xde\xd5\x0a\xf6\xf9\x69\xcc\x03\x2c\xe4\x3b\x43\x12\xbc\x17\x54\xe1\x84\x65\x55\x73\x43\x95\x02\x3f\xa6\xfa\x5a\x53\xaa\x83\x15\x17\xc6\xd9\x7f\xf8\xfc\x6e\x72\x7d\x3b\xf6\xee\x06\xfd\x69\x7f\x30\x5a\x7c\xf8\x8e\xcf\x1f\xba\xb0\x2d\x9e\xef\x4a\x55\xed\x33\xf8\x6f\x79\x89\x30\xa6\xd0\x29\x3b\xce\xcb\x97\xe7\x3f\xe7\x4a\x2c\xbd\x45\x14\xc3\xfb\x4a\xdc\x3d\xe7\xff\x19\xf5\x7f\x2e\xa6\x6f\x53\xf5\x1f\x21\xd8\x63\xaf\x01\x07\x0a\xca\xfa\xbd\xe0\x1b\x97\xd4\x4f\x94\xb2\x47\x91\x7d\x45\xd1\x3d\xfe\x30\xff\xed\xfa\xaf\x54\x91\x5a\x40\x7f\xc1\x72\xd4\x02\xcb\xf5\xf0\xcc\x3b\xc0\x73\x6b\x90\x63\xaa\x06\xe5\x27\x73\xee\xdf\xb7\xe4\xe1\x7a\xb8\xc8\xe8\x6b\x69\xf2\xa2\x61\x8d\xe5\x98\x03\x47\x15\x0d\xb5\x43\x0e\x15\x0d\xfa\xa2\x5c\x47\xda\x7a\x49\xd6\xc7\xf4\x96\x94\xf5\x6a\x17\x63\x3d\xee\xd0\xe6\x90\xdf\x18\xca\x6c\xe8\xfd\xf0\xff\x4f\xdb\x5e\xcb\x4f\x2d\xa3\xe0\x84\x70\xf1\xe2\x97\xee\x79\xf7\xbc\x7b\x01\x4e\xda\x7c\x31\x87\xda\xcf\x19\x36\x74\x0c\x0e\xc2\xe9\xdc\xbb\xf6\x06\x0b\xb8\x38\x7d\x5a\x87\xaf\x8e\x56\xc9\xd7\x55\x2e\x56\x04\xa5\xfa\xc5\xfe\x36\x26\x5f\x8f\x79\xca\xea\x8a\x8d\xf5\xd8\xd4\x56\x70\x1b\x22\xcc\x93\xa2\x11\x53\x4f\xbb\x4e\xe5\xb8\xc3\x31\xc9\xa9\xd0\xdb\x03\x65\xf3\xd5\xee\xb8\xe5\xa6\xf4\x6b\xd6\x1a\xb5\xa7\x16\x3d\x74\xf3\x74\xa0\xfc\xae\x25\x5c\xd5\x77\xbe\xa8\x5e\x33\x5b\xb8\xaf\xba\xbf\xd4\x66\x9e\x7a\x59\x3c\xaa\x98\x4b\x34\x87\xa8\x0c\xfb\x0e\xd4\x7a\xa3\x68\xce\x01\x22\x25\x5d\x33\xdb\x06\x25\x51\x04\x7c\x65\xb2\xf6\x4a\x70\xa6\x90\x05\x90\xb5\xe3\xb2\xf6\x69\x60\x9f\xf7\x4b\x7d\xd5\x6e\x07\x20\xeb\x45\x5a\x75\xe8\x7f\x8b\xe6\x5f\xf6\x74\xa2\xab\x36\x2a\x30\x28\x24\x9b\x45\xcf\xbd\x35\x70\x0b\xda\x5d\x83\xfb\x26\x97\x0f\x3c\x84\x28\xd0\xe0\x2d\x89\x59\x7b\x11\x0d\x50\xb6\x22\x33\xeb\x2a\xf0\x8c\x70\x0f\x60\xdc\x75\x26\x6b\xa0\xc6\xe4\x13\x8d\xd3\x18\x88\x71\x23\x2d\x38\xeb\x91\x06\x4f\xde\x41\x2e\x8c\x07\x7c\xc2\x20\x95\x4d\x79\x8d\xed\xa2\x6b\xed\xe3\x05\xb0\xf2\x5d\xe4\x00\xb6\x57\x17\x2f\xc6\xf4\x59\xb8\xec\x67\x07\xcf\x43\x05\x3f\x9a\x55\x3f\xd5\xd1\x95\xe2\xcd\x73\x31\x5a\xbf\x06\xab\x45\xb2\x21\x34\x22\xcb\x08\x61\xc5\x85\xc9\xda\x67\x80\xdd\x75\xd7\x2e\x3d\x83\x17\x97\xb4\x0e\x2f\x5b\x3f\x20\x09\xf1\xa9\xda\x16\xc8\x6a\x37\x80\x03\xb0\x2e\x2e\x1b\xa0\xb4\x95\xdd\xce\xae\x73\x17\x10\x98\x70\x49\x95\x16\x83\xf9\x66\xc3\x7c\xc9\x52\x79\xcd\x36\xb1\x1a\x7c\x1e\x34\xe5\x77\x49\x15\xcc\x76\x1b\xdc\xce\xae\x0b\x8c\xad\x3d\x92\x03\x48\x8f\xfc\x22\xa2\xbb\xa6\x0d\x13\x9d\xa3\xca\xbc\x95\x03\x81\xa5\x20\xcc\x0f\x0d\x8a\x33\x50\x64\x0d\x5c\x00\x57\x21\x0a\x10\xb8\xd2\x5c\x1b\x0e\x4b\x6c\x53\x33\x64\xeb\x7f\x81\xc0\xf8\xee\x2b\x14\xf3\x3d\x05\x49\x23\x95\xed\xba\x47\x00\x2b\x14\xc8\x4a\x0e\xd7\xda\x45\x3a\x84\xda\x2a\x22\x22\x8a\x6e\xd0\x3c\x36\xe8\xc1\xf2\x37\x45\x1a\x24\x55\x40\xa5\x81\x97\x35\x1f\x05\xe7\xf6\xee\xdb\x64\xaa\x01\x74\x60\xbb\x61\x30\xa4\xc2\x5c\x13\x76\xc6\x54\xea\x8c\xb5\x99\x0a\x9a\xbb\x60\x60\x1a\xb5\x26\x94\xaa\x90\x28\x78\xa0\x51\x04\x82\xa7\x0a\x73\xf8\x79\x28\xc8\xba\xe0\x67\x1a\x71\x84\x2b\x0b\x70\x19\x11\x76\x0f\xc4\xea\xda\x2e\x5e\x16\xb2\xc5\xa0\x81\xb6\x5f\xb2\xbf\xab\xec\xe0\x02\x70\xb3\x55\x5c\xc7\x7d\x69\x6c\x28\xcf\x8a\x59\x11\xdd\x05\xe8\x43\x40\x57\x2b\xea\x6b\x85\x2a\x0e\xeb\x14\xa5\xcc\x3e\xa0\x00\x64\xda\xc2\x03\x20\x12\x12\x22\x0a\xb9\x6a\xd6\x1e\x70\x19\x72\x7e\xaf\xcd\xbb\x0b\x70\xc3\x95\x26\x16\xdb\xa4\x0d\xb9\x6d\x41\xc1\xfb\x6c\x49\xf1\x11\x87\x49\x9b\x70\xfa\x3b\x71\xfe\xd5\x77\xfe\x7e\xee\xfc\xdf\x1f\x9f\xff\xf7\xfc\x51\x97\x55\x6b\x64\x28\xcc\x97\x69\xf8\x29\x11\x28\xa5\xed\xdc\x5a\x5e\x5b\x9b\x5e\x9a\xdd\xf2\x99\xc3\xfc\x8a\x9e\xdd\xf7\xab\xc9\x69\x5f\xf3\x61\x9f\x23\xda\x74\x5f\x93\xe8\x69\x71\x06\xb2\x35\x65\xe8\x9a\xa6\xed\x5a\xa0\xfc\x18\x9d\x65\x45\x27\x17\x20\x3f\x46\x54\x21\xfc\x98\x69\xf6\xa7\xee\x69\x5d\x3e\xc5\x3e\x9e\xd9\xa7\x89\xb2\x68\x67\x3c\x89\xaf\x75\xdb\x76\xd6\x9f\x60\x39\x83\xbb\x77\xd3\x5b\x7b\xdd\x6b\x6f\x76\x3c\x91\xf5\xf7\x6e\x3a\xdd\x5d\xd7\x5a\x8c\xe3\xe2\xe7\xa7\x8d\xa3\xd9\xe2\x38\x18\x18\x23\xce\xd6\x20\x08\x0b\x78\x9c\x19\x7d\x33\x4a\x14\x4e\xac\xcd\x16\xf2\xde\x41\x8e\xef\x1f\x0f\x7f\x7c\x7e\x75\x84\xd5\xb6\xf6\x37\x1a\xd8\xec\x83\x3a\x48\x12\x29\x93\x12\xa5\xdd\x05\x42\x22\x9b\x81\x36\x47\x56\x2c\x9b\xdb\x96\xc1\x17\xfa\x55\x7b\x7f\x63\x1f\x44\xfb\xe6\x0f\x12\x31\xf8\x02\xa4\x03\xbb\x7a\x6e\x3b\x06\x39\x60\x03\xf5\xe5\x97\x40\x2d\xb7\x39\x6a\x88\xaf\xf8\x03\xf0\x95\x42\xa6\x35\xee\x87\xe8\xdf\x67\x9f\x52\x98\xfb\x98\x54\x24\x4e\xa4\xe1\x20\x4d\x02\xa2\x50\x9e\xe9\x54\x22\xed\x1d\xad\x0b\xe7\x26\x32\xe7\x2f\x92\x3a\x48\x52\x06\x93\xa9\x4f\xfc\x10\xed\x6e\x3a\x50\x96\x96\x03\x67\x80\x1b\x14\xdb\xfc\xc1\xb2\x21\x8c\x7c\xf5\x0c\x37\x24\xa2\x81\x8d\xe8\x6f\x0c\x35\xf3\x77\x39\x68\x7f\x63\x24\x73\xa6\x93\x17\x27\x6d\xc9\xc9\x4f\xa5\xe2\x31\x0c\x78\xac\x93\x94\x80\x98\x0a\xc1\x45\x56\x87\x54\xb5\x52\xa3\x1c\x97\x29\xdb\xbf\xb6\xf8\x4f\x00\x00\x00\xff\xff\xa4\xa0\x9e\x5d\x91\x2c\x00\x00")

func templateTemplateOpenshiftIoOpenshiftCakephpMysqlPersistentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftCakephpMysqlPersistentYaml,
		"Template.template.openshift.io/openshift/cakephp-mysql-persistent.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftCakephpMysqlPersistentYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftCakephpMysqlPersistentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/cakephp-mysql-persistent.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftDancerMysqlExampleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x6f\x1b\x37\xf2\x7f\xaf\x4f\x31\x30\x0a\xb8\xfd\xff\x2d\xc9\x4e\x9a\x6b\x6f\x81\x7b\xa1\x48\x6a\x2c\xc4\xb2\x54\xc9\x6e\x2e\x57\x14\x02\xb5\x3b\x92\x78\xe6\x92\x5b\x92\x2b\x5b\x97\xf3\x77\x3f\xf0\x61\x57\xfb\x24\xd9\x4e\x13\xf4\x5e\x9c\x80\x04\x16\x39\x1c\xfe\xe6\x79\x48\x8a\x24\xf4\x17\x94\x8a\x0a\x1e\x80\xc6\x38\x61\x44\x63\x47\x24\xc8\xd5\x86\xae\x74\x87\x8a\xee\xf6\xa2\x75\x47\x79\x14\xc0\x8d\x9f\x6e\x31\xb2\x44\xa6\x82\x16\x00\x49\x92\x00\x22\xc2\x43\x94\xed\x78\xa7\x7e\x67\x6d\x7c\x20\x71\xc2\xb0\x05\x39\xb7\x03\x04\x31\x2a\x45\xd6\x18\xc0\xbf\xdb\x2d\x80\x9b\x0d\xc2\x4a\x30\x26\xee\x29\x5f\x83\x42\xb9\xa5\x21\x7e\xab\xbe\x83\x0d\xd9\x22\x2c\x11\x39\x84\x12\x89\xc6\x08\x28\x87\x9d\x48\x25\x24\x52\xfc\x13\x43\x1d\xc0\x37\x9f\xae\x7b\xe3\xe1\xe3\x19\x7c\xf3\x69\xd0\xbb\xe9\xbd\xed\xcd\x87\x8b\xf9\x70\xf6\xcb\xa8\x3f\x5c\xd8\x99\x4e\xab\x05\xf0\x93\x90\x10\x0b\x89\x40\xf9\x4a\xc8\x98\x68\x2a\x38\x90\xa5\x48\x35\xa4\xca\x6c\xaa\x37\x54\xe5\xa0\xcf\x80\xf2\x90\xa5\x91\x99\x98\x24\xc8\xe7\x46\x1b\x10\x0a\xae\x68\x84\xd2\x2e\x56\x67\xa0\x10\x61\xa3\x75\xa2\x82\x6e\x77\x4d\xf5\x26\x5d\x76\x42\x11\x77\x73\xf5\x75\xbd\xe4\xf8\xd0\x5d\x32\xb1\xec\xc6\x44\x69\x94\xdd\xd9\xb0\x37\x18\x0f\x3b\x71\xd4\x69\xc5\xa8\x49\x44\x34\xb1\xca\xe4\x5c\x68\xc7\xda\x7c\x05\x88\x50\x85\x92\x26\xda\x1a\xc7\xaa\xc9\x7c\x7a\x1c\xbc\x0e\x61\x60\xd9\x1b\x2b\x30\x1a\x3a\x89\xee\xa9\xde\x00\x81\xf1\x6e\xfe\xf3\x15\x18\xce\x4b\xa2\xb0\xf3\x5f\x2a\xbd\x97\xe8\x43\x6f\x76\x3d\xba\x7e\x17\x40\x8f\xef\x2c\x66\x50\x5a\x48\x8c\xe0\x9e\x32\x06\x4b\x04\x26\x94\x86\x34\x11\x1c\x12\x11\x19\xb5\x68\x99\x86\x06\x45\x07\x26\x9c\xed\x20\x55\x58\x16\x00\x56\x42\x82\x46\xa5\x29\x5f\x77\xec\x2e\x34\x14\xbc\xcf\x88\x52\x81\xfd\xb3\x9d\xa0\x64\x76\xa2\xe4\xeb\x11\x55\x09\x23\xbb\x36\x27\x31\x06\x99\x7a\xff\xdf\x6b\xf3\xdb\x61\xb2\xc1\x18\x25\x61\xdf\x35\xac\x14\x61\x1a\x23\x77\xf6\x6b\xa7\x92\x05\xcf\xd4\x4d\x9d\x15\x13\x7c\xdd\x2e\xd9\xfe\xa6\x24\x5b\x84\x2b\xca\x51\x81\x44\x25\x52\x19\xa2\x02\x8e\x18\x61\x04\x5a\x40\x84\x5b\x64\x22\xf1\x8a\x25\x99\x08\xc6\x09\xa2\xa2\x9f\x14\x2d\x4c\x60\x99\x52\x16\x19\xfb\xae\xe8\x3a\x95\x9e\xa0\xe8\x55\x11\x26\x4c\xec\x8c\x7c\x9e\x73\x95\x96\x47\xb9\xb3\x15\x88\xcb\x64\x1d\x17\xe6\x39\x1d\x55\xde\xce\x9e\x27\xe5\xc0\x9d\x65\x14\x55\xda\x2c\x37\xd3\x64\x8d\x67\xa0\x84\xb3\x6f\x89\x1f\xa8\x8d\x48\x59\x64\x1c\x24\x35\xe2\x19\x9b\xe3\x43\x82\x92\x5a\x43\x30\xcf\x36\x49\x65\x22\x14\x2a\x10\x9c\xed\x3a\x75\x75\x27\x52\x6c\x8d\x5b\xb7\xcb\xc6\x9f\x61\x04\x97\x44\x9f\xc1\x88\x87\x0d\xab\x54\x9a\x24\x42\xea\xb2\xa5\x49\x18\xa2\x52\x1d\x89\xd1\x86\x68\x63\x70\xbb\x4e\x93\xb5\x0a\xe0\xf7\x94\x86\x77\x4a\x13\xa9\xcf\x8c\xef\x9d\x39\x07\x70\x04\x8d\x79\x77\x49\x79\x44\x96\x0c\x03\x38\x59\x11\xa6\xf0\xa4\x05\xe0\xa0\x1d\x48\xb8\x66\x52\x25\x24\xc4\x60\x0f\xb5\x25\x96\x26\x49\xaa\xa0\xd5\x86\x62\xaa\xdf\x5e\xb4\x00\x5c\x5a\x9f\x63\x28\xd1\xd8\xb5\x98\x8b\xb2\xad\x7c\x6e\x6d\x01\x28\x2d\x29\x5f\x0f\xf2\xf9\xcc\x8c\xed\x84\x28\x75\x2f\x64\x14\x14\xf3\xef\xb4\x37\x9f\x7f\x98\xcc\x06\x8f\x65\xda\x54\xa1\x2c\xd1\xdd\xce\x87\x33\x47\x73\x87\x3b\x43\x62\x66\xe7\xc3\xfe\x6c\x78\xb3\x78\x3f\xfc\xb8\x30\x44\x8f\xc7\xb0\xdb\x42\x51\x03\x5f\x4b\xa5\x95\x64\x3a\x7c\x70\x2e\x61\xfc\x96\x09\x12\xc1\x92\x30\xa3\x54\x05\x7a\x83\x25\xcf\x4f\x44\xa4\x3c\x07\x5f\x95\x3a\x84\x25\x1b\x52\xb6\x55\x84\x09\xf2\x08\x79\x48\x51\x05\x70\xfa\xeb\xa7\x13\xa3\xbe\x93\x00\x4e\x0e\xd5\xa4\x93\x33\xcf\x15\xe0\xc4\xc8\x62\x68\xbd\x34\x27\x8f\xbf\x9d\x36\x9b\x20\xc1\xd0\x89\x63\x5c\xcf\x4b\xd6\xf6\x64\xf7\xb8\xcc\x1c\x5e\x48\x1d\xc0\x8f\xe7\x3f\x9e\xfb\x01\x4d\xe4\x1a\xf5\xb4\x3c\xac\x90\x61\xa8\x85\xcc\xf4\x53\xde\xec\xa0\xc6\x67\x22\xd5\x75\x7d\x1f\x46\xba\x11\xca\x96\xe8\xde\x74\x7a\x35\xea\xf7\x6e\x46\x93\xeb\xc5\x60\x32\xee\x8d\xae\x9d\xd9\xb5\xc8\x00\x54\x2d\xfa\x02\x50\xa3\x98\xac\x71\xae\x25\x92\xf8\xc5\xae\xf0\x1e\x31\x51\xa0\x25\x09\xef\x40\xac\x20\xdc\x10\xbe\x46\x65\x92\x51\xd5\x15\xa8\xd9\xa5\x41\xdc\x83\xb0\xde\x9a\xb4\xda\xb7\x29\xeb\xc5\xb0\x06\x3e\xc9\x6f\xc4\xbd\xc9\xeb\x2e\x43\x57\x10\x65\xe6\xcd\xd2\x47\x83\x63\xde\x13\xaa\xdb\x2b\x21\xdb\x12\x49\xb4\x0b\xe0\x44\xcb\xd4\x66\x92\x63\x36\x13\xa9\x4e\x52\x9d\xc1\xda\x5b\xa8\x41\xdd\x37\x64\x9d\x4f\x96\x18\x06\x06\x91\xd2\xde\x5b\x95\xee\x8b\x38\xa6\x39\x4f\x27\x68\x00\x26\x13\x42\x7b\x04\xf8\xa0\x19\x5d\x76\xcd\x3f\x33\xf4\xc6\x8c\x31\xba\x04\xdd\xfd\x3f\xe7\xac\xb6\xd0\x05\xfb\xe2\xa3\xf1\x41\x0f\xa8\xcd\x25\xfd\xc9\xf5\xcd\xf0\xef\x37\x8b\xc1\xc8\x67\x12\x80\xf5\x7e\x27\x00\x89\x2b\x9b\x54\x26\xb7\xb3\xfe\x70\x31\x1b\x4e\x27\xf3\xd1\xcd\x64\xf6\x71\x31\x1b\xfe\xf4\x98\x53\xa5\x92\x36\x53\xdd\xce\xae\x32\x2a\xbd\x4b\x30\x80\x77\xd4\x49\xa5\xb4\x24\x1a\xd7\xbb\x5c\x26\x8b\x71\x5e\x19\x05\x40\xbe\xdd\x7f\xc9\xa2\xb5\x3f\xed\x5d\x2f\xc6\xa3\xd9\x6c\x32\xcb\xe7\x00\xb6\x84\xa5\x56\x85\x85\xe9\x3d\xc4\x95\x14\x71\x50\xa0\x3e\x6a\x8c\xcc\x1c\x46\x9d\xc1\x9b\xce\xab\xef\x2b\x33\xbe\x50\x38\x6b\xcd\xa7\xbd\xfe\xb0\x2c\xe5\xdc\x4a\xe3\x42\x54\xd2\xf5\x1a\x65\x9e\x6f\x1c\x81\xdd\xb7\x6f\xa3\xa5\x34\xee\xfc\xbd\x34\xe1\x1a\xa0\x3d\x74\x65\x2b\x8e\xd9\xfc\xdd\xe8\xe6\xf2\xf6\xed\xe2\xc3\xf0\xed\xe5\x64\xf2\x7e\xe1\x12\x7f\x4d\xdd\x97\xe9\xf2\x70\x90\x0d\xf2\x6e\xe3\xcb\x44\x9a\xeb\x5e\x6a\xc1\x6f\x92\xbf\x2f\xd7\x5f\x21\xe2\x24\xda\x9d\x54\x00\x17\xcf\x48\xce\x4d\xde\xe7\x94\x35\x43\x77\x4a\x2a\xb5\x15\x19\x49\x59\x2d\xe6\xb3\x3f\xc8\x35\xc6\x70\x73\x64\x67\xee\x9e\x83\xcf\x42\x92\x50\x9e\x7b\x89\x33\x7c\xc9\xf5\xf7\xce\xdf\x58\x11\x0b\x74\x85\x40\x68\x2e\x9e\x0d\x3c\xc7\x1f\xe7\x3f\x5f\xd9\x76\xa2\xce\xe8\xa7\x4a\xe0\xec\x7d\xf0\x3d\xee\x66\xb8\xaa\xce\xd9\x66\x24\x28\x77\x2d\x35\x92\x66\x4d\x55\x01\x65\x7d\xd0\x97\x07\x95\xb5\x5d\x9f\x09\x2c\x53\xec\x13\x6a\x3f\xc4\xa4\xd2\xa2\x7d\x31\xf1\x7c\x17\xf8\x62\xa1\xa6\xc3\xd9\xd5\xa2\x37\xed\xf5\x2f\x87\xaf\x16\xb3\xe1\xd5\xa4\xd7\xa0\x72\xc3\xa0\x81\xb0\xc8\xcf\xd6\xf8\x00\x4e\xe1\xb4\x30\xc8\xe8\x16\x39\x2a\x35\x95\x62\x89\x65\xe0\xa6\xf3\x7f\x87\xba\x2a\x4d\x42\xf4\x26\x80\xee\x06\x09\xd3\x9b\xea\x5c\xb5\x3d\xf3\x3b\x73\xaa\x29\x61\x03\x64\x64\x37\xc7\x50\xf0\x48\x05\xf0\xba\x4c\xa3\x69\x8c\x22\xd5\xfb\xe9\x5a\xe4\x1e\x38\x1a\x14\xf7\x56\xe5\x90\xcc\x23\x77\xda\x84\xcb\x24\x31\xfa\x27\xc9\xfe\x6c\xd1\xf3\x83\x70\x19\x0a\xa3\x31\xd5\xaa\x0a\x2f\xc6\x58\xc8\x9d\x71\x85\xf1\x70\x6c\x0a\xfc\xd5\x68\x3c\xf2\x35\xa7\x5a\xe9\xe8\xbe\xc6\x4d\x89\x24\x71\x81\x19\x49\xb5\x88\x89\xa6\x61\x00\x26\xc1\xd7\x13\xe1\xb5\x29\xb2\xc5\x64\x78\xd4\x34\x9f\x55\xdb\x1b\x5a\x2d\x78\x49\x75\xfe\x6a\xc7\x2a\x5d\x3c\xe6\x17\x2a\x67\x06\xfb\x60\x56\x3f\x7a\xc2\xb1\x9a\x2b\x9d\x71\x5e\xbf\x3e\xff\x4b\xc3\x19\x27\x1f\x3e\x54\x46\x0f\xec\xff\x67\xf4\x18\x99\x9a\xbe\x4c\x67\xf1\x0c\xc5\x3e\xb7\xd5\x38\x52\x79\xbf\x72\xef\xf1\x44\xcd\x7f\x16\xd9\x1f\xe8\x4e\xfe\xd7\x49\xbc\x0c\xd8\x67\x76\x12\x2f\xad\xb4\xcf\xaa\x8f\x61\x32\x17\xe1\x5d\x43\x4d\xaa\xa6\x0b\x4f\x5f\x29\x2a\x17\x35\x6f\x2c\xe6\x1c\x78\x56\x01\xad\x6c\x72\xac\x80\xe2\x43\xd1\x49\xdd\x27\x14\x71\x4c\x78\x54\x1d\x6e\x43\x77\x49\x79\x57\x55\x0b\x6a\x1b\xda\xb4\x3e\x14\xd6\x86\xbc\x0f\x7d\x18\xfc\xed\xb4\xe9\x96\xee\xd4\x09\x0a\xed\x0d\x5c\xbc\xfa\xa1\x73\xde\x39\xef\x5c\x40\x3b\x6d\xbe\xa9\x2b\x71\x1e\xd4\x6c\x0c\x6d\x84\xd3\xf9\xf0\x6a\xd8\xbf\x81\x8b\xd3\xa7\x6d\xf8\xe6\xd9\x26\xf9\x63\x75\xde\xa9\xa0\x50\xed\xdd\x67\x2b\x58\x1a\xe3\x58\xa4\xbc\x6a\xd8\xd8\x8c\x4d\x5d\x37\xb3\x25\xd2\xde\x4e\x58\x35\x75\x4d\xe8\x94\xb6\xcb\x9a\xaf\xc2\xb0\xe3\x5b\x4e\x38\x71\xa2\x77\xf6\xd6\xe2\xd3\x63\x43\xe7\xe6\x17\x7f\xd5\x26\xa4\xec\xcf\x9f\xd5\x75\x58\x16\xc1\x9b\xce\x0f\x95\x99\xa7\x6e\x14\x9e\xd5\x92\x24\x46\x42\xd4\x56\xfc\x36\x54\x1e\x41\xd0\xee\x03\x44\x29\xba\xe6\xee\xbd\x83\x30\x06\x62\x65\x2b\xe9\x4a\x0a\xae\x91\x47\xe0\xaf\xbc\xfd\x3b\x49\xe4\xae\xf2\x0a\x0f\x28\x9d\x16\x80\xbf\xeb\xbf\xb6\x12\x99\xff\xf3\xcb\x75\x7f\x16\x95\xf8\x7b\x4a\x25\x46\xb9\x66\x7d\x46\x6b\xec\xe2\x1a\x90\xee\x9f\xcd\xae\x33\xdd\xc0\xfd\x06\x25\x5a\xac\x05\x15\x1b\xaf\xa6\x11\xaa\x46\x54\x76\x5d\x09\x9a\x55\xec\x11\x7c\xfb\x9b\xff\x0a\xa8\x31\x79\xa0\x71\x1a\x03\xb1\x6e\x6d\x94\xe6\x22\xc4\xe2\x99\xa2\x64\xd9\x5b\x51\xee\x3c\x10\x12\x0e\xa9\xaa\xeb\x6b\xec\x16\x5e\x99\xb8\xcb\xc1\x15\xbb\xe9\x23\xf8\xde\x5c\xbc\x1a\xd3\x17\x61\x73\x8f\x6f\x2f\x43\x05\xdf\xda\x55\xdf\x55\xd1\x15\x72\xc0\x4b\x31\x1a\xa3\xde\xce\xae\x32\x6f\x93\x98\x08\x45\xb5\xd9\xd1\x3e\xb9\xda\x27\xe9\xd2\x85\x91\x4d\x55\x10\x8a\xa8\x0e\xf5\x1d\xd5\x30\xdb\x33\xb8\x9d\x5d\xe5\x40\x1b\x2f\x20\x8f\x60\x7d\xde\x23\x63\x67\x4d\x6b\x0e\x31\x47\xed\xe3\x42\x00\x81\xa5\x24\x3c\xdc\x58\x10\x67\xa0\xc9\x1a\x84\x04\xa1\x37\x28\x41\xe2\xca\x08\x6d\x05\x2c\x48\x4d\xed\x90\xeb\x7e\x25\x02\x17\xfb\x97\x64\xfb\x44\x49\x52\xa6\x3d\xd7\x03\xf2\xaf\x50\x22\x2f\xb8\x77\xe3\x0d\xed\x31\xd4\xce\x0e\x8c\x68\xba\x45\x7b\xec\x34\x83\xc5\xdf\x06\x18\x90\x54\x03\x55\x16\x9e\xbf\xd2\x97\x42\xb8\xb3\x52\x5d\xa8\x1a\xd0\xbe\xbb\x69\x86\x01\x95\xb6\x49\xde\xe5\x60\x0b\xb7\xce\x4d\x9e\x82\xf6\x24\x14\xd9\xe7\x0f\x9b\xb4\xf4\x86\x68\xf7\x9e\x2d\x45\xaa\x31\x83\xef\x63\xce\x3f\x2d\x9d\x19\xc0\x0c\x57\x0e\xdf\x92\x11\x7e\x07\xc4\x59\x3a\x7f\x0b\xf7\xaa\xc5\xa8\x06\xb6\x57\xf0\xbe\x4b\xbf\x6f\x8e\xb7\xfe\xfe\x52\x85\xfd\xce\x7a\x50\x56\x7e\x7c\x07\xd9\x01\xe8\x41\x44\x57\x2b\x1a\x1a\x7b\x6a\x01\xeb\x14\x95\xf2\xaf\x81\x80\xdc\xf8\x77\x04\x44\x41\x42\x64\xae\x56\x23\xd9\x3d\x2e\x37\x42\xdc\x19\xe7\xee\x00\x5c\x0b\x6d\x88\xe5\x2e\x69\x42\xee\xee\x78\xe1\x83\x5f\x92\xbf\x48\xda\xfa\x04\xa7\xbf\x92\xf6\xbf\x7a\xed\x7f\x9c\xb7\xff\xfa\xdb\xa7\xef\xcf\x1f\x4d\x4f\xb1\x46\x8e\xd2\xfe\xb8\x04\x1f\x12\x89\x4a\xb9\xe7\x10\x27\x6b\xe3\xad\xb2\x11\xb7\xb8\xe7\x20\x3b\x9f\xfa\xc3\x6e\xb9\x0a\x1c\xba\xa2\x3c\x5c\x16\xfc\x31\xee\xd0\x2e\xb7\x0a\xa5\x37\x88\x93\xca\x1c\x05\x7e\xcd\xa4\x7a\xfd\xf8\x94\x4c\xa5\x3e\xec\xe0\x2e\xd3\x7d\x2b\xdf\xa0\xbb\x1f\x9f\x56\x5d\xad\x35\x3c\xb8\x55\xb3\xba\x9e\x50\x93\xb2\xf5\x32\x5a\x1e\x8b\x6a\x77\xac\x35\x7f\x21\x27\x4b\x86\xfb\x2e\xc7\x04\xbb\x20\xf6\x37\x0b\xa6\x44\x88\x88\xae\x28\x46\xae\x78\xc5\x22\x4a\x59\x43\x15\xb5\x93\x63\x3b\x09\x33\xbb\x3c\x07\xdd\x74\x67\x58\xc1\xf5\xd1\xe4\x07\x17\x09\xe6\xd0\x64\x7f\x62\xb0\x45\x49\x57\xbb\x2c\xd3\x51\xae\x71\x2d\xa9\xde\x19\x48\xbe\x2f\x09\x85\xb8\xa3\x0d\x58\x9c\x5f\xc3\x7b\xdc\x95\xed\x63\x8d\x73\xf1\xea\x87\xa7\xcd\x53\xbd\x76\x6d\xc8\x3c\x61\xaa\xb4\x88\xed\x03\x13\xc4\x54\x4a\x21\x7d\x7d\x29\x27\xb6\x02\xd5\xb8\x48\x55\x7f\x9e\xfa\x4f\x00\x00\x00\xff\xff\x37\xda\xad\x41\x22\x26\x00\x00")

func templateTemplateOpenshiftIoOpenshiftDancerMysqlExampleYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftDancerMysqlExampleYaml,
		"Template.template.openshift.io/openshift/dancer-mysql-example.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftDancerMysqlExampleYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftDancerMysqlExampleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/dancer-mysql-example.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftDancerMysqlPersistentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x6f\xdb\x38\x12\x7f\xf7\xa7\x18\x04\x0b\x64\xf7\x2e\xb6\x93\x76\x7b\xbb\x27\xe0\x1e\x5c\x5b\x9b\x18\x8d\x63\xaf\xec\xb4\xd7\x5b\x2c\x0c\x4a\x1a\xdb\xbc\x48\xa4\x96\xa4\x9c\xf8\x7a\xf9\xee\x07\x92\x92\xac\x7f\x4e\x9c\x6e\x8b\xbe\x9c\x81\x16\x31\x39\x24\x7f\xf3\x7f\xc8\x31\x49\xe8\x7b\x14\x92\x72\xe6\x80\xc2\x38\x89\x88\xc2\x1e\x4f\x90\xc9\x0d\x5d\xa9\x1e\xe5\xfd\xed\x45\xe7\x8e\xb2\xd0\x81\x45\x36\xdd\x89\x88\x8f\x91\x74\x3a\x00\x24\x49\x1c\x08\x09\x0b\x50\x74\xe3\x9d\xfc\x23\xea\x26\x7a\x33\xa9\x90\xa9\x0e\x14\x1b\x1e\xa6\x89\x51\x4a\xb2\x46\x07\xfe\xdb\xed\x00\x2c\x36\x08\x2b\x1e\x45\xfc\x9e\xb2\x35\x48\x14\x5b\x1a\xe0\xf7\xf2\x07\xd8\x90\x2d\x82\x8f\xc8\x20\x10\x48\x14\x86\x40\x19\xec\x78\x2a\x20\x11\xfc\xdf\x18\x28\x07\xbe\xfb\x74\x33\x98\xb8\x8f\x67\xf0\xdd\xa7\xd1\x60\x31\x78\x3b\x98\xbb\xcb\xb9\xeb\xbd\x1f\x0f\xdd\xa5\x99\xe9\x75\x3a\x00\xbf\x70\x01\x31\x17\x08\x94\xad\xb8\x88\x89\xa2\x9c\x01\xf1\x79\xaa\x20\x95\xfa\x50\xb5\xa1\xb2\xc0\x7d\x06\x94\x05\x51\x1a\xea\x89\x69\x82\x6c\xae\x65\x02\x01\x67\x92\x86\x28\xcc\x62\x79\x06\x12\x11\x36\x4a\x25\xd2\xe9\xf7\xd7\x54\x6d\x52\xbf\x17\xf0\xb8\x5f\x08\xb1\x9f\x31\x8f\x0f\x7d\x3f\xe2\x7e\x3f\x26\x52\xa1\xe8\x7b\xee\x60\x34\x71\x7b\x71\xd8\xeb\xc4\xa8\x48\x48\x14\x31\x22\x65\x8c\x2b\xbb\xb5\xfe\x0a\x10\xa2\x0c\x04\x4d\x94\x51\xd1\x80\x01\x3e\x90\x38\x89\x10\x46\x66\x57\xad\x82\x88\x06\x96\x91\x7b\xaa\x36\x40\x60\xb2\x9b\xff\x7a\x0d\x7a\x43\x9f\x48\xec\xb5\x32\x6d\xb6\x86\x6f\xcf\xba\x06\x41\x03\xce\x86\x11\x91\xd2\x31\x7f\x6a\xfb\x88\xcc\x44\xc5\x0e\x43\x2a\x93\x88\xec\xba\x8c\xc4\xe8\xe4\xdc\xff\xd5\x32\xdb\x42\xcd\x83\x34\x46\x66\x25\xd9\x4d\x45\xe4\x1c\x09\xb4\xb9\x55\xc4\xd9\xba\x5b\xd1\xc2\xa2\x2c\x29\x08\x71\x45\x19\x4a\x10\x28\x79\x2a\x02\x94\xc0\x10\x43\x0c\x41\x71\x08\x71\x8b\x11\x4f\x72\x69\xe7\xb0\xb5\x5e\xc2\xb2\xea\xca\xe2\x26\xe0\xa7\x34\x0a\xb5\xb0\x57\x74\x9d\x8a\x8c\xa0\xac\xe8\x10\x93\x88\xef\x62\xeb\x65\xfa\x53\xa7\x65\x61\xa1\xff\x12\x71\x95\xac\xd7\x64\x35\x11\x7c\xab\xf5\xdb\xad\x0a\xdb\xc3\x10\xae\x88\x3a\x83\x31\x0b\x5a\x56\xc9\x34\x49\xb8\x50\x55\x29\x93\x20\x40\x29\x7b\x02\xc3\x0d\x51\x5a\xd8\x66\x9d\x22\x6b\xe9\xc0\x1f\x29\x0d\xee\xa4\x22\x42\x9d\x69\x5d\x9f\x59\xe1\x5b\x82\xd6\x18\xe4\x53\x16\x12\x3f\x42\x07\x4e\x56\x24\x92\x78\xd2\x01\xb0\xd0\x0e\x07\x1f\x3d\x2f\x13\x12\xa0\xb3\x47\xdb\xe1\xbe\x8e\x16\xd2\xe9\x74\xa1\x1c\xf9\xb6\x17\x1d\x00\x1b\xe5\xe6\x18\x08\xd4\xeb\xcb\x4e\x99\x9f\x96\x05\x99\x0e\x80\x54\x82\xb2\xf5\xa8\x98\xcf\xa5\xdd\x4d\x88\x94\xf7\x5c\x84\x4e\x39\x10\xcd\x06\xf3\xf9\x87\xa9\x37\x7a\xac\xd2\xa6\x12\x45\x85\xee\x76\xee\x7a\x96\xe6\x0e\x77\x9a\x44\xcf\xce\xdd\xa1\xe7\x2e\x96\xef\xdc\x8f\x4b\x4d\xf4\xf8\x14\x76\x13\x31\x1b\xe0\x1b\x31\xa5\x16\x55\xdc\x87\x84\x4b\x94\xc6\x6c\x22\x4e\x42\xf0\x49\xa4\xe5\x2a\x41\x6d\xb0\x62\x78\x09\x0f\x65\xb6\x43\x16\x9e\x7b\x24\x4a\x36\xa4\xaa\xae\x10\x13\x64\x21\xb2\x80\xa2\x74\xe0\xf4\xb7\x4f\x27\x5a\x7c\x27\x0e\x9c\x1c\x0a\xce\x27\x67\xd9\xae\x00\x27\x9a\x17\x4d\x9b\x71\x73\xf2\xf8\xfb\x69\xbb\x0a\x12\x0c\x2c\x3b\xda\xfa\x32\xce\xba\x19\xd9\x3d\xfa\xd9\x8e\x7a\xd2\x81\x9f\xcf\x7f\x3e\xcf\x06\x14\x11\x6b\x54\xb3\xea\xb0\xc4\x08\x03\xc5\x45\x2e\x9f\xea\x61\x07\x25\xee\xf1\x54\x35\xe5\x7d\x18\xe9\x86\x4b\x93\xab\x06\xb3\xd9\xf5\x78\x38\x58\x8c\xa7\x37\xcb\xd1\x74\x32\x18\xdf\x58\xb5\x2b\x9e\x03\xa8\x6b\xf4\x05\xa0\xc6\x31\x59\xe3\x5c\x09\x24\xf1\x8b\x4d\xe1\x1d\x62\x22\x41\x09\x12\xdc\x01\x5f\x41\xb0\x21\x6c\x8d\x52\xa7\xdb\xba\x29\x50\x7d\x4a\x0b\xbb\x07\x61\xbd\xd5\x51\x6d\x68\x22\xd0\x8b\x61\x8d\xb2\x18\xbb\xe1\xf7\x3a\xac\xda\x00\x59\x43\x94\xab\x37\x8f\x20\x2d\x86\x79\x4f\xa8\xea\xae\xb8\xe8\x0a\x24\xe1\xce\x81\x13\x25\x52\x13\x4c\x9e\xd2\x19\x4f\x55\x92\xaa\x1c\xd6\x5e\x43\x2d\xe2\x5e\x90\x75\x31\x59\xd9\xd0\xd1\x88\xa4\xca\xac\x55\xaa\x21\x8f\x63\x5a\xec\x69\x19\x75\x40\x07\x43\xe8\x8e\x01\x1f\x54\x44\xfd\xbe\xfe\xa7\x87\xde\xe8\xb1\x88\xfa\xa0\xfa\x7f\xb1\xc6\x6a\xf2\x8c\xb3\x8f\xfd\x0a\x1f\xd4\x88\x9a\x58\x32\x9c\xde\x2c\xdc\x7f\x2e\x96\xa3\x71\x16\x49\x00\xd6\xfb\x93\x00\x04\xae\x4c\x50\x99\xde\x7a\x43\x77\xe9\xb9\xb3\xe9\x7c\xbc\x98\x7a\x1f\x97\x9e\xfb\xcb\x63\x41\x95\x0a\xda\x4e\x75\xeb\x5d\xe7\x54\x6a\x97\xa0\x03\x97\xd4\x72\x25\x95\x20\x0a\xd7\xbb\x82\x27\x83\x71\x5e\x1b\x05\x40\xb6\xdd\x7f\xc9\xbd\x75\x38\x1b\xdc\x2c\x27\x63\xcf\x9b\x7a\xc5\x1c\xc0\x96\x44\xa9\x11\x61\x69\x7a\x0f\x71\x25\x78\xec\x94\xa8\x9f\x54\x46\xae\x0e\x2d\x4e\xe7\x4d\xef\xd5\x8f\xb5\x99\x2c\x51\x58\x6d\xcd\x67\x83\xa1\x5b\xe5\x72\x6e\xb8\xb1\x2e\x2a\xe8\x7a\x8d\xa2\x88\x37\x96\xc0\x9c\x3b\x34\xde\x52\x19\xb7\xf6\x5e\x99\xb0\xf5\xc7\x1e\xba\x34\x19\x47\x1f\x7e\x39\x5e\x5c\xdd\xbe\x5d\x7e\x70\xdf\x5e\x4d\xa7\xef\x96\x36\xf0\x37\xc4\x7d\x95\xfa\x87\x9d\x6c\x54\x24\xfb\x2f\xe3\x69\xb6\x78\x68\x38\xbf\x0e\xfe\x59\xc6\xfe\x0a\x1e\x27\xd0\x9c\x24\x1d\xb8\x38\x22\x38\xb7\x59\x9f\x15\x96\x87\xf6\xba\x50\xa9\x2c\x72\x92\xaa\x58\xf4\x67\x7f\xaf\x69\xf5\xe1\x76\xcf\xce\xcd\xbd\x00\x9f\xbb\x24\xa1\xac\xb0\x12\xab\xf8\x8a\xe9\xef\x8d\xbf\x35\x23\x96\xe8\x4a\x8e\xd0\x9e\x3c\x5b\xf6\x9c\x7c\x9c\xff\x7a\x6d\xca\x89\xe6\x46\xbf\xd4\x1c\x67\x6f\x83\xef\x70\xe7\xe1\xaa\x3e\x67\x8a\x11\xa7\x5a\xb5\x34\x48\xda\x25\x55\x07\x94\xd7\x41\x5f\x1e\x54\x5e\x76\x7d\x26\xb0\x5c\xb0\xcf\x88\xfd\xd0\x26\xb5\x12\xed\x8b\xb1\x97\x55\x81\x2f\x66\x6a\xe6\x7a\xd7\xcb\xc1\x6c\x30\xbc\x72\x5f\x2d\x3d\xf7\x7a\x3a\x68\x11\xb9\xde\xa0\x85\xb0\xbc\x9f\xc9\xf1\x0e\x9c\xc2\x69\x69\x30\xa2\x5b\x64\x28\xe5\x4c\x70\x1f\xab\xc0\x75\xf1\x7f\x89\xaa\xce\x4d\x42\xd4\xc6\x81\xfe\x06\x49\xa4\x36\xf5\xb9\x7a\x79\x96\x9d\xcc\xa8\xa2\x24\x1a\x61\x44\x76\x73\x0c\x38\x0b\xa5\x03\xaf\xab\x34\x8a\xc6\xc8\x53\xb5\x9f\x6e\x78\xee\xe1\xdb\x41\xf9\x78\x59\xf5\xca\xc2\x79\x67\x6d\xd0\x74\x1c\xa3\xdf\x88\xfd\xa3\xb9\x2f\xae\xa2\x55\x28\x11\x8d\xa9\x92\x75\x78\x31\xc6\x5c\xec\xb4\x35\x4c\xdc\x89\xce\xf1\xd7\xe3\xc9\x38\x4b\x3b\xf5\x64\x47\xf7\x69\x6e\x46\x04\x89\x4b\x9b\x91\x54\xf1\x98\x28\x1a\x38\xa0\x63\x7c\x33\x16\xde\xe8\x3c\x5b\x8e\x87\xcf\x69\xe7\xb3\x32\x7c\x4b\xc1\x05\x2f\xc9\xd1\x07\x33\xeb\xac\x00\xf8\x9e\x47\x69\x8c\xc3\x88\xd0\x66\x7d\x9d\x83\x38\x18\xa9\xf7\x89\xc2\xde\x90\x27\x3c\xc4\x42\xbc\x1e\x92\xf0\x83\xa0\x0a\xa7\x2c\xab\x36\x1a\x9a\x14\xf8\x47\x8a\xb2\xac\x45\xa9\xb8\x30\x6e\xfa\xdd\xa7\xf7\xd3\xeb\xdb\x89\xbb\x1c\x6a\x8f\x1e\x2f\x3e\x7e\xc5\xab\xa2\x2e\x08\x8a\x17\x86\x52\x35\xf0\x02\xfe\x5b\x6e\x6d\xc6\x14\x2a\xf7\xb6\xd7\xaf\xcf\xff\xd6\x72\x6f\x2b\x86\x0f\x95\x06\x07\xce\xff\x16\x75\x53\x2e\xa6\x2f\x53\x2d\x1d\x21\xd8\x63\xcb\xa7\x27\xaa\x89\xaf\x5c\x4f\x3d\x53\xc7\x1c\x45\xf6\x27\x2a\xae\xff\x57\x47\x2f\x03\xf6\x99\xd5\xd1\x4b\xab\x87\xa3\x72\x7e\x90\xcc\x79\x70\xd7\x92\x64\xeb\xe1\x22\xa3\xaf\x65\xc9\x8b\x86\x35\x96\x63\x0e\x1c\x55\x11\xd4\x0e\x79\xaa\x22\xc0\x87\xb2\x91\xda\x4f\xc0\xe3\x98\xb0\xb0\x3e\xdc\x85\xbe\x4f\x59\x5f\xd6\x2b\x84\x2e\x74\x69\x73\x28\x68\x0c\x65\x36\xf4\x61\xf4\x8f\xd3\xb6\x97\xc7\x53\xcb\x28\x74\x37\x70\xf1\xea\xa7\xde\x79\xef\xbc\x77\x01\xdd\xb4\xfd\xf5\xb1\xb2\xf3\xa8\xa1\x63\xe8\x22\x9c\xce\xdd\x6b\x77\xb8\x80\x8b\xd3\xe7\x75\xf8\xe6\x68\x95\xfc\xb9\xc2\xc5\x8a\xa0\x54\xbe\xd8\xcf\xd6\xe4\xeb\x09\x4f\x59\x5d\xb1\xb1\x1e\x9b\xd9\xf2\x6c\x4b\x84\x79\x71\x31\x62\xea\x6b\xd7\xa9\x1c\xf7\x74\x4c\xea\x56\xe8\xed\x81\xb2\xf9\xce\x71\xdc\x72\x80\xa4\xad\xd6\xa8\xb2\x1f\xe8\xa1\x9b\xe7\x03\xe5\x57\xad\xe0\xaa\xbe\xf3\x59\xf5\x9a\xd9\xc2\x79\xd3\xfb\xa9\x36\xf3\xdc\x8b\xcc\x51\xc5\x5c\xa2\x39\x44\x65\xd8\xef\x42\xad\x87\x83\xe6\x1c\x20\x52\xd2\x35\xb3\xed\x1a\x12\x45\xc0\x57\x26\x6b\xaf\x04\x67\x0a\x59\x08\x59\xcb\x20\x6b\xf3\x84\xf6\x29\xb4\xd4\xff\xe9\x75\x00\xb2\x76\x89\x55\x87\xfe\xbf\xe8\x4f\x64\x77\x79\x5d\xb5\x51\x81\x61\x21\xd9\x2c\x7a\x1e\x2a\x81\x5b\xc0\xee\xbb\x70\x37\xb9\x78\xe0\x7e\x83\x02\x0d\xdc\x92\x94\xb5\x13\xd1\x10\x65\x2b\x30\xb3\xae\x82\xce\xc8\xf6\x09\x88\xfb\xe6\x49\x0d\xd4\x84\x3c\xd0\x38\x8d\x81\x18\x2f\xd2\x72\xb3\x0e\x69\xf0\xcc\x50\x44\x79\xb7\xab\xb0\x1f\x08\x08\x83\x54\x36\x45\x36\xb1\x0b\xaf\xb5\x9b\x17\xe0\xca\xb7\x91\x27\xf0\xbd\xb9\x78\x35\xa1\x2f\xc2\x66\xfb\xa3\x2f\x43\x05\xdf\x9b\x55\x3f\xd4\xd1\x95\x42\xce\x4b\x31\x5a\xd7\x06\xab\x49\xb2\x25\x34\x22\x7e\x84\xb0\xe2\xc2\x24\xee\x33\xc0\xde\xba\x67\x97\x9e\xc1\xab\x4b\x5a\x87\x97\xad\x1f\x92\x84\x04\x54\xed\x0a\x64\xb5\x4b\xc0\x13\xb0\x2e\x2e\x1b\xa0\xb4\xa5\xdd\x7a\xd7\xb9\x17\x08\x4c\xb8\xa4\x4a\x8b\xc1\x34\x97\x4d\xcf\xbd\xf2\x10\x68\xc2\x35\x04\x3c\x6c\xca\xef\x92\x2a\xf0\xf6\x1b\xdc\x7a\xd7\x05\xc6\xd6\x87\xe5\x27\x90\x1e\xd7\xbb\xed\xad\x69\xc3\x4a\xe7\xa8\x32\x7f\xe5\x40\xc0\x17\x84\x05\x1b\x03\xe2\x0c\x14\x59\x03\x17\xc0\xd5\x06\x05\x08\x5c\x69\xa6\x0d\x83\x25\xae\xa9\x19\xb2\x37\x00\x81\xc0\xf8\xbe\x5b\x6e\x3a\xbf\x24\x8d\x54\xb6\xeb\x01\xfe\x57\x28\x90\x95\x7c\xae\xf5\xe5\xfd\x29\xd4\x56\x0f\x11\x51\x74\x8b\xe6\x2d\x41\x0f\x96\x7f\xfc\xa0\x41\x52\x05\x54\x1a\x78\x59\xab\x46\x70\x6e\x6f\xbf\x4d\xa6\x1a\x40\x87\xb6\x83\x00\x23\x2a\xcc\x45\x61\x6f\x4b\xa5\x6e\x42\x9b\xa5\xa0\xb9\x0d\x86\xa6\xad\x65\x82\xa9\xda\x10\x05\xf7\x34\x8a\x40\xf0\x54\x61\x0e\x3f\x0b\x04\x59\xcb\xf0\x4c\x03\x8e\x70\x65\xf1\xf9\x11\x61\x77\x40\xac\xa6\xed\x5a\xbf\x10\x2d\x86\x0d\xb0\x83\x92\xf5\x5d\x65\xe7\x16\x78\x9b\x7d\xb5\x3a\xec\x4b\x63\x41\x79\x5a\xcc\xaa\xe8\x1e\xc0\x00\x42\xba\x5a\xd1\x40\xeb\x53\x71\x58\xa7\x28\x65\xd6\xe5\x05\x64\xda\xbe\x43\x20\x12\x12\x22\x0a\xb1\x6a\xce\xee\xd1\xdf\x70\x7e\xa7\x8d\xbb\x07\x70\xc3\x95\x26\x16\xbb\xa4\x0d\xb9\x7d\xbb\x87\x0f\xd9\x92\xa2\xd3\x6c\xf2\x26\x9c\xfe\x46\xba\xff\x19\x74\xff\x75\xde\xfd\xfb\xef\x9f\x7e\x3c\x7f\xd4\x75\xd5\x1a\x19\x0a\xf3\x03\x1a\x7c\x48\x04\x4a\x69\xdb\x5c\x96\xd7\xd6\x6e\x81\x66\xb7\x7c\xe6\x28\xbf\xa3\x67\x17\xfe\x6a\x76\x3a\xf4\xf4\x7c\x38\x5d\x65\x57\xd9\x43\xa7\xdc\x4a\x14\x99\x42\x2c\x57\xfa\x3a\xf4\x5b\xce\xd5\xeb\xc7\xe7\x78\xaa\xd4\xa2\x07\x4f\x99\xed\xaf\x33\x2d\xb2\xfb\xf9\x79\xd1\x35\xca\xe3\x83\x47\xb5\x8b\xeb\x19\x31\x49\xf3\x0b\x9d\xd0\x7f\xca\xab\xed\xd5\x5e\xff\x85\xcc\xc4\xfd\xa2\xfa\xd2\xce\xce\x89\xf9\x29\x88\xce\x5b\x3c\xa4\x2b\x8a\xa1\xcd\xa8\x31\x0f\xd3\xa8\x25\xb5\x9b\xc9\x89\x99\x04\xcf\x2c\x2f\x40\xb7\xbd\x05\xd7\x70\x7d\xd4\xf1\xc1\x7a\x82\xbe\x38\x9a\x14\xb4\x45\x41\x57\xbb\x3c\xd2\x51\xa6\x70\x2d\xa8\xda\x69\x48\x59\xbd\x14\x70\x7e\x47\x5b\xb0\x58\xbb\x86\x77\xb8\xab\xea\xc7\x28\xe7\xe2\xd5\x4f\xcf\xab\xa7\xfe\x9c\xde\x12\x79\x82\x54\x2a\x1e\x9b\xc6\x21\xc4\x54\x08\x2e\xb2\xfc\x52\x0d\x6c\x25\xaa\x49\x99\xaa\xd9\x76\xfc\x5f\x00\x00\x00\xff\xff\xe2\xe7\x85\xfb\x09\x27\x00\x00")

func templateTemplateOpenshiftIoOpenshiftDancerMysqlPersistentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftDancerMysqlPersistentYaml,
		"Template.template.openshift.io/openshift/dancer-mysql-persistent.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftDancerMysqlPersistentYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftDancerMysqlPersistentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/dancer-mysql-persistent.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftDjangoPsqlExampleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x6d\x73\xdb\x36\xf2\x7f\xaf\x4f\xb1\xe3\xe9\x8c\x93\xf9\x5b\x52\xdc\x36\xff\x69\xf9\x4e\x91\x14\x47\x17\x5b\x52\x25\xa7\x69\xaf\xd7\xf1\x40\xe4\x8a\x42\x0d\x02\x34\x00\xda\xd6\xf9\xfc\xdd\x6f\xf0\x40\x8a\x4f\x96\xe5\x5e\x32\xad\x5e\x74\x1a\x62\xb1\xf8\xed\xf3\x62\x61\x92\xd2\x9f\x51\x2a\x2a\x78\x00\x1a\x93\x94\x11\x8d\x3d\x91\x22\x57\x1b\xba\xd6\x3d\x2a\xfa\xb7\xa7\x9d\x6b\xca\xa3\x00\x2e\xfd\x72\x87\x91\x15\x32\x15\x74\x00\x48\x9a\x06\x10\xfd\x41\x78\x2c\xba\xa9\xba\x61\x5d\xbc\x27\x49\xca\xb0\x03\x05\xb3\xf6\xf5\x04\x95\x22\x31\x06\xf0\x9f\x6e\x07\xe0\x72\x83\xb0\x16\x8c\x89\x3b\xca\x63\x50\x28\x6f\x69\x88\xaf\xd4\x6b\xd8\x90\x5b\x84\x15\x22\x87\x50\x22\xd1\x18\x01\xe5\xb0\x15\x99\x84\x54\x8a\x3f\x30\xd4\x01\x7c\xf3\x30\x1d\x5c\x8c\x1f\x4f\xe0\x9b\x87\xd1\xe0\x72\xf0\x6e\xb0\x1c\x5f\x2d\xc7\x8b\x9f\x27\xc3\xf1\x95\x5d\xe9\x75\x3a\x00\xef\x85\x84\x44\x48\x04\xca\xd7\x42\x26\x44\x53\xc1\x81\xac\x44\xa6\x21\x53\xe6\x50\xbd\xa1\xaa\xc0\x7c\x02\x94\x87\x2c\x8b\xcc\xc2\x2c\x45\xbe\x34\xba\x80\x50\x70\x45\x23\x94\x76\xb3\x3a\x01\x85\x08\x1b\xad\x53\x15\xf4\xfb\x31\xd5\x9b\x6c\xd5\x0b\x45\xd2\x2f\x94\xd7\xf7\x82\xe3\x7d\x7f\xc5\xc4\xaa\x9f\x10\xa5\x51\xf6\x17\xe3\xc1\xe8\x62\xdc\x4b\xa2\x5e\x27\x41\x4d\x22\xa2\x89\x55\x25\xe7\x42\x3b\xd6\xe6\x9f\x00\x11\xaa\x50\xd2\x54\x5b\xd3\x58\x35\x99\xdf\x80\x83\xd7\x21\x8c\x2c\x7b\x63\x03\x46\x43\x27\xd1\x1d\xd5\x1b\x20\x30\x17\x4a\xc7\x12\x97\x3f\x9d\x83\x61\xbf\x22\x0a\x7b\x7f\x53\x15\x78\xb1\x3e\x0f\x16\xd3\xc9\xf4\x2c\x80\x01\xdf\x5a\xcc\xa0\xb4\x90\x18\xc1\x1d\x65\x0c\x56\x08\x4c\x28\x0d\x59\x2a\x38\xa4\x22\x32\xba\xd1\x32\x0b\x0d\x8a\x1e\xcc\x38\xdb\x42\xa6\xb0\x2a\x00\xac\x85\x04\x8d\x4a\x53\x1e\xf7\xec\x29\x34\x14\x7c\xc8\x88\x52\x81\xfd\xdf\x6e\xba\xd5\x1b\xc1\xed\x52\xc5\xe1\x23\xaa\x52\x46\xb6\x5d\x4e\x12\x0c\x72\x2d\xff\x5f\x59\xa9\xaf\xc6\xe9\x06\x13\x94\x84\xbd\x6e\xd9\x2e\xc2\x2c\x41\xee\x6c\xd9\xcd\x24\x0b\x0e\x54\x51\x93\x15\x13\x3c\xee\x56\xfc\xe0\xb2\x22\x62\x84\x6b\xca\x51\x81\x44\x25\x32\x19\xa2\x02\x8e\x18\x61\x04\x5a\x40\x84\xb7\xc8\x44\xea\xf5\x4b\x72\x39\x8c\x2f\x44\x65\x9f\x29\x1b\x9a\xc0\x2a\xa3\x2c\x32\x66\x5e\xd3\x38\x93\x9e\xa0\xec\x61\x11\xa6\x4c\x6c\x8d\x7c\x9e\x73\x9d\x96\x47\x85\xcf\x95\x88\xab\x64\x3d\x17\xf2\x05\x1d\x55\xde\xdc\x9e\x27\xe5\xc0\x8d\x81\x4c\x62\x52\xda\x6c\x37\xcb\x24\xc6\x13\x50\xc2\x99\xb9\xc2\x0f\xd4\x46\x64\x2c\x32\x7e\x92\x19\xf1\x8c\xe9\xf1\x3e\x45\x49\xad\x21\x98\x67\x9b\x66\x32\x15\x0a\x15\x08\xce\xb6\xbd\xa6\xba\x53\x29\x6e\x8d\x77\x77\xab\x1e\xb0\xc0\x08\x3e\x10\x7d\x02\x13\x1e\xb6\xec\x52\x59\x9a\x0a\xa9\xab\x96\x26\x61\x88\x4a\xf5\x24\x46\x1b\xa2\x8d\xc1\xed\x3e\x4d\x62\x15\xc0\x4d\x46\xc3\x6b\xa5\x89\xd4\x27\xce\x05\x4f\x9c\x0b\x38\x92\xd6\x1c\xbc\xa2\x3c\x22\x2b\x86\x01\x1c\xad\x09\x53\x78\xd4\x01\x70\xe0\xda\x93\xaf\x59\x53\x29\x09\x31\xd8\x61\xed\x88\x95\xc9\x98\x2a\xe8\x74\xa1\x9c\xf5\x6f\x4f\x3b\x00\x2e\xc3\x2f\x31\x94\x68\x0c\x5b\x4e\x4c\xf9\x49\x3e\xd1\x76\x00\x94\x96\x94\xc7\xa3\x62\x3d\xb7\x63\x37\x25\x4a\xdd\x09\x19\x05\xe5\x64\x3c\x1f\x2c\x97\x9f\x67\x8b\xd1\x63\x95\x36\x53\x28\x2b\x74\x9f\x96\xe3\x85\xa7\x71\x32\x29\x8b\xa6\x7b\x8d\x5b\x4b\xf7\x8f\xc1\xf4\x6c\x76\xb5\x1c\x0f\x17\xe3\xcb\xab\x8f\xe3\x5f\x1f\xf7\xc9\x61\x2b\x48\x43\x90\x46\x8e\xad\x65\xd9\xf1\xbd\xf3\x0f\xe3\xc4\x4c\x90\x08\x56\x84\x11\x6e\xe2\x4a\x6f\xb0\x12\x06\xa9\x88\x94\xe7\xe0\xcb\x55\x8f\xb0\x74\x43\xaa\x66\x8b\x30\x45\x1e\x21\x0f\x29\xaa\x00\x8e\x7f\x7b\x38\x32\xaa\x3c\x0a\xe0\xe8\xa9\x62\x75\x74\xe2\xb9\x02\x1c\x19\x59\x0c\xad\x97\xe6\xe8\xf1\xf7\xe3\x76\x73\xa4\x18\x3a\x71\x8c\x1f\x7a\xc9\xba\x9e\xec\x0e\x57\xb9\xf7\x0b\xa9\x03\xf8\xe1\xcd\x0f\x6f\xfc\x07\x4d\x64\x8c\x7a\x5e\xfd\xac\x90\x61\xa8\x85\xcc\xf5\x53\x3d\xec\x49\x8d\x2f\x44\xa6\x9b\xfa\x7e\x1a\xe9\x46\x28\x5b\xbb\x07\xf3\xf9\xf9\x64\x38\xb8\x9c\xcc\xa6\x57\xa3\xd9\xc5\x60\x32\x75\x2e\xa0\x45\x0e\xa0\x6e\xd1\x17\x80\x9a\x24\x24\xc6\xa5\x96\x48\x92\x17\xbb\xc2\x47\xc4\x54\x81\x96\x24\xbc\x06\xb1\x86\x70\x43\x78\x8c\xca\x64\xa6\xba\x2b\x50\x73\x4a\x8b\xb8\x4f\xc2\x7a\x67\x72\xec\xd0\xe6\xaf\x17\xc3\x1a\xf9\x8c\xbf\x11\x77\x26\xc9\xbb\x74\x5d\x43\x94\x9b\x37\xcf\x24\x2d\x8e\x79\x47\xa8\xee\xae\x85\xec\x4a\x24\xd1\x36\x80\x23\x2d\x33\x9b\x54\xf6\xd9\x4c\x64\x3a\xcd\x74\x0e\x6b\x67\xa1\x16\x75\x5f\x92\xb8\x58\xac\x30\x0c\x0c\x22\xa5\xbd\xb7\x2a\x3d\x14\x49\x42\x0b\x9e\x4e\xd0\x00\x7a\xfd\x84\x70\x12\x63\x2f\xdd\x42\x41\xee\x4a\x5c\xb0\x2b\x3b\x1a\xef\xf5\x88\xda\x24\x32\x9c\x4d\x2f\xc7\xbf\x5c\x5e\x8d\x26\x3e\x85\x00\xc4\x3b\xb6\x00\x12\xd7\x86\x6c\x39\xfb\xb4\x18\x8e\xaf\x16\xe3\xf9\x6c\x39\xb9\x9c\x2d\x7e\xbd\x5a\x8c\xdf\x3f\x16\x54\x99\xa4\xed\x54\x9f\x16\xe7\x39\x95\xde\xa6\x18\xc0\x19\xf5\x98\xb4\x24\x1a\xe3\x6d\x21\x80\xc5\xb8\xac\x7d\x05\x40\x7e\xbb\xfb\x47\x1e\x9a\xf3\xc9\xfc\x6a\x32\x1d\x8d\x7f\x31\xfc\x8b\x55\x80\x5b\xc2\x32\xab\xb1\x0a\xc1\x0e\xe6\x5a\x8a\x24\x28\xd1\xef\xd5\x7e\xae\x7f\x57\x69\x82\xef\x7a\x6f\x6b\x4b\xbe\x4c\x38\xfb\x2c\xe7\x83\xe1\xb8\x2a\xea\xd2\x8a\xe4\x82\x52\xd2\x38\x46\x59\x64\x18\x47\x60\x0f\x1e\xda\xf8\xa8\x7c\x77\x1e\x5e\x59\x70\xfd\xcf\x0e\xbb\xcb\xf0\xe6\xf0\xb3\xc9\xe5\x87\x4f\xef\xae\x3e\x8f\xdf\x7d\x98\xcd\x3e\xfa\x2c\xdf\xd0\xf9\x87\x6c\xf5\x74\x58\x8d\x8a\x66\xe3\xcb\xc4\x96\x6b\x5e\x1a\xe1\x6e\xd2\x3d\xca\xaf\x15\x63\x12\xed\x49\x2a\x80\xd3\x03\xd2\x71\x9b\x0b\x3a\x65\x2d\xd0\x5d\x98\x2a\x3d\x45\x4e\x52\x55\x8b\xf9\xed\x6e\x74\xad\x51\xdb\x1e\xcb\xb9\xcf\x17\xe0\xf3\xb8\x24\x94\x17\x5e\xe2\x0c\x5f\xf1\xff\x5d\x04\xb4\xd6\xc0\x12\x5d\x29\x16\xda\xcb\xe5\x3e\x9e\xe3\xe9\xd9\x64\xfa\x1c\x37\x47\xb4\x97\xcf\x01\x98\x9e\xc5\x62\x7a\x9b\x26\x8f\xf7\xb5\x40\x86\x22\x24\x3e\xe2\x76\x81\xeb\xfa\x1a\x80\xed\x85\x2a\x2d\x54\x83\xa4\xdd\x70\x2d\x98\xf2\xbe\xec\xcb\xe3\xca\xdb\xc0\x17\x63\x1b\xcc\xe7\x57\xc3\xd9\xf4\xfd\xe4\xac\x5d\xe1\xbb\xf5\x56\xc9\xea\x1d\xe2\x97\x93\xac\xde\x90\x1e\x2c\x99\x6d\x0e\x02\x38\x86\xe3\xd2\x47\x46\x6f\x91\xa3\x52\x73\x29\x56\x58\x3d\xd2\xdc\x1f\xce\x50\xd7\x71\xa4\x44\x6f\x02\xe8\x6f\x90\x30\xbd\xa9\xaf\xd5\xfb\x3a\x7f\x32\xa7\x9a\x12\x36\x42\x46\xb6\x4b\x0c\x05\x8f\x54\x00\xdf\x55\x69\x34\x4d\x50\x64\x7a\xb7\xdc\x48\x00\xed\xd7\x8b\xf2\xd1\xaa\x1a\xd8\x45\xfc\xcf\xdb\x60\x99\x54\x48\xff\x22\xd1\x0f\x96\xbc\xb8\x4d\x57\xa1\x30\x9a\x50\xad\xea\xf0\x12\x4c\x84\xb4\x17\x94\x8b\xf1\x85\xe9\x15\xce\x27\x17\x13\x5f\xb9\xea\xf5\x92\xee\x2a\xe5\x9c\x48\x92\x94\x98\x91\x4c\x8b\x84\x68\x1a\x06\x60\xca\x44\x33\x9d\x4e\x4d\xa9\x2e\xa7\xd4\x7d\x96\xf9\x53\x1d\x42\x4b\x87\x06\x2f\x29\xf1\x5f\xed\x36\xa6\xcb\xa3\x82\x52\xf9\xcd\x61\x3f\x59\x1a\xf6\x5e\x8c\x52\x37\xce\x51\x37\xac\x72\x3f\x7a\xfb\xfd\x77\xdf\xb6\xdc\x8f\x8a\xcf\x4f\x15\xe4\x27\x40\xfc\x15\xdd\x4a\xae\xab\x2f\xd3\xa3\x1c\xa0\xdd\x43\x9b\x96\x3d\x35\xfc\x2b\x77\x31\xcf\x74\x0f\x07\x91\xfd\x0f\x7d\xce\x7c\xb6\xbc\x3c\x5b\x8c\x97\x3f\x9d\xff\x9d\x3a\x81\x12\xaa\xbf\x61\x2f\x50\x42\x97\x9b\xe5\x85\x5d\xd8\x4b\x6b\x2f\xde\x97\x0d\xec\x7e\xa1\x48\x12\xc2\xa3\xfa\xe7\x2e\xf4\x33\x25\xfb\x8c\xae\xcc\xa6\x7e\xb8\xc1\xf0\xba\x5b\xb8\x44\x83\xb8\xdb\x35\xc7\x3e\x5f\xa3\x4e\xbf\xdd\x5f\x9f\x4f\xdf\x34\xef\x75\xf5\x34\x06\x07\xd5\xe5\x52\x9a\x83\x67\xea\xf2\xd7\x51\x4b\xab\xfc\x6f\xf7\x4b\xff\xc5\x6a\x74\xc9\xb7\x4a\xe5\xda\xfd\x6e\x05\xcb\x12\xbc\x10\x19\xaf\xab\x30\x31\xdf\xe6\xae\x1d\xb9\x25\x56\xcc\x7e\x1a\xab\x1b\xd6\x37\xde\x5e\x39\xd3\x37\x4f\xe5\xcf\x8e\x6f\x35\x5b\x24\xa9\xde\xda\x09\xc6\xc3\x63\xb3\xf3\xca\x37\x7f\xd5\x2e\xa2\xc5\x7d\xfe\xdc\x78\xa1\xe0\x13\xfc\xf8\xe2\x11\xc3\x41\xed\x45\x6a\x64\x45\x6d\x15\xd1\x85\xda\xa3\x08\xda\x73\x80\x28\x45\x63\xee\xde\x3f\x08\x63\x20\xd6\xb6\x20\xae\xa5\xe0\x1a\x79\x04\x7e\x02\xee\xdf\x4d\x22\x37\xcd\x2b\x3d\xa8\xf4\x3a\x00\x7e\xf6\x3f\xb5\x62\x99\xff\x16\xa3\x76\x7f\x11\x94\x78\x93\x51\x89\x51\xa1\x63\x9f\x89\xda\x1a\xb2\x16\xa0\xbb\xc7\xb4\x69\xae\x1a\xb8\xdb\xa0\x44\x0b\xb5\xa4\x66\xe3\xe3\x34\x42\xd5\x0a\xca\xee\xab\x20\xb3\x7a\xdd\x03\x6f\xf7\x0e\x50\x03\x75\x41\xee\x69\x92\x25\x40\xac\x7f\x1b\x9d\xb9\x78\xb1\x78\xfc\xab\x51\xe1\x40\x10\x12\x0e\x99\x6a\x6a\xea\xc2\xed\x39\x37\x01\x58\xe0\x2a\xb7\xc4\x7b\xa0\xbd\x3d\xfd\xf6\x82\xbe\x08\x56\xe9\x2d\xee\x65\xd0\xe0\xd5\x6e\xeb\xeb\x3a\xce\x7a\x5a\x78\x29\x64\x63\xde\x4f\x8b\xf3\xdc\xed\x24\xa6\x42\x51\x6d\xce\xb6\xef\xb2\xf6\xdd\xba\x32\x4a\xb2\x29\x0c\x42\x11\x35\x41\x9f\x51\x0d\x8b\x1d\x03\x37\x21\x74\x68\x5b\xe7\x93\x7b\xb0\x1e\xf6\xfa\xd8\x8b\x69\xc3\x35\x96\xa8\x7d\x80\x08\x20\xb0\x92\x84\x87\x1b\x0b\xe2\x04\x34\x89\x41\x48\x10\x7a\x83\x12\x24\xae\x8d\xd0\x56\xc0\x92\xd4\xd4\x7e\x72\xdd\xac\x44\xe0\x62\xf7\xd2\x6c\xdf\x2e\x49\xc6\xb4\xe7\xfa\x84\xfc\x6b\x94\xc8\x4b\x8e\xde\x3a\xc0\xdd\x87\xda\xd9\x81\x11\x4d\x6f\xd1\x5e\x25\xcd\xc7\xf2\x1f\x10\x18\x90\x54\x03\x55\x16\x9e\x1f\xef\x4b\x21\xdc\x05\xa8\x29\x54\x03\xe8\xd0\x0d\xa2\x61\x44\xa5\x6d\x7a\xb7\x05\xd8\xd2\x50\xba\xcd\x53\xd0\x5e\x6f\x22\xfb\x14\x62\xb3\x97\xde\x10\xed\xde\xbb\xa5\xc8\x34\xe6\xf0\x7d\x08\xfa\x67\xa6\x13\x03\x98\xe1\xda\xe1\x5b\x31\xc2\xaf\x81\x38\x4b\x17\x6f\xe5\x5e\xb5\x18\x35\xc0\x0e\x4a\xde\xf7\xc1\x9f\x5b\xe0\x6d\xbe\xc5\xd4\x61\x9f\x59\x0f\xca\x2b\x92\xef\x03\x7b\x00\x03\x88\xe8\x7a\x4d\x43\x63\x4f\x2d\x20\xce\x50\x29\xff\x4a\x08\xc8\x8d\x7f\x47\x40\x14\xa4\x44\x16\x6a\x35\x92\xdd\xe1\x6a\x23\xc4\xb5\x71\xee\x1e\xc0\x54\x68\x43\x2c\xb7\x69\x1b\x72\x37\xfd\x85\xcf\x7e\x4b\xf1\x52\x69\xab\x15\x1c\xff\x46\xba\xff\x1e\x74\xff\xf9\xa6\xfb\xe3\xef\x0f\xdf\xbf\x79\x34\x1d\x5f\x8c\x1c\xa5\xfd\x03\x14\xbc\x4f\x25\x2a\xe5\x9e\x46\x9c\xac\xad\xf3\x66\x23\x6e\xf9\xcc\x51\x7e\xe9\xf4\x37\xd8\x6a\x39\x78\x6a\x78\xf9\x54\x18\x96\x4a\x6d\x4d\xad\xc7\xc5\x41\xc8\x63\xca\x2b\xb4\x27\x90\x6c\xd5\x0d\x33\xb1\xa6\x6e\x18\xd5\x08\xaf\xbc\x79\x5f\xf7\x8e\xeb\x4a\x2a\xf8\x8c\x2d\x9f\x26\xd4\x62\x26\x7a\x18\xc8\x56\xde\xed\x4a\x78\xae\x38\x3a\xcc\x4f\x32\xfd\xa4\x50\xf2\x56\xc6\xfe\xc2\xb4\xbf\xea\xee\xe5\x0b\xf3\xdd\x1d\xa4\xc5\x5d\x4e\xff\xff\x79\x77\x69\x0e\x4d\x6b\x26\x5c\xd4\x73\xcc\x59\xc6\x69\x28\x24\xaf\xfd\xa1\xc2\x9a\x32\x84\x57\xc2\xee\x22\xec\xf5\xde\x00\x1d\x56\x76\xbe\x37\x3b\x4d\xf7\x59\x8e\xd7\x7c\x5a\xba\x37\x6f\x33\xc1\x63\x90\x84\x47\x22\xf1\x41\xd9\x38\xd6\xe7\x18\x17\x55\xf0\xd1\x0e\x38\x73\x55\xfd\xeb\xee\xf7\x87\xb7\x07\x84\x54\x73\xfc\xda\x92\xf4\xc2\x4c\x69\x91\xc0\x7c\x3b\xa7\x40\x79\x84\xf7\xbe\xb2\x55\x53\x6a\x89\x68\x52\x22\x6a\x7b\x36\xfb\x6f\x00\x00\x00\xff\xff\x80\xa7\xe3\x5b\xc0\x26\x00\x00")

func templateTemplateOpenshiftIoOpenshiftDjangoPsqlExampleYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftDjangoPsqlExampleYaml,
		"Template.template.openshift.io/openshift/django-psql-example.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftDjangoPsqlExampleYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftDjangoPsqlExampleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/django-psql-example.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftDjangoPsqlPersistentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x5f\x73\xdb\x36\x12\x7f\xd7\xa7\xd8\xf1\x74\xc6\xc9\x9c\x25\xc5\x69\x73\xd3\xf2\x4d\x91\x14\x47\x17\x5b\x52\x25\x39\x69\xaf\x97\xf1\x40\xe4\x8a\x42\x0d\x02\x34\x00\xca\xd6\xe5\xf2\xdd\x6f\x00\x90\x14\xff\x49\x96\x5b\x67\x5a\x3d\x74\x1a\x62\xb1\xf8\xed\xff\x05\xd6\x24\xa6\x1f\x51\x2a\x2a\xb8\x07\x1a\xa3\x98\x11\x8d\x1d\x11\x23\x57\x6b\xba\xd2\x1d\x2a\xba\x9b\xf3\xd6\x2d\xe5\x81\x07\x8b\x74\xb9\xc5\xc8\x12\x99\xf2\x5a\x00\x24\x8e\x3d\x08\x7e\x27\x3c\x14\xed\x58\xdd\xb1\x76\x6c\x78\x29\x8d\x5c\xb7\x20\xe7\xb7\x97\x24\x42\xa5\x48\x88\x1e\xfc\xaf\xdd\x02\x58\xac\x11\x56\x82\x31\x71\x4f\x79\x08\x0a\xe5\x86\xfa\xf8\x42\xbd\x84\x35\xd9\x20\x2c\x11\x39\xf8\x12\x89\xc6\x00\x28\x87\xad\x48\x24\xc4\x52\xfc\x8e\xbe\xf6\xe0\xbb\x2f\xe3\xde\xd5\xf0\xeb\x19\x7c\xf7\x65\xd0\x5b\xf4\xde\xf6\xe6\xc3\x9b\xf9\x70\xf6\x71\xd4\x1f\xde\xd8\x95\x4e\xab\x05\xf0\x4e\x48\x88\x84\x44\xa0\x7c\x25\x64\x44\x34\x15\x1c\xc8\x52\x24\x1a\x12\x65\x0e\xd5\x6b\xaa\x72\xd8\x67\x40\xb9\xcf\x92\xc0\x2c\x4c\x62\xe4\x73\xa3\x11\xf0\x05\x57\x34\x40\x69\x37\xab\x33\x50\x88\xb0\xd6\x3a\x56\x5e\xb7\x1b\x52\xbd\x4e\x96\x1d\x5f\x44\xdd\x5c\x85\xdd\x54\x76\x7c\xe8\x2e\x99\x58\x76\x23\xa2\x34\xca\xee\x6c\xd8\x1b\x5c\x0d\x3b\x51\xd0\x69\x45\xa8\x49\x40\x34\xb1\x0a\xe5\x5c\x68\xc7\xda\xfc\x13\x20\x40\xe5\x4b\x1a\x6b\x6b\xa0\x1e\x07\x7c\x20\x51\xcc\x10\x06\x96\xab\x31\x00\xa3\xbe\x13\xe4\x9e\xea\x35\x10\x98\x0a\xa5\x43\x89\xf3\x9f\x2f\xc1\x70\x5d\x12\x85\x9d\x5c\x72\xcb\x13\x9e\x59\xfe\x94\xe9\x9f\xd3\x82\x85\xe5\x0b\xde\x67\x44\x29\xcf\xfe\x6f\x3b\xde\xea\xb5\xe0\x76\xa9\xe4\x92\x01\x55\x31\x23\xdb\x36\x27\x11\x7a\x99\x2a\xfe\x51\x90\xbc\x61\x8b\xf0\x93\x08\xb9\xd3\x6d\x3b\x91\xcc\x3b\x12\x6f\x9d\x15\x13\x3c\x6c\x97\xec\xb2\x28\xaa\x0d\x02\x5c\x51\x8e\x0a\x24\x2a\x91\x48\x1f\x15\x70\xc4\x00\x03\xd0\x02\x02\xdc\x20\x13\x71\xaa\x31\x92\x61\x37\x46\x0a\x8a\xc6\x2c\xea\x9e\xc0\x32\xa1\x2c\x30\x9a\x5f\xd1\x30\x91\x29\x41\xd1\xf4\x01\xc6\x4c\x6c\x23\x17\x76\xe6\x57\xa5\xe5\x41\xee\x0c\x05\xe2\x32\x59\xa7\x2e\x6a\x2c\xc5\xc6\x18\xbb\x5d\xd6\xf8\x0c\x03\x78\x4f\xf4\x19\x8c\xb8\xdf\xb0\x4b\x25\x71\x2c\xa4\x2e\x6b\x99\xf8\x3e\x2a\xd5\x91\x18\xac\x89\x36\xca\xb6\xfb\x34\x09\x95\x07\x77\x09\xf5\x6f\x95\x26\x52\x9f\x39\x93\x9f\x39\xf5\x3b\x92\xc6\xac\xb4\xa4\x3c\x20\x4b\x86\x1e\x9c\xac\x08\x53\x78\xd2\x02\x70\xe0\xf6\xa6\x23\xb3\xac\x62\xe2\xa3\xb7\x83\xdb\x12\x4b\x93\x40\x94\xd7\x6a\x43\x31\x15\x6e\xce\x5b\x00\x2e\xed\xcd\xd1\x97\x68\xf6\x17\xe3\x34\x3b\x2c\xcd\x3b\x2d\x00\xa5\x25\xe5\xe1\x20\x5f\xcf\xd4\xdd\x8e\x89\x52\xf7\x42\x06\x5e\x31\x37\x4d\x7b\xf3\xf9\xa7\xc9\x6c\xf0\xb5\x4c\x9b\x28\x94\x25\xba\xeb\xf9\x70\x96\xd2\x38\xb1\x94\x45\xd3\xbe\xc5\xad\xa5\xfb\x57\x6f\x7c\x31\xb9\x99\x0f\xfb\xb3\xe1\xe2\xe6\xc3\xf0\xd7\xaf\x87\xe4\xb0\x09\xb5\x26\x48\x2d\xe5\x54\x92\xce\xf0\x21\x16\x0a\x95\xf5\x21\x26\x48\x00\x4b\xc2\x08\x37\x6e\xad\xd7\x58\xf2\xc2\x58\x04\x2a\xe5\x90\x66\xef\x0e\x61\xf1\x9a\x94\x2d\x17\x60\x8c\x3c\x40\xee\x53\x54\x1e\x9c\xfe\xf6\xe5\xc4\xa8\xf2\xc4\x83\x93\x7d\xb9\xfb\xe4\x2c\xe5\x0a\x70\x62\x64\x31\xb4\xa9\x34\x27\x5f\x3f\x9f\x36\x9b\x23\x46\xdf\x89\x63\x5c\x31\x95\xac\x9d\x92\xdd\xe3\x32\xe5\x68\x16\x3d\xf8\xf1\xd5\x8f\xaf\xd2\x0f\x9a\xc8\x10\xf5\xb4\xfc\x59\x21\x43\x5f\x0b\x99\xe9\xa7\x7c\xd8\x5e\x8d\xcf\x44\xa2\xeb\xfa\xde\x8f\x74\x2d\x94\x2d\x65\xbd\xe9\xf4\x72\xd4\xef\x2d\x46\x93\xf1\xcd\x60\x72\xd5\x1b\x8d\x9d\x0b\x68\x91\x01\xa8\x5a\xf4\x09\xa0\x46\x11\x09\x71\xae\x25\x92\xe8\xc9\xae\xf0\x01\x31\x56\xa0\x25\xf1\x6f\x41\xac\xc0\x5f\x13\x1e\xa2\x32\xd5\xb8\xea\x0a\xd4\x9c\xd2\x20\xee\x5e\x58\x6f\x4d\x8a\xeb\xdb\x74\xf4\x64\x58\x83\x34\xe1\xae\xc5\xbd\xc9\xb1\x2e\x5b\x56\x10\x65\xe6\xcd\x92\x49\x83\x63\xde\x13\xaa\xdb\x2b\x21\xdb\x12\x49\xb0\xf5\xe0\x44\xcb\xc4\xe6\x95\x43\x36\x13\x89\x8e\x13\x9d\xc1\xda\x59\xa8\x41\xdd\x0b\x12\xe6\x8b\x25\x86\x9e\x41\xa4\x74\xea\xad\x4a\xf7\x45\x14\xd1\x9c\xa7\x13\xd4\x83\x4e\x37\x22\x9c\x84\xd8\x89\xb7\x90\x93\xbb\x0a\xe3\xed\xb2\xbe\xc6\x07\x3d\xa0\x36\x89\xf4\x27\xe3\xc5\xf0\x97\xc5\xcd\x60\x94\xa6\x10\x80\x70\xc7\x16\x40\xe2\xca\x90\xcd\x27\xd7\xb3\xfe\xf0\x66\x36\x9c\x4e\xe6\xa3\xc5\x64\xf6\xeb\xcd\x6c\xf8\xee\x6b\x4e\x95\x48\xda\x4c\x75\x3d\xbb\xcc\xa8\xf4\x36\x46\x0f\x2e\x68\x8a\x49\x4b\xa2\x31\xdc\xe6\x02\x58\x8c\xf3\xca\x57\x00\xe4\x9b\xdd\x3f\xb2\xd0\x9c\x8e\xa6\x37\xa3\xf1\x60\xf8\x8b\xe1\x9f\xaf\x02\x6c\x08\x4b\xac\xc6\x4a\x04\x3b\x98\x2b\x29\x22\xaf\x40\x7f\x50\xfb\x99\xfe\x5d\xb1\xf1\xbe\xef\xbc\xa9\x2c\xa5\x65\xc2\xd9\x67\x3e\xed\xf5\x87\x65\x51\xe7\x56\x24\x17\x94\x92\x86\x21\xca\x3c\xc3\x38\x02\x7b\x70\xdf\xc6\x47\xe9\xbb\xf3\xf0\xd2\x82\x6b\x3f\x76\xd8\x5d\x86\x37\x87\x5f\x8c\x16\xef\xaf\xdf\xde\x7c\x1a\xbe\x7d\x3f\x99\x7c\x48\xb3\x7c\x4d\xe7\xef\x93\xe5\xfe\xb0\x1a\xe4\xb5\xfe\x79\x62\xcb\xf5\x0e\xb5\x70\x37\xe9\x1e\xe5\xb7\x8a\x31\x89\xf6\x24\xe5\xc1\xf9\x11\xe9\xb8\xc9\x05\x9d\xb2\x66\xe8\xee\x0f\xa5\xb6\x22\x23\x29\xab\xc5\xfc\x76\xd7\x9c\xc6\xa8\x6d\x8e\xe5\xcc\xe7\x73\xf0\x59\x5c\x12\xca\x73\x2f\x71\x86\x2f\xf9\xff\x2e\x02\x1a\x6b\x60\x81\xae\x10\x0b\xcd\xe5\xf2\x10\xcf\xe1\xf8\x62\x34\x7e\x8c\x9b\x23\x3a\xc8\xe7\x08\x4c\x8f\x62\x31\xbd\x4d\x9d\xc7\xbb\x4a\x20\x43\x1e\x12\x1f\x70\x3b\xc3\x55\x75\x0d\xc0\xf6\x42\xa5\x16\xaa\x46\xd2\x6c\xb8\x06\x4c\x59\x5f\xf6\xfc\xb8\xb2\x36\xf0\xc9\xd8\x7a\xd3\xe9\x4d\x7f\x32\x7e\x37\xba\x68\x56\xf8\x6e\xbd\x51\xb2\x6a\x87\xf8\x7c\x92\x55\x1b\xd2\xa3\x25\xb3\xcd\x81\x07\xa7\x70\x5a\xf8\xc8\xe8\x06\x39\x2a\x35\x95\x62\x89\xe5\x23\xcd\x15\xe2\x02\x75\x15\x47\x4c\xf4\xda\x83\xee\x1a\x09\xd3\xeb\xea\x5a\xb5\xaf\x4b\x4f\xe6\x54\x53\xc2\x06\xc8\xc8\x76\x8e\xbe\xe0\x81\xf2\xe0\xfb\x32\x8d\xa6\x11\x8a\x44\xef\x96\x6b\x09\x60\xef\x0d\xa3\x78\xba\x2a\xc7\x76\x9e\x02\xa6\x4d\xc8\x4c\x36\xa4\x7f\x91\xf4\x47\x0b\x9f\xdf\x67\xcb\x50\x18\x8d\xa8\x56\x55\x78\x11\x46\x42\xda\x3b\xca\xd5\xf0\xca\xb4\x0b\x97\xa3\xab\x51\x5a\xbc\xaa\x25\x93\xee\x8a\xe5\x94\x48\x12\x15\x98\x91\x44\x8b\x88\x68\xea\x7b\x60\x2a\x45\x3d\xa3\x8e\x4d\xb5\x2e\x66\xd5\x47\x8c\xf3\x87\xfa\x84\x86\x3e\x0d\x9e\x52\xe8\xf7\x96\xe7\x69\x0e\xf0\xa3\x60\x49\x84\x7d\x46\x68\xbd\x2d\xcf\x40\xec\x4d\xf7\xbb\x6a\xe3\x6e\xd9\x57\x22\xc0\x5c\xbb\x33\x24\xc1\x27\x49\x35\x4e\x78\xda\xb2\xd4\x0c\x29\xf1\x2e\x41\x55\x34\xa2\xd2\x42\xda\x20\xfd\xee\xcb\xc7\xc9\xe5\xf5\xd5\xf0\xa6\xdf\x9b\xf6\xfa\xa3\xc5\xb7\xbc\x61\x9a\xae\x22\x7f\xa5\x28\xb4\x14\x4f\x90\xbf\xe1\xb2\x17\xbb\x57\x21\x75\xc7\x4a\x77\xbe\x37\x3f\x7c\xff\xba\xe1\xce\x97\x7f\xde\xd7\x64\xec\x01\xf1\x57\x74\x60\x99\xae\x9e\xa7\xef\x3a\x42\xbb\xc7\x36\x62\x07\xfa\x92\x6f\xdc\x99\x3d\xd2\x11\x1d\x45\xf6\x27\x7a\xb7\xe9\x64\xbe\xb8\x98\x0d\xe7\x3f\x5f\xfe\x9d\xba\x9b\x02\xaa\xbf\x61\x7f\x53\x40\x97\x99\xe5\x89\x9d\xe5\x53\xfb\x09\x7c\x28\x1a\xd8\xfd\x7c\x11\x45\x84\x07\xd5\xcf\x6d\xe8\x26\x4a\x76\x19\x5d\x9a\x4d\x5d\x7f\x8d\xfe\x6d\x3b\x77\x89\x1a\x71\xbb\x6d\x8e\x7d\xbc\xe8\x9e\xbf\x3e\xdc\x73\x9c\xbf\xaa\xf9\x76\x2d\x8d\xc1\x51\x8d\x46\x21\xcd\xc1\x23\x8d\xc6\xb7\x51\x4b\xa3\xfc\x6f\x0e\x4b\xff\x6c\x4d\x47\xc1\xb7\x0a\xfd\x87\xfb\x6d\x6c\xc5\xbd\x12\x09\xaf\xaa\x30\x32\xdf\xa6\xae\xbf\xda\x10\x2b\x66\x37\x0e\xd5\x1d\xeb\x1a\x6f\x2f\x9d\x79\x38\xa1\xb4\x4b\xf4\xee\x40\x55\x7f\xf3\x38\x6e\x3b\x40\xdc\xd4\x2d\x94\x75\xe0\x9b\x4f\xe3\xc7\xb3\xdc\x37\x6d\xc1\x1a\x5c\xf5\x8f\x3d\xcf\xe4\x7c\xbc\x9f\x9e\xfc\x44\x73\x54\x63\x16\x1b\x59\x51\x5b\x45\xb4\xa1\x32\xd3\x41\x7b\x0e\x10\xa5\x68\xc8\xdd\xf8\x86\x30\x06\x62\x65\x8b\xef\x4a\x0a\xae\x91\x07\x90\x4e\x10\xd2\xb1\x4f\xe0\x5e\x43\x0b\xf3\xa0\x4e\x0b\x20\x1d\x9f\x38\xc3\x98\xff\xe6\xd3\x8a\xf4\x22\x6d\x3a\x30\x2a\x31\xc8\x75\x9c\x66\xbd\x3d\xdd\x6c\x03\xd6\xdd\x84\x6e\x9c\x69\x07\xee\xd7\x28\xd1\xa2\x2d\x68\xda\x84\x14\x0d\x50\x35\xe2\xb2\xfb\x4a\xe0\xac\x6a\x0f\x20\xdc\x8d\x52\x2a\xa0\xae\xc8\x03\x8d\x92\x08\x88\x0d\x27\xa3\x36\x17\x9e\x16\x4f\x3a\xf7\xca\x7d\x08\x7c\xc2\x21\x51\x75\x65\x5d\xb9\x3d\x97\x26\xde\x73\x5c\xc5\x2b\xc5\x01\x68\x6f\xce\x5f\x5f\xd1\x27\xc1\x2a\xcc\x4e\x9f\x06\x0d\x5e\xec\xb6\xbe\xac\xe2\xac\x66\xa1\xa7\x42\x76\xd1\x0e\xce\xa6\x64\x43\x28\x23\x4b\x86\xb0\x12\xd2\x96\xdf\x33\xc0\x4e\xd8\x71\x5b\xcf\xe0\xf5\x05\xad\x02\x4d\xf7\xf7\x49\x4c\x7c\xaa\xb7\x39\xbc\x4a\x67\x7f\x00\xd6\xf9\x45\x0d\x94\xf1\xb9\xeb\xd9\x65\x16\x0e\x12\x63\xa1\xa8\x36\x0a\xb1\x73\x68\x3b\x9e\x2f\x3d\x11\xda\x34\x0e\xbe\x08\xea\x9a\xbc\xa0\x1a\x66\x3b\x06\xee\xe5\xd7\x61\x6c\x7c\x77\x3e\x80\xf4\xb8\xa1\x6e\x27\xa4\x35\x7f\x9d\xa3\x4e\x03\x57\x00\x81\xa5\x24\xdc\x5f\x5b\x10\x67\xa0\x49\x08\x42\x82\xd0\x6b\x94\x20\x71\x65\x84\xb6\x02\x16\xa4\xa6\xf6\x93\xeb\xe8\x25\x02\x17\xbb\x99\xba\x1d\x09\x93\x84\xe9\x94\xeb\x1e\xf9\x57\x28\x91\x17\xa2\xaf\xf1\x61\xfe\x10\x6a\x67\x07\x46\x34\xdd\xa0\x7d\x1f\x30\x1f\x8b\x7f\x27\x61\x40\x52\x0d\x54\x59\x78\xe9\xd8\x46\x0a\xe1\xae\xb4\x75\xa1\x6a\x40\xfb\x6e\xc0\x00\x03\x2a\x6d\xe3\xbf\xf3\xa5\xc2\xb0\xa1\xc9\x53\xd0\x5e\xf1\x02\x3b\xe2\xb2\x59\x55\xaf\x89\x86\x7b\xca\x18\x48\x91\x68\xcc\xe0\xa7\x79\x21\x1d\x1f\x9e\x19\xc0\x0c\x57\x0e\xdf\x92\x11\x7e\x0b\xc4\x59\xda\xed\x5d\xe6\xaa\xc5\xa0\x06\xb6\x57\xf0\xbe\xf7\xe9\xb9\x39\xde\xfa\x8c\xad\x0a\xfb\xc2\x7a\x50\x56\x29\xd3\x5e\xb8\x03\xd0\x83\x80\xae\x56\xd4\x37\xf6\xd4\x02\xc2\x04\x95\x4a\xa7\xbf\x80\xdc\xf8\x77\x00\x44\x41\x4c\x64\xae\x56\x23\xd9\x3d\x2e\xd7\x42\xdc\x1a\xe7\xee\x00\x8c\x85\x36\xc4\x72\x1b\x37\x21\x77\xaf\xfa\xf0\x29\xdd\x92\x4f\xa0\x6d\x15\x85\xd3\xdf\x48\xfb\xbf\xbd\xf6\xbf\x5f\xb5\x7f\xfa\xfc\xe5\x87\x57\x5f\x4d\xd7\x1b\x22\x47\x69\xff\xd4\x06\x1f\x62\x89\x4a\xb9\x91\x97\x93\xb5\x71\x8e\x60\xc4\x2d\x9e\x39\xc8\x2e\xde\xe9\x2d\xbe\x5c\xa6\xf6\x3d\x4a\xef\x0b\xc3\x42\x0b\x50\x51\xeb\x69\x7e\x10\xf2\x90\xf2\x12\xed\x19\x44\x5b\x75\xc7\x4c\xac\xa9\x3b\x46\x35\xc2\x8b\xd4\xbc\x2f\x3b\xa7\x55\x25\xe5\x7c\x86\x96\x4f\x1d\x6a\xfe\xd6\x7d\x1c\xc8\x46\xde\xcd\x4a\x78\xac\x68\x3b\xcc\x7b\x99\x5e\x2b\x94\xbc\x91\x71\x7a\x69\x3c\xdc\x0d\x1c\xe4\x0b\xd3\xdd\x3d\xac\xc1\x5d\xce\xff\xf9\xb8\xbb\xd4\x1f\xc3\x2b\x26\x9c\x55\x73\xcc\x45\xc2\xa9\x2f\x24\x2f\xff\x3d\x09\xac\x28\x43\x78\x21\xec\x2e\xc2\x5e\x1e\x0c\xd0\x7e\x69\xe7\x3b\xb3\xd3\x74\xe0\xc5\x78\xcd\x5e\xc1\x0f\xe6\x6d\x26\x78\x08\x92\xf0\x40\x44\x69\x50\xd6\x8e\x4d\x73\x8c\x8b\x2a\xf8\x60\x1f\xae\x33\x55\xfd\xe7\xfe\xf3\x97\x37\x47\x84\x54\xfd\x59\xbd\x21\xe9\xf9\x89\xd2\x22\x82\xe9\x76\x4a\x81\xf2\x00\x1f\xd2\xca\x56\x4e\xa9\x05\xa2\x51\x81\xa8\x69\x1c\xfa\xff\x00\x00\x00\xff\xff\x46\x33\x35\x88\xad\x27\x00\x00")

func templateTemplateOpenshiftIoOpenshiftDjangoPsqlPersistentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftDjangoPsqlPersistentYaml,
		"Template.template.openshift.io/openshift/django-psql-persistent.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftDjangoPsqlPersistentYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftDjangoPsqlPersistentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/django-psql-persistent.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftDotnetExampleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xdf\x6f\xe3\x36\x12\x7e\xf7\x5f\x31\x28\x0e\xc8\x1e\x10\x3b\x9b\xbd\x16\xe8\xe9\xcd\xb1\xd5\xc4\xb7\xf1\x0f\x48\x4a\x7b\xbd\xa2\x30\x68\x69\x2c\xf1\x22\x91\x2a\x49\xd9\xc9\x15\xf9\xdf\x0f\x24\x25\x5b\xbf\xac\xdd\x14\x7d\xe8\x3e\x2c\x62\x72\xf8\xe9\x9b\xe1\xf0\x9b\x21\x49\x4e\x7f\x44\x21\x29\x67\x0e\x28\xcc\xf2\x94\x28\x9c\xf0\x1c\x99\x4c\xe8\x5e\x4d\x28\xbf\x39\xdc\x8e\x9e\x29\x8b\x1c\x08\xca\xe9\x51\x86\x8a\x44\x44\x11\x67\x04\x40\x18\xe3\x8a\x28\xca\x99\xd4\x3f\x01\x22\x94\xa1\xa0\xb9\x32\x88\x53\x06\xf8\x42\xb2\x3c\x45\x98\xac\xdc\x00\x66\x5c\x20\x90\x3c\x4f\x69\x68\xd6\x4c\xcc\x12\x1a\x72\x36\x4b\x89\x94\x8e\xf9\x73\x1c\x71\xc5\x50\x99\xa9\x06\x93\x88\xca\x3c\x25\xaf\x63\x46\x32\x74\x6a\x80\xae\xfd\x84\x59\xa0\x48\x2c\x1d\xf8\xad\xa0\xe1\xb3\x54\x44\xa8\x6b\x0b\x76\x3d\xa9\x10\xfb\x9d\x8c\x78\x58\x64\xc8\xac\x27\xe3\x42\xa4\x0e\x24\x4a\xe5\xd2\xb9\xb9\x89\xa9\x4a\x8a\xdd\x24\xe4\xd9\x8d\xc0\x28\x21\x6a\x1c\xe1\x01\x53\x9e\xa3\xb8\x91\x9f\x68\xc9\x36\xe4\x02\x07\xf0\x73\xc1\x0f\x34\x42\x31\x6e\xfa\xe0\x61\x04\x0f\x44\x5d\xc3\x82\x85\x93\x81\xe5\xb2\xc8\x73\x2e\x54\x93\x18\x09\x43\x94\x72\x62\x49\x69\x7e\x23\x00\x0b\x6b\x29\x8d\xf1\x14\x17\x3d\x2c\x73\x12\xa2\x73\x8e\xe8\x88\xef\xfe\x8b\xa1\x92\xce\x68\x0c\xf5\x2c\x38\xdc\x8e\x00\xec\x8e\x7b\xbc\x50\x7a\x79\x7d\xc3\xab\x6f\xfc\xed\xf7\xd5\x74\xe9\xbe\x8d\x00\x64\x8e\xa1\x9d\x49\xb8\x54\x7a\x66\xba\xd9\x3c\x2e\x66\xd3\x60\xb1\x5e\x6d\xe7\xeb\xe5\x74\xb1\x7a\xb3\xce\x71\x6b\x57\xe1\xfb\x28\x0e\x34\xc4\x72\xac\x89\x7b\x91\xd4\x79\x51\x93\x56\x27\x13\x5b\xb9\xe8\xbe\xe4\x5c\xa2\x04\xc2\x22\x48\x39\x89\x60\x47\x52\xc2\x42\x94\xa0\x92\x46\x52\x42\xce\x23\xf9\x05\x4f\xf5\x6e\x94\x9f\x19\x97\x66\x47\xdc\x95\x9f\xd5\x93\x0e\x7c\xff\xf1\xfb\x8f\xe5\x80\x22\x22\x46\xb5\x69\x0e\x4b\x4c\x31\x54\x5c\x38\xef\x73\x7f\x91\x91\x18\x7d\x25\x90\x64\xef\x0e\xc1\x67\xc4\x5c\x82\x12\x24\x7c\x06\xbe\x87\x30\x21\x2c\x46\x09\x94\x75\x42\x40\xf5\x57\x7a\x62\x70\x91\xd6\x5d\x41\xd3\x68\xc6\xd9\x9e\xc6\xef\xa6\x35\xc7\x3d\x65\x28\x21\xe1\x47\x50\x1c\x76\x1a\xaa\xcd\xe8\x0b\xfb\xc1\x0b\x95\x17\xaa\x42\x3f\xe7\x59\x4f\xd4\x02\x12\x9f\x26\x1b\x80\x8e\x3e\x77\xd2\xaa\x84\xe4\x85\x08\xb1\x42\x09\x39\x53\xf8\xa2\xe6\x54\x68\xe3\xd9\x7a\x15\xb8\xff\x0e\xb6\xf3\x85\xf7\x56\x1a\xc4\x54\x9d\xbf\x28\x70\xaf\xcd\xfc\xf5\x93\x37\x73\xb7\x9e\xbb\x59\xfb\x8b\x60\xed\xfd\xbc\xf5\xdc\x1f\xde\x4e\x56\x85\xa0\xfd\x56\x4f\xde\x63\x65\xa5\x5e\x73\x74\xe0\x9e\x96\x9c\x94\x20\x0a\xe3\xd7\xea\x4b\x96\xa3\xdf\x1a\x05\x40\x76\x38\xff\xa8\xb2\x73\xbe\x0e\x56\x6e\xb0\xf5\x83\xa9\x17\x3c\x6d\xb6\x1b\x6f\xfd\x2f\x77\x16\x9c\xcc\x00\x0e\x24\x2d\x4c\x2c\xfa\x2d\xdf\x2e\x22\xce\x3f\x6f\x7f\x74\x3d\x7f\xb1\x5e\x0d\xa1\x9d\xad\x2e\x22\x4d\x7d\xdf\x5d\xde\x3d\xfe\xbc\xd5\xbb\x31\x80\xd5\xb0\xbb\x88\xb6\xda\x2c\xb7\xc1\x7a\xfd\xe8\x0f\x20\x9d\x6c\x2e\xa2\x04\xae\x1f\x54\x21\x18\x42\x6a\xd8\x5d\x44\x9b\xad\x57\x3f\x2c\xee\x9f\x3c\xa3\x8c\x03\x68\x0d\xbb\x8b\x68\x9b\xa7\xbb\xc7\x85\xff\xd0\xc5\xf9\x46\x89\x02\xbf\xb9\xb4\xcc\x73\xfd\x60\xed\xb9\x5b\x9b\x79\x43\x4e\xb5\x2c\xcf\x44\xf6\x82\x67\x4e\x6d\xe1\xe0\x19\x3b\x9f\xb2\x12\x76\xb1\x9c\xde\xbb\x5b\x3f\xf0\xdc\xe9\x72\x1b\x4c\xef\xdf\x5a\xa6\x65\xa1\xb2\xa7\xd2\xdf\x4c\x67\x6e\xf3\x3c\xf8\x26\xef\x6d\x41\x11\x34\x8e\x51\x9c\x94\xd8\x1a\x18\x22\x33\x23\x6e\x8d\x71\x2b\x4f\x8d\x09\x5b\xdc\xcf\xbe\x48\x0c\x05\x9a\x1a\x76\xbf\x08\x1e\x9e\xee\xb6\x3f\xb9\x77\x0f\xeb\xf5\xe7\xad\xef\xce\x3c\x37\xe8\x1c\xcc\x87\x62\x57\x21\x21\x43\x41\xc3\x5e\x28\x77\xe5\x7a\x8b\xd9\x30\x96\x5d\x7e\x59\x60\xe7\x98\xa7\xfc\x55\xf7\x28\x7f\x8e\xca\x46\x06\xaf\x23\xfc\x12\xc5\x01\xc5\x17\xd4\x56\xa0\x59\x20\x1d\xb8\xfd\x8a\x52\x06\x3d\xda\x65\x9d\xf6\x78\x9a\x52\x16\x37\x1a\x9f\xca\xa2\xe9\x9c\xfe\x97\x92\x1d\xa6\xd2\xe9\x49\xac\xa6\x10\xf4\x8d\x9e\xb9\x43\xa9\xe7\x84\xb2\x53\xe2\xd8\x1d\xd4\xba\x09\xbf\xfc\x5a\xc3\x37\x55\xd0\x81\x2b\xb8\xaa\x0d\xa6\xf4\x80\x0c\xa5\xdc\x08\xbe\xc3\x3a\x1b\x30\x9d\xd9\x3d\xaa\xe6\x20\x40\x4e\x54\xe2\xc0\x4d\x7b\xb4\xdd\x25\x9c\x12\x27\x4c\x50\x7b\xf0\x10\x04\x9b\xc6\x14\x65\x54\x51\x92\xce\x31\x25\xaf\x3e\x86\x9c\x45\xd2\x81\x6f\x9b\xcb\x15\xcd\x90\x17\xea\x34\x7d\xfb\x5d\x27\x5e\x65\x77\x48\xf2\x7c\xd4\x64\xd3\x88\xed\xf8\x1c\xa5\x4d\x1f\x53\x81\x24\xa2\x7f\xa1\x38\xdc\x0e\xc7\xe1\x1f\x4d\xee\xb6\x76\xca\x26\xc3\x94\x66\x54\xc9\x36\xeb\x0c\x33\x2e\x5e\x75\x42\x2d\xdd\xa5\x2e\xd0\x8f\x8b\xe5\xa2\x3c\xbd\x6d\xfd\xa1\x67\xe5\xd9\x10\x41\xb2\x1a\x18\x29\x14\xcf\x88\xa2\xa1\x03\x5a\x9e\xbb\xb9\xb8\xd2\xd2\x57\xcf\xc7\x9e\x7d\xfa\x83\xc2\xdb\x69\x6f\xe0\x3d\x4a\x99\x6b\x4f\x50\x19\x37\xc7\x4d\x4d\x09\x12\x34\x1f\x01\x22\x25\x8d\x19\x46\x5a\x59\x48\x9a\xea\xee\x52\x2b\xcb\x5e\xe8\xce\x89\x45\x50\xde\x35\x20\x32\x22\x14\xd9\x96\x93\xca\xf3\x75\x67\x04\x50\x5e\x8d\x56\x86\xb4\xfe\xff\x74\x9f\x29\x1b\x02\x81\xbf\x15\x54\x60\x74\x8a\x60\x59\xb0\x5a\xd7\x9d\x16\xc7\x25\x79\xa1\x59\x91\x01\xc9\x78\xc1\x94\x66\x66\x77\xd4\x10\x3c\x45\x1f\x42\xc2\xa0\x90\x5d\x22\x4b\x6b\xfc\xa8\x73\xe3\x44\xa8\x9e\x09\x03\xc4\xbe\xbb\xfd\xb4\xa4\x7d\x31\x33\x79\xa2\x45\x11\x49\xa6\xaf\xac\x70\x4c\x68\x98\x00\x95\x9a\x42\xd4\x6c\x82\x43\x1e\x75\x59\x99\xcb\xaf\xb1\x31\x62\xdd\x28\xf0\xed\xfa\xfa\xc5\xc8\x39\x9f\x26\x1f\xfb\x58\xae\x73\x64\xbe\xbe\x2a\x9a\xdd\x30\x65\x19\x8e\x09\x0a\x34\xbc\x6a\x59\xa7\x0f\x14\x8d\x50\xf6\xee\xa2\x59\xd7\xd8\x4a\x53\xd3\x07\x58\x9d\xaf\xa8\x3d\xa4\x9e\xbc\xc7\x2a\xbb\x04\xe6\x5c\x52\xa5\xb7\xe7\x48\x55\x02\xaf\xbc\x10\xcd\x62\x66\x4e\x79\x7f\x04\xef\xa9\x02\xef\x0c\xf0\xe4\x3d\x9e\x38\xf6\xf6\xe4\x03\x7c\xdf\xff\x52\x30\xc6\x97\x49\x4c\x3b\xfe\xf9\xa8\xca\x63\xc1\x81\xc0\x4e\x10\x16\x26\x86\xd3\xb5\x49\x12\x2e\x80\xab\x04\x85\xbe\x61\xe8\x18\x18\x7f\x6b\x41\xa0\x66\xc8\x36\x03\x02\x81\x71\x05\x85\xa4\x2c\x36\xc1\x8a\x70\x4f\x8a\x54\x95\xa8\x17\xc2\xb1\x47\x81\xac\xb6\x5b\xbd\x77\x98\x76\xfa\x18\x87\x7a\x52\xa8\xee\x4d\x21\x11\x08\xc8\x62\x17\x51\x61\x5a\x85\xd7\x6a\x13\x6b\x7b\x54\xf3\xa5\x4d\x6f\x66\x6f\x60\x30\xaf\x96\x9f\x28\xd6\x6e\x63\x7d\xe9\x82\xe6\xd6\x1f\x99\xa7\x09\xa3\x54\x2a\x21\x0a\x8e\x34\x4d\x41\xf0\x42\xa1\x26\xa7\x69\x9c\x5f\x93\xa4\x7d\x5f\xb8\xd6\xe1\x4c\x71\x6f\x05\x73\x97\x12\xf6\x0c\xc4\x3a\x6e\x97\xef\x4e\x31\xc5\xa8\x13\xce\x69\x2d\x0b\x1f\xca\x4f\x9f\x28\x77\x9f\x47\xda\xcc\xa7\x65\xf7\xa8\x25\x42\x6f\x60\xa5\x0a\xa1\xd1\xe5\xa2\x3c\x81\xb6\xff\x84\x23\xee\x12\xce\x9f\xfb\xb6\x54\x4f\xff\x64\xa7\xc1\x37\x88\xa3\xb2\x88\xc0\xd5\x2f\x64\xfc\xbf\xe9\xf8\x3f\x1f\xc7\xff\xfc\xf5\xf7\x6f\x3f\xbe\xe9\x16\xc7\xf4\xb0\xba\x07\xd3\x61\x13\x28\xa5\xbd\x78\x5b\xd6\xbd\x0d\xf1\x1f\x24\x6e\x9b\xdd\xcb\xcc\xcb\xf9\x3f\x8d\x7a\x6f\x03\x3e\x94\xaf\x4d\xbe\xd5\xd9\xf1\xe7\x9f\xe1\x60\x7b\xf3\x09\x04\xda\x54\x57\x8d\x9d\xce\x19\x65\xce\xac\xed\x75\x73\x0c\xe9\x9e\x86\x95\xe9\x35\x5c\x5d\xc1\x87\x94\x1f\x51\xaa\x6a\xec\xef\xfa\x30\x5f\xd9\x8a\x7c\x05\x1f\x12\x1a\x27\xf5\xd9\x4e\x44\xf4\x97\xcb\x5b\x41\x5b\xee\xeb\x17\xf0\x41\x3d\xc9\x05\xd7\x45\x18\xf6\x34\x45\xf8\x80\x93\x78\x02\xa1\xd4\x83\x86\x0c\x81\x3d\xd7\xd5\xa4\x2a\x89\x7a\xf7\x08\x68\xf9\x28\x5f\x56\xeb\xcb\xbb\xfc\x14\x11\xaa\xc8\x61\x63\x8d\x3a\x1c\x3b\xcf\x0e\xa5\x82\xe8\xe6\xe6\x12\xe9\x63\x82\xe5\xc3\x94\x94\x98\xed\xd2\x57\xdb\x6a\x50\x09\xfc\x80\x42\xd0\x28\x42\x56\xbd\x5d\x7d\x15\xb9\x69\x89\xd3\x66\xd7\x7c\x78\x18\x8c\xa1\x2d\x82\x12\x75\x4f\xa4\x30\x82\x94\x4a\xd3\x52\xb0\x3c\x03\xc5\x79\x2a\x81\x21\x46\x36\xe7\xf3\x62\x97\x52\xd9\x95\xda\x55\x9e\x41\xa0\x6d\xdb\x3c\xea\x4f\x16\x65\x7c\x76\xfc\x88\x02\xe2\x22\xbd\x1c\xa6\x41\x5e\x3a\xbf\xaa\xe0\x18\x53\x51\xe8\x84\xdd\x6b\xa1\x2b\xf9\x51\x16\x77\x28\x06\xf5\x65\x6d\x9a\xcd\x37\x91\xaf\x38\x44\x56\x06\x3f\x78\x98\x22\x91\x78\x33\xc7\x5d\x11\x77\x53\x7c\x56\xb7\x6e\x7f\xb3\xfd\x72\x52\x86\xa7\x84\x1c\x22\x51\xe6\x8a\x3d\xc8\xab\xe2\x1e\xd5\xc4\xf2\x2a\x2b\x4f\x4f\xd3\xa2\x8d\x20\x27\xe1\xb3\x69\xd2\xac\x55\x9b\x50\xfb\x15\xe5\xff\x01\x00\x00\xff\xff\x74\xae\xe8\x8e\x48\x19\x00\x00")

func templateTemplateOpenshiftIoOpenshiftDotnetExampleYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftDotnetExampleYaml,
		"Template.template.openshift.io/openshift/dotnet-example.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftDotnetExampleYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftDotnetExampleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/dotnet-example.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftDotnetPgsqlPersistentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x5b\x73\xdb\xb8\x92\x7e\xd7\xaf\xe8\x72\xcd\x96\x93\x5a\x4b\xbe\x64\xb2\x3b\xa3\xa9\x7d\x90\x25\xc6\xd6\xc6\xba\x0c\x49\x27\x33\x3b\x35\xa5\x82\xc8\x96\x88\x35\x49\x30\x00\x28\xdb\x9b\xf5\x7f\x3f\x05\x80\x77\x52\xb2\x9d\xcc\xd4\x39\x7a\x48\xc5\x40\xa3\xf1\x75\xa3\x6f\x40\x93\x24\xf4\x13\x72\x41\x59\x3c\x04\x89\x51\x12\x12\x89\x03\x96\x60\x2c\x02\xba\x91\x03\xca\x4e\x77\xe7\xbd\x3b\x1a\xfb\x43\x70\xb3\xe9\x5e\x48\xd6\x18\x8a\x61\x0f\x8a\x15\x43\xf0\x99\x8c\x51\xf6\x93\xad\xf8\x12\xf6\x13\xc5\x51\x48\x8c\x65\x2f\x42\x21\xc8\x16\x87\xf0\xff\xfd\x1e\x80\x1b\x20\x6c\x58\x18\xb2\x7b\x1a\x6f\x41\x20\xdf\x51\x0f\xdf\x88\xb7\x10\x90\x1d\xc2\x1a\x31\x06\x8f\x23\x91\xe8\x03\x8d\xe1\x91\xa5\x1c\x12\xce\xfe\x17\x3d\x39\x84\x1f\xbe\xce\x47\x33\xeb\xe9\x04\x7e\xf8\x3a\x19\xb9\xa3\xcb\x91\x63\xad\x1c\xcb\xfe\x34\x1d\x5b\x2b\x3d\x33\xe8\xf5\x00\x3e\x30\x0e\x11\xe3\x08\x34\xde\x30\x1e\x11\x49\x59\x0c\x64\xcd\x52\x09\xa9\x50\x9b\xca\x80\x8a\x02\xf7\x09\xd0\xd8\x0b\x53\x5f\x4d\x2c\x12\x8c\x1d\x25\x34\x78\x2c\x16\xd4\x47\xae\x17\x8b\x13\x10\x88\x10\x48\x99\x88\xe1\xe9\xe9\x96\xca\x20\x5d\x0f\x3c\x16\x9d\x72\xf4\x03\x22\xfb\x3e\xee\x30\x64\x09\xf2\x53\x71\x41\xfb\x46\x0f\x1e\xe3\x38\xe8\x45\x28\x89\x4f\x24\x51\x9a\x22\x71\xcc\xa4\x61\xa8\xfe\x04\xf0\x51\x78\x9c\x26\x52\x6b\x7e\x14\x03\x3e\x90\x28\x09\x11\x06\x73\xcb\x85\xb1\x92\x80\x24\x49\x48\x3d\x23\xc1\x3d\x95\x01\x10\x58\x32\x21\xb7\x1c\x9d\x5f\x6f\x40\x31\x5e\x13\x81\x03\x25\xb2\xe6\x08\x7f\xb5\xe0\x19\xd7\x6f\x15\x5f\xad\xa5\x1e\x8b\xc7\x21\x11\x62\xa8\xff\x9b\xcd\xeb\xa9\x9a\x91\xf9\x54\x24\x21\x79\xec\xc7\x24\xc2\x61\x45\x07\xff\x5e\x15\xf9\xcd\xb2\xb0\xab\xb7\x9a\x85\x24\x5b\x31\x84\x2f\x29\xf5\xee\x84\x24\x5c\x9e\x54\xd8\x77\x1b\xb3\xcf\xbc\x34\xc2\xd8\x9c\x44\x3f\xe5\xe1\xf0\x1b\x44\x3b\xc0\x3f\xe1\x6c\xa7\x34\xd8\xaf\x0b\x64\xa3\x0f\xd7\x44\x9e\xc0\x34\xf6\x06\x07\x96\x8b\x34\x49\x18\x97\x75\x60\xc4\xf3\x50\x88\x81\x01\xa5\xf0\xf5\x00\x0c\xdb\x7d\x4e\x67\xe6\x45\x42\x3c\x1c\x96\x7a\xee\xb1\xb5\xf2\x24\x31\xec\xf5\xa1\xea\xf6\xbb\xf3\x1e\x80\x71\x71\x07\x3d\xae\xf5\x57\x35\xdd\x7c\xb7\xcc\x01\x7b\x00\x42\x72\x1a\x6f\x27\xc5\xbc\xc7\xe2\x18\x3d\xd9\x37\xe3\x43\xb8\x66\x42\xfe\xd7\x3e\x37\xfd\x65\x92\x59\x6e\x95\xc2\xcc\xdc\x0a\xe4\x6a\xaf\xea\xcc\xad\x63\xd9\x4f\xbf\x2c\x89\x10\xf7\x8c\xfb\xd5\x99\xe5\xc8\x71\x3e\x2f\xec\xc9\x93\xf1\xa7\x8c\x6b\x3f\xc9\x48\x87\xd0\x49\x7b\x40\x76\x1d\x8d\x5a\xc2\xb7\x3c\xb7\xe1\xbb\xd6\x43\xc2\x04\x0a\x20\xb1\x0f\x21\x23\x3e\xac\x49\x48\x62\x0f\x05\xc8\xa0\xee\xc4\x09\xf3\x45\xe1\x53\x7a\xb3\x01\x09\x93\x80\x34\x4c\x14\x13\x8c\x7d\x8c\x3d\x8a\x62\x08\xc7\x7f\x7c\x3d\x52\x2a\x39\x1a\xc2\xd1\x3e\x8d\x1e\xe5\x9e\x0a\x70\xa4\x64\x51\xb4\x99\x34\x47\x4f\x7f\x1e\x77\x1f\x61\x82\x9e\x11\x47\x19\x5c\x26\x59\x3f\x23\xbb\xc7\x75\xc6\x51\x4d\x0e\xe1\xa7\xb3\x9f\xce\xb2\x01\x49\xf8\x16\xe5\xb2\x3e\x2c\x30\x44\x4f\x32\x9e\xeb\xa7\xbe\xd9\x5e\x8d\xdb\x2c\x95\x6d\x7d\xef\x47\x1a\x30\xa1\xf3\xc0\x68\xb9\xbc\x99\x8e\x47\xee\x74\x31\x5f\x4d\x16\xb3\xd1\x74\x6e\x4c\x40\xb2\x1c\x40\xf3\x44\x5f\x01\x6a\x1a\x91\x2d\x3a\x92\x23\x89\x5e\x6d\x0a\x1f\x11\x13\x01\x92\x13\xef\x0e\xd8\x06\xbc\x80\xc4\x5b\x14\x2a\x95\x35\x4d\x81\xaa\x5d\x3a\xc4\xdd\x0b\xeb\x32\xa5\xa1\x3f\x66\xf1\x86\x6e\x5f\x0d\x6b\x82\x1b\x1a\xa3\x80\x80\xdd\x83\x64\xb0\x56\xac\x9a\x88\x9e\x51\x3d\x4b\x65\x92\xca\x9c\x7b\xa9\xe8\x0e\xad\xb9\x64\x5b\x4c\xd6\x18\x0e\x55\xbc\x13\x32\x33\x3a\x21\xc7\x2c\x8a\xa8\x1c\xc2\x57\x73\x7a\x82\xa5\xdc\xc3\x9c\xb1\xc7\x62\x89\x0f\x72\x42\xb9\x5a\x3f\x5e\xcc\x5d\xeb\x37\x77\x35\x99\xda\x4f\x19\xc1\x96\xca\x12\x04\xc7\x8d\x22\x73\x16\xb7\xf6\xd8\x5a\xd9\xd6\x72\xe1\x4c\xdd\x85\xfd\xfb\xca\xb6\x3e\x3c\x15\x54\x29\xa7\xdd\x54\xb7\xf6\x4d\x4e\x25\x1f\x13\x1c\xc2\x15\x35\x30\x85\xe4\x44\xe2\xf6\x31\xdf\xc9\x60\x74\x1a\xa3\x00\x18\xef\xca\x3f\x72\x2f\x9a\x2c\xdc\xb9\xe5\xae\x1c\x77\x64\xbb\xb7\xcb\xd5\xd2\x5e\xfc\xb7\x35\x76\x0b\x32\x80\x1d\x09\x53\xad\x9e\x6e\xca\xa7\xbd\x1c\x27\x1f\x57\x9f\x2c\xdb\x99\x2e\xe6\x87\xb8\x95\x54\x7b\x39\x8d\x1c\xc7\x9a\x5d\xde\xfc\xae\xe3\xc8\x01\x5e\x35\xba\xbd\xdc\xe6\xcb\xd9\xca\x5d\x2c\x6e\x9c\x03\x9c\x0a\x9a\xbd\x5c\x5c\xcb\x71\x73\x15\x1c\xe2\x54\xa3\xdb\xcb\x6d\xbc\x98\x7f\x98\x5e\xdd\xda\x3a\x5a\x1c\xe0\x56\xa3\xdb\xcb\x6d\x79\x7b\x79\x33\x75\xae\xdb\x7c\x8e\x24\x4f\xf1\x68\xdf\x32\xdb\x72\xdc\x85\x6d\xad\x8c\xe5\x1d\x12\xaa\x41\x59\x02\xd9\x70\x16\x0d\x2b\x0b\x0f\xba\x5d\xe9\x78\x19\xdb\xe9\x6c\x74\x65\xad\x1c\xd7\xb6\x46\xb3\x95\x3b\xba\x7a\x6a\x90\x66\xa5\x82\x71\x54\x67\x39\x1a\x5b\x75\x7f\x70\xb4\xdd\x9b\x20\xcb\xe9\x76\x8b\xbc\xc8\x18\x86\x40\x03\x19\xeb\x78\x57\x1b\x37\x11\xab\x36\x61\xea\xac\x52\x16\xa1\x6b\x0e\xb5\xf9\xd5\xd4\xbd\xbe\xbd\x5c\x7d\xb6\x2e\xaf\x17\x8b\x8f\x2b\xc7\x1a\xdb\x96\xdb\x72\xcc\xeb\x74\xbd\x3f\x4c\x4e\x30\x09\xd9\xa3\xaa\xf0\xfe\x9a\x58\xe9\x6b\x7e\xad\xf0\xad\xd2\x37\xf2\x67\x62\x26\x47\xbd\x40\x0c\xe1\xfc\x05\x59\x12\x3a\xc2\x0d\x47\x13\x70\x44\x11\x24\x01\x38\x0b\x43\x1a\x6f\x97\x84\x93\x48\x94\x5a\xa4\xb1\x44\xbe\x23\xa1\x83\x1e\x8b\xfd\x62\x4f\xf5\x8b\xc8\x83\x93\x72\x75\x07\xbb\x78\xff\x6f\xd5\xd1\xdb\x98\xec\x08\x0d\xc9\x3a\x6c\xcc\x49\x1a\x21\x4b\x65\xc1\xeb\x3f\xce\xce\xca\x20\x9a\xf8\x44\xe2\x12\x39\x65\x7e\x6b\x33\x73\x48\xb6\x81\x58\xab\x73\x73\xa4\xf5\xd3\x50\xbf\xf2\x36\xd9\x34\xde\x7a\xb0\xe9\x1a\x2d\x95\x0d\x59\xce\x20\x34\x2e\x8c\xd3\xd8\x5b\x2d\x36\x97\xae\x39\x36\x35\x2b\x65\xb1\xa3\xab\xd6\x0a\x49\xe6\x96\x1f\x1a\x2e\x57\x1a\xeb\x47\x7c\xb4\x71\xd3\x9c\x03\xb8\xc3\xc7\x61\xa3\x18\x6e\xd1\x74\x0b\x07\xa6\x22\x18\xc2\x31\x1c\x57\x06\x43\xba\xc3\x18\x85\x58\x72\xb6\xc6\xfa\x7e\xea\x76\x70\x85\xb2\x09\x22\x21\x32\x18\xc2\x69\x73\xb4\x59\xc6\x15\xf2\x78\x01\x2a\x3c\xd7\xae\xbb\xac\x4d\xd1\x98\x4a\x4a\xc2\x09\x86\xe4\xb1\x38\xe6\x1f\xeb\xcb\x9b\x66\x72\x7e\xd6\x3a\xc4\xfd\x37\x94\x2a\x34\x51\x3f\xa0\xe2\x1c\x97\x5d\xb0\x39\x12\x9f\xfe\x0b\x29\xe5\xfc\xb0\x52\xde\xd5\xb1\xe7\x0e\x5d\x5b\x13\xd2\x88\x4a\xd1\x44\x1d\x61\xc4\xf8\xa3\xb2\x95\x99\x35\x53\x65\xca\xcd\x74\x36\xcd\xe2\x61\x33\x0a\xd3\x32\xfe\x36\x23\x03\x49\x25\x8b\x88\xa4\xde\x10\x54\x92\x6a\x7b\xcb\x5c\x25\x80\xaa\xc7\x3c\x77\x68\xdf\x98\x8b\x5a\x45\x20\xbc\x26\x79\xec\x0d\xf9\xe5\xa3\xc0\x27\x16\xa6\x11\x8e\x43\x42\xdb\xa5\x7b\x91\x10\x3b\x6f\x50\xb5\xb8\x6d\xee\xdb\x33\xe6\x63\xa1\x5e\x1b\x89\xff\x99\x53\x89\x8b\x38\x4b\x83\xad\x93\xe4\xf8\x25\x45\x51\x3d\x45\x21\x19\xd7\x3e\xfd\xc3\xd7\x4f\x8b\x9b\xdb\x99\xb5\x1a\x8f\x96\xa3\xf1\xd4\xfd\xfd\x6f\xbc\x85\xaa\x4c\x95\x5f\x85\xbb\xd2\xd4\x0b\xe4\xef\xb8\x10\x26\xe6\x11\x46\x7c\x09\x6b\xf7\xc2\xf7\x3f\xbe\xbb\xe8\xb8\x17\x16\xc3\xfb\x32\xde\x1e\x10\xff\x8c\xac\x9e\xeb\xea\xb5\x4a\x7a\x69\x72\xdf\xcb\xaa\x9d\xed\xb3\xe4\x89\xe6\x05\xf4\xbb\xb3\xe7\x81\x9d\x5f\x4c\xf6\x1d\xf9\x75\xb9\x70\xdc\x2b\xdb\x72\x7e\xbd\xd1\x4f\x38\xed\xf4\x5a\xdb\x5c\xbf\xf2\x1c\xe6\x92\x3f\xe1\xfc\x65\x89\xba\xf5\x62\xf4\xe2\x5c\xdd\x81\x2e\x97\xe4\x19\x39\x5f\xc0\x69\x36\xfa\x4d\xdd\x46\xe6\xd6\x58\x5d\x45\x9c\x6e\x86\xfb\xe9\x9f\xe1\xee\x5c\x8f\x6c\x6b\xb2\xba\xbc\xfd\xf0\xc1\xb2\x9f\x67\x5e\x27\xff\x9e\x7a\xa5\x33\x77\xbe\x6b\xe4\x4e\x2f\x71\x98\x77\xd7\x91\xc0\x9b\xe1\x26\xa3\x6f\x16\x20\x2d\x37\x68\x05\x2e\x78\x51\xc9\xd1\xd8\xe9\x50\xc9\x81\x0f\x55\x17\x31\x3f\x8f\x45\x11\x89\xfd\xe6\x70\x1f\x4e\xd7\x34\x3e\x15\x41\x6b\xbc\x4f\xdb\x43\x5e\x6b\x28\x11\x5f\x42\xe8\x07\x70\x7e\xf1\x9f\x83\xb3\xc1\xd9\xe0\x1c\xfa\xb7\xf5\xe3\xd2\x6e\x04\xfd\x2f\xd0\xf7\xeb\x13\xb9\x01\x3e\xb5\x6c\xbc\xef\xc1\xb1\x63\xdd\x58\x63\x17\xce\x8f\x9f\x3f\xb1\xf7\x2f\x3e\x80\xef\xab\x75\x2a\xd8\x2b\x65\x8f\xf9\xed\x74\x9e\x9f\xb1\x34\x6e\x1e\x63\xa4\xc6\x96\xa6\xda\xdb\x11\x7e\x1a\xd2\xf5\xa9\x2e\x63\x4e\x95\xb3\xd7\xf6\x3c\x1c\xff\xfa\x35\x7a\xb3\xa1\x68\x3f\xf1\xbc\x6c\x39\x40\xd2\x55\xa3\xd4\x75\xe0\xa9\xa1\xf9\xf3\x41\xf9\x6f\xad\xfc\x3a\xdc\xe5\x9b\x8a\xbd\x92\xcf\xf0\xe7\xc1\xfb\xc6\x74\xab\x2f\x91\xd9\xd2\xcb\x6b\xc1\x44\x09\x8a\x52\x6b\xa1\x5f\xcf\xf4\x6e\x80\x7a\x13\x20\x42\xd0\x6d\x8c\xbe\xca\xf7\x24\x0c\x81\x6d\x74\xbe\xdf\x70\x16\x4b\x8c\x7d\xc8\x9a\x21\xe0\xeb\xd2\xc0\x37\x8f\xb4\x95\x0e\xd9\xa0\x07\x90\x35\x71\xcc\xa9\xa8\x7f\x8b\xce\x4b\xf6\x5e\xa6\x8a\x3e\xca\xd1\x2f\x14\x9c\xc5\xd0\x28\x15\xd4\x53\xf5\x1f\x36\xf1\xcd\xc8\x03\x8d\xd2\x08\x88\x36\x55\x85\xca\x98\xbe\x06\x57\xf6\xbd\x8a\x23\x02\x8f\xc4\x90\x8a\x36\x9c\x99\x59\x76\xa3\xdc\xa9\x80\x55\xbd\x28\x1c\x80\xf7\xfe\xfc\x62\x46\x5f\x85\xac\xd2\x85\x7b\x1d\x34\x78\x53\x2e\x7d\xdb\xc4\xd9\x74\xf2\xd7\x42\x36\xce\x04\xda\xa0\xa0\x78\xcb\x80\x0d\xe3\x3a\xb9\x9f\x00\x0e\xb6\x03\xb3\xf4\x04\x2e\xae\x68\x13\x68\xb6\x7e\x4c\x12\xe2\x51\xf9\x58\xc0\x6b\x94\xeb\x07\x60\x9d\x5f\xb5\x40\x29\x0b\xd4\x4e\xa9\x0a\x3c\x24\x11\x48\xb2\x85\xfb\x80\x7a\x01\x50\xa1\xf4\xe5\xd7\x1f\xe1\x3d\xe6\xb7\x55\xa8\x2d\x41\xd3\xe8\xfa\xbd\xf6\x9a\xd8\x7c\xcc\x3b\x00\xcf\xdc\xe4\x86\x17\x83\xb3\x2e\x94\x65\xe3\x77\x9e\xbb\x25\xdc\x07\xc8\xb1\x34\xc6\x0c\x42\xd5\xdf\x55\x60\xa7\x3e\x8a\x4e\x07\xd1\x4c\x6a\x5e\xa2\x5f\x13\x0f\x40\x2c\xc3\x40\x07\xc2\x5b\xfb\x26\x77\x5c\x8e\x09\x13\x54\x2a\xc3\xd2\xcd\x70\xfd\x71\x40\xed\x4d\x4e\x67\x9b\x6e\x75\x5e\x51\x09\x76\xc9\xe0\xd6\xbe\x29\x30\x76\x76\x03\x0e\xe0\x7d\x69\xbb\x98\x88\x44\x5d\xa2\xcb\x48\xd0\xc7\x87\xc1\x96\xb6\xc4\x74\x50\x66\x81\x87\x01\x81\x35\x27\xb1\x17\x68\x68\x27\xda\x70\x18\x07\x26\x03\xe4\xc0\x71\xa3\x54\xa1\xc5\xae\xe8\x82\xea\x21\x73\x09\xe2\x08\x31\x2b\xdb\xfd\xa8\x62\x1b\x49\x43\x99\x71\xdd\xa3\x95\x0d\x72\x8c\x2b\x87\xd6\xd9\x44\x29\xe5\xe7\x18\x9e\x5e\x0c\xce\xfa\xd9\xf7\x0a\x87\xc4\x31\xc7\x16\x12\x49\x77\xa8\xdf\x60\xd4\x60\xf5\xa3\x0e\x85\x9e\x4a\xe5\x16\x0a\x77\xd6\x26\xe3\x8c\x65\x1f\x08\xb4\xa4\x6d\x49\x30\x36\x5d\x22\x98\x50\xae\x6f\x5f\xa5\x0b\x57\x3a\x46\x87\x35\x9e\x43\xd9\xd0\x10\xe1\x8d\x0e\x18\x9e\x50\x83\x6f\x95\xee\x09\x6c\x98\x76\x80\x2c\xea\x29\xcd\x12\x50\x0a\x0e\x4d\x7e\xaa\x2e\x6f\xc1\x73\x24\xe1\x32\x4d\x60\x69\x88\x9a\x8e\xdc\xee\x0c\x65\x3a\x16\x5a\xb5\xe2\x74\xa6\x8c\xc7\xe9\x4a\x23\x55\x19\x3c\x9d\x1a\xd3\xcc\x6d\xf3\x33\x77\x26\x1f\x61\x67\xee\xd2\x03\x70\x15\xa9\x0a\xd7\x6b\x04\xa1\x96\x32\x30\xe5\x89\xba\xe0\xd1\x0d\xf5\x72\xd2\x13\x38\x3e\x86\x37\x21\xbb\x47\x21\xf3\x31\xad\x88\x63\xf3\x6e\x73\x0c\x6f\x02\xba\x0d\xaa\xb3\x6d\xa9\x27\x1f\x21\xbb\xc5\xb7\x24\xae\x74\xae\xf6\x49\x74\x1f\x60\xd6\x2f\x15\x02\xa3\x75\xf8\x68\xf2\x39\x15\xc0\x76\xc8\x39\xf5\x7d\x8c\x73\x5b\x79\x91\xf6\x47\x19\x9f\x26\x98\x7a\xf3\xeb\xa0\x91\x98\xd8\x28\x50\x15\x1e\x12\x7d\x08\xa9\xd0\x19\x32\x4e\x22\x90\x8c\x85\x02\x62\x44\xdf\x44\xf6\x24\x5d\x87\x54\xb4\xbd\x6d\x9e\x44\xe0\x2a\xda\x26\x8e\xb2\x6d\xf6\x4d\x18\xd4\xb1\xe4\x8a\xd0\xa4\x3c\x55\xe7\xbc\x51\x65\x44\x86\x85\xc6\xdb\x16\x1c\xb7\xba\xac\x09\xa9\xde\x83\x7b\x81\xed\x99\x10\xfc\xc6\xc6\x10\x89\xc0\xd3\x09\xae\xd3\x6d\xdb\x32\xc6\x55\xea\xe6\x9e\xcd\x4e\x5d\xe6\x0b\x19\xcb\x43\x20\x32\xbb\x30\xf6\x3f\x4f\xaf\x50\x0e\x0c\xae\x2c\x27\x74\xa4\x2a\x45\x04\x09\xf1\xee\x74\x9e\x36\x54\x4d\x40\xcd\xae\x5d\x47\x7e\x42\xfd\xea\xe6\xeb\x2f\x13\xb4\x95\xca\x80\x48\xb8\xa7\x61\x08\x9c\xa5\x12\xf3\x28\x58\x16\x76\xd9\x87\x1f\x27\x2a\xf4\x85\x98\x15\xbf\xeb\x90\xc4\x77\x40\x8c\xc8\x66\xf9\xba\xf0\x64\xf4\x5b\xf0\x47\x95\xb4\x77\x9d\x6d\x5d\xa0\x6f\x7f\x1d\xd1\x44\x3e\xca\x5e\x47\xb2\xef\x78\x8a\x9a\xa4\x1e\x48\x4c\xab\x0d\xee\x71\x1d\x30\x76\xd7\x95\x3c\xd4\xf4\x67\x33\x5d\x7e\x39\xa4\xef\x0b\x70\xfc\x07\xe9\xff\xdf\xa8\xff\x3f\x67\xfd\x9f\xff\xfc\xfa\xe3\xd9\x93\xba\x59\x6e\x31\x46\xae\x3f\x16\xc4\x87\x84\xa3\xa8\x05\x88\xce\xde\x9f\x02\x5e\xdd\x33\xff\x72\x28\x7f\x25\xad\xd7\xe4\x9d\x97\xa6\x03\x99\xbc\x72\xd9\xd9\xb7\x4f\xfe\x41\x52\x21\x57\x2a\x90\xff\x91\xcb\xf5\xee\xe9\x39\xa9\x6a\xef\x5b\x7b\x77\x59\x96\xef\x4f\x1d\xda\xfb\xe9\x79\xe5\xb5\x3e\x73\xda\xbb\x55\xb7\xc2\x5e\x75\x9b\xa9\x55\xfa\xd9\x9d\xa1\xe0\x5f\x76\xd5\x4a\x77\x3a\xf8\xb6\x95\xf7\xcf\xcf\xcf\xce\x8e\x9a\xdc\x9d\x80\x70\xf4\xe1\x32\xdd\x6c\x90\xc3\x48\xdf\x4b\xba\xb8\xb6\xde\xb4\xf2\xe2\xfc\x62\x76\xd9\xfb\x47\x00\x00\x00\xff\xff\x48\xb2\x13\xec\xe1\x2a\x00\x00")

func templateTemplateOpenshiftIoOpenshiftDotnetPgsqlPersistentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftDotnetPgsqlPersistentYaml,
		"Template.template.openshift.io/openshift/dotnet-pgsql-persistent.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftDotnetPgsqlPersistentYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftDotnetPgsqlPersistentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/dotnet-pgsql-persistent.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftDotnetRuntimeExampleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x5b\x6f\xe3\x36\xf6\x7f\xf7\xa7\x38\x28\xfe\x40\xe6\x0f\xc4\xce\x64\xb6\x05\xba\x7a\xf3\xd8\x9a\xc4\x9b\xf8\x02\x49\x69\xb7\x5b\x14\x06\x2d\x1d\x5b\xdc\xc8\xa4\x4a\x52\xce\xa4\xdd\x7c\xf7\x05\x2f\xb2\x75\x75\xe6\x86\xdd\xf5\x43\x60\x93\x87\x87\xbf\x73\x3f\x3c\x21\x39\xfd\x09\x85\xa4\x9c\x79\xa0\x70\x9f\x67\x44\xe1\x88\xe7\xc8\x64\x4a\xb7\x6a\x44\xf9\xd5\xe1\x7a\xf0\x48\x59\xe2\x41\xe4\xb6\x07\x7b\x54\x24\x21\x8a\x78\x03\x00\xc2\x18\x57\x44\x51\xce\xa4\xfe\x09\x90\xa0\x8c\x05\xcd\x95\xe1\x38\x66\x80\x1f\xc9\x3e\xcf\x10\x46\x0b\x3f\x82\x09\x17\x08\x41\xc1\x14\xdd\xe3\x71\x87\xe4\x79\x46\x63\xc3\x63\x64\x58\xd0\x98\xb3\x49\x46\xa4\xf4\xcc\xd7\x61\xc2\x15\x43\x65\xb6\x6a\xc8\x12\x2a\xf3\x8c\x3c\x0f\x19\xd9\xa3\xd7\x71\x81\x6f\x2f\x30\x07\x15\xd9\x49\x0f\x7e\x2f\x68\xfc\x28\x15\x11\xea\xd2\x32\xbd\x1c\x95\x9c\xbb\x85\x4f\x78\x5c\xec\x91\x59\x09\x87\x85\xc8\x3c\x48\x95\xca\xa5\x77\x75\xb5\xa3\x2a\x2d\x36\xa3\x98\xef\xaf\x04\x26\x29\x51\xc3\x04\x0f\x98\xf1\x1c\xc5\x95\x7c\x47\x1d\xea\x98\x0b\x3c\xc3\x3f\x17\xfc\x40\x13\x14\xc3\xba\x2c\x01\x26\x70\x4b\xd4\x25\xcc\x58\x3c\x3a\x73\x5c\x16\x79\xce\x85\xaa\x03\x23\x71\x8c\x52\x8e\x2c\x28\x8d\x6f\x00\x60\xd9\x5a\x48\x43\x61\xf5\x33\xc4\xa3\x7e\xf4\xb6\xcc\x49\x8c\xde\x49\xc3\x03\xbe\xf9\x27\xc6\x4a\x7a\x83\x21\x54\xbd\xe4\x70\x3d\x00\xb0\x1e\x11\xf0\x42\xe9\xe3\x55\x87\x28\xef\xfa\xbf\x3f\x17\xe3\xb9\xff\x32\x00\x90\x39\xc6\x76\x27\xe5\x52\xe9\x9d\xf1\x6a\x75\x3f\x9b\x8c\xa3\xd9\x72\xb1\x9e\x2e\xe7\xe3\xd9\xe2\xc5\x0a\xc9\x2d\x5d\xc9\x3f\x44\x71\xa0\x31\xba\xb5\x3a\xdf\x5e\x50\xa7\x43\x75\x58\x2d\x4f\x6d\xf8\xaa\xff\x31\xe7\x12\x25\x10\x96\x40\xc6\x49\x02\x1b\x92\x11\x16\xa3\x04\x95\xd6\x9c\x14\x72\x9e\xc8\x57\x24\xd5\x56\x71\xd7\x0c\x1d\xd9\x13\x6e\xdc\xb5\x7a\xd3\x83\x1f\xdf\xfe\xf8\xd6\x2d\x28\x22\x76\xa8\x56\xf5\x65\x89\x19\xc6\x8a\x0b\xef\xf3\xc4\x9f\xed\xc9\x0e\x43\x25\x90\xec\x3f\x5b\x05\x77\x88\xb9\x04\x25\x48\xfc\x08\x7c\x0b\x71\x4a\xd8\x0e\x25\x50\xd6\x52\x81\x73\x21\xa0\xfa\xb6\x0e\x5d\xfc\x97\xe1\x6d\x0a\x9a\x25\x28\xfa\xe0\x0d\xcd\x7e\x3f\xc8\xf7\x7a\x7b\xc2\xd9\x96\xee\x3e\x1b\xe4\x14\xb7\x94\xa1\x84\x94\x3f\x81\xe2\x16\x49\x13\x5f\x2f\xa2\xaa\x0b\xf1\x42\xe5\x85\x2a\xef\x38\x85\x46\x87\x26\x23\xb2\x3b\x6e\x76\xb0\xf5\x74\xe2\x90\x36\xcd\x49\x5e\x88\x18\x4b\x5e\x31\x67\x0a\x3f\xaa\x29\x15\xfa\xc8\x64\xb9\x88\xfc\xbf\x47\xeb\xe9\x2c\x78\x71\x04\x3b\xaa\x4e\xf7\x0a\xdc\x6a\xb2\x70\xf9\x10\x4c\xfc\x75\xe0\xaf\x96\xe1\x2c\x5a\x06\xbf\xac\x03\xff\xc3\xcb\x91\xaa\x10\xb4\x9b\xea\x21\xb8\x2f\xa9\xd4\x73\x8e\x1e\xdc\x50\x87\x49\x09\xa2\x70\xf7\x5c\xde\x64\x31\x86\x8d\x55\x00\x64\x87\xd3\x8f\x32\xac\xa6\xcb\x68\xe1\x47\xeb\x30\x1a\x07\xd1\xc3\x6a\xbd\x0a\x96\x7f\xf3\x27\xd1\x91\x0c\xe0\x40\xb2\xc2\x68\xa4\x9b\xf2\xa5\x97\xe3\xf4\x6e\xfd\x93\x1f\x84\xb3\xe5\xe2\x1c\xb7\x13\x55\x2f\xa7\x71\x18\xfa\xf3\xf7\xf7\xbf\xac\xb5\x4d\xce\xf0\xaa\xd1\xf5\x72\x5b\xac\xe6\xeb\x68\xb9\xbc\x0f\xcf\x70\x3a\xd2\xf4\x72\x89\xfc\x30\x2a\x55\x70\x8e\x53\x8d\xae\x97\xdb\x64\xb9\xf8\x30\xbb\x79\x08\x4c\x4a\x3f\xc3\xad\x46\xd7\xcb\x2d\xf0\xc3\x68\x19\xf8\x6b\xeb\x42\xe7\xd0\x35\x28\x7b\x39\xae\xc6\x93\xbb\x36\x9b\xef\x94\x28\xf0\xbb\xe3\xfa\x56\xf0\xbd\x57\xa1\x3a\x1b\x66\xa7\x40\x73\x57\xbc\x7f\x98\xdd\x4f\xd7\xb3\xf9\xf8\xc6\x5f\x87\x51\xe0\x8f\xe7\xeb\x68\x7c\xf3\xd2\x38\xe0\x8a\xac\x0d\xcf\x70\x35\x9e\xf8\xf5\x90\x08\x8d\xeb\xdb\x62\x28\xe8\x6e\x87\xe2\x58\x45\x2c\x81\x81\x33\x31\x99\xaf\xb6\x6e\xb3\x55\x6d\xc3\x36\x28\x27\x89\x24\xc6\x02\x4d\xfd\xbd\x99\x45\xb7\x0f\xef\xd7\x3f\xfb\xef\x6f\x97\xcb\xbb\x75\xe8\x4f\x02\x3f\x6a\xc5\xe6\x6d\xb1\x29\x39\x21\x43\x41\xe3\x4e\x56\xfe\xc2\x0f\x66\x93\xf3\xbc\xec\xf1\xff\x48\xbe\x8d\x53\xe2\xea\x41\xad\x44\x19\xe3\x9a\x65\x9b\x5c\x5c\x5e\xee\xab\x0f\xee\xec\x37\xcf\xc7\xfd\x99\x38\xe1\xf1\x23\x8a\x2d\xcd\xd0\x83\x7f\x0d\x8f\xa7\x3f\x04\xcb\x79\xc5\xdd\x1f\x16\xd1\x6c\xee\x9f\xf1\xb2\xf1\x74\xaa\x0b\xcd\x48\x11\x31\xda\xfd\x01\x23\xb7\x61\xe4\x3c\xea\x6f\xf8\xa5\xae\xde\x53\x53\xf4\x27\x27\x2a\x95\xd5\xec\x9c\xa0\x54\x94\x19\xc3\x99\xf2\x32\xaa\xf0\xb3\xa2\xaf\x88\x4a\x3d\xb8\xe2\xb9\xba\x22\x79\x3e\x14\x9c\x9b\x2f\x0e\x7b\x67\x65\xb0\x5a\x6a\x57\x86\xaf\x0b\xdd\xd7\xd5\xfa\x69\xc1\x3b\x35\xe8\xbe\x4d\xf0\xd2\x13\xe9\x57\x8b\xd9\x6b\xb6\x36\xaa\xde\x10\x9d\x62\x9e\xf1\x67\xfd\x14\xfa\x36\x71\x9a\x18\x7e\xad\xc6\x4d\xa2\x38\x38\x15\xbe\x1e\x91\x02\xcd\x41\xe9\xc1\xf5\x27\x74\xcc\x5d\xfe\x64\x15\x10\xf0\x2c\xa3\x6c\x57\x7b\x67\x95\x14\x75\x21\xf5\x27\x23\x1b\xcc\xa4\xd7\xa7\xe7\xee\xc0\x2f\x3b\x9b\x23\x76\x70\xdd\x17\xa1\xec\xe8\x26\xd6\xf2\xba\xcb\x81\x5f\x7f\xab\xf0\x37\xbe\xe0\xc1\x05\x5c\x54\x16\x33\x7a\x40\x86\x52\xae\x04\xdf\x60\x15\x0d\x98\x87\xe0\x0d\xaa\xfa\xa2\x0d\x51\x0f\xae\x9a\xab\xcd\xc7\x48\xf9\x91\x71\x8a\x5a\x82\xdb\x28\x5a\xd5\xb6\x28\xa3\x8a\x92\x6c\x8a\x19\x79\x0e\x31\xe6\x2c\x91\x1e\x7c\x5f\x3f\xae\x6d\xc5\x0b\x75\xdc\xbe\xfe\xa1\xa5\xaf\xc6\x63\x94\xe4\xf9\xa0\x8e\xaa\xa6\xe3\xe1\x49\x5b\xab\x2e\xc4\x02\x49\x42\xff\x87\xf4\x71\x7d\x5e\x1f\x7f\xa9\x63\xb7\x09\x51\xd6\x11\x66\x74\x4f\x95\x6c\xa2\xde\xe3\x9e\x8b\x67\xed\x58\x73\x7f\xae\xdb\xea\xfb\xd9\x7c\xe6\x0a\x6e\x33\xeb\x54\x92\xc8\x8a\x08\xb2\xaf\x30\x23\x85\xe2\x7b\xa2\x68\xec\x81\xee\x82\xda\x3e\xb9\xd0\x09\xaf\x96\xd0\xfb\xed\xf5\x35\x79\xe9\xb5\x8c\x04\x7d\x79\x32\xd7\x12\xa1\x32\xe2\x0e\xeb\xb9\x26\x4a\xd1\x5c\x02\x44\x4a\xba\x63\x98\xe8\x8c\x43\xb2\x4c\xbf\x1a\x75\xc6\xd9\x0a\xfd\xee\x61\x09\xb8\x11\x07\x24\x26\x39\x25\xf6\x29\x49\xe5\x69\xda\x32\x00\x70\x93\x99\x85\x01\xad\xff\x1e\xc7\x29\xae\x9d\x17\xf8\x7b\x41\x05\x26\x47\x4d\xba\xf6\xb2\x67\xda\xd2\xc0\x3a\x27\x1f\xe9\xbe\xd8\x03\xd9\xf3\x82\x29\x8d\xd0\x5a\xd8\x00\x3d\x5a\x03\x62\xc2\xa0\x90\x6d\x40\x73\x4b\x7c\xaf\x7d\xe5\x08\xac\xea\x19\x67\x00\xfe\x70\xfd\x6e\x4e\xbb\x74\x67\x5b\x26\x69\x4c\x07\x8a\xec\xe0\x29\xa5\x71\x0a\x54\x6a\x08\x46\x99\xa2\x68\x3d\xba\x5b\xd0\xcc\x40\xae\x9c\xc5\x19\x93\x3a\x8e\xd6\x1b\xea\x2d\x7f\x4f\x09\xfe\x64\xf5\x7a\xef\x46\x6f\xbf\x4c\x94\xce\x17\x7a\xb7\x30\x6e\xac\xd0\x04\xdf\xdd\xfa\xbf\x0a\xbd\x0f\xf2\x32\x47\x16\xa6\x74\xab\x8c\xb7\x99\xa6\x03\x9e\x52\x14\x68\x40\x56\xa2\x4a\x27\x0e\x9a\xa0\xec\xf4\x52\x73\xae\xe6\xaa\xa6\x63\x39\x83\xea\x34\xf9\xeb\x00\x85\x66\x3a\x96\x98\x11\x9e\x09\x2d\x95\x12\x05\x4f\x34\xcb\x40\xf0\x42\xa1\xd6\xa4\x86\x77\x9a\xc2\x4a\x3b\x87\xbb\x04\xba\x85\x0c\xb7\x36\xc2\x37\x19\x61\x8f\x40\xec\x95\xf6\xf8\x06\x75\xf8\x91\x22\x53\x98\xb4\x24\x19\x57\x7a\x83\x5b\x77\xf5\x51\xa8\xf6\x18\xb1\x0b\xf9\x43\x70\x5f\xc6\xbd\xc0\x9c\x4b\xaa\x74\xc0\x3c\x51\x95\xc2\x33\x2f\x44\xbd\xfd\xb0\x8f\x83\x98\x27\xed\x48\xbb\xa1\x0a\x82\x13\x83\x87\xe0\xfe\x08\xa4\x73\xd6\x71\x46\xd3\x9f\x3f\x42\x1e\xe2\xc7\xd1\x8e\xb6\x2c\x13\xa2\x72\x09\x8b\x03\x81\x8d\x20\x2c\x4e\x0d\xa6\x4b\xe3\xeb\x5c\x00\x57\x29\x0a\x10\xb8\xd5\x3a\x30\xf2\x56\x94\x40\xcd\x92\x6d\xdf\x04\x02\xe3\x0a\x0a\x49\xd9\xce\x28\xcb\x19\xc5\x71\xed\x51\xc7\x16\x05\xb2\x8a\x9f\x75\xce\x86\x9a\x8e\x6f\x04\xea\x70\xfe\xaa\x34\x85\x44\x20\x20\x8b\x4d\x42\x85\x69\xea\x9e\x4b\x23\x56\x6c\x54\x91\xa5\x09\x6f\x62\x27\x5b\x30\x2d\x8f\x1f\x21\x56\xa6\x5c\x4d\x00\x63\xf7\xb0\xd5\xf9\x42\xab\xa1\x4c\x11\xb1\xa9\x3b\x85\x8b\x40\xfb\x34\x86\x27\xdc\xa4\x9c\x3f\x76\x29\x46\x6f\xff\x6c\xb7\x21\x34\x1c\x07\xae\x48\xc2\xc5\xaf\x64\xf8\xc7\x78\xf8\x8f\xb7\xc3\xbf\xfe\xf6\xe7\xf7\x6f\x5f\x74\x4b\x67\x9e\xd7\xba\xe7\xd4\x51\x26\x50\x4a\x3b\x22\xb4\x70\x3b\xdf\xea\x5f\x08\xdc\xbe\xc3\xfb\x91\xbb\xfd\x6f\x06\xbd\x73\x36\x70\xce\xea\xa6\x38\x73\x33\xba\x75\xa5\x4f\x4b\x63\xdc\xd6\xfc\xd7\xa6\xc8\x21\x17\x5c\xd7\xec\x16\xf8\xd0\xed\xaf\xec\x7e\x33\x47\xb7\xe7\x83\xce\x25\x75\x1f\x73\x06\x51\x5d\x83\x65\x4c\x84\xd3\x3b\x38\xd8\x57\xd2\x08\x22\x4d\xaa\xeb\xf3\x46\x27\x3d\x65\x62\xd1\xbe\x36\x72\x8c\xe9\x96\xc6\x25\xe9\x25\x5c\x5c\xc0\x9b\x8c\x3f\xa1\x54\xe5\xda\xff\xeb\x20\xbd\xb0\x3d\xd0\x05\xbc\x49\xe9\x2e\xad\xee\xb6\xc5\x9c\xde\x81\x7b\x9f\xb5\x44\xac\x0c\x2c\xfb\x24\x7a\x4a\xd1\x15\x6e\x29\x71\xbf\xc9\x9e\x6d\x9f\x44\x25\xf0\x03\x0a\x41\x93\x04\x59\x39\x50\x77\x9a\x86\x2d\xcd\xda\xd9\xb0\x54\xf7\xd8\xf1\x69\x82\xa9\xcf\x3c\xcf\xa6\x2d\x5b\xe1\x24\xea\x86\x4e\x61\x02\x19\x95\xa6\x0f\x62\xf9\x1e\x14\xe7\x99\x04\x86\x98\x58\x87\xce\x8b\x4d\x46\x65\x3b\x1b\x2d\xf2\x3d\x44\x9a\xb6\x89\xa3\x3a\x2d\x75\x16\xdf\xf0\x27\x14\xb0\x2b\xb2\xb3\x86\xef\xc7\xa5\x4d\x55\x2a\x47\x96\xcd\xd0\x06\xb7\xba\xe8\x39\x7c\x94\xed\x5a\x10\xa3\xea\xb1\x26\xcc\xfa\x38\xf6\x13\xfc\xd1\xd6\xab\x37\x01\x66\x48\x24\x5e\x4d\x71\x53\xec\xda\xde\x32\xa9\x52\x37\xef\x6c\x0e\x6d\x9d\x7a\x1c\xcb\x73\x20\x9c\xaf\xd8\x98\x58\x14\x37\xa8\x46\x16\x97\x4b\xce\x1d\x1d\x89\x26\x82\x9c\xc4\x8f\xa6\x1d\xb3\x54\xad\x26\xb0\x31\xf7\xfd\x77\x00\x00\x00\xff\xff\x84\xab\xf5\x33\x9c\x1e\x00\x00")

func templateTemplateOpenshiftIoOpenshiftDotnetRuntimeExampleYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftDotnetRuntimeExampleYaml,
		"Template.template.openshift.io/openshift/dotnet-runtime-example.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftDotnetRuntimeExampleYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftDotnetRuntimeExampleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/dotnet-runtime-example.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftHttpdExampleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x6d\x6f\xe3\xc6\x11\xfe\xce\x5f\x31\x38\x14\xb8\x04\xb0\xa4\xbb\x34\x05\x52\x7e\xd3\xc9\x8a\x2d\xc4\x7a\x81\x24\x37\x6d\x83\xc0\x18\x92\x23\x72\xeb\xe5\x2e\xb3\xbb\x94\xac\xa6\xfe\xef\xc5\xee\x92\x14\x29\xd1\xbe\xbb\xc2\xcd\x7d\x38\x58\xfb\x32\xf3\xcc\x33\xaf\x4b\x2c\xd8\xdf\x48\x69\x26\x45\x08\x86\xf2\x82\xa3\xa1\xa1\x2c\x48\xe8\x8c\xed\xcc\x90\xc9\xd1\xfe\x63\xf0\xc8\x44\x12\xc2\xb6\xda\x0e\x38\x46\xc4\x75\x18\x00\x60\x51\x84\x90\x19\x53\x24\x03\x7a\xc2\xbc\xe0\x14\x40\x23\xe6\x7c\x27\x27\xad\x31\xa5\x10\xfe\x33\x08\x00\xb6\x19\xc1\x4e\x72\x2e\x0f\x4c\xa4\xa0\x49\xed\x59\x4c\xdf\xe8\x6f\x21\xc3\x3d\x41\x44\x24\x20\x56\x84\x86\x12\x60\x02\x8e\xb2\x54\x50\x28\xf9\x2f\x8a\x4d\x08\x7f\xfa\x7d\x31\x9e\x4f\x9f\x87\x41\x00\xf0\xa3\x54\x90\x4b\x45\xc0\xc4\x4e\xaa\x1c\x0d\x93\x02\x30\x92\xa5\x81\x52\x5b\xd1\x26\x63\xba\xc1\x74\x05\x4c\xc4\xbc\x4c\xec\xc6\xb2\x20\xb1\xb1\x56\x42\x2c\x85\x66\x09\x29\x77\x59\x5f\x81\x26\x72\xd8\x75\x38\x1a\xa5\xcc\x64\x65\x34\x8c\x65\x3e\x6a\x68\x19\xd5\x86\x8d\x22\x2e\xa3\x51\x8e\xda\x90\x1a\xad\xa7\xe3\xeb\xf9\x74\x98\x27\xc3\x20\x27\x83\x09\x1a\x74\x1c\x09\x21\x8d\x97\x6c\x7f\x02\x24\xa4\x63\xc5\x0a\xe3\x38\x1f\x0b\xa8\xf8\x81\x71\x81\x71\x46\x70\xbb\xdd\xae\x60\x43\x6a\x4f\x0a\xbe\x71\x8a\xbe\xb5\x3c\x73\x16\x7b\xdb\x4c\x86\xc6\xf1\x45\x1a\xb4\x15\x1c\x3b\xa9\x60\xad\x30\x24\xcc\xf0\x2d\x28\x39\x89\x7c\x5b\x62\xac\x50\x16\x4b\x31\xe1\xa8\x75\xe8\xfe\x1c\xa0\xb3\xdb\x6d\x75\x02\x2f\x61\xba\xe0\x78\x1c\x08\xcc\x29\xec\x61\xa7\xe7\x86\x8c\xcb\x9c\x84\x67\x7b\x50\x2a\x1e\x7e\x19\xda\x4b\x49\x5c\x8a\x74\xd0\x71\xd4\xb6\xcd\x19\x24\xb4\x63\x82\x34\x28\xd2\xb2\x54\x31\x69\x10\x44\x09\x25\x60\x24\x24\xb4\x27\x2e\x8b\x8a\x42\xac\x9c\xd4\xf1\xa1\x73\x5f\x02\xd1\xf1\x15\xa7\xb7\xfd\x82\x10\x95\x8c\x27\x27\xaf\xec\x58\x5a\xaa\xca\xb1\x22\xe9\xc8\x4e\xa8\xe0\xf2\x68\x69\xe8\x1e\x1c\x5e\x5a\x59\x28\xb9\xb7\xee\x1d\x74\xa9\x5e\x53\x02\xb7\x68\xae\x60\x26\xe2\x9e\x5b\xba\x2c\x0a\xa9\x4c\x97\x5f\x8c\x63\xd2\x7a\xa8\x28\xc9\xd0\x58\x9a\xdd\x3d\x83\xa9\x0e\xe1\xb7\x92\xc5\x8f\xda\xa0\x32\x57\xce\x34\xbf\xd5\x5b\x6c\x22\x26\x12\x8c\x38\x85\xf0\x6e\x87\x5c\xd3\xbb\x00\xc0\x83\x3a\xaf\x32\x76\x55\x17\x18\x53\x78\x42\x17\xc8\xc8\x16\x08\x1d\x06\x03\x68\x17\xb6\xfd\xc7\x00\xc0\x17\xb1\x8d\x2f\x34\x01\x40\x3b\x47\x7b\xb2\xf4\x2c\x4f\xa7\x4f\x85\xd4\xa4\x1d\xdb\x5c\x62\x02\x11\x72\x14\xd6\xf1\x26\xa3\x0e\xff\x85\x4c\xb4\x93\xe0\x71\x57\xb5\x2a\x00\xd0\x05\xc5\x5e\xb6\xa5\xaf\x52\x33\xa8\x8e\x1d\x28\xaa\xd4\xda\xcd\x10\x7e\xf8\xf0\xc3\x87\x6a\xc1\xa0\x4a\xc9\xac\xba\xcb\x9a\x38\xc5\x46\xaa\x1a\x6c\x57\xd9\x8b\xe6\xaf\x65\x69\x2e\x8d\x7f\x19\x69\x26\xb5\xab\xb7\xe3\xd5\xea\x6e\x36\x19\x6f\x67\xcb\xc5\xc3\xf5\x72\x3e\x9e\x2d\x9e\xbd\x17\x65\x0d\xe0\x9c\xde\xaf\x00\x35\xcb\x31\xa5\x8d\x51\x84\xf9\x57\xfb\xe5\x27\xa2\x42\x83\x51\x18\x3f\x82\xdc\x41\x9c\xa1\x48\x49\xdb\x96\x71\xee\x17\x66\xb5\xf4\x98\xfb\x22\xac\x4f\x36\xe5\x26\x2e\x85\xbe\x1a\xd6\x75\x55\x1f\x32\x79\xb0\x25\xc1\x65\xef\x39\xa2\xda\xbd\x75\x22\x20\x2f\x32\xec\xa6\xc3\x01\x99\x19\xec\xa4\x1a\x28\xc2\xe4\x18\xc2\x3b\xa3\x4a\x97\x13\xaf\xf9\x4c\x96\xa6\x28\x4d\x0d\xeb\xe4\xa1\x1e\xba\xb7\x98\x36\x9b\x1d\x81\xa1\x45\xa4\x7d\x1b\xf0\x15\x2e\x6c\x77\x99\x27\x73\xcd\x94\x3d\x3c\x59\x2e\xb6\xd3\xbf\x6f\x1f\xae\x67\xeb\xe7\xea\x40\xca\xcc\x49\xa3\xa2\x9d\x3d\xb6\x59\xde\xaf\x27\xd3\x87\xf5\x74\xb5\xdc\xcc\xb6\xcb\xf5\x3f\x1e\xd6\xd3\x1f\x9f\x9b\x53\xa5\x62\xfd\xa7\xee\xd7\x77\xf5\x29\x73\x2c\x28\x84\x1b\x56\x61\x32\x0a\x0d\xa5\xc7\x5a\x93\xc7\xb8\x39\x5b\x05\xd8\x29\x99\x9f\x7e\x7d\x86\x81\x4e\xa9\x09\xbf\x1b\x7e\x7f\xb6\x53\x95\x1b\x4f\xd1\x66\x35\x9e\x4c\xbb\xe0\x36\x0e\x84\xcf\x0b\xc5\xd2\x94\x54\x93\xe4\xfe\x80\xd3\x3b\x71\x21\xda\x59\xf7\x41\xd6\xd9\xf0\xfd\xea\x04\x5d\x53\xac\xc8\xa5\xe2\xcd\x6c\x7b\x7b\xff\xe9\xe1\xe7\xe9\xa7\xdb\xe5\xf2\xa7\x87\xcd\x74\xb2\x9e\x6e\x2f\x58\xba\x2d\xa3\x5a\x12\x09\x52\x2c\xee\x15\x35\x5d\x4c\xd7\xb3\xc9\xeb\xb2\xfc\xf5\x97\xd3\xe4\xba\xe9\x37\x6f\x93\x2b\xbe\x7f\x5d\xa4\xaf\x3e\xf5\xfc\xff\x43\xce\x28\x72\x9a\x74\x08\x1f\xbf\xa0\xbc\xf6\x45\xa0\x67\x6b\x2d\x39\x67\x22\xed\x74\xb8\xfa\x44\x97\x15\xfb\xef\x34\x48\xf7\x26\x61\x7f\x6a\xd6\x11\xdf\x60\xaf\xb3\x12\x99\x68\x22\xce\xbb\x9e\xc4\x3e\x84\x5f\x7e\x6d\xc9\x77\x45\x30\x84\xf7\xf0\xbe\xb5\xc8\xd9\x9e\x04\x69\xbd\x52\x32\xa2\x36\x1a\x70\xa9\x70\x43\xa6\xbb\x08\x50\xa0\xc9\x42\x18\x9d\xaf\x9e\x77\xae\x4a\xa7\x60\x86\x21\xbf\x26\x8e\xc7\x0d\xc5\x52\x24\x3a\x84\x3f\x77\xcf\x18\x96\x93\x2c\xcd\x69\xbb\x3f\x29\x5b\xfd\xbf\xad\xb4\x43\xe1\xe0\x44\xc6\xaa\x0f\x90\x0d\x0b\xf6\x87\x9b\xfb\xc5\xd6\x36\x13\x65\x17\x04\x67\x39\x33\xfa\x1c\x58\x4e\xb9\x54\x47\x1b\x1a\xf3\xe9\xdc\x16\xcc\xbb\xd9\x7c\x56\x25\xf0\x79\x09\x62\xa7\xe2\xb3\x42\x85\x79\x4b\x18\x96\x46\xda\x67\x42\x1c\x82\x4d\x96\xcb\xa8\x5a\xd8\xea\xd7\x8e\xac\x7e\x6f\xfc\x4f\xd5\xb6\xa7\xe3\xc0\xd7\xd4\xcb\xc2\x1a\x43\xc6\x59\x3a\x80\xb3\x99\x9d\x9c\x12\x40\xad\x59\x2a\xfc\x78\x8e\x9c\xdb\x49\xc1\xd6\x97\x9d\x72\x4f\xa6\x04\xaa\xb9\xb1\x1a\xeb\x13\x3f\x3e\xb4\xe6\x7d\x3b\x05\x57\x33\xf2\xc2\x81\xb6\xff\x37\xa3\xa9\xc5\x1f\x58\xcf\xfd\x56\x32\x45\x49\x43\xe2\x1e\x79\x79\x11\xb9\x3d\x10\x4f\x0f\xd1\x45\xdd\x65\xe0\x90\x91\x22\x07\xb2\x45\x9f\x0d\x0e\x96\x90\xee\x85\xe3\xee\x75\x30\xb9\x16\xf5\x0a\xb0\xd3\xdc\x7c\x06\x6a\x8e\x4f\x2c\x2f\x73\xc0\x5c\x96\xc2\x58\xb6\x7c\xa0\x39\x3c\x4d\x50\x40\x8c\x02\x4a\x7d\x49\xce\xdc\x1f\xbe\xb3\x21\xdb\x00\x6a\x07\xe8\x2b\x98\xfe\xf2\xf1\xbb\x39\xeb\x23\xe9\x7e\x7d\x57\xbb\x4d\x51\x21\x35\x33\x56\xc7\x81\x99\xcc\x7f\x1c\xe8\xf4\x0a\x97\x41\x10\xcb\xe4\x12\xdc\x0d\x33\xb0\x3e\x09\xb8\x5f\xdf\x35\x10\x7b\xe7\x8f\xcf\x38\xf6\xb3\x6f\xcb\x61\xca\x2e\xf8\xdd\x90\xa9\xe2\x4b\xda\xa7\x9d\x42\x11\x67\x0e\xc3\x95\x7d\x31\x81\x54\x20\x4d\x46\xca\x4e\x4f\xd6\x66\x67\x5f\xcb\x68\xe6\x96\x7c\x6f\x55\x04\x42\x9e\xde\xf5\xee\x65\x8a\x25\x37\x95\xd4\x17\xcc\xdf\x91\x22\xd1\x8a\x96\xde\xf9\xec\x35\xd4\xde\x0d\x1c\x0d\xdb\x93\x2b\x8f\x76\xb1\xfd\x91\xc6\x82\x64\x06\x98\x76\xf0\xaa\x71\x5c\x49\xe9\x13\xfc\xd2\xa8\x0b\xa0\x13\x3f\x67\xc2\x35\x53\xae\x13\x1f\x1b\xb0\xad\x99\xb3\x2f\x50\xc8\xbd\xd4\x12\xf7\x74\x71\xc9\xef\x3e\x98\x1c\x18\xe7\xa0\xec\xeb\xa7\x86\xef\x1c\x54\x7f\x78\xba\xb2\x78\x39\x55\x1f\x3e\x22\x8e\xe2\x11\xd0\xfb\xd9\x5f\x8d\x1a\x66\x29\xb9\xc0\x3a\x6e\xc5\xde\x6d\xa5\xb6\x81\x7b\xf9\x74\x3a\x47\x7d\xe3\xe2\xa7\x2e\xd8\xd5\x7c\x36\x04\x18\x43\xc2\x76\x3b\x16\x5b\x77\x1a\x09\x69\x49\x5a\xdb\xb9\xc3\xba\x9a\x84\x8d\xee\x04\x50\x43\x81\xaa\x61\xd5\x1a\x76\xa0\x28\x93\xf2\xd1\x86\xf6\x10\x60\x21\x8d\x3d\xac\x8e\x45\x1f\x72\x3f\x29\xc2\xcf\xd5\x95\x8d\x53\x1d\x54\x95\x1c\xde\xff\x82\x83\x7f\x8f\x07\xff\xfc\x30\xf8\xeb\xaf\xbf\x7f\xff\xe1\xd9\x0e\x0d\x6e\x9c\x74\x5f\xf7\xe8\xa9\x50\xa4\xb5\x7f\xc9\x78\x5b\x7b\x67\xd3\x73\x73\xc7\x95\x85\xb5\x29\xa5\xf6\x85\xb9\xfe\x5a\xe1\xcb\x5e\x35\x77\xd6\xd6\x5c\x22\xaf\xf6\xdf\x0c\x7a\xef\x2c\x1c\xfc\x37\x00\x00\xff\xff\x0d\xe3\x02\xb8\x20\x15\x00\x00")

func templateTemplateOpenshiftIoOpenshiftHttpdExampleYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftHttpdExampleYaml,
		"Template.template.openshift.io/openshift/httpd-example.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftHttpdExampleYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftHttpdExampleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/httpd-example.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftJenkinsEphemeralYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\xdd\x6f\xdb\x38\x12\x7f\xf7\x5f\x31\x10\x16\xc8\x1d\x60\xd9\x69\xb7\x7b\x28\xf4\xe6\x3a\x6a\xab\xdd\xd8\x31\x6c\xb5\x8b\xc3\xe1\x60\xd0\xd2\x58\x62\x4b\x91\x02\x49\x39\xf1\xe6\xf2\xbf\x1f\x48\x4a\xb2\xe4\x8f\x24\x2d\xb0\x7e\x4a\xc4\xe1\x7c\xfc\xe6\x93\x43\x4a\xfa\x15\xa5\xa2\x82\x07\xa0\xb1\x28\x19\xd1\x38\x12\x25\x72\x95\xd3\xad\x1e\x51\x31\xde\xbd\x19\x7c\xa7\x3c\x0d\x20\xae\x8f\x07\x8c\x6c\x90\xa9\x60\x00\x40\xca\x32\x80\x6f\xc8\xbf\x53\xae\x7c\x2c\x73\x2c\x50\x12\x36\x80\x96\xd5\x99\x53\xbf\x39\x1b\x14\xa8\x14\xc9\x30\x80\x09\xfc\xee\xa8\x40\xa1\xdc\xd1\x04\x21\x27\x0a\x36\x88\x1c\x12\x89\x44\x63\x0a\x94\xc3\x5e\x54\x12\x4a\x29\xbe\x61\xa2\x47\x00\xb7\x22\x03\xca\xb5\x68\xef\xde\x53\x9d\x0f\xc0\x91\xdd\x95\xc8\x57\xc6\x02\x20\x49\x22\x2a\x6e\x2e\xc4\x39\x82\xae\xb4\x90\x94\x30\x20\x1a\x72\xad\x4b\x15\x8c\xc7\x19\xd5\x79\xb5\x19\x25\xa2\x18\xb7\x86\x8f\x85\xa4\x19\xe5\xe3\x0d\x13\x9b\x71\x41\x94\x46\x39\xc6\x07\x52\x94\x0c\xd5\xb8\x36\x69\xbc\x0c\x27\x37\xb3\x70\x54\xa4\x03\x80\x44\x70\x4d\x8c\x16\x85\x90\x08\x94\x6f\x85\x2c\x88\xa6\x82\x03\xd9\x88\x4a\x43\xa5\x28\xcf\x40\xe7\x54\x1d\x60\x1e\x14\xa8\x49\x4a\x34\xb1\x50\x72\x2e\xb4\xbd\x61\x91\x05\x48\x51\x25\x92\x96\xda\xba\xe6\x7f\xbe\xfd\x06\xc7\x40\x0d\xad\xd5\x46\x40\x69\xbc\xa8\x34\x72\x0d\x4a\x0b\x49\x32\x1c\x0d\xea\x3b\x7f\x4e\x96\xf3\x68\xfe\x29\x80\x09\xdf\x83\x91\x67\x29\x30\x85\x7b\xca\x18\x6c\x10\x98\x50\x1a\xaa\x52\x70\x28\x45\x6a\x04\x6b\x59\x25\x46\xf0\x08\xee\x38\xdb\x43\xa5\xb0\xaf\x3a\x6c\x85\x04\x8d\x4a\x53\x9e\x8d\xac\x14\x9a\x08\x3e\x65\x44\xa9\xc0\xfe\xe9\xd7\x18\xd9\xb3\x5e\x38\xa5\x54\x95\x8c\xec\x7d\x4e\x0a\x0c\x5a\x73\xfe\x11\x36\xe1\xf1\xcf\x33\x57\x44\x52\x15\xc8\x1d\x3a\x7e\x25\x59\xd0\xfa\x2e\x15\x89\xea\x84\xab\x90\xd9\xd8\xe8\xa7\xf4\xd8\x02\xbe\xa6\x05\xc9\x50\x8d\x85\xce\x51\x36\xff\xd4\xaa\x8d\x72\x5d\xb0\x53\x61\x4c\xf0\xcc\xef\x61\x1f\xf7\x2c\x4f\xb1\x64\x62\xaf\x80\xf4\x5c\x81\x12\x12\x52\x92\x0d\xc3\x1a\x73\xb1\x85\x82\x70\x92\x19\xaf\x1f\x82\x71\x41\x4b\x64\x94\x23\x6c\x2a\xca\x52\x05\x84\xa7\xa0\xaa\xb2\x14\x52\xf7\x08\xfd\x0d\x51\x98\x82\x20\x95\xce\x81\x89\x8c\x72\x17\xbf\x47\x41\x90\x08\xbe\xa5\x59\x25\x5d\xa0\x51\xd5\xf8\x95\x72\xe0\x82\xfb\xa7\x21\x31\x04\x25\x9c\x27\x7b\x57\x6b\xb6\x2a\x17\x15\x4b\x4d\x40\x54\x46\xba\xf1\x31\x3e\x94\x28\xa9\x05\x9f\x41\x59\xc9\x52\x28\x54\x20\x38\xdb\x8f\x4e\xa1\x2b\xa5\xd8\xd1\x14\xa5\xdf\xf7\xf1\x12\x53\xf8\x4c\xf4\x10\x22\x9e\x9c\xb9\x55\xdb\xdf\xf7\x2b\x49\x12\x54\x6a\x24\x31\xcd\x89\x36\xa9\x69\xef\x69\x92\x99\xf8\xe2\x4a\x13\xae\x7d\x52\x96\xc3\x43\x98\x39\x59\xe7\x6a\x91\x39\x51\x25\x49\x30\x38\x08\x1e\x88\x8d\x29\x23\x2a\x18\xf8\xd0\x2d\x81\xbb\x37\x03\x00\x57\xee\x96\xa2\xd2\x06\xf0\x6e\x92\x9e\x49\x53\x80\x9c\x94\x52\x3c\xec\x47\xd2\x5c\x90\xfd\xe2\xa9\x69\x81\xa2\xd2\x01\xbc\x2b\x6a\xea\xf3\x45\x16\x1f\x0c\xb2\x7e\x25\xa9\xc3\x20\x18\x8f\x1f\x47\xaa\xc4\x64\x94\x0b\xa5\x9f\xea\xbf\x4b\xa2\xf3\x27\xcb\xc7\x59\xfb\xcb\xe3\xef\xe1\xfc\x8f\x68\xbe\x5a\xaf\xc2\xe5\xd7\x68\x1a\xae\xe7\x93\x59\x68\x28\x0c\xb9\xd3\x4f\xb3\x56\x51\xca\x15\x26\x95\xc4\x30\xcd\x30\x46\x59\x50\x6e\x0d\x59\x08\x46\x93\xbd\xf5\x13\x95\x98\xe8\x56\xd1\x96\x22\x00\x4c\x33\x17\x7c\x5a\x34\xdc\x1c\x4a\x2b\x57\x87\xea\x6f\xcf\xab\x75\x11\xea\x1b\x9b\x53\x26\xca\xa6\x36\x2c\x5f\x83\x7a\x8b\x23\x61\x65\x4e\xfa\x68\xde\x13\xaa\xfd\xad\x90\xbe\x44\x92\xee\x03\xf0\xb4\xac\xd0\xfb\x41\xe0\x24\x96\x8c\x26\x44\x05\xf0\xc6\xfe\xaf\x90\x61\xa2\x85\x0c\x5e\x65\xab\xbd\xa1\x25\xd1\x98\xed\x5b\x95\xf7\xa5\x4d\x07\xd7\xd3\x06\x5d\x2b\x1a\x92\xbe\xd9\xe6\x77\x68\xb6\xcd\xef\x65\xc1\x5d\x33\xcc\xaf\x6e\x4e\x28\x3b\x7c\x7c\x57\xb0\x28\xa3\x9a\xa2\x0a\xe0\xf1\xa9\x23\x02\xf9\xae\x2b\xd1\xaf\x65\xde\x2d\xc2\xf9\xea\x73\xf4\x31\x5e\x87\xf3\xc9\x87\xdb\x70\x7d\x37\xf9\x12\x7f\xee\x10\x02\xec\x08\xab\xac\x76\x5d\x8a\xa7\xd7\xf0\x5a\x86\x37\xd1\x32\x9c\xc6\xeb\xc5\xf2\x6e\xb6\x88\xcf\x71\xed\xf8\xb1\xcf\xec\x26\x5a\x59\x1e\x93\x9b\x59\x34\x8f\x56\xf1\x72\x12\x47\x5f\xc3\xf5\xec\x6e\x1e\xc5\x77\xcb\xd5\x79\x0d\x5f\xb8\x74\x4e\xe9\x3f\xbe\x7c\x08\x97\xf3\x30\x0e\x57\xeb\xd9\x64\x15\x87\xcb\x73\x9c\x9b\x1a\xf6\xbd\xda\xa0\xe4\xa8\x51\x8d\x52\xdc\x92\x8a\xe9\xe0\xdd\xbb\x5f\x9f\xe7\x1a\x2f\xbf\xac\xe2\xf5\x34\x5c\xc6\xd1\xc7\x68\x3a\x89\xc3\xb3\xba\x5f\xc4\xe1\x5c\x48\x9c\x37\xfe\xb9\xe0\xe9\x71\x9c\xdf\x2e\x5e\xc3\xee\x98\xac\xcb\xcb\xf6\xdd\x00\xae\xe0\xea\xf8\xe3\xa2\x62\xac\x29\x3f\xd1\x76\x2e\xf4\x42\xa2\x42\xae\x3b\x74\x8c\xee\x90\xa3\x52\x0b\x29\x36\x18\xf4\xa4\x6f\x09\x65\x95\xc4\x38\x97\xa8\x72\xc1\xd2\x00\xde\xf6\xce\x8d\x23\x3e\xa1\xee\x5f\x02\x30\x55\x34\x80\xb1\x6d\xab\xc7\x47\x42\xea\x00\xde\x5f\xbf\xbf\xee\x1d\x50\x4e\x35\x25\xec\x06\x19\xd9\xaf\x30\x11\x3c\x55\x01\xbc\x7b\xdb\x27\x32\x8d\x52\xa4\xed\xf1\xaf\xff\xea\x1f\xd7\x9d\xa0\x3d\x7f\xfb\xee\xfa\x24\xa7\xbb\x43\x93\xfb\x99\x02\x46\x2f\x98\xff\xf7\x9a\xf7\xeb\x0f\x68\x2f\x51\x89\x4a\x26\xa8\xfa\xba\x30\x5a\x50\xad\x8e\xf5\x2b\xb0\x10\x72\x6f\x82\x66\x16\xce\xee\x96\xff\x5e\xdf\x46\xb3\x28\xee\xc6\x8b\xed\x52\x54\xef\xa7\x82\x6b\x7c\x38\x32\xf0\x99\xaa\x05\x50\x4a\xba\xa3\x0c\x33\x4c\x03\xd8\x12\xa6\xb0\x73\xda\xe9\x67\x33\xf7\xf0\x58\x38\xa4\x52\xdc\x8d\x3b\x87\x3e\x13\x59\xe7\xda\x4e\xb0\xaa\xc0\x99\x79\x43\xa8\x7e\x4d\x2c\xcc\xb7\x9a\xc7\x8e\xc8\x31\xa3\x9b\xf1\xa9\x07\x5f\xa8\xd7\xbe\xa9\xf6\x2d\x79\xca\x55\x93\x0e\x53\x56\x99\x57\xc7\x47\x2a\xd5\x21\x1d\x24\x2a\x4d\xa4\x6e\x68\x26\xec\x9e\xec\x0f\xc2\xea\x37\xc1\xc4\xbd\x78\xe6\xaf\x68\x13\x8d\x79\xbd\xbe\x80\x45\xa9\xf7\x37\x54\xf6\x71\x2f\x30\xa5\x55\x11\x80\xe7\xbd\xb6\x15\x1d\x4c\xd3\x92\x66\x59\xdb\x7d\x7c\x97\xfb\xd3\x9c\x70\xe3\x03\x49\x8a\x8e\x78\x52\x69\x61\x1e\x4e\x49\x00\xa6\xc8\x9d\xb6\x30\x63\x56\x4f\xdd\x63\xc8\xb7\x52\x14\x5d\xd5\xdd\x88\x11\x19\x91\x2b\x2d\x91\x14\x31\xc9\x9e\x31\x21\x9a\x4d\x3e\x85\xeb\x55\xbc\x0c\x27\xb3\x75\x3c\xf9\xf4\x74\x44\x5b\x4f\x92\xbf\x3c\x1a\x1b\x57\x8b\xc9\xb4\x03\x26\x23\x4a\xc7\xce\x56\x4c\x23\x57\xf5\x5a\xbc\x5c\xf7\x8f\x0e\xa6\xd7\x60\xb8\xef\x6e\xf0\xa9\x0f\x2e\x0e\x4a\xab\x9e\x87\x5f\x33\x26\xd5\x31\x51\xbf\x82\x55\x7f\x4e\xb2\xef\x0b\x5f\xd6\x73\x9f\xc4\x2d\x4a\xe4\x09\x8e\x6a\x48\x03\xb8\x7a\xf4\x8c\x60\x2f\xf0\xee\x26\x95\xce\x9b\x09\x71\xd9\x50\x7a\x43\xef\xa0\xa9\x17\x78\xbb\x37\xde\xd0\x6b\xf9\x78\x41\x7b\xdd\x0e\xd3\xde\xd0\x33\x08\x7a\x81\x77\x21\x62\xbc\xa7\xa7\xab\x57\x4c\x69\x67\xe0\xc9\xa4\xa8\x4a\x17\x1a\xc0\x2b\xc6\x3a\x53\x3c\xc3\x0f\x94\xa7\x94\x9f\x4e\x95\xcf\x4a\x59\x63\x4a\x0d\xc2\x52\x30\x5c\xe2\xb6\x7b\xa3\x3e\x51\x55\xf3\x86\x30\x6e\xbc\xe0\xa0\x9f\x9e\x89\x0f\x83\xf5\x05\xa5\xcf\x75\xdc\xc3\xd8\x67\x4a\x7d\x9b\x6f\xee\x0e\xc9\x0e\x9d\x95\x8b\x14\x17\xb6\x1b\x34\x75\xdc\xf5\x86\xdf\xae\xaf\xaf\xdb\x2f\x52\x68\x91\x08\x16\x40\x3c\x5d\x34\x41\x4c\x64\x86\x7a\x71\x44\xfb\x13\xa3\x31\x2a\x63\xf1\x64\xbb\x35\xcd\x67\x1f\xc0\x5c\xf0\x7a\x22\x76\xe9\xe0\xaa\x5f\xb4\xf8\x71\x80\x2e\x27\xc1\xb9\xa7\x42\x8a\x25\xf2\x14\x79\x62\xdb\xc9\xd5\x7f\x1e\xeb\x10\x05\xef\x1c\xc4\xde\xb0\xcd\x75\xaf\x2d\x06\x86\xd8\x1b\x42\x1d\xea\xe0\xd5\x8a\x79\x4f\xff\xbd\x3a\x92\xdf\x93\x4c\xf9\x56\x12\xb7\x69\xa9\x24\xfe\xe4\x23\xe5\x8c\x9b\xef\x71\xf3\x82\x93\xdf\xbf\xd6\xc3\xed\xa4\xf0\x77\x3a\xb8\x34\x1d\x00\xb5\x6d\x0f\x3e\x1c\x6d\x5e\xd0\x8a\x02\xb1\x05\x9d\x63\x67\x91\x52\x63\x0c\xee\xdd\xec\x76\x15\x86\xa2\xb3\x19\x71\xed\x62\x34\x00\xa8\xd7\x11\xf3\xde\xc6\xa9\xe1\x60\xbe\xb6\xeb\x83\x0b\xf3\x73\x3d\xe6\x36\x9d\xe6\x05\x2d\x9b\x1d\x66\xbb\x44\xa9\xf7\x87\x8a\x91\x1d\x42\x22\x8a\xa2\xe2\x34\xb1\x11\x7a\x51\x3b\x13\x7a\x17\x54\x3c\x33\x90\xf7\xf5\xf3\xbf\x71\x56\x1e\x2b\xf9\x67\x8e\x3a\x47\x09\x5a\x00\x72\xb2\x61\x08\xb6\xa2\x77\x20\xa5\x5c\x63\xe6\xf6\x41\x23\x88\xb6\x6e\x7e\x1a\x3a\x8b\x4c\x3e\x25\x2e\xbb\x5c\x65\x83\x2b\x92\x16\x94\x5f\xb5\x2b\xc4\x7a\x86\xa4\x7f\xd9\xb5\xa2\xce\xed\xbd\x92\x28\x75\x2f\x64\x0a\x57\xcd\x5f\x57\x27\x16\x87\x5d\x6d\x28\x6f\x10\x68\xed\x3d\x7a\x69\xf6\x5f\x40\x47\x46\xce\xc8\x03\x2d\xaa\x02\x88\x1d\xcd\xec\x0e\xce\x0e\x9b\x56\x99\x36\x24\x20\x21\xdc\x38\xe7\x44\x95\x99\x23\xbe\x35\x63\x6b\x2b\xbf\x3b\xa4\x1e\xe4\xff\xf6\xe6\xed\x8c\x9e\x0b\x84\x03\x9e\xf3\xa6\x3e\xc0\x7d\x8e\x12\x7b\xe1\xd9\x99\x46\xcc\x4c\x47\x53\x54\x17\x43\xa1\x4b\xdb\xf2\x6c\xd5\x6b\xa7\x90\x83\x6e\x87\x25\xd7\xe5\x18\x28\x51\x6e\x85\x2c\x1a\x7c\x8c\xef\xb9\xa2\x3b\x1c\x42\x29\x94\xa2\x1b\xb6\x07\xc5\xc4\xfd\x10\xd4\x9e\x27\xb9\x14\x9c\xfe\x75\xd8\x14\xb6\xfe\x6d\x54\xfc\x52\xa6\x44\x23\x4c\x91\x6b\x94\x20\x38\xd8\x29\x75\x04\x26\x8c\x8c\xa3\x86\x47\xb9\x29\x11\x2a\x77\xa5\x10\x9c\x6a\x21\xeb\xc2\x9d\x82\xa2\x1a\xe1\x9e\x48\x4e\x79\xa6\x9a\x53\x20\x12\x0d\x36\x26\x50\xd2\x13\x9c\x6e\xdc\xc1\x89\x29\x60\x23\x94\xda\x25\x8c\xf9\xb7\x66\x76\x88\xac\x97\x97\x06\x4d\xb0\xd9\x54\x38\x89\xb6\x79\x27\xe7\xfb\xe3\xa5\x41\xb8\xbb\x45\xed\x5a\x6f\x67\xdf\xd7\x38\xdb\x8d\xa9\xfd\xba\x74\x3c\x9c\x9e\xe4\x7e\xf0\x76\xf0\xff\x00\x00\x00\xff\xff\x30\xfa\x6d\x1a\xd2\x19\x00\x00")

func templateTemplateOpenshiftIoOpenshiftJenkinsEphemeralYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftJenkinsEphemeralYaml,
		"Template.template.openshift.io/openshift/jenkins-ephemeral.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftJenkinsEphemeralYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftJenkinsEphemeralYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/jenkins-ephemeral.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftJenkinsPersistentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\xdd\x6f\xdb\x38\x12\x7f\xf7\x5f\x31\x10\x16\xc8\x8b\x65\x27\x69\xf7\x50\xe8\xcd\x75\xd4\xd6\xbb\xf1\x07\x6c\xb5\x8b\xe2\x70\x30\x68\x69\x2c\xb1\xa5\x48\x1d\x49\x39\xf5\xe6\xf2\xbf\x1f\x48\x4a\xb2\xe4\x8f\x24\x2d\xb0\x7a\xb2\xc9\xe1\xcc\x6f\x3e\x38\x33\x1c\x52\xd0\x2f\x28\x15\x15\x3c\x00\x8d\x79\xc1\x88\xc6\x81\x28\x90\xab\x8c\x6e\xf5\x80\x8a\xe1\xee\xa6\xf7\x9d\xf2\x24\x80\xa8\xda\xee\x31\xb2\x41\xa6\x82\x1e\x00\x29\x8a\x00\xbe\x21\xff\x4e\xb9\xf2\x0b\xc3\x47\x69\xe4\xba\x07\x0d\xaf\x73\xdb\x7e\xbd\xd9\xcb\x51\x29\x92\x62\x00\x23\xf8\xc3\x91\x81\x42\xb9\xa3\x31\x42\x46\x14\x6c\x10\x39\xc4\x12\x89\xc6\x04\x28\x87\xbd\x28\x25\x14\x52\x7c\xc3\x58\x0f\x00\xee\x45\x0a\x94\x6b\xd1\x9c\x7d\xa0\x3a\xeb\x81\x23\x9b\x17\xc8\x57\x46\x07\x20\x71\x2c\x4a\x6e\x0e\x44\x19\x82\x2e\xb5\x90\x94\x30\x20\x1a\x32\xad\x0b\x15\x0c\x87\x29\xd5\x59\xb9\x19\xc4\x22\x1f\x36\xaa\x0f\x85\xa4\x29\xe5\xc3\x0d\x13\x9b\x61\x4e\x94\x46\x39\xc4\x1f\x24\x2f\x18\xaa\x61\xa5\xd3\x70\x19\x8e\xee\xa6\xe1\x20\x4f\x7a\x00\xb1\xe0\x9a\x18\x14\xb9\x90\x08\x94\x6f\x85\xcc\x89\xa6\x82\x03\xd9\x88\x52\x43\xa9\x28\x4f\x41\x67\x54\x1d\x0c\xdd\xcb\x51\x93\x84\x68\x62\x8d\xc9\xb9\xd0\xf6\x84\xb5\x2d\x40\x82\x2a\x96\xb4\xd0\xd6\x39\xff\xf3\xed\x1a\x1c\x1b\xaa\x6f\xb5\x86\x83\x75\x41\x69\x21\x49\x8a\x83\x5e\x75\x60\x36\x8f\xc2\x00\xbe\x8a\x12\xf2\x52\x69\xc8\xc8\x0e\xdb\xe4\x3b\xc1\xca\x1c\x15\x90\x1d\xa1\x8c\x6c\x18\x36\x96\x8e\x59\x69\xd4\x06\x2d\xa0\x54\x78\x0c\xdd\xb0\xa6\xb1\xe0\x63\x46\x94\x0a\xec\x4f\xbf\xb2\x8b\xdd\xeb\x04\x51\x42\x55\xc1\xc8\xde\xe7\x24\xc7\xa0\x56\xe1\x0c\x99\x88\xcb\x1c\xb9\xb3\x82\x5f\x4a\x16\x34\x3e\x4a\x44\xac\x5a\x81\x29\x64\x3a\x34\x38\x94\x1e\x5a\xc3\xae\x69\x4e\x52\x54\x43\xa1\x33\x94\xf5\x9f\x0a\xce\x20\xd3\x39\x3b\x15\xc6\x04\x4f\xfd\x8e\x8d\xa3\xb6\x86\x90\x60\xc1\xc4\x5e\x01\xe9\x98\x1c\x25\xc4\xa4\x30\x76\xaa\xcc\x2b\xb6\x90\x13\x4e\x52\xe3\xdd\x43\xd0\x2d\x68\x81\x8c\x72\x84\x4d\x49\x59\xa2\x80\xf0\x04\x54\x59\x14\x42\xea\x0e\xa1\xbf\x21\x0a\x13\x10\xa4\xd4\x19\x30\x91\x52\x3e\x38\x45\x5a\x48\xb1\xa3\x09\x4a\xbf\x6b\xc6\x25\x26\xf0\x89\xe8\x3e\x4c\x78\x7c\xe6\x54\x25\xae\x6b\x46\x12\xc7\xa8\xd4\x40\x62\x92\x11\x6d\x22\xde\x9e\xd3\x24\x35\x2e\xe4\x4a\x13\xae\x7d\x52\x14\xfd\x83\x27\x9d\xac\xb3\x97\xdc\x6c\xa9\x82\xc4\x18\x1c\x24\xf7\xc4\xc6\x5c\x4f\x15\xf4\x7c\x68\x27\x97\xdd\x4d\x0f\xc0\x25\x92\xa5\x28\xb5\xb1\x5e\x3b\xf8\xcf\x84\x3f\x40\x46\x0a\x29\x7e\xec\x07\xd2\x1c\x90\xdd\xb4\xa4\x69\x8e\xa2\xd4\x01\xbc\xcd\x2b\xea\xf3\xe9\x0b\x7f\x14\x42\xa1\x5f\x4a\xea\x8c\x10\x0c\x87\x8f\x03\x55\x60\x3c\xc8\x84\xd2\x4f\xd5\xef\x82\xe8\xec\xc9\xf2\x71\xea\xfe\xf6\xf8\x47\x38\xfb\x73\x32\x5b\xad\x57\xe1\xf2\xcb\x64\x1c\xae\x67\xa3\x69\x68\x28\x0c\xb9\xc3\xa7\x59\x03\x94\x72\x85\x71\x29\x31\x4c\x52\x8c\x50\xe6\x94\x5b\x45\x16\x82\xd1\x78\x6f\x1d\x45\x25\xc6\xba\x01\xda\x50\x04\x80\x49\xea\x22\x49\x8b\x9a\x9b\xb3\xd2\xca\xdd\xef\x6a\xed\x79\x58\x17\x4d\xbd\x68\xdc\xf5\xc5\x5e\xf3\x31\x23\x34\x3f\x31\xfd\xeb\x75\x76\xe1\x33\x15\x09\x56\xba\xfb\xb0\x44\x92\xfc\x25\xa9\xc6\x39\xaf\xd0\x4a\x54\xa2\x94\x31\x36\xe6\x91\xf8\xdf\x12\x95\x6e\xfe\x43\x9d\xa3\x8c\xd0\x2f\xf3\xfb\xcf\xd3\x70\x3d\x1e\x2d\x46\xe3\x49\xf4\xf5\x19\x65\xee\xec\x85\x34\xf9\x61\x2c\xf8\x96\xa6\xaf\x09\xa1\x26\x28\x08\x2b\x32\xd2\x0d\x8d\x07\x42\xb5\xbf\x15\xd2\x97\x48\x92\x7d\x00\x9e\x96\x25\x7a\x3f\x69\x11\x89\x05\xa3\x31\x51\x01\xdc\xd8\xff\x0a\x19\xc6\x5a\xc8\xe0\x55\x8e\x73\xb6\x90\x44\x63\xba\x6f\x20\xef\x0b\x7b\xb9\x5d\xe1\xeb\xb5\xb5\xa8\x49\xba\x6a\x9b\xef\x50\x93\xeb\xef\x65\xc1\x6d\x35\xcc\x57\x55\x30\x94\x2d\x3e\xbe\xcb\x76\x94\x51\x4d\x51\x05\xf0\xf8\xd4\x12\x81\x7c\xd7\x96\xe8\x57\x32\xe7\x8b\x70\xb6\xfa\x34\xf9\x10\xad\xc3\xd9\xe8\xfd\x7d\xb8\x9e\x8f\x3e\x47\x9f\x5a\x84\x00\x3b\xc2\x4a\x8b\xae\x4d\xf1\xf4\x1a\x5e\xcb\xf0\x6e\xb2\x0c\xc7\xd1\x7a\xb1\x9c\x4f\x17\xd1\x39\xae\x2d\x3f\x76\x99\xdd\x4d\x56\x96\xc7\xe8\x6e\x3a\x99\x4d\x56\xd1\x72\x14\x4d\xbe\x84\xeb\xe9\x7c\x36\x89\xe6\xcb\xd5\x79\x84\x2f\x1c\x3a\x07\xfa\xcf\xcf\xef\xc3\xe5\x2c\x8c\xc2\xd5\x7a\x3a\x5a\x45\xe1\xf2\x1c\xe7\x3a\x23\x7f\x2f\x37\x28\x39\x6a\x54\x83\x04\xb7\xa4\x64\x3a\x78\xfb\xf6\xcd\xf3\x5c\xa3\xe5\xe7\x55\xb4\x1e\x87\xcb\x68\xf2\x61\x32\x1e\x45\xe1\x59\xec\x17\xed\x70\x2e\x24\xce\x2b\xff\x5c\xf0\x74\x38\xce\xee\x17\xaf\x61\x77\x4c\xd6\xe6\x65\x8b\x76\x00\x57\x70\x75\xbc\xb8\x28\x19\xab\x73\xe9\x64\x3b\x13\x7a\x21\x51\xb9\x12\x54\x7f\x8c\xee\x90\xa3\x52\x0b\x29\x36\x18\x74\xa4\x6f\x09\x65\xa5\xc4\x28\x93\xa8\x32\xc1\x92\x00\x6e\x3b\xfb\xc6\x11\x1f\x51\x77\x0f\x01\x98\x92\x10\xc0\xd0\xd6\xe4\xe3\x2d\x21\x75\x00\xef\xae\xdf\x5d\x77\x36\x28\xa7\x9a\x12\x76\x87\x8c\xec\x57\x18\x0b\x9e\xa8\x00\xde\xde\x76\x89\x0a\x94\x54\x24\xcd\xf6\x9b\x7f\x75\xb7\xab\xb2\xd6\xec\xdf\xbe\xbd\x3e\xb9\xd3\xed\x2e\xcb\x7d\x26\x81\xd1\x0b\xea\xff\xb3\xea\xbd\xf9\x09\xf4\x27\x75\xc1\x7d\x8c\xe6\x54\xab\x63\x7c\x39\xe6\x42\xee\x4d\xd0\x4c\xc3\xe9\x7c\xf9\x75\x7d\x3f\x99\x4e\xa2\x76\xbc\xd8\x92\x4b\xf5\x7e\x2c\xb8\xc6\x1f\x47\x0a\x3e\x93\xb5\x00\x0a\x49\x77\x94\x61\x8a\x49\x00\x5b\xc2\x14\xb6\x76\x5b\xc5\x79\xea\x5e\x27\x0b\x67\xa9\x04\x77\xc3\xd6\xa6\xcf\x44\xda\x3a\xe6\xba\xe8\xa9\x79\x68\xa8\x6e\x4e\xcc\xcd\x5a\xc5\x63\x47\xe4\x90\xd1\xcd\xf0\xd4\x83\x2f\xe4\x6b\xdf\x64\xfb\x86\x3c\xe1\xaa\xbe\x0e\x63\xd7\xa3\x7f\xa0\x52\x1d\xae\x83\x44\xa5\x89\xd4\x35\xcd\x88\x3d\x90\xfd\x41\x58\xf5\x70\x18\xb9\x67\xd1\xec\x15\x65\xa2\x56\xaf\x53\x17\x7e\x02\x2f\xb4\xde\x1b\xad\x3e\xe4\xc8\x63\x66\xe9\x65\x34\x5a\xd2\x34\x6d\x4a\x94\xef\x12\xc4\x38\x23\xdc\x38\x4a\x92\xbc\x85\x91\x94\x5a\x98\x27\x58\x1c\x80\xc9\x84\xa7\x75\xce\x48\xeb\xe8\x74\xec\x97\xad\x14\x1d\x94\xae\x0f\x99\x18\x91\x2b\x2d\x91\xe4\x11\x49\x9f\x29\xb9\x93\xe9\xe8\x63\xb8\x5e\x45\xcb\x70\x34\x5d\x47\xa3\x8f\x4f\x47\xb4\x55\xef\xfc\xdb\xa3\x51\x6f\xb5\x18\x8d\x5b\x16\x67\x44\xe9\xc8\xe9\x8a\xc9\xc4\xa5\x46\xcf\xeb\xb4\x08\x93\x83\xea\x95\x31\xdc\xba\xeb\x8e\xaa\x8d\x8b\xdd\xd4\xaa\x13\x06\xaf\xe9\xa5\xaa\xc0\xa9\xde\xd3\xaa\xdb\x4c\xd9\x17\x8c\x2f\xab\x4e\x57\xe2\x16\x25\xf2\x18\x07\x95\x49\x03\xb8\x7a\xf4\x8c\x60\x2f\xf0\xe6\xa3\x52\x67\x75\x4f\xbc\xac\x29\xbd\xbe\x77\x40\xea\x05\xde\xee\xc6\xeb\x7b\x0d\x1f\x2f\x68\x8e\xdb\xe7\x83\xd7\xf7\x8c\x05\xbd\xc0\xbb\x10\x2c\xde\xd3\xd3\xd5\x2b\x5a\xb9\x33\xe6\x49\xa5\x28\x0b\x17\x1a\xc0\x4b\xc6\x5a\xef\x16\x86\xef\x29\x4f\x28\x3f\x6d\x3d\x9f\x95\xb2\xc6\x84\x1a\x0b\x4b\xc1\x70\x89\xdb\xf6\x89\x6a\x47\x95\xf5\xab\xc9\xb8\xf1\x82\x83\x7e\xf9\x15\x70\x78\x4a\x5c\x00\x7d\xae\x2c\x1f\x7a\x43\x53\x0f\x9a\xfb\xe6\xce\x90\xf4\x50\x7e\xb9\x48\x70\x61\x4b\x46\x9d\xec\x5d\x01\xf9\xfd\xfa\xfa\xba\x59\x91\x42\x8b\x58\xb0\x00\xa2\xf1\xa2\x0e\x62\x22\x53\xd4\x8b\x23\xda\x5f\xe8\x9f\x51\x19\x8d\x47\xdb\xad\xa9\x50\xfb\x00\x66\x82\x57\x6d\xb3\xbb\x0e\x2e\x45\x4e\x16\x3f\x6f\xa0\xcb\x97\xe0\xdc\x7b\x22\xc1\x02\x79\x82\x3c\xb6\x35\xe7\xea\xdf\x8f\x55\x88\x82\x77\xce\xc4\x5e\xbf\xb9\xeb\x5e\x93\x0c\x0c\xb1\xd7\x87\x2a\xd4\xc1\xab\x80\x79\x4f\xff\xb9\x3a\x92\xdf\x91\x4c\xf9\x56\x12\xa5\x65\x19\xeb\x52\xe2\x2f\xbe\x64\xce\xb8\xf9\x01\x37\x2f\x38\xf9\xdd\x6b\x3d\xdc\xb4\x13\xff\xa4\x83\x0b\x53\x01\x50\xdb\xf2\xe0\xc3\xd1\x6c\x07\xad\x28\x10\x5b\xd0\x19\xb6\x46\x35\x95\x8d\xc1\x4d\x0a\x12\xd8\x0a\x69\x29\xea\xa9\x4f\x53\x2e\x06\x3d\x80\x6a\x02\x33\x6b\xcf\xb1\x1a\x0e\x66\xb5\x99\x98\x5c\x68\xb2\xab\x5e\xb8\xae\x34\x2f\xa0\xac\xa7\xa1\x65\x0d\xac\x9a\x44\x2a\x46\x76\x08\xb1\xc8\xf3\x92\xd3\xd8\x46\xe8\x45\x74\x26\xf4\x2e\x40\x3c\xd3\xb5\x77\xf1\xf9\xdf\x38\x2b\x8e\x41\xfe\x95\xa1\xce\xdc\x5c\x10\xb9\x9d\x18\xda\x8c\xde\x32\x29\xe5\x1a\x53\xe9\x60\xc1\x64\xeb\x9a\xac\xbe\xd3\xc8\xdc\xa7\xb8\x1e\x26\x98\xcc\x06\x57\x24\xc9\x29\xbf\x82\x07\xca\x18\x6c\xb0\x6e\x34\xe9\xdf\x98\xb8\xe1\xa6\x39\x57\x10\xa5\x1e\x84\x4c\xe0\xaa\xfe\x75\x75\xa2\x71\xd8\x46\x43\x79\x6b\xce\xe8\xf4\x3d\x7a\x8e\x76\x9f\x49\x47\x4a\x4e\xc9\x0f\x9a\x97\x39\x10\xdb\xbf\xd9\x29\x9f\xed\x48\x2d\x98\x26\x24\x20\x26\xdc\x38\xe7\x04\xca\xd4\x11\xdf\x9b\xde\xb6\x91\xdf\xee\x64\x0f\xf2\x7f\xbf\xb9\x9d\xd2\x63\xf1\xae\x4d\x02\x9b\x14\x5a\xa3\x59\x13\x02\x26\x3d\xf5\x01\x07\xe9\xc0\x1d\xed\xc3\xed\x47\x7a\x02\xa0\x62\x30\x26\x05\x89\xa9\xde\x37\x18\x8e\xc6\x2d\x3d\x37\x9d\xa1\xd2\xf4\xc2\x55\x97\x54\xe1\xba\xf9\x78\x82\x2a\xea\x5c\x9c\x59\x9d\xb5\xe0\x21\x43\x89\x9d\x4b\xd3\xea\x91\x4c\x3b\x4a\x13\x54\x17\x03\xb4\x4d\xdb\xf0\x6c\x00\x37\xbd\xd1\x01\xd9\x61\xd8\x78\x39\x32\x0b\x94\x5b\x21\xf3\xda\x6b\x26\x22\xb9\xa2\x3b\xec\x43\x21\x94\xa2\x1b\xb6\x07\xc5\xc4\x43\x1f\xd4\x9e\xc7\x99\x14\x9c\xfe\x6d\xe3\xd5\x46\x66\x13\x75\x35\xc4\xcf\x45\x42\x34\xc2\x18\xb9\x46\x09\x82\x83\x6d\xb0\x07\x60\x82\xdb\x58\xad\x7f\x94\x31\x24\x42\xe9\x8e\xe4\x82\x53\x2d\x64\x55\x4e\x12\x50\x54\x23\x3c\x10\xc9\x29\x4f\x55\xbd\x0b\x44\xa2\xb1\x8d\xf1\x71\x72\x62\xa7\x3b\xb7\x71\xa2\x0a\xd8\x7b\x43\xed\xfc\xc8\xfc\xad\x98\x1d\xe2\xfd\xe5\x79\x47\x7d\x05\xec\x05\x3d\xb9\x03\xb3\x56\x26\xea\x36\xbd\xc6\xc2\x9b\x56\x5a\x6a\x6b\x6f\x3b\xf2\xd7\x38\xdb\x35\xcf\xdd\x6c\x79\xdc\x32\x9f\x64\xa4\xe0\xb6\xf7\xff\x00\x00\x00\xff\xff\xd8\x72\x81\x4b\xb4\x1a\x00\x00")

func templateTemplateOpenshiftIoOpenshiftJenkinsPersistentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftJenkinsPersistentYaml,
		"Template.template.openshift.io/openshift/jenkins-persistent.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftJenkinsPersistentYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftJenkinsPersistentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/jenkins-persistent.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftMariadbEphemeralYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x6f\x6f\xdb\xbc\x11\x7f\xaf\x4f\x71\x30\x02\xb8\x05\x22\x29\x6e\xf1\x3c\xc3\x04\x14\x83\x1b\xfb\xd9\x8c\xc5\x8e\x67\xa7\x2d\x9e\x15\x45\x40\x4b\x67\x8b\x2b\x45\xaa\x24\xe5\xd4\xcb\xf2\xdd\x07\x8a\xfa\x2f\x3b\x73\xbb\x60\x2f\xa6\x57\x36\x79\xe4\xfd\xee\xf8\xbb\x3b\x1e\x49\x4a\x3f\xa2\x54\x54\xf0\x00\x34\x26\x29\x23\x1a\x3d\x91\x22\x57\x31\xdd\x6a\x8f\x0a\x7f\x3f\x72\xbe\x52\x1e\x05\x70\x57\x4c\x3b\x8c\x6c\x90\xa9\xc0\x81\x6a\x45\x00\x09\x91\x94\x44\x1b\x17\xd3\x18\x13\x94\x84\xb9\xe5\x9c\x93\xa0\x52\x64\x87\x01\xfc\xcb\x75\x00\xee\x62\x84\xad\x60\x4c\x3c\x50\xbe\x03\x85\x72\x4f\x43\x7c\xa5\x5e\x43\x4c\xf6\x08\x1b\x44\x0e\xa1\x44\xa2\x31\x02\xca\xe1\x20\x32\x09\xa9\x14\xff\xc0\x50\x07\x70\xf1\x38\x19\xdf\x8d\xdf\x8f\xd7\xd3\xfb\xf5\x74\xf5\x71\x76\x3d\xbd\x5f\x8c\xe7\xd3\x27\xcf\x71\xa0\xfc\x3e\x28\x94\x9c\x24\x68\xa4\xe7\xbf\xaf\xff\x76\x73\xff\x61\x3d\x5d\x3d\xd5\x02\x4b\xa2\xd4\x83\x90\x51\x2d\xb0\x1c\xaf\xd7\x9f\x6e\x57\x13\x2b\x34\x21\x9a\x6c\x88\x42\x58\xb4\x76\x29\x35\xe7\x42\xd7\x82\x73\x0c\x35\x15\x1c\x3e\xac\x6e\x02\x48\x0e\xea\x1b\x0b\x7c\xff\x14\xc0\xe0\xed\xdb\xab\x5f\x7d\x83\xf2\x37\x21\x21\x11\x12\x81\xf2\xad\x90\x09\xc9\xf7\x20\x1b\x91\x69\xc8\x94\xf1\x88\x8e\xa9\xaa\xfc\x7a\x09\x94\x87\x2c\x8b\xcc\xc4\x6d\x8a\x7c\x6d\x0e\x05\x42\xc1\x15\x8d\x50\xe6\x8b\xd5\x25\x28\x44\x88\xb5\x4e\x55\xe0\xfb\x3b\xaa\xe3\x6c\xe3\x85\x22\xf1\x55\xc8\x84\xdc\xf9\xe5\xc9\x84\x82\x6b\x42\x39\x4a\x7f\xc3\xc4\xc6\x4f\x88\xd2\x28\xfd\xd1\x95\xf7\xc6\x97\x42\x68\x3f\x53\xd2\x57\x31\x91\xe8\x57\x92\xae\x0a\x25\x4d\xb5\xf2\x73\xfb\xfc\xd5\x74\x3c\x99\x4f\xbd\x24\xf2\x9c\x04\x35\x89\x88\x26\x86\x04\x84\x73\xa1\x2d\x96\x20\xf7\x60\x84\x76\x5d\x4e\xaa\xfc\xd0\xcd\x37\x37\x38\x26\xef\x21\x2a\xfd\x5b\x9c\xfd\x25\x3c\x50\x1d\x1b\x07\xa4\x86\x88\x4a\x23\xd7\xa0\xb4\x90\x64\x87\xde\xff\x8b\xbf\x0a\x1f\x7c\x1a\xaf\x16\xb3\xc5\x9f\x03\x18\xf3\x43\xee\x88\xdc\x50\x8c\xe0\x81\x32\x06\x1b\x04\x26\x94\x86\x2c\x15\x1c\x52\x11\x19\x47\x6a\x99\xe5\x3c\xf3\xe0\x96\xb3\x03\x64\x0a\xdb\x16\xc3\x56\x48\xd0\xa8\x34\xe5\xbb\x5c\x09\x0d\x05\xbf\x66\x44\xa9\x20\xff\xe9\x16\xe6\xe4\x73\xad\xb8\x8e\xa8\x4a\x19\x39\xb8\x36\x58\xca\xd3\x79\x35\x2d\x03\xf8\xf5\x91\x25\x22\xcc\x12\xe4\xf6\xb0\xdd\x4c\xb2\xe0\x7f\xeb\xc7\x3e\x22\x26\xf8\xce\x6d\xf1\xed\xae\xe5\x9d\x54\x8a\x3d\x8d\x50\x81\xf1\x34\xe1\x11\x61\x82\x63\x65\xac\x61\x20\xca\xe2\x6c\x0c\x0b\x81\xd4\xf4\x2c\xb2\x90\x67\x53\x56\x35\x4c\x15\x70\xa1\xcb\x73\x33\x07\xd5\x63\xed\x65\xb1\xa3\x12\x40\xf8\x01\x24\x2a\x4d\xa4\x06\xb1\x05\x1d\x57\xb4\xb7\x47\x2e\x51\x65\x4c\x9b\x4c\x47\x18\xb3\x8c\xd8\xa0\x61\xaf\x21\x42\x47\x75\xb1\xab\x39\xaf\x4b\x43\x04\x69\x7f\x11\x1e\x41\x5a\xe4\x34\x20\x12\x21\x8c\x85\x42\x0e\x7b\x4a\x20\x25\x92\x24\xa8\x51\x2a\x78\x88\x91\x5b\x77\x98\x64\x5f\x46\x4e\x89\xd4\x62\xf2\xfa\x0e\x2e\x1c\x28\xdd\x36\x5d\x56\x18\xc1\x5f\x88\xbe\x84\x19\x0f\x8f\xac\x52\x59\x9a\x0a\xa9\xdb\x14\x21\x61\x88\x4a\x79\x12\xa3\x98\x68\xc3\x94\x7c\x9d\x26\x3b\x15\x54\x36\x5e\xd6\x74\xb5\x8a\x7a\x75\xa5\x98\x51\x29\x09\x31\xa8\xb5\x3a\x62\x63\x6a\x84\x0a\x1c\x17\x9a\x35\x6d\x3f\x72\x00\x6c\xfd\x5a\x63\x28\x51\x3b\x00\xcd\xe4\x75\x24\x7d\xc1\x89\x42\x88\xdf\x53\xa1\xd0\x2d\xa1\xde\x5b\x80\xc3\x47\xcf\x8c\x7c\x1e\x0e\xcb\x89\xdc\x45\xc3\xe1\x97\xa7\xe1\x39\xdb\xa5\x55\x39\x3a\xb2\x53\x39\x79\xf6\x6e\x26\xa2\xee\x9f\xdd\xd2\x48\xfc\xf8\xbe\x59\x55\x55\x8f\x6c\x69\x26\xeb\x9d\xca\xe2\x7b\xbc\x12\x3a\x00\x4a\x4b\xca\x77\x93\xea\x00\x5a\x7e\x3b\x51\x70\xa1\xe7\x92\x53\xe5\xfb\xb8\xa1\xb5\xf4\xea\xf6\xf6\xee\xd4\x12\x63\x48\xf7\xde\xf0\x0c\x9d\xf2\x98\xf9\xaf\xf9\x94\x49\x5a\x5f\x20\x1e\x3d\x95\x62\xe8\x85\x2c\x33\x59\x72\xb6\x7c\x0a\x8a\x11\x13\x4e\xea\xf3\x9f\x5e\x79\xc6\x49\xef\xde\x0d\x8a\xb8\x18\xbc\xfe\x92\x4f\x3d\x9d\xe9\xfa\x14\x43\x0b\x2a\xdf\xcf\xfe\x74\xdb\xa1\x56\x60\x36\x02\x01\x98\x7b\x8b\x63\x33\x04\xc3\x50\x0b\x19\x34\xb2\xd0\x33\xaa\x4e\x7a\x6d\x82\x29\x13\x07\x53\x44\xae\x05\xdf\xd2\xdd\x0f\xb9\x8f\xb0\x34\x26\x6d\x27\x3e\x10\xaa\xdd\xad\x90\xae\x44\x12\x1d\x02\x18\x68\x99\xe1\xe0\x47\xbd\x21\x31\x65\x34\x24\x2a\x80\xd1\xcf\x58\x9b\x2f\xd1\x92\x68\xdc\x1d\x2a\xd0\x87\x34\xcf\x93\xb6\x8c\x38\x4d\x3b\x4a\x91\xb6\xe1\xe6\xab\x6f\xd6\xe5\x77\x86\xe6\xa6\x21\xe6\xab\xca\x68\x63\x23\x17\x90\xef\x9b\xfb\x96\x87\x5e\x53\xbd\x31\x09\xb0\x27\x2c\xc3\xdf\xa4\x48\x82\xd6\xb0\xf1\x8c\x49\xa2\x7f\xc5\xc3\x0a\xb7\xdd\x39\x80\xaf\x78\x08\xda\xe1\xd4\x13\x39\xcb\xa0\x3e\xc2\x32\x62\x5f\x1e\x65\x99\x22\x5e\x0a\x69\x2b\xc1\xbc\x3c\xdc\x56\x5a\x7b\x29\xcc\xa5\xf8\xcb\xc3\x35\x5a\x7e\x1e\x25\x4d\xf2\xc6\x71\x08\xc3\xee\xe0\x32\x63\x6c\x29\x18\x0d\x0f\x01\xcc\xb6\x0b\xa1\x97\x12\x15\x72\xdd\x90\x63\x74\x8f\x1c\x95\x5a\x4a\xb1\xc1\x36\x4e\xca\xa9\xa6\x84\x4d\x90\x91\xc3\x1a\x43\xc1\x23\x15\xc0\xdb\xab\x96\x8c\x0e\xd3\xb5\x08\xbf\xa2\xee\x9a\xd8\xc9\x8c\x95\x3c\x4d\x50\x64\xba\xda\x6e\xd4\x8b\xe2\x76\x82\x85\x76\x16\x2e\x8f\xa5\x8a\xde\xe5\x31\x35\x26\xcb\xd1\x13\x46\xe1\xf7\x66\x16\xb0\x5f\x28\x92\x84\xf0\xa8\x3b\xec\x82\xbf\xa1\xdc\x57\x71\x6f\xdc\xa5\xfd\xa1\xb0\x37\x54\xc4\xe4\xa7\xc9\xbb\xc1\x45\x3b\x3e\x07\xb6\x94\x81\x1b\xc3\xe8\xcd\x1f\xbc\x2b\xef\xca\x1b\x81\x9b\xc1\x45\x9d\x68\xc0\x9d\x94\x7f\x8f\xf2\x2e\x57\x81\x30\x5c\x4f\x6f\xa6\xd7\x77\x30\x1a\xfe\xe7\xa3\xfb\xe5\xec\x93\x90\xa8\x44\x26\x43\x54\x6d\x97\x30\x9a\x50\xad\xba\x6e\x4a\x30\x11\xf2\x90\xdf\x08\xa6\xf3\xdb\xd5\xef\xf7\x37\xb3\xf9\xec\xae\x49\xd0\xbd\x60\x59\x82\x73\x91\xf1\xee\x39\x26\x66\x6c\x49\x74\x1c\x80\xbf\x27\xd2\x67\x74\x53\xb4\x33\x26\x36\x5a\x8a\x9e\x0f\x07\xb7\x25\x6f\x15\xb6\x33\x7b\x92\xea\xc3\x84\xca\x36\xfa\x04\x23\x9a\x25\x01\x0c\x06\x67\x57\x93\x5a\x93\x96\x74\xb7\xab\x0a\x88\x6b\x43\xee\x3a\x26\x7c\x87\x4b\xd3\x52\x34\xf4\x93\x4c\x0b\xd3\x96\x87\x01\x98\xd2\xdb\xaf\x42\x0b\xd2\xc1\xdb\x0d\x83\x6d\x27\xc5\xd8\x8b\xc2\xcc\xa8\x5c\x6b\x89\x24\xb9\x23\xbb\x53\xb1\x14\x5c\x3c\xce\xc7\xab\xd9\x78\xf2\xfe\xfe\xe3\x74\xb5\x9e\xdd\x2e\x9e\x3a\xa2\x45\xa3\x70\xf1\x68\x4c\x5c\x2f\xc7\xd7\x55\x82\xb1\x15\x7a\x56\x9b\x56\x18\x6b\xc7\xed\xf5\xa4\x98\xa8\xfb\x28\xd3\x5f\xb4\xfa\xcd\x39\xf9\x4e\x93\x2c\x01\x92\x1f\xb8\x69\xf2\x2c\x6b\xf2\x5e\xaf\x72\x02\x84\x84\x9b\x9e\xcd\xf4\x4a\x45\x27\x65\x9f\x97\xe6\x56\xf8\xc6\xf0\xaf\x6a\x7a\x9a\x6c\x73\x0c\x67\xbf\x65\x54\x62\x54\x79\x38\xcf\xcc\x01\xfc\x32\x7a\x33\xa7\x5d\x3c\xa6\x63\xac\x9f\x3e\x16\xa5\x07\x4c\xff\x27\x31\x07\xd5\xf0\xac\x09\x07\xd3\x1e\xf7\x60\x55\xeb\x2a\x4c\x95\xfb\x6a\xfd\x75\xf3\x75\x04\x83\x59\x55\xb6\xbc\x35\x9e\xe2\xd2\x0c\xf6\xee\x1b\xd9\xd7\x8b\x46\x8f\xdb\x03\x52\xbd\xc6\x95\x2b\x17\xb6\xa0\x58\x50\x47\x79\xfc\x8c\xc7\x4a\xea\x75\xf0\x96\x6f\x86\x39\x9c\xf2\x71\xc0\xdc\x5e\x40\xc7\x44\x57\x8f\x33\x59\x89\xd8\x76\xb2\xb6\x87\x7e\x06\x7b\xb9\x53\xf3\xb5\xb0\xd0\xe4\x14\xb4\xcf\xb5\x7c\x1e\xbb\x7f\xbf\x72\xff\xf8\xe5\xf1\xad\xa1\xe6\x0e\x39\xca\xfc\x4d\x15\xbf\xa7\xd2\xe8\x11\xbc\x66\x46\xf3\xba\xd6\xb1\xb2\x63\x54\xf9\xce\x59\xf9\xb8\x84\x13\xd6\x70\x8c\xf6\x73\x60\x2f\xeb\xfb\x86\x85\x3d\xfc\x4c\xdc\x7f\x96\xb0\x47\xbf\xe6\xad\xdf\x19\xc0\x1b\xd7\xa2\x9f\x04\x6f\xae\x3f\xcf\xc3\xce\x25\x5e\x0a\x70\xf7\x32\xf7\x3c\xea\x45\x83\xf3\xbd\xe7\x4e\x4b\x1a\x8c\x4e\x02\x6f\x3d\x3c\x77\x70\x34\x0a\xe5\x29\x6e\x2b\x92\xa4\x0c\xfb\xe4\x2e\xba\x30\x83\xab\xd4\x94\xa7\x73\xd0\xa2\x22\xf5\xab\xd1\x95\x37\xba\x84\xd1\x95\xf7\x06\x84\x04\xd3\xa4\x28\xfd\xba\x87\xf4\xc8\x56\x79\x32\xa9\xc1\xb6\x73\xf1\x33\x68\x07\x46\xd7\xc0\xf9\x77\x00\x00\x00\xff\xff\x65\x84\xe2\x5e\x7f\x18\x00\x00")

func templateTemplateOpenshiftIoOpenshiftMariadbEphemeralYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftMariadbEphemeralYaml,
		"Template.template.openshift.io/openshift/mariadb-ephemeral.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftMariadbEphemeralYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftMariadbEphemeralYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/mariadb-ephemeral.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftMariadbPersistentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x5f\x6f\xdb\xba\x15\x7f\xf7\xa7\x38\x08\x02\xb8\x05\x22\x29\x4e\x71\xef\x30\x01\xc5\xe0\xda\xbe\x77\xc6\xe2\xc4\xb3\xdd\x14\x5d\x51\x04\x34\x75\x6c\x73\x95\x48\x5d\x92\x72\xea\x65\xf9\xee\x03\x49\xfd\xb5\x6c\x37\xe9\x82\x3d\x4c\x4f\x36\x79\xc8\xf3\x3b\xff\xcf\x21\x49\xd9\x1d\x4a\xc5\x04\x0f\x41\x63\x92\xc6\x44\xa3\x2f\x52\xe4\x6a\xc3\x56\xda\x67\x22\xd8\xf6\x3a\xdf\x18\x8f\x42\x58\xe4\xdb\x9d\x98\x2c\x31\x56\x61\x07\xca\x13\x21\x24\x44\x32\x12\x2d\xbd\xd4\x5c\xa6\x34\x72\xed\x15\x9b\x9d\x04\x95\x22\x6b\x0c\xe1\xdf\x5e\x07\x60\xb1\x41\x58\x89\x38\x16\x0f\x8c\xaf\x41\xa1\xdc\x32\x8a\x6f\xd4\x5b\xd8\x90\x2d\xc2\x12\x91\x03\x95\x48\x34\x46\xc0\x38\xec\x44\x26\x21\x95\xe2\x9f\x48\x75\x08\xe7\x8f\xc3\xfe\xa2\xff\xa1\x3f\x1f\xdd\xcf\x47\xb3\xbb\xf1\x60\x74\x7f\xd3\x9f\x8c\x9e\xfc\x4e\x07\x8a\xef\xa3\x42\xc9\x49\x82\x86\x7a\xf2\x79\xfe\xf7\xeb\xfb\x8f\xf3\xd1\xec\xa9\x22\x98\x12\xa5\x1e\x84\x8c\x2a\x82\x69\x7f\x3e\xff\x74\x3b\x1b\x3a\xa2\x21\xd1\x64\x49\x14\xc2\x4d\xe3\x96\x82\xb3\x25\x1a\x08\xce\x91\x6a\x26\x38\x7c\x9c\x5d\x87\x90\xec\xd4\x1f\x71\x18\x04\xc7\x00\x86\xef\xde\x5d\xfe\x1a\x18\x94\xbf\x09\x09\x89\x90\x08\x8c\xaf\x84\x4c\x88\xbd\x83\x2c\x45\xa6\x21\x53\x46\x23\x7a\xc3\x54\xa9\xd8\x0b\x60\x9c\xc6\x59\x64\x36\x6e\x53\xe4\x73\x63\x15\xa0\x82\x2b\x16\xa1\xb4\x87\xd5\x05\x28\x44\xd8\x68\x9d\xaa\x30\x08\xd6\x4c\x6f\xb2\xa5\x4f\x45\x12\x28\x1a\x0b\xb9\x0e\x0a\xd3\x50\xc1\x35\x61\x1c\x65\xb0\x8c\xc5\x32\x48\x88\xd2\x28\x83\xde\xa5\x7f\x15\x48\x21\x74\x90\x29\x19\xa8\x0d\x91\x18\x94\x94\x9e\xa2\x92\xa5\x5a\x05\x56\xbe\x60\x36\xea\x0f\x27\x23\x3f\x89\xfc\x4e\x82\x9a\x44\x44\x13\xe3\x05\x84\x73\xa1\x1d\x96\xd0\x6a\x30\x42\x77\xce\x7a\x95\x35\xba\xf9\x26\x06\xc7\xf0\x03\x44\x85\x7e\x73\xdb\x5f\xc0\x03\xd3\x1b\xa8\x3c\x07\x94\x16\x92\xac\xd1\xff\x7f\x51\x56\xae\x80\x9b\xdb\xc5\x28\x84\x39\x25\xb1\x85\x2e\x9c\x68\x7a\x43\x38\x08\x8e\x20\x31\x8d\x19\x25\xc0\x14\x70\xa1\x41\x65\x69\x2a\xa4\xc6\xc8\x87\xcf\x22\x83\x24\x53\xda\x85\x48\x4d\x51\x5b\x11\x67\x09\x2a\x20\x5b\xc2\x62\xb2\x8c\xb1\x0c\x19\x1a\x67\x06\xb1\xe1\x92\x29\x6c\xea\xc9\xb7\x78\x18\x15\x7c\x10\x13\xa5\x42\xfb\xd3\xcb\x25\xb7\x7b\x8d\x04\x10\x31\x95\xc6\x64\xe7\xb9\xa0\xca\xad\x78\x80\x4c\xd0\x2c\x41\xee\x1c\xc1\xcb\x64\x1c\xfe\x6f\xd5\xdc\x46\x14\x0b\xbe\xf6\x1a\xbe\xb8\xa8\xab\xc1\xa4\x95\x2d\x8b\x8c\xfa\x40\x69\xc2\x23\x12\x1b\x33\x14\x6e\x6a\xbc\x13\x65\x6e\x3a\xeb\xa1\xa4\x72\xdd\x3c\x43\xf9\x2e\x9d\x95\xcb\x4c\x59\xdf\xc5\x08\x04\x3f\xe8\xd0\x86\x3c\xbf\xb2\x3c\x64\xf4\x7a\x61\xac\x24\xdd\x2f\xc2\x23\x48\xf3\x1c\x05\x44\x22\xd0\x8d\x50\xc8\x61\xcb\x08\xa4\x44\x92\x04\x35\x4a\x05\x0f\x1b\xe4\x4e\x04\x93\xbd\x19\x5f\xe7\xf7\x5a\x53\xe7\xa1\xe5\xb7\x95\x92\x0b\x2d\xbd\xa6\x59\x67\x18\xc1\x5f\x89\xbe\x80\x31\xa7\x07\x4e\xe5\xce\xd8\x34\x2b\xa1\x14\x95\xf2\x25\x46\x1b\xa2\x8d\x75\xed\x39\x4d\xd6\x2a\x2c\xa5\xbb\xa8\xdc\xca\x31\x6a\x17\x8a\x7c\x4b\xa5\x84\x62\x58\xb1\xed\x88\xa5\x49\xfa\x2a\xec\x78\x50\xaf\x52\xdb\x5e\x07\xc0\x55\xa4\x39\x52\x89\xe6\x7c\x3d\x1b\x1d\xc8\x47\x70\xa4\xb4\xe1\xf7\x54\x28\xf4\x0a\xac\xf7\x0e\x61\xf7\xd1\x37\x2b\x5f\xba\xdd\x62\xc3\xea\xa8\xdb\xfd\xfa\xd4\x7d\xce\x75\x69\x59\x5f\x0e\xdc\x54\x6c\x3e\xfb\x36\x13\x06\xf7\x27\xaf\x34\x14\x2f\xbf\x37\x2b\xcb\xe4\x81\x2b\xcd\x66\x75\x53\x51\x4d\x0f\x97\xb6\x0e\x80\xd2\x92\xf1\xf5\xb0\x34\x40\x43\x6f\x47\x2a\x28\xb4\x54\x72\xac\x1e\x1f\x16\xb4\xa2\x9e\xdd\xde\x2e\x8e\x1d\x31\x82\xec\x37\x02\x27\xdc\xc9\x06\xcd\x7f\xed\x4f\x99\x64\x55\x47\xf0\xe8\xab\x14\xa9\x9f\xe7\xe3\xf1\xf4\x29\xcc\x57\x4c\x3c\xa9\x2f\x7f\x79\xe3\x1b\x25\xbd\x7f\x7f\x96\x07\xc6\xd9\xdb\xaf\x76\xeb\xe9\x99\xaa\x4f\x91\x3a\x50\xf6\x3e\xf7\xd3\x6b\xc6\x5a\x8e\xd9\x10\x84\x60\x1a\x11\xbb\xa0\x30\x46\xaa\x85\x2c\x44\xfa\x01\xab\xa3\x5a\x9b\x96\x81\x7c\x67\xab\xd1\x20\x26\x2c\x69\xe9\xf0\x05\x82\xb8\xb4\x32\x11\x11\x96\xe2\xcc\x90\x44\x9f\x24\xd3\x78\xcb\xa9\xcb\x9f\x12\x95\xc8\x24\xc5\xd2\x22\x12\xff\xc8\x50\xe9\xf2\x3f\x14\x49\xd7\x70\xbd\xbb\xbd\xfe\x38\x19\xdd\x0f\xfa\xd3\xfe\x60\xbc\xf8\x7c\x42\x9a\x21\xa6\xb1\xd8\x99\x3a\x36\x10\x7c\xc5\xd6\x2f\x72\x06\x12\xa7\x1b\xd2\x74\x89\x07\xc2\xb4\xb7\x12\xd2\x93\x48\xa2\x5d\x08\x67\x5a\x66\x78\xf6\x52\x95\xe4\xad\x81\x0a\xa1\xf7\x33\xb6\x73\xda\x90\x44\xe3\x7a\x57\x82\xde\xa5\x36\xed\xbb\x4a\xd6\xa9\xcb\x51\x90\x34\x05\x37\x5f\xd5\xf9\x17\xdf\x33\x38\xd7\x05\x31\x5f\x59\xc9\x6b\x17\x79\x80\x7c\x5b\xbf\xb7\x70\xe1\x2a\x70\x6b\x9b\x00\x5b\x12\x67\xf8\x9b\x14\x49\xd8\x58\x36\x9a\x31\x25\xe1\x6f\xb8\x9b\xe1\x6a\x7f\x0f\xe0\x1b\xee\xc2\x66\x72\x68\x91\x3c\x4b\xa0\x36\xc2\x22\xff\xbc\x3e\xca\x22\xe1\xbd\x16\xd2\x46\xba\x7c\x7d\xb8\x8d\x24\xfd\x5a\x98\x0b\xf2\xd7\x87\x6b\xb8\xfc\x3c\x4a\x96\xd8\x04\xd3\x85\xee\xfe\xe2\x34\x8b\xe3\xa9\x88\x19\xdd\x85\x30\x5e\xdd\x08\x3d\x95\xa8\x5c\xb3\x53\x7c\x31\xdb\x22\x47\xa5\xa6\x52\x2c\xb1\x89\x93\x71\xa6\x19\x89\x87\x18\x93\xdd\x1c\xa9\xe0\x91\x0a\xe1\xdd\x65\x83\x46\xd3\x74\x2e\xe8\x37\xd4\xfb\x22\xee\xe5\xf9\x92\x9e\x25\x28\x32\x5d\x5e\xd7\x6b\x45\x71\xb3\x5c\x40\xb3\xa6\x14\x66\x29\xa3\x77\x7a\x88\x8d\xc9\x72\xec\x88\x50\xf8\xbd\x9e\x05\xdc\x47\x45\x92\x10\x1e\xed\x2f\x7b\x10\x2c\x19\x0f\xd4\xa6\xb5\xee\xb1\xf6\x12\x6d\x2d\xe5\x31\xf9\x69\xf8\xfe\xec\xbc\x19\x9f\x67\xae\x30\x83\xb7\x81\xde\xd5\x9f\xfc\x4b\xff\xd2\xef\x81\x97\xc1\x79\x95\x68\xc0\x1b\x16\x7f\x0f\xfa\x9d\x65\x81\xd0\x9d\x8f\xae\x47\x83\x05\xf4\xba\x3f\x36\xdd\x2f\xcf\xb6\x44\xab\xae\xb9\x2f\x66\x09\xd3\x6a\x5f\x4d\x09\x26\x42\xee\x6c\x7f\x33\x9a\xdc\xce\x3e\xdf\x5f\x8f\x27\xe3\x45\xdd\x41\xdd\x80\x38\x11\x19\xdf\xb7\x63\x62\xd6\xa6\x44\x6f\x42\x08\xb6\x44\x06\x31\x5b\xe6\x13\x95\x89\x8d\x06\xa3\xd3\xe1\xe0\x35\xe8\xf3\x89\xb4\x9e\xd9\x5f\x72\x1c\x6a\x53\x53\xad\x9d\x68\x0a\x4e\xcd\xd2\xcd\x8f\x63\x54\x4b\xb6\x5e\x97\x65\xc6\x73\x81\x39\xd8\x10\xbe\xc6\xa9\x99\xa3\x6a\x28\x49\xa6\x45\x42\x34\xa3\x21\x98\x02\xdd\xae\x55\x86\x5d\x43\xaa\xfd\x60\x59\xed\x25\x22\xd7\x4e\x8c\x0d\xcb\xb9\x96\x48\x92\x05\x59\x1f\x8b\xb8\xf0\xfc\x71\xd2\x9f\x8d\xfb\xc3\x0f\xf7\x77\xa3\xd9\x7c\x7c\x7b\xf3\xb4\x47\x9a\x0f\x47\xe7\x8f\x46\xba\xf9\xb4\x3f\x28\xd3\x90\xab\xe3\xe3\x4a\xb4\x5c\x58\xb7\xee\x9a\x98\x7c\xa3\x1a\x1e\xcd\x4c\xd5\x18\x8c\x27\xe4\x3b\x4b\xb2\x04\x88\x75\x0b\x10\xab\xdc\xb7\x40\x6f\xb0\x52\x02\x50\xc2\xcd\xa0\x6a\x06\xc4\x7c\x7c\x74\x66\x98\x38\xe2\x6b\xe3\xa5\xe5\xa4\x57\xf7\xc9\x8e\x6b\xd0\x98\xc4\xa8\xd4\xb0\xcd\xdf\x21\xfc\xd2\xbb\x9a\xb0\x7d\x3c\x66\xaa\xae\x9e\x70\x6e\x0a\x0d\x98\xa1\xd7\x3e\x99\x60\x5d\xb3\x26\x68\xcc\x1c\xdf\x82\x55\x9e\x2b\x31\x95\xea\xab\xf8\x57\x03\xe7\x01\x0c\xe6\x94\xd1\x86\x6e\xe0\xc9\x07\x05\x70\xfd\x7e\x04\x2b\x21\x2d\x45\x51\x55\x5a\x40\xca\x27\xc5\xe2\xe4\x8d\x2b\x3b\x0e\xd4\x41\x17\x3e\xa1\xb1\xc2\xf5\xf6\xf0\x16\x0f\x9f\x16\x4e\xf1\x8a\x61\x7a\x1c\xd0\x1b\xa2\xe1\x81\xc5\x31\x2c\xd1\xac\x38\xc4\xae\xcf\x76\xaf\x68\x27\xb0\x17\x37\xd5\x9f\x3c\x73\x4e\x9d\xdc\xed\x2d\x97\x2f\x7d\xef\x1f\x97\xde\x9f\xbf\x3e\xbe\x33\xae\xb9\x46\x8e\xd2\xbe\x0c\xe3\xf7\x54\x1a\x3e\x82\x57\x9e\x51\x6f\xea\xf6\xa4\xdc\x13\xaa\x78\xac\x2d\x75\x5c\xc0\xa1\x15\x1c\xc3\xfd\x39\xb0\xa7\x55\x57\xe2\x60\x77\xbf\x10\xef\x5f\x05\xec\xde\xaf\x76\xdc\x7d\x06\xf0\x5a\xf3\xf4\x93\xe0\x4d\x93\x74\x1a\xb6\xa5\x78\x2d\xc0\xfb\x2d\xdf\x69\xd4\x37\x35\x9f\x6f\xbd\xd9\x3a\xa7\xc1\xe8\x28\xf0\xc6\xeb\xf9\x1e\x8e\x5a\x39\x3d\xe6\xdb\x8a\x24\x69\x8c\x6d\xe7\xce\x67\x35\x83\xab\xe0\x64\xd3\x39\x68\x51\x3a\xf5\x9b\xde\xa5\xdf\xbb\x80\xde\xa5\x7f\x05\x42\x82\x19\x65\x94\x7e\xdb\x42\x7a\xe0\x2a\x9b\x4c\x2a\xb0\xcd\x5c\x7c\x02\xed\x99\xe1\x75\xd6\xc2\x6a\x0b\x17\xb8\x8c\x55\x3d\xcd\x1a\x27\x30\x7a\xbc\x00\xf4\xd7\xbe\xcb\x7b\x17\x70\xf5\x3b\x6b\x23\x74\x17\x0c\x48\x4a\x28\xd3\xbb\x12\xd8\xde\x18\x7b\x02\x58\xef\x77\xd6\xf9\x4f\x00\x00\x00\xff\xff\x53\x8f\xdb\xc0\xdb\x19\x00\x00")

func templateTemplateOpenshiftIoOpenshiftMariadbPersistentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftMariadbPersistentYaml,
		"Template.template.openshift.io/openshift/mariadb-persistent.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftMariadbPersistentYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftMariadbPersistentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/mariadb-persistent.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftMongodbEphemeralYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x6b\x8f\xdb\xba\xd1\xfe\xee\x5f\x31\x30\x02\x6c\x02\xac\xa4\xbd\xbc\xef\x09\x2a\x20\x68\x9d\xb5\x73\x6a\x34\xf6\x1a\xf6\x26\x07\x6d\x10\x2c\x68\x69\x2c\xb3\xa1\x48\x1d\x92\xf2\xae\xbb\xdd\xff\x5e\x90\x12\x75\xf5\x1a\xce\xe9\x7e\xa8\x3e\xd9\xbc\xcd\x33\xcf\xdc\xc8\x21\x19\xfd\x8a\x52\x51\xc1\x43\xd0\x98\x66\x8c\x68\xf4\x45\x86\x5c\x6d\xe9\x46\xfb\x54\x04\xbb\xcb\xc1\x0f\xca\xe3\x10\xee\xca\xe9\x01\x23\x6b\x64\x2a\x1c\x40\xb5\x23\x84\x54\xf0\x44\xc4\x6b\x0f\xb3\x2d\xa6\x28\x09\xf3\xdc\xdc\x20\x45\xa5\x48\x82\x21\xfc\xdb\x1b\x00\xdc\x6d\x11\x36\x82\x31\xf1\x40\x79\x02\x0a\xe5\x8e\x46\xf8\x56\xbd\x83\x2d\xd9\x21\xac\x11\x39\x44\x12\x89\xc6\x18\x28\x87\xbd\xc8\x25\x64\x52\xfc\x13\x23\x1d\xc2\x9b\xa7\xf1\xe8\x6e\xf4\x71\xb4\x9a\xdc\xaf\x26\xcb\xaf\xd3\x9b\xc9\xfd\x7c\x34\x9b\x3c\xfb\x83\x01\xb8\xef\x8b\x42\xc9\x49\x8a\x66\xf5\xec\x76\xfe\xeb\xed\xf8\xe3\xfd\x97\xd5\x64\xf9\x5c\x2f\x59\x10\xa5\x1e\x84\x8c\x9b\x4b\x16\xa3\xd5\xea\xb7\xdb\xe5\xb8\x58\x36\x26\x9a\xac\x89\x42\x98\x77\x4e\x72\xf2\xed\xb2\x1b\xc1\x39\x46\x9a\x0a\x0e\x5f\x96\x9f\x2b\x0e\xc2\x20\xe8\x88\x0e\x0f\xc8\xf9\xcb\x4b\xca\x04\x87\xa4\x0d\x00\x3e\x09\x09\xa9\x90\x08\x94\x6f\x84\x4c\x89\x95\x4b\xd6\x22\xd7\x90\x2b\xc3\xa5\xde\x52\x55\x59\xe4\x1c\x28\x8f\x58\x1e\x9b\x89\xdb\x0c\xf9\xca\x98\x13\x22\xc1\x15\x8d\x51\xda\xcd\xea\x1c\x14\x22\x6c\xb5\xce\x54\x18\x04\x09\xd5\xdb\x7c\xed\x47\x22\x0d\x54\xc4\x84\x4c\x02\x67\xd3\x48\x70\x4d\x28\x47\x19\xac\x99\x58\x07\x29\x51\x1a\x65\x70\xed\x5f\x05\xcb\xc9\x68\x3c\x9b\xf8\x69\xec\x0f\x52\xd4\x24\x26\x9a\x18\xb7\x20\x9c\x0b\x5d\xc8\x08\x2d\x9f\x31\xaa\x48\xd2\x4c\x5b\x37\xb3\x6e\x60\xbe\x99\x39\x7f\xfc\x11\x62\xc7\x76\xe9\x0d\xe7\xf0\x40\xf5\xd6\x28\x96\x19\xd7\x54\x1a\xb9\x06\xa5\x85\x24\x09\xfa\xff\xeb\x3c\x94\xba\xfd\x36\x5a\xce\xa7\xf3\x5f\x43\x18\xf1\xbd\x55\xd0\x2a\x80\x31\x3c\x50\xc6\x60\x8d\xc0\x84\xd2\x90\x67\x82\x43\x26\x62\x43\x90\x96\xb9\xf5\x25\x1f\x6e\x39\xdb\x43\xae\xb0\xad\x09\x6c\x84\x04\x8d\x4a\x53\x9e\x58\x21\x34\x12\xfc\x86\x11\xa5\x42\xfb\xd3\x2b\x61\xda\xb9\x56\x04\xc7\x54\x65\x8c\xec\xbd\x22\x2c\x1c\xeb\x6f\x27\x2e\x54\xdf\x1d\xd8\x22\xa2\x3c\x45\x5e\x18\xd1\xcb\x25\x0b\x2b\x7e\x62\x11\xa9\x46\x86\x30\x04\x19\x78\x4a\x07\x96\xfe\x7b\x9a\x92\x04\x55\x10\xaf\xdd\xaf\x12\x97\xbf\xd5\x29\xeb\x4b\x62\x82\x27\x5e\xcb\x3f\xee\x5a\x5a\x67\x52\xec\x68\x8c\x0a\x0c\x83\x84\xc7\x84\x09\x8e\x95\x12\xc6\x63\x50\x96\x9c\x1b\xaf\x01\x52\xbb\x53\x99\x47\xfc\x22\xe9\x54\xc3\x54\x01\x17\xda\xd9\xc3\x18\xa0\xe7\x65\xe7\xe5\x89\x4a\x00\xe1\x7b\x90\xa8\x34\x91\x1a\xc4\x06\xf4\xb6\x72\xd3\xc2\x94\x12\x55\xce\xb4\xc9\x55\x84\xb1\xc2\xd2\x6b\x34\xde\x66\x0c\xdc\x11\x5d\x9e\x6a\xec\x70\x6e\x0c\x2c\x8b\x5f\x84\xc7\x90\x95\x39\x09\x88\x44\x88\xb6\x42\x21\x87\x1d\x25\x90\x11\x49\x52\xd4\x28\x15\x3c\x6c\x91\x17\x74\x98\x74\xed\x3c\xdd\x21\x2d\x30\xf9\x7d\x82\x4b\x02\xa5\xd7\x76\x83\x25\xc6\xf0\x57\xa2\xcf\x61\xca\xa3\x03\xbb\x54\x9e\x65\x42\xea\xb6\xe9\x49\x14\xa1\x52\xbe\xc4\x78\x4b\xb4\x89\x10\xbb\x4f\x93\x44\x85\x95\x8e\xe7\xb5\x1b\x16\x82\x7a\x95\xa1\x9c\x51\x19\x89\x30\xac\xa5\x0e\xc4\xda\x64\x79\x15\x0e\x3c\x68\x56\xa5\xdd\xe5\x00\xa0\xa8\x40\x2b\x8c\x24\xea\x01\x40\x33\xd9\x1c\x48\x37\xf0\x42\x29\xc3\xc7\x4c\x28\xf4\x48\x9c\x52\x7e\x9f\x55\x55\xe0\xec\xc9\x37\x87\x7d\x3b\x3b\x73\x4a\x14\x4b\x3c\xb7\xe4\xec\xec\xfb\xf3\xd9\x29\x27\xbb\xfd\xf7\x85\xea\x07\x0e\x36\x13\x27\x1f\x77\x14\xe2\x4f\x83\xcb\xab\xca\x78\xe0\x34\x33\x59\x9f\xe4\x0a\xe8\xe1\x0a\x35\x00\x50\x5a\x52\x9e\x8c\x2b\x13\xbc\x40\x5c\xb3\x74\x8e\xc6\xb3\xe9\xbc\x53\x67\x5b\xb4\xbc\x58\x67\xa1\xa7\xf3\xcb\x95\xbb\xa5\x50\xff\x0e\x70\xc4\xb5\x6c\xfc\xfc\xd7\xbe\x95\x4b\xda\xbc\x08\x3c\xf9\x2a\xc3\xc8\x8f\x58\x6e\x6a\xc5\x74\xf1\x1c\x96\x23\x26\xb8\xd4\xb7\x3f\xbf\xf5\x8d\xe6\x1f\x3e\x0c\xed\x96\xe1\xbb\xef\x76\xe2\xf9\x44\x23\x64\x18\x15\xa0\xec\x69\xc5\x4f\xaf\x19\x76\x2e\xe1\x88\x18\x17\x42\xea\x10\x2e\xca\x91\xcc\xfe\xbb\x7a\x7f\x71\xf9\xde\x8d\x48\xa1\x45\x24\x58\x08\x77\x37\x0b\xa7\x29\x91\x09\xea\x45\x67\xad\x42\x86\x91\x16\x32\x6c\xa4\xb3\xa3\x38\xcd\x16\x65\x18\x1f\x6d\x36\x94\x53\xbd\x0f\x61\x2e\x78\x91\x0d\xf5\x3e\xc3\x10\x6e\x1c\x3f\xd6\xb5\x88\xce\x4b\x65\x98\x20\xf1\x47\xc2\x08\x8f\x8c\x31\x9f\x8e\xd8\x6f\x8c\x19\x13\x7b\x53\xb2\x6e\x04\xdf\xd0\xe4\xa7\x0c\x49\x58\xb6\x25\x6d\x73\x3e\x10\xaa\xbd\x8d\x90\x9e\x44\x12\xef\x43\x18\x6a\x99\xe3\xf0\x67\xed\x22\x31\x63\x34\x22\x2a\x84\xcb\x3f\x4c\x9d\x96\x44\x63\xb2\xaf\x40\x5b\xc2\x96\x58\x14\xb7\x41\x53\x0f\xb7\xa4\xad\xb8\xe5\xb1\xba\xb1\xbb\xef\x04\xc9\x4d\x45\xcc\x57\x5d\x7f\x1a\x07\x79\x10\x91\x8c\xac\x29\xa3\x9a\xa2\xb2\x26\xaa\x65\x20\xdf\x35\x45\x3a\xcf\x6c\x46\x64\x63\x1a\x60\x47\x58\x8e\x9f\xa4\x48\xc3\xd6\xb0\xa1\xcd\xe4\xfd\xbf\xe1\x7e\x89\x9b\xee\x1c\xc0\x0f\xdc\x87\xed\xb8\xef\x2d\x39\x49\xdb\x43\x18\x5d\x72\x79\x7d\x9c\x2e\x95\xbd\x1e\xd6\x76\x82\x7d\x7d\xc4\xed\xd4\xfe\x7a\xb8\xdd\x86\xd7\x47\x6c\xe4\xfc\x71\x9c\xf6\xfa\x1a\xc2\x19\x9c\x75\x07\x17\x39\x63\x0b\xc1\x68\xb4\x0f\x61\xba\x99\x0b\xbd\x90\xa8\x90\xeb\xc6\x3a\x46\x77\xc8\x51\xa9\x85\x14\x6b\x6c\xe3\x34\x29\x90\x12\x36\x46\x46\xf6\x2b\x8c\x04\x8f\x55\x08\xd7\x17\xad\x35\x3a\xca\x56\x22\xfa\x81\xba\xab\x62\x3f\x71\x97\x1b\x68\x8a\x22\xd7\xd5\x79\x97\xbd\x58\x6f\x3e\x0f\xea\xb3\x54\x3b\x42\xab\x18\xef\x26\xfd\x6a\xcf\x81\x32\x01\x36\xd3\x91\x98\xbe\xa0\x30\x3e\x36\xd3\x48\xf1\x45\x22\x4d\x09\x8f\xbb\xc3\x1e\x04\x6b\xca\x03\xb5\xed\x8d\x7b\xb4\x3f\x14\xf5\x86\xac\x92\x70\x79\xf5\xde\xbf\xf0\x2f\xfc\xcb\xd0\x2a\x10\xbc\xe9\xba\x1a\x78\x39\xbc\x69\xe6\x21\xf0\xb2\x7a\xe0\x60\x08\xd9\xf3\x3d\xdc\x11\xf6\x61\xf8\x7b\x4e\xf5\xdb\x77\xc3\x13\xac\x7a\xb2\x8d\x24\x2a\x91\xcb\x08\x55\x9b\x11\x46\x53\xaa\x55\x97\xa5\x14\x53\x21\xf7\xf6\x76\x33\x99\xdd\x2e\xff\x7e\xff\x79\x3a\x9b\xde\x35\x7d\x57\x61\x94\x4b\xaa\xf7\x37\x82\x6b\x7c\xec\x78\xd1\x91\x94\x6d\x0c\x4c\x77\x94\x61\x82\x71\x08\x1b\xc2\x54\x33\x80\x34\xca\x94\x72\x5b\x44\x67\x45\x53\x67\x41\xf4\x36\x84\x20\xc6\x5d\xd0\x98\xf4\x98\x48\x1a\xdb\x76\x82\xe5\x29\xce\x44\xce\xbb\xee\x96\x9a\xb1\xf2\x8c\x1d\x91\x01\xa3\x6b\xf7\x5c\x0c\x4c\x14\xb7\x90\x1d\x0f\x5c\xaf\xb5\x3e\xe6\xca\x05\x68\x79\xb7\xf8\x44\xa5\xaa\x03\xb4\x7c\xd1\xb9\x35\x23\xf6\x40\xf6\x6a\xd0\x06\xdc\x2a\x73\x98\x66\x7a\x3f\xa6\xb2\xcd\x64\x8a\x31\xcd\xd3\x10\x86\xc3\x93\x4b\x6b\x8d\x53\x4b\x9a\x24\x55\x35\xf5\x8a\xd4\x72\xb3\x25\xdc\xd0\x2a\x49\xda\x90\x4f\x72\x2d\x52\xa2\x69\x14\x82\xb9\x87\xf4\x4b\xf2\x9c\x74\xf0\x76\xa3\x7d\xd3\x49\xa5\xc5\xad\x69\x6a\x44\xae\xb4\x44\x92\xde\x91\xe4\xa5\x94\xd1\x68\x5f\x7d\x9d\x2c\x57\xd3\xdb\xf9\x73\x67\x69\xf9\x96\x7b\xf3\x64\x54\x5c\x2d\x46\x37\x8d\x44\xca\x88\xd2\x77\x85\xaa\x18\x4f\x8b\x9c\x5a\xf1\x55\xdc\x66\xa6\xb5\xe6\x25\x17\xe5\xb5\xd0\x5e\xe5\xaa\x89\xf2\x66\x68\x3c\xb6\x7e\x16\x9b\xe7\x62\xab\x7d\x30\x23\x8f\x34\xcd\x53\x20\xd6\xb9\xcc\x9b\xbd\x08\x17\xfb\x74\xaf\x08\x83\x88\x70\xf3\x04\x37\x4f\xdf\xf2\x61\x5c\xf4\xfa\x66\xc5\xe2\xcf\x26\xf0\xaa\x37\x6c\x33\xcc\x06\xc6\x7b\x7e\xcf\xa9\x34\x11\x52\x5a\xc3\x56\xab\x10\xfe\xff\xf2\x6a\x46\xbb\x78\xee\xb6\xd8\xe8\x3c\xcd\x1d\x5b\xe6\x39\x2f\xd1\x82\x6a\x58\xc1\x38\x26\x8d\x51\xf5\x60\x55\xfb\x2a\x4c\x15\xd5\xb5\xfc\xfa\x2d\x7d\x00\x83\xd9\xe5\x3a\x18\x35\x9e\xf2\xdd\x03\xc5\xf3\x25\x2e\x9a\x4c\x8d\x96\x45\x0f\x48\xd5\x1a\x75\x3b\xe7\x45\x91\x2d\x40\x1d\xf4\xf9\x23\x8c\x39\x37\xed\xe0\x75\x4d\x5c\x0b\xc7\xf5\x7a\xcc\xcd\x0e\xf4\x96\xe8\xaa\x87\x96\x3b\xc4\x45\x63\xa2\x68\x89\x1c\xc1\xee\x4e\x6a\x36\x6e\x4b\x49\x83\x32\x44\xac\x94\x6f\x23\xef\x1f\x17\xde\x9f\xbe\x3f\x5d\x1b\x37\x4e\x90\xa3\xb4\x4d\x6e\x7c\xcc\x64\xf1\x92\xa9\x3d\xa3\x7d\x99\xed\xe8\xd9\x51\xcb\x35\x9e\x2b\x96\x1d\xa0\xa8\x06\x64\xe4\x9f\x02\x7c\x51\xdf\xc3\x0a\xe0\x67\xdf\x88\xf7\x2f\x07\xfc\xf2\x17\xfb\x92\x3f\x09\x7a\xa3\xdc\x1d\x87\x3f\x6f\x78\x50\xaf\x77\x5b\x98\x00\xe3\x17\xb1\xb7\x7a\xea\x3d\x10\x8d\x4b\xe0\x4b\xbe\xa2\x48\x9a\x31\xec\x3b\x4b\x8f\xd5\x1a\x93\xb9\xb1\x1e\x67\x74\x64\x97\xbc\x1e\x99\xbd\x4b\xf8\x71\x4a\xcb\xa7\xac\x61\xd5\x21\xb2\x65\x00\xb4\xa8\x1c\xfc\xed\x95\xff\x7f\xe7\x70\xe5\xff\x72\x0e\xd7\xfe\x15\x08\x09\x45\xbf\xf5\x5d\x4f\xa9\x03\xa7\xd9\xdc\xd2\x43\x59\xa6\xf1\x23\x64\x0f\xaf\xfd\xab\xe1\xe0\x3f\x01\x00\x00\xff\xff\x0c\x4f\x7c\x63\x1e\x1a\x00\x00")

func templateTemplateOpenshiftIoOpenshiftMongodbEphemeralYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftMongodbEphemeralYaml,
		"Template.template.openshift.io/openshift/mongodb-ephemeral.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftMongodbEphemeralYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftMongodbEphemeralYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/mongodb-ephemeral.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftMongodbPersistentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x5b\x6f\xdb\xca\x11\x7e\xd7\xaf\x18\x18\x01\x9c\x00\x26\x65\x3b\xed\x09\x4a\x20\x68\x15\xd9\x49\x85\x46\xb2\x20\x29\x39\x48\x83\xc0\x18\x91\x23\x69\x9b\xe5\x2e\xcf\xee\x52\x8e\xea\xfa\xbf\x17\xbb\x4b\x52\xbc\xc8\x3a\xce\xa9\x1f\xca\x27\x79\x2f\x33\xdf\xdc\x67\xc7\x98\xb1\xcf\xa4\x34\x93\x22\x02\x43\x69\xc6\xd1\x50\x28\x33\x12\x7a\xc3\x56\x26\x64\xb2\xbf\xbd\xe8\x7d\x67\x22\x89\x60\x51\x6c\xf7\x38\x2e\x89\xeb\xa8\x07\xd5\x8d\x08\x52\x29\xd6\x32\x59\x06\x99\x25\xa6\x0d\x09\x13\x94\x9b\xbd\x94\xb4\xc6\x35\x45\xf0\x9f\xa0\x07\xb0\xd8\x10\xac\x24\xe7\xf2\x8e\x89\x35\x68\x52\x5b\x16\xd3\x4b\xfd\x0a\x36\xb8\x25\x58\x12\x09\x88\x15\xa1\xa1\x04\x98\x80\x9d\xcc\x15\x64\x4a\xfe\x8b\x62\x13\xc1\x8b\xfb\xab\xc1\x62\xf0\x6e\x30\xbf\xbe\x9d\x5f\xcf\x3e\x8f\x86\xd7\xb7\x93\xc1\xf8\xfa\x21\xec\xf5\xa0\xfc\x3e\x69\x52\x02\x53\xb2\xa7\xc7\x37\x93\x0f\x37\x57\xef\x6e\x3f\xcd\xaf\x67\x0f\xfb\x23\x53\xd4\xfa\x4e\xaa\xa4\x7e\x64\x3a\x98\xcf\x7f\xbd\x99\x5d\xf9\x63\x57\x68\x70\x89\x9a\x60\xd2\xa2\x54\xf2\x77\xc7\x86\x52\x08\x8a\x0d\x93\x02\x3e\xcd\x3e\x56\x4a\x88\xfa\xfd\x16\xeb\xe8\x00\x9f\xbf\x3d\x26\x4c\xff\x10\xb7\x1e\xc0\x7b\xa9\x20\x95\x8a\x80\x89\x95\x54\x29\x3a\xbe\xb8\x94\xb9\x81\x5c\x5b\x5d\x9a\x0d\xd3\x95\x49\xce\x80\x89\x98\xe7\x89\xdd\xb8\xc9\x48\xcc\xad\x3d\x21\x96\x42\xb3\x84\x94\xbb\xac\xcf\x40\x13\xc1\xc6\x98\x4c\x47\xfd\xfe\x9a\x99\x4d\xbe\x0c\x63\x99\xf6\x75\xcc\xa5\x5a\xf7\x4b\xa3\xc6\x52\x18\x64\x82\x54\x7f\xc9\xe5\xb2\x9f\xa2\x36\xa4\xfa\xaf\xc3\xcb\xfe\xec\x7a\x70\x35\xbe\x0e\xd3\x24\xec\xa5\x64\x30\x41\x83\xd6\x2f\x50\x08\x69\x3c\x8f\xc8\xe9\x33\x21\x1d\x2b\x96\x19\xe7\x67\xce\x0d\xec\x37\xb6\xf4\xaf\xde\x41\x52\x6a\xbb\xf0\x86\x33\xb8\x63\x66\x03\x7b\x5f\x02\x6d\xa4\xc2\x35\x85\xff\xef\x4a\x28\x04\x9b\xdc\x2c\xae\x23\x98\xc7\xc8\x1d\x24\xe9\x21\x9b\x0d\x0a\x90\x82\x40\x51\xc6\x59\x8c\xc0\x34\x08\x69\x40\xe7\x59\x26\x95\xa1\x24\x84\x2f\x32\x87\x34\xd7\xc6\x07\x43\x4d\x01\x5b\xc9\xf3\x94\x34\xe0\x16\x19\xc7\x25\xa7\x2a\x38\x62\x9e\x5b\x24\x96\x4b\xae\xa9\x29\x7f\xe8\xf0\xb0\x58\x8a\x21\x47\xad\x23\xf7\x33\x28\x24\x72\x7b\x8d\x50\x4f\x98\xce\x38\xee\x02\x1f\x3e\x85\x75\x0e\x1c\x93\x71\x9e\x92\xf0\x06\x0e\x72\xc5\xa3\x4a\x7d\x89\x8c\x75\x2d\x7d\x58\xfd\x59\x1c\xda\xf4\x9d\x75\x6e\x59\x8a\x6b\xd2\xfd\x64\x59\xfe\x2a\xb0\x84\x1b\x93\xf2\x2e\x27\x2e\xc5\x3a\x68\xf8\xce\xa2\x2e\x9e\x4d\x0c\x5b\x96\x58\xb5\x80\x36\x28\x12\xe4\x56\xbd\xa5\x5b\x59\x6f\x22\x55\x98\xc4\x79\x14\xee\x5d\xad\xc8\x31\xa1\x4f\x48\xd5\x32\xd3\xce\xd7\x28\x01\x29\x0e\x3a\xa0\x3d\x5e\x90\xac\x2e\x59\x7d\x9d\x59\xed\x2b\xff\x0b\x45\x02\x59\x91\x63\x00\x15\x41\xbc\x91\x9a\x04\x6c\x19\x42\x86\x0a\x53\x32\xa4\x34\xdc\x6d\x48\x78\x11\x6c\xfe\x65\x62\x5d\xd0\x75\x26\x2c\x42\x21\xec\x2a\xa5\x10\x5a\x05\x4d\x73\xcd\x28\x81\xbf\xa3\x39\x83\x91\x88\x0f\xdc\x2a\x9c\xac\x69\x2e\x8c\x63\xd2\x3a\x54\x94\x6c\xd0\x58\xa7\x77\xf7\x0c\xae\x75\x54\x49\x77\xb6\x77\x17\xcf\xa8\x9b\xea\x8b\x2d\x9d\x61\x4c\xd1\x9e\x6d\x4f\x2e\x6d\xda\xd6\x51\x2f\x80\x7a\x9d\xd9\x5e\xf4\x00\x7c\x4d\x99\x53\xac\xc8\xde\xaf\x67\x8f\x03\xf9\x03\x1e\x29\x4e\xf4\x23\x93\x9a\x02\x4c\x52\x26\x6e\xb3\x2a\xad\x9f\xde\x87\x96\xd8\xd7\xd3\xd3\x52\x0a\x7f\x24\x28\x8f\x9c\x9e\x7e\x7b\x38\x7d\x0a\xe5\xf2\xfe\xad\x97\xfd\x00\x61\xbb\xf1\x64\x72\x47\x21\xfe\x34\xb8\xbc\x2a\x75\x07\xa8\xd9\xcd\x3d\xa5\xb2\x22\x1e\x2e\x39\x3d\x00\x6d\x14\x13\xeb\xab\xca\x04\x8f\x28\xae\x5e\x0b\x07\x57\xe3\xd1\xa4\x55\x38\x1b\x6a\x79\xb4\x70\x42\x47\xe6\xc7\x4b\x71\x43\xa0\x6e\x51\x3f\xe2\x5a\x2e\x80\xfe\x67\xdf\xca\x15\xab\x57\xf6\xfb\x50\x67\x14\x87\x45\xd6\x1d\x4d\x1f\xa2\x62\xc5\x46\x97\xfe\xfa\xd7\x97\xa1\x95\xfc\xed\xdb\x13\x77\xe5\xe4\xd5\x37\xb7\xf1\xf0\x44\x23\x64\x14\x7b\x50\x8e\x9a\xff\x19\xd4\xe3\xae\x40\x2c\x64\x42\x53\xa9\x4c\x04\xe7\xc5\x4a\xe6\xfe\xba\x7c\x73\x7e\xf1\xa6\x5c\x51\xd2\xc8\x58\xf2\x08\x16\xc3\x69\x29\x29\xaa\x35\x99\x69\xeb\xac\x26\x4e\xb1\x91\xaa\xd4\xc7\xef\xe2\xb4\x57\xb4\xd5\xf8\x60\xb5\x62\x82\x99\x5d\x04\x13\x29\x7c\x5e\x34\xbb\x8c\x22\x18\x96\xfa\x71\xae\x85\x26\x2f\x84\xe1\x12\x93\x77\xc8\x51\xc4\xd6\x98\xf7\x47\xec\x37\xad\xd2\xcb\x67\x57\xfb\x86\x1c\x59\xda\xb1\xe6\x4f\xa8\xd4\x27\xbb\xb1\x4c\xa8\x52\xec\x8c\x30\xf9\x55\x31\x43\x37\x22\xf6\xe8\x15\x69\x99\xab\x98\x2a\xdf\x50\xf4\x5b\x4e\xda\x54\x7f\x43\x59\x0a\x2c\xd7\xcf\x37\x1f\x3f\x8d\xaf\x6f\x87\x83\xe9\x60\x38\x5a\x7c\x39\x22\xcd\x15\x65\x5c\xee\x6c\xd5\x1c\x4a\xb1\x62\xeb\x9f\x72\x4b\xe4\xd9\x06\x9b\xce\x79\x87\xcc\x04\x2b\xa9\x02\x45\x98\xec\x22\x38\x31\x2a\xa7\x93\x9f\x55\x49\xd1\x88\xe8\x08\x2e\xfe\xb0\x23\x18\x85\x86\xd6\xbb\x0a\xb4\x33\xff\x8c\x7c\x7d\xed\xd5\xe5\x28\x8f\x34\x05\x77\x5e\x51\xbd\x28\xca\xef\x09\x9c\xeb\x82\xd8\xaf\x6a\xd0\x6a\x84\x02\x88\x31\xc3\x25\xe3\xcc\x30\xd2\xce\xe1\xf6\x3c\x48\x6c\xeb\x2c\xcb\x38\xab\xe7\x97\xda\x36\xc0\x16\x79\x4e\xef\x95\x4c\xa3\xc6\xb2\x55\x9b\xad\x62\xff\xa0\xdd\x8c\x56\xed\x3d\x80\xef\xb4\x8b\x9a\x59\xac\x73\xe4\x49\xd2\x1e\xc2\x58\xa6\xca\xe7\xc7\x59\x26\xe6\xe7\xc3\xda\x2c\x17\xcf\x8f\xb8\x59\xa8\x9e\x0f\x77\x79\xe1\xf9\x11\x5b\x3e\x7f\x1c\xa7\xeb\xa0\x23\x38\x85\xd3\xf6\xe2\x34\xe7\x7c\x2a\x39\x8b\x77\x11\x8c\x56\x13\x69\xa6\x8a\xb4\xef\xd3\xca\x8f\xb3\x2d\x09\xd2\x7a\xaa\xe4\x92\x9a\x38\x6d\x42\x67\xc8\xaf\x88\xe3\x6e\x4e\xb1\x14\x89\x8e\xe0\xf5\x79\xe3\x8c\x89\xb3\xb9\x8c\xbf\x93\x69\x8b\xd8\x2d\x43\xc5\x05\x96\x92\xcc\x4d\x45\xef\xa2\x13\xeb\xf5\x57\xc9\x9e\x96\x6e\x46\x68\x15\xe3\xed\x12\x56\xdd\x39\x50\xf4\xc0\x65\x3a\x4c\xd8\x23\x02\xd3\x8f\x7a\x1a\xf1\x5f\x2c\xd3\x14\x45\xd2\x5e\x0e\xa0\xbf\x64\xa2\xaf\x37\x9d\xf5\x80\x75\x97\xe2\xce\x92\x13\x12\x2e\x2e\xdf\x84\xe7\xe1\x79\x78\x11\x39\x01\xfa\x2f\xda\xae\x06\x41\x0e\x2f\xea\x79\x08\x82\x6c\xbf\x70\x30\x84\x1c\xfd\x80\xb6\xc8\xdf\x9e\xfc\x96\x33\xf3\xf2\xd5\xc9\x13\xac\xfa\x64\x1b\x75\xea\xa2\xff\x38\x4b\x99\xd1\x6d\x2d\xa5\x94\x4a\xb5\x73\xbd\xda\xf5\xf8\x66\xf6\xe5\xf6\xe3\x68\x3c\x5a\xd4\x7d\x57\x53\x9c\x2b\x66\x76\x43\x29\x0c\xfd\x68\x79\xd1\x91\x94\x6d\x0d\xcc\xb6\x8c\xd3\x9a\x92\x08\x56\xc8\x75\x3d\x80\x0c\xa9\x94\x09\x57\x44\xc7\x7e\xe6\x34\x45\xb3\x89\xa0\x9f\xd0\xb6\x5f\xdb\x0c\xb8\x5c\xd7\xae\xf9\xb7\xf5\x58\xe6\xa2\xed\x6e\xa9\x5d\x2b\x68\x6c\x51\xf5\x39\x5b\x96\x2f\xd6\xbe\x8d\xe2\x06\xb2\xe3\x81\x1b\x34\xce\x27\x42\x97\x01\x5a\x74\x4a\xef\x99\xd2\xfb\x00\x55\xa4\x0d\x2a\x53\x9e\x19\xf0\x3b\xdc\xe9\x5e\x13\x70\xa3\xcc\xfd\x0c\x73\xa8\x3d\x6c\x6b\xbd\x55\xcb\x08\x76\x69\xf2\xfb\xb9\xc8\x28\xb6\x5e\x57\x35\x37\xf0\x09\x68\xb8\x41\x61\x95\xaf\x30\xad\xa1\xc4\xdc\xc8\x14\x0d\x8b\x23\xb0\xdd\x4a\xb7\x70\x5b\x76\x0d\xa9\xda\x39\x61\xd5\x4a\xb8\xbe\xb7\x1a\x59\x96\x73\xa3\x08\xd3\x05\xae\x1f\x4b\x2c\xb5\x19\xdc\xe7\xeb\xd9\x7c\x74\x33\x79\x68\x1d\x2d\xde\xaf\x2f\xee\xad\x74\xf3\xe9\x60\x58\x4b\xb7\x1c\xb5\x59\x78\x51\x29\x19\xf9\xcc\x7b\x72\xd2\xe8\x79\x46\x7b\xc9\x0b\x5d\x14\xad\xb0\x6b\xf8\xaa\x8d\xa2\x1b\xb6\x7e\xbd\x9f\x05\xd8\x27\x72\x63\xce\x31\xc6\x1f\x2c\xcd\x53\x40\xe7\x82\x20\x57\x45\x50\x81\xd9\xd0\x5e\x61\x10\xa3\x80\x5c\xbb\x29\x41\x31\x0d\xf0\x26\x1b\xfb\xc3\x1f\x6d\x78\x56\x0f\xf7\x7a\x30\xf6\x7c\x67\xcb\x94\x8d\xa3\xc2\x1a\xae\xa6\x45\xf0\xe7\x8b\xcb\x31\x6b\xe3\x59\x6c\xa8\x36\x41\x9b\x94\xda\x82\xbb\x0d\xb9\xc9\x16\xd5\xad\x60\xdd\x97\x25\xa4\x3b\xb0\xaa\x7b\x15\xa6\x4a\xd5\x7b\xfe\xfb\xf9\xc1\x01\x0c\xf6\x96\xd5\x86\x69\xe0\x29\xde\x7a\xe0\x9f\x6c\x09\xac\xa4\x72\x27\xca\x4a\xdb\x01\x52\xcd\x77\xcb\x9b\x13\x5f\x8a\x3d\xa8\x83\xee\x7e\x44\x63\xa5\x9b\xb6\xf0\x96\x93\x68\x07\xa7\x1c\x4a\xd9\xfe\x0f\xcc\x06\x0d\xdc\x31\xce\x61\x49\x76\xc5\x23\xf6\x0f\x14\x3f\xc4\x3c\x82\xbd\xa4\x54\x9f\x3e\x17\x9c\x7a\x45\x88\x38\x2e\x5f\x07\xc1\x3f\xcf\x83\xbf\x7c\xbb\x7f\x6d\xdd\x78\x4d\x82\x94\x1b\xd5\xd3\x8f\x4c\xf9\xd7\xdb\xde\x33\x9a\x2d\x6f\x4b\xce\x96\x58\xe5\xf4\xbc\xd2\x72\x09\x28\xde\x03\xb2\xfc\x9f\x02\x7c\xba\xef\xd6\x3c\xf0\xd3\xaf\x18\xfc\xbb\x04\x7e\xf1\x8b\x9b\x5e\x3c\x09\x7a\xad\x28\x1e\x87\x3f\xa9\x79\x50\x67\x00\xed\x4d\x40\xc9\xa3\xd8\x1b\xff\x18\xe8\x80\xa8\xb5\x8a\x8f\xf9\x8a\xc6\x34\xe3\xd4\x75\x96\x8e\x56\xf7\x98\x6c\x5f\x7b\x5c\xa3\x03\x77\xe4\xf9\x94\xd9\x69\xd5\x8f\xab\xd4\x17\x11\xf0\x19\x61\x3f\xa1\xb6\x92\x58\x29\xce\x80\xc2\x75\xe8\xf3\xca\x19\x5c\x7e\x60\x1d\x39\x0a\x02\x43\xcc\x30\x66\x66\x57\xe1\x69\xbd\xaf\x8f\xa8\xf5\xe2\x43\x27\x65\x15\xcf\x70\x6b\xeb\x52\x4f\xae\x38\x81\x91\x55\xd8\xbd\xbc\x0c\xff\x74\x06\x97\xe1\x2f\x67\xf0\x3a\xbc\x04\xa9\xc0\x8f\xab\x5f\x75\x21\x76\xa9\xb9\x8c\xd7\xd1\x5d\x51\x5c\x8e\x60\x3d\x79\x1d\x5e\x9e\xf4\xfe\x1b\x00\x00\xff\xff\x27\xdd\x04\xcd\x7a\x1b\x00\x00")

func templateTemplateOpenshiftIoOpenshiftMongodbPersistentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftMongodbPersistentYaml,
		"Template.template.openshift.io/openshift/mongodb-persistent.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftMongodbPersistentYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftMongodbPersistentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/mongodb-persistent.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftMysqlEphemeralYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x6d\x6f\xdb\xba\x15\xfe\xee\x5f\x71\x10\x14\x70\x0b\x44\x52\x72\x8b\xb4\x98\x80\x62\xf0\x4d\xdc\xcd\x58\xec\xf8\xda\x6e\x8b\xbb\xa2\x08\x68\xe9\xd8\xe2\x4a\x91\xba\x24\xe5\x44\xcb\xf2\xdf\x07\x92\x7a\xb7\xe3\x9b\x76\xf9\x34\x7d\x08\x1c\xf2\x90\x7c\xce\x73\x5e\x49\x92\xd1\xcf\x28\x15\x15\x3c\x04\x8d\x69\xc6\x88\x46\x5f\x64\xc8\x55\x42\x37\xda\xa7\x22\xd8\x9d\x0f\xbe\x53\x1e\x87\xb0\x2a\xa7\x07\x8c\xac\x91\xa9\x70\x00\xf5\x8a\x10\xd2\x42\xfd\xc1\x3c\xcc\x12\x4c\x51\x12\xe6\x55\x33\x83\x14\x95\x22\x5b\x0c\xe1\x3f\xde\x00\x60\x95\x20\x6c\x04\x63\xe2\x8e\xf2\x2d\x28\x94\x3b\x1a\xe1\x6b\xf5\x06\x12\xb2\x43\x58\x23\x72\x88\x24\x12\x8d\x31\x50\x0e\x85\xc8\x25\x64\x52\xfc\x0b\x23\x1d\xc2\xab\x87\xab\xd1\x6a\xf4\xeb\x68\x39\xbe\x5d\x8e\x17\x9f\x27\x97\xe3\xdb\xd9\x68\x3a\x7e\xf4\x07\x03\xa8\xbe\x4f\x0a\x25\x27\x29\x1a\xe9\xe9\xef\xcb\xdf\xae\x6f\x3f\x2d\xc7\x8b\xc7\x46\x60\x4e\x94\xba\x13\x32\x6e\x04\xe6\xa3\xe5\xf2\xcb\xcd\xe2\xca\x09\x5d\x11\x4d\xd6\x44\x21\xcc\x3a\xbb\x54\x27\x5b\xa1\x4b\xc1\x39\x46\x9a\x0a\x0e\x9f\x16\xd7\xa5\xee\x61\x10\x3c\x05\x30\x7c\xfb\xf6\xec\x5d\x60\x50\x7e\x14\x12\x52\x21\x11\x28\xdf\x08\x99\x12\xbb\x07\x59\x8b\x5c\x43\xae\x0c\x23\x3a\xa1\xaa\x66\xf5\x14\x28\x8f\x58\x1e\x9b\x89\x9b\x0c\xf9\xd2\x98\x04\x22\xc1\x15\x8d\x51\xda\xc5\xea\x14\x14\x22\x24\x5a\x67\x2a\x0c\x82\x2d\xd5\x49\xbe\xf6\x23\x91\x06\x2a\x62\x42\x6e\x03\x67\x97\x48\x70\x4d\x28\x47\x19\xac\x99\x58\x07\x29\x51\x1a\x65\x70\xe1\xbf\x0f\xa4\x10\x3a\xc8\x95\x0c\x54\x42\x24\x06\xb5\xa0\xa7\x22\x49\x33\xad\xdc\x06\xc1\x62\x3c\xba\x9a\x8e\xfd\x34\xf6\x07\x29\x6a\x12\x13\x4d\x8c\xfd\x09\xe7\x42\x3b\x20\xa1\xa5\x2f\x46\xb7\xce\xfa\x93\xb5\xb8\xf9\xa6\xc5\xf2\xb7\x6b\x88\x2b\x6a\x4b\xb3\x9f\xc2\x1d\xd5\x89\xd1\x3d\x33\x1e\xa8\x34\x72\x0d\x4a\x0b\x49\xb6\xe8\xff\x5f\x50\x55\xaa\xff\x65\xb4\x98\x4d\x66\x7f\x0b\x61\xc4\x0b\xcb\x82\xd5\x12\x63\xb8\xa3\x8c\xc1\x1a\x81\x09\xa5\x21\xcf\x04\x87\x4c\xc4\x86\x43\x2d\x73\xeb\x5f\x3e\xdc\x70\x56\x40\xae\xb0\xab\x2e\x6c\x84\x04\x8d\x4a\x53\xbe\xb5\x87\xd0\x48\xf0\x4b\x46\x94\x0a\xed\x4f\xcf\xe9\x52\x31\x6e\x45\x3a\x41\x1d\x53\x95\x31\x52\x78\x2e\x56\x9c\x7d\x5e\x8f\xab\xe8\x7d\x73\x60\x81\x88\xf2\x14\xb9\x33\xb6\x97\x4b\x16\xd6\x4c\xc6\x22\x52\xad\x94\x61\xa8\x34\x18\x95\x21\x8b\xf2\xed\x2d\x4d\xc9\x16\x55\x10\xaf\xab\x5f\x16\x9c\x9f\xe8\x94\xed\x9f\xc3\x04\xdf\x7a\x1d\x2f\x5a\x75\x14\xcf\xa4\xd8\xd1\x18\x15\x18\x12\x09\x8f\x09\x13\x1c\x4b\x05\x8c\x5f\xa1\x2c\x49\x37\xbe\x05\xa4\x71\xba\x32\xad\xf8\x2e\x07\xd5\xc3\x54\x01\x17\xba\x32\x88\xb1\xc0\x9e\x2f\x9e\x96\x3b\x2a\x01\x84\x17\x20\x51\x69\x22\x35\x88\x0d\xe8\xa4\x76\x66\x67\x4b\x89\x2a\x67\xda\xa4\x2e\xc2\x98\x33\xf5\x1a\x8d\x4f\x1a\x0b\xf7\x8e\x2e\x77\x35\x16\x38\x35\x16\x96\xee\x17\xe1\x31\x64\x65\x92\x02\x22\x11\xa2\x44\x28\xe4\xb0\xa3\x04\x32\x22\x49\x8a\x1a\xa5\x82\xbb\x04\xb9\x23\xc3\xe4\xee\x2a\x1e\x2a\xa4\x0e\x93\xbf\x4f\x6f\x49\x9f\xf4\xba\x0e\xb0\xc0\x18\xfe\x4e\xf4\x29\x4c\x78\x74\x60\x95\xca\xb3\x4c\x48\xdd\x35\x3b\x89\x22\x54\xca\x97\x18\x27\x44\x9b\x38\xb2\xeb\x34\xd9\xaa\xb0\xd6\xf1\xd4\x9a\x7a\xe0\xb4\xdc\x2b\x12\xe5\xb8\xca\x48\x84\x61\x73\xe2\x40\xac\x4d\xc2\x57\xe1\xc0\x83\x76\x79\xda\x9d\x0f\x00\x5c\x29\x5a\x62\x24\x51\x0f\x00\xda\xc9\xe8\x40\x3a\x82\x27\x6a\x1a\xde\x67\x42\x61\x1d\x1f\xb7\x0e\xde\xf0\xc1\x37\x23\x5f\x87\xc3\x6a\xc2\xd2\x33\x1c\x7e\x7b\x1c\x3e\x67\xbb\xac\xae\x2d\x07\x76\xaa\x26\x9f\xbd\x9b\x49\x37\xb7\x47\xb7\x34\x12\x3f\xbe\x6f\x5e\x97\xc8\x03\x5b\x9a\xc9\x66\xa7\xaa\x92\x1e\x2e\x6b\x03\x00\xa5\x25\xe5\xdb\xab\xda\x00\x1d\xde\x9e\xa8\x9e\xb0\x47\xc9\x53\xb5\xf8\xb0\xa2\x8d\xf4\xe2\xe6\x66\xf5\xd4\x12\xa3\x48\xbf\x09\x38\xe2\x4e\x36\x5e\xfe\x67\x7f\xca\x25\x6d\xba\x81\x07\x5f\x65\x18\xf9\x11\xcb\x4d\x05\x99\xcc\x1f\xc3\x72\xc4\x84\x92\xfa\xfa\xd7\xd7\xbe\x21\xe9\xc3\x87\x13\xbb\xe0\xe4\xcd\x37\x3b\xf1\xf8\x4c\xe2\x33\x8c\x1c\x24\xbb\x9b\xfb\xe9\xb5\xc3\xac\x4a\x2f\x22\xc6\xb9\x90\x3a\x84\xb3\x72\x24\xb3\xff\x99\x96\xa4\x1a\x90\x42\x8b\x48\xb0\x10\x56\x97\xf3\x4a\x4d\x22\xb7\xa8\xe7\x5d\x51\x85\x0c\x23\x2d\x64\xd8\x4a\x5d\x47\x51\x9a\x25\xca\xb0\x3d\xda\x6c\x28\xa7\xba\x08\x61\x26\xb8\xcb\x7c\xba\xc8\x30\x84\xcb\x8a\x1d\xeb\x4c\x44\xe7\xa5\x2a\x4c\x90\xf8\x57\xc2\x08\x8f\x8c\x19\x1f\x8e\xd8\xee\x0a\x33\x26\x0a\x53\x9a\x2e\x05\xdf\xd0\xed\x0f\x19\x91\xb0\x2c\x21\x5d\x53\xde\x11\xaa\xbd\x8d\x90\x9e\x44\x12\x17\x21\x9c\x68\x99\xe3\xc9\x8f\x5a\x45\x62\xc6\x68\x44\x54\x08\xe7\x3f\x4d\x9d\x96\x44\xe3\xb6\xa8\x41\x5b\xc2\x16\xe8\x0a\xd9\xa0\xad\x47\x25\xd2\x55\xdc\xf2\x58\xb7\xea\xd5\xf7\x8c\x93\xdb\x8a\x98\xaf\xee\x74\x5a\x1b\x79\x10\x91\x8c\xac\x29\xa3\x9a\xa2\xb2\x26\x6a\xce\x40\xbe\x6b\x1f\x59\xf9\x65\x13\x8b\xad\x49\x80\x1d\x61\x39\x7e\x94\x22\x0d\x3b\xc3\x86\x34\x93\xe5\xff\x81\xc5\x02\x37\xfd\x39\x80\xef\x58\x84\xdd\x78\xdf\x13\x79\x96\xae\xfb\x08\xab\x94\xf2\xf2\x28\xab\x1c\xf6\x52\x48\x3b\x19\xf0\xe5\xe1\x76\xf2\xee\x4b\x61\xae\xc4\x5f\x1e\xae\x39\xe5\xe7\x51\xda\xe6\x34\x84\x21\x0c\xfb\x83\xf3\x9c\xb1\xb9\x60\x34\x2a\x42\x98\x6c\x66\x42\xcf\x25\x2a\xe4\xba\x25\xc7\xe8\x0e\x39\x2a\x35\x97\x62\x8d\x5d\x9c\x26\xf1\x51\xc2\xae\x90\x91\x62\x89\x91\xe0\xb1\x0a\xe1\xed\x59\x47\x46\x47\xd9\x52\x44\xdf\x51\xf7\x55\xdc\x4b\xd6\xa5\x3c\x4d\x51\xe4\xba\xde\xee\x7c\x2f\xc0\xdb\x35\x00\xba\x65\xa2\x32\x4a\x1d\xd6\xf3\xc3\x87\x1c\xaa\x0b\x60\x73\x1b\x89\xe9\x13\xca\xe2\x7d\x3b\x71\xb8\x2f\x12\x69\x4a\x78\xdc\x1f\xf6\x20\x58\x53\x1e\xa8\x64\x6f\xdc\xa3\xfb\x43\xd1\xde\x50\x19\xab\x5f\xae\x3e\x9c\xbc\xea\xc6\xed\x89\xd3\x1e\xbc\x04\xce\x7f\x79\xef\x9f\xf9\x67\xfe\x39\x78\x39\xbc\x6a\x12\x10\x78\x57\xd5\xbf\x07\xfd\xd1\x1e\x81\x30\x5c\x8e\xaf\xc7\x97\x2b\x38\x1f\xfe\xb9\x49\x2f\x9e\x6d\x21\x89\x4a\xe4\x32\x42\xd5\xa5\x84\xd1\x94\x6a\xd5\xa7\x29\xc5\x54\xc8\xc2\xb6\x32\xe3\xe9\xcd\xe2\xf7\xdb\xeb\xc9\x74\xb2\x6a\x3b\xae\xc2\x28\x97\x54\x17\x97\x82\x6b\xbc\xef\xb9\xd0\x91\x2c\x6d\x2c\x4c\x77\x94\xe1\x16\xe3\x10\x36\x84\xa9\x76\xf4\x68\x94\x29\xe5\xb6\x6e\x4e\xdd\x13\xce\x9c\xe8\x24\x84\x20\xc6\x5d\xd0\x9a\xf4\x98\xd8\xb6\x96\xed\x04\xcb\x53\x9c\x8a\x9c\xf7\xdd\x2d\x35\x63\xe5\x1e\x3b\x22\x03\x46\xd7\xe5\x8d\xd9\x04\x70\x07\xd7\xf1\x98\xf5\x3a\xf2\x31\x57\x55\x6c\x96\xcd\xc4\x47\x2a\x55\x13\x9b\xe5\x75\xad\x92\x19\xb1\x3b\x52\xa8\x41\x17\x6e\xa7\xae\x61\x9a\xe9\xe2\x8a\xca\x2e\x8f\x29\xc6\x34\x4f\x43\x38\x39\x79\x76\x2d\x6d\x70\x6a\x49\xb7\xdb\xba\x7c\x7a\x2e\xab\x5c\x26\x84\x1b\x52\x25\x49\x5b\xe7\x93\x5c\x8b\x94\x68\x1a\x85\x60\x1a\x8f\xfd\x1a\x3c\x23\x3d\xbc\xdd\x48\xdf\xf4\x72\xa8\x6b\x92\x26\xe6\xc0\xa5\x96\x48\xd2\x15\xd9\x1e\x4e\x16\x61\xd5\x2c\x7f\x1e\x2f\x96\x93\x9b\xd9\x63\x4f\xac\xbc\xa6\xbd\x7a\x30\xca\x2d\xe7\xa3\xcb\x56\xf6\x64\x44\xe9\x95\x53\x12\xe3\x89\x4b\xa4\x35\x53\xae\x71\x99\x34\x3a\x97\x2c\x94\x1d\xa0\xed\xda\xea\x89\xb2\x09\x34\x9e\xda\xdc\x76\xcd\x4d\xb0\xf3\x26\x30\x25\xf7\x34\xcd\x53\x20\xd6\xa9\xcc\x55\xdc\x85\x89\xbd\x91\xd7\x54\x41\x44\xb8\xb9\x59\x9b\x1b\x6d\x79\xdf\x75\xaf\x7a\x53\x27\x7c\x6d\x02\xae\xbe\x9c\xb6\xc3\x6b\x60\xfc\xe6\x8f\x9c\x4a\x13\x19\xa5\x1d\x6c\x89\x0a\xe1\xe2\xfc\x97\x29\xed\xe3\x31\xf7\xfa\xe6\xd9\x69\x56\xb1\x65\x6e\xe9\x12\x2d\xa8\x96\x05\x8c\x4b\xd2\x18\xd5\x1e\xac\x7a\x5d\x8d\xa9\xa6\xba\x39\xbf\xb9\x26\x1f\xc0\x60\x56\x55\x0f\x13\x0d\x9e\xf2\x7a\x03\xee\x96\x12\xbb\xc7\xa3\xd6\x4b\xc4\x1e\x90\xfa\x11\xb4\x5a\x39\x73\x95\xd5\x81\x3a\xe8\xed\x47\x18\x73\x0e\xda\x43\x5b\x3d\xd4\x5a\x30\xee\xf9\xc6\xb4\x70\xa0\x13\xa2\xeb\x77\xb1\xbc\x42\xeb\xde\x1a\xdc\x2b\xc7\x11\xdc\x6e\x9f\xf6\xf3\x6c\x79\xca\xa0\x0c\x0c\x7b\xc6\xd7\x91\xf7\xcf\x33\xef\x2f\xdf\x1e\xde\x1a\x07\xde\x22\x47\x69\x9f\xb0\xf1\x3e\x93\xee\xba\xd2\xf8\x44\xbb\x63\xed\xe9\xd7\x53\xa8\x7a\x58\xae\xd9\x75\x60\xa2\x06\x8c\x39\xfb\xcf\x21\xcf\x9b\x76\xcb\x41\x1e\x7e\x25\xde\xbf\x2b\xc8\xe7\xef\xec\xd5\xfc\x19\xa0\x5b\x5d\xe1\x4f\x01\x37\xbd\xdf\x31\xc8\xf5\xfc\x8b\x21\xee\x37\xb3\xc7\x61\xcf\x5a\xae\xde\x7b\x5f\x76\xde\x82\xf1\x13\xc8\x3b\x4f\xfc\x3d\x0c\xad\x66\xe0\x29\x77\x56\x24\xcd\x18\xc6\xeb\x3e\xa0\xf2\x72\x6a\x30\xb9\x73\x6c\x96\x07\x2d\x6a\x4f\x7e\x7d\xe1\x5f\x9c\xc2\x85\xff\xce\xfc\x79\x7f\x0a\x42\x82\x7b\x28\x7d\xb3\x87\x74\x6f\x33\x9b\x3f\x7a\x60\xcb\x44\x7d\x04\xeb\xc9\x85\xff\xfe\x64\xf0\xdf\x00\x00\x00\xff\xff\x8e\x09\x4e\x9f\xe4\x19\x00\x00")

func templateTemplateOpenshiftIoOpenshiftMysqlEphemeralYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftMysqlEphemeralYaml,
		"Template.template.openshift.io/openshift/mysql-ephemeral.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftMysqlEphemeralYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftMysqlEphemeralYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/mysql-ephemeral.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftMysqlPersistentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x6f\x6f\xdb\xbc\x11\x7f\xef\x4f\x71\x08\x0a\xb8\x05\x2c\xa9\x6e\x91\x16\x13\x50\x0c\x9e\xe3\xe7\x99\xb1\x38\xf1\x63\xbb\x2d\xba\xa2\x08\x68\xea\x6c\x71\x95\x48\x3d\x24\xe5\xd4\xcb\xf2\xdd\x07\x92\xfa\x6f\xc7\x4d\xba\xbc\x9a\x5e\x04\x0e\x79\x3c\xfe\xee\xff\x1d\x49\xc6\x3e\xa1\x54\x4c\xf0\x10\x34\xa6\x59\x42\x34\xfa\x22\x43\xae\x62\xb6\xd1\x3e\x13\xc1\x6e\xd8\xfb\xce\x78\x14\xc2\xaa\xd8\xee\x25\x64\x8d\x89\x0a\x7b\x50\x9d\x08\x21\xdd\xab\x3f\x13\x2f\x33\xac\x94\x46\xae\xbd\x72\xab\x97\xa2\x52\x64\x8b\x21\xfc\xc7\xeb\x01\xac\x62\x84\x8d\x48\x12\x71\xcb\xf8\x16\x14\xca\x1d\xa3\xf8\x52\xbd\x82\x98\xec\x10\xd6\x88\x1c\xa8\x44\xa2\x31\x02\xc6\x61\x2f\x72\x09\x99\x14\xff\x42\xaa\x43\x78\x71\x77\x31\x5a\x8d\xfe\x36\x5a\x4e\x6e\x96\x93\xc5\xa7\xe9\x78\x72\x73\x35\x9a\x4d\xee\xfd\x5e\x0f\xca\xef\xa3\x42\xc9\x49\x8a\x86\x7a\xf6\x65\xf9\xc7\xe5\xcd\xc7\xe5\x64\x71\x5f\x13\xcc\x89\x52\xb7\x42\x46\x35\xc1\x7c\xb4\x5c\x7e\xbe\x5e\x5c\x38\xa2\x0b\xa2\xc9\x9a\x28\x84\xab\x16\x97\xf2\x66\x4b\x34\x16\x9c\x23\xd5\x4c\x70\xf8\xb8\xb8\x2c\x84\x0f\x83\xe0\x21\x80\xe1\xdb\xb7\xaf\xdf\x05\x06\xe5\x6f\x42\x42\x2a\x24\x02\xe3\x1b\x21\x53\x62\x79\x90\xb5\xc8\x35\xe4\xca\x68\x44\xc7\x4c\x55\x6a\x1d\x00\xe3\x34\xc9\x23\xb3\x71\x9d\x21\x5f\x1a\x9b\x00\x15\x5c\xb1\x08\xa5\x3d\xac\x06\xa0\x10\x21\xd6\x3a\x53\x61\x10\x6c\x99\x8e\xf3\xb5\x4f\x45\x1a\x28\x9a\x08\xb9\x0d\x9c\x61\xa8\xe0\x9a\x30\x8e\x32\x58\x27\x62\x1d\xa4\x44\x69\x94\xc1\xb9\xff\x3e\x90\x42\xe8\x20\x57\x32\x50\x31\x91\x18\x54\x84\x9e\xa2\x92\x65\x5a\x39\x06\xc1\x62\x32\xba\x98\x4d\xfc\x34\xf2\x7b\x29\x6a\x12\x11\x4d\x8c\x03\x10\xce\x85\x76\x40\x42\xab\xbe\x08\xdd\x39\xeb\x50\xd6\xe2\xe6\x9b\xed\x97\x7f\x5c\x42\x54\xaa\xb6\x30\xfb\x00\x6e\x99\x8e\xa1\x76\x1a\x50\x5a\x48\xb2\x45\xff\xff\x42\x4f\x85\xec\x57\xd7\xab\x49\x08\x4b\x4a\x12\x8b\x5b\x38\xb9\x74\x4c\x38\x08\x8e\x20\x31\x4b\x18\x25\xc0\x14\x70\xa1\x41\xe5\x59\x26\xa4\xc6\xc8\x87\x2f\x22\x87\x34\x57\xda\x85\x46\x43\x4b\x3b\x91\xe4\x29\x2a\x20\x3b\xc2\x12\xb2\x4e\xb0\x0a\x15\x9a\xe4\x06\xb0\xb9\x25\x57\xd8\x56\x92\x6f\xf1\x30\x2a\xf8\x38\x21\x4a\x85\xf6\xa7\xe7\xc4\x2e\x2d\x63\x49\x5a\xd1\x1f\x31\x95\x25\x64\xef\xb9\x98\xb2\x76\x3c\x42\x24\x68\x9e\x22\x77\x8e\xe0\xe5\x32\x09\x2b\x45\x47\x82\xaa\x46\x3e\x31\x9a\x36\x60\x94\xd1\x25\xe3\xdb\x1b\x96\x92\x2d\xaa\x20\x5a\x97\xbf\x2c\x20\x3f\xd6\x69\x72\x78\x4f\x22\xf8\xd6\x6b\x79\xd8\xaa\x29\xa1\xc9\x14\x3b\x16\x19\xcd\x80\xd2\x84\x47\x24\x31\x1a\x76\xce\x67\x7c\x0e\x65\x61\x13\xeb\x77\xa4\x76\xc8\x22\xe5\xf8\x2e\x3f\x55\xcb\x4c\x59\x8f\xc4\x08\x04\x3f\xea\xa6\x86\xbc\x60\x59\x1d\x32\x9a\x1a\x18\xf5\x4b\xf7\x8b\xf0\x08\xb2\x22\xe9\x00\x91\x08\x34\x16\x0a\x39\xec\x18\x81\x8c\x48\x92\xa2\x46\xa9\xe0\x36\x46\xee\x04\x30\xc9\x98\xf1\x6d\xc1\xd7\xda\xb0\x08\x18\xff\x50\x25\x85\xc8\xd2\x6b\x1b\x6a\x81\x11\xfc\x9d\xe8\x01\x4c\x39\x3d\x72\xaa\xf0\xb2\xb6\xa9\x08\xa5\xa8\x94\x2f\x31\x8a\x89\x36\xa1\x61\xcf\x69\xb2\x55\x61\x25\xdd\xc0\x9a\xa7\x07\xe0\xae\xe9\x66\xfd\x62\x43\x65\x84\x62\x58\x5f\xd9\x13\x6b\x93\xc1\x55\xd8\xf3\xa0\x59\x70\x76\xc3\x1e\x80\x2b\x2e\x4b\xa4\x12\xcd\xf9\x66\x76\x39\x92\x5f\xe0\x81\x2a\x85\x3f\x32\xa1\xb0\x72\xe4\x1b\x87\xaf\x7f\xe7\x9b\x95\xaf\xfd\x7e\xb9\x61\xf5\xd3\xef\x7f\xbb\xef\x3f\x86\x5d\x56\x15\x8b\x23\x9c\xca\xcd\x47\x73\x33\x29\xe4\xe6\x24\x4b\x43\xf1\x74\xbe\x79\x55\xf3\x8e\xb0\x34\x9b\x35\xa7\xb2\x34\x1e\xaf\x53\x3d\x00\xa5\x25\xe3\xdb\x8b\xca\x00\x2d\xbd\x3d\x50\x0e\xe1\x40\x25\x0f\x15\xd7\xe3\x82\xd6\xd4\x8b\xeb\xeb\xd5\x43\x47\x8c\x20\xdd\xaa\x7e\xc2\x9d\x6c\xc0\xfc\xcf\xfe\x94\x4b\x56\x97\xf7\x3b\x5f\x65\x48\xfd\x22\xc9\x4e\xe7\xf7\x61\xb1\x62\x62\x49\x7d\xfd\xeb\x4b\xdf\x28\xe9\xc3\x87\x33\x7b\xe0\xec\xd5\x37\xbb\x71\xff\x48\xc5\x67\x48\x1d\x24\xcb\xcd\xfd\xf4\x9a\x71\x56\xe0\x35\xdb\x21\x98\x8e\xc2\x2e\x28\x4c\x90\x6a\x21\x4b\x71\x7e\x72\xd1\x83\x1a\x9b\x57\x41\xfc\xc9\x96\x97\x71\x42\x58\x7a\xa0\xbf\x27\x88\xe1\xd2\xc9\x4c\x44\x58\x09\xb3\x40\x12\x7d\x96\x4c\xe3\x35\xa7\x2e\x6f\x4a\x54\x22\x97\x14\x2b\x6b\x48\xfc\x33\x47\xa5\xab\xff\xa1\x4c\xb6\xe6\xd6\x4f\xd7\x97\x1f\x67\x93\x9b\xf1\x68\x3e\x1a\x4f\x57\x5f\x4e\x48\x73\x81\x59\x22\xf6\xa6\x26\x8d\x05\xdf\xb0\xed\x93\x1c\x81\x24\x59\x4c\xda\xee\x70\x4b\x98\xf6\x36\x42\x7a\x12\x49\xb4\x0f\xe1\x4c\xcb\x1c\xcf\x9e\xaa\x92\xa2\xd6\xab\x10\x86\xbf\x62\x3b\xa7\x0d\x49\x34\x6e\xf7\x15\xe8\x7d\x66\xd3\xbd\xab\x60\xbd\xa6\x1c\x25\x49\x5b\x70\xf3\xd5\x0d\x7c\xf9\x3d\xe2\xe6\xa6\x20\xe6\xab\x3a\xa0\x06\x23\x0f\x90\xef\x9a\x7c\x4b\x07\xae\x83\xb6\xb1\x09\xb0\x23\x49\x8e\xbf\x49\x91\x86\xad\x65\xa3\x19\x53\x0e\xfe\x81\xfb\x05\x6e\xba\x7b\x00\xdf\x71\x1f\xb6\x13\xc3\x01\xc9\xa3\x04\x3a\x44\x58\xe6\x9e\xe7\x47\x59\x26\xbb\xe7\x42\xda\x4a\x95\xcf\x0f\xb7\x95\xa0\x9f\x0b\x73\x49\xfe\xfc\x70\xcd\x2d\xbf\x8e\xd2\xb6\x9e\x21\xf4\xa1\xdf\x5d\x9c\xe7\x49\x32\x17\x09\xa3\xfb\x10\xa6\x9b\x2b\xa1\xe7\x12\x95\x6b\x74\xca\x2f\x61\x3b\xe4\xa8\xd4\x5c\x8a\x35\xb6\x71\x32\xce\x34\x23\xc9\x05\x26\x64\xbf\x44\x2a\x78\xa4\x42\x78\xfb\xba\x45\xa3\x69\xb6\x14\xf4\x3b\xea\xae\x88\x9d\x3c\x5f\xd1\xb3\x14\x45\xae\x2b\x76\xc3\x83\x28\x6e\x16\x0b\x68\xd7\x93\xd2\x28\x55\xec\xce\x8f\x5d\x62\x72\x1c\x7b\x40\x24\xfc\xd1\xcc\x01\xee\xa3\x22\x4d\x09\x8f\xba\xcb\x1e\x04\x6b\xc6\x03\x15\x1f\xac\x7b\xec\x70\x89\x1e\x2c\x15\x11\xf9\xf9\xe2\xc3\xd9\x8b\x76\x74\x9e\x39\x19\xc1\x8b\x61\xf8\xe6\xbd\xff\xda\x7f\xed\x0f\xc1\xcb\xe1\x45\x9d\x66\xc0\xbb\x28\xff\x3d\xea\x75\xf6\x0a\x84\xfe\x72\x72\x39\x19\xaf\x60\xd8\xff\xb9\xe1\xce\x1f\x6d\x87\x83\xaa\xe6\xbe\x84\xa5\x4c\xab\xae\x9a\x52\x4c\x85\xdc\xdb\xce\x66\x32\xbb\x5e\x7c\xb9\xb9\x9c\xce\xa6\xab\xa6\x7b\xba\x79\x6f\x26\x72\xde\xb5\x63\x6a\xd6\xe6\x44\xc7\x21\x04\x3b\x22\x83\x84\xad\x8b\x39\xd4\x44\x46\xeb\xa2\xd3\xc1\xe0\xb5\xe8\x8b\x01\xb3\x99\xd7\x9f\x72\x1c\x1a\xb3\x52\xa3\x99\x68\x0b\x4e\xcd\xd2\xd5\xcf\x23\x54\x4b\xb6\xdd\x56\x45\xc6\x73\x61\x39\x8e\x09\xdf\xe2\xdc\x4c\x4f\x0d\x94\x24\xd7\x22\x25\x9a\xd1\x10\x4c\x79\x3e\xac\x54\xe6\xba\x96\x54\xed\x50\xd9\x74\x92\x90\x6b\x25\xa6\xe6\xc2\xa5\x96\x48\xd2\x15\xd9\x1e\x8f\xb6\xb0\x6c\x4b\x3f\x4d\x16\xcb\xe9\xf5\xd5\x7d\x87\xac\x18\x88\x5e\xdc\x19\xb9\x96\xf3\xd1\xb8\x4a\x3f\xae\x7e\x4f\x6b\xa1\x0a\x31\xdd\xba\x6b\x5e\x8a\x8d\x7a\x58\x34\x73\x54\x6b\x0c\x9e\x91\x1f\x2c\xcd\x53\x20\xd6\x21\x40\x6c\x0a\xaf\x02\x1d\x63\x2d\x3e\x50\xc2\xcd\x60\x6a\x06\xc2\x62\x5c\x74\x06\x98\x39\xe2\x4b\xe3\x9f\xd5\x6c\xd7\xf4\xc6\x9e\x6b\xcc\x98\xc4\xa8\xd2\xad\xcd\xdb\x21\x9c\x0f\xdf\xcc\x58\x17\x8f\x99\xa2\xeb\x87\x98\xab\x52\x03\x66\xc8\xb5\x6f\x1f\xd8\xd4\xaa\x09\x17\x33\xb5\x1f\xc0\xaa\xce\x55\x98\x2a\xf5\xd5\xf7\xd7\x43\xe6\x11\x0c\xe6\x94\xd1\x86\x6e\xe1\x29\x86\x03\x70\x3d\x7e\x04\x1b\x21\x2d\x45\x59\x4d\x0e\x80\x54\x6f\x82\xe5\xc9\x2b\x57\x6e\x1c\xa8\xa3\xce\x7b\x42\x63\xce\xe9\x3a\x68\xcb\x77\x4b\x0b\xc6\xbd\x58\x98\xbe\x06\x74\x4c\x34\xdc\xb2\x24\x81\x35\x9a\x15\x87\xd6\xf5\xd6\xee\x1d\xec\x04\x6e\xc7\xa7\xf9\x5a\x59\xdc\xd2\x2b\x9c\xdd\xde\xf1\x75\xe4\xfd\xf3\xb5\xf7\x97\x6f\x77\x6f\x8d\x53\x6e\x91\xa3\xb4\x4f\xba\xf8\x23\x93\xe6\x16\xc1\x6b\x9f\x68\xb6\x71\x1d\xf9\x3a\x02\x95\xef\xac\x95\x76\x1d\x18\x5a\x83\x31\x77\xff\x1c\xf2\xbc\xee\x41\x1c\xe4\xfe\x57\xe2\xfd\xbb\x84\x3c\x7c\x67\x07\xdb\x47\x80\x6e\xb4\x4a\xbf\x04\xdc\x34\x44\xa7\x20\x57\xfb\xcf\x86\xb8\xdb\xe1\x9d\x86\x7d\xd5\x70\xf5\xce\x73\xab\xf3\x16\x8c\x1e\x40\xde\x7a\xf1\xee\x60\x68\xd4\xce\x87\xdc\x59\x91\x34\x4b\x30\x5a\x77\x01\xb9\xcc\x0f\x2e\xf0\xeb\xa7\x4a\xa3\x55\x83\x6c\x00\xe8\x6f\x7d\x97\x3e\x06\xf0\xe6\x77\x76\x80\xae\x60\x30\x26\x19\xa1\x4c\xef\x2b\x64\x9d\x29\xf0\x04\xb4\xe1\xef\x07\x99\xa9\x18\x16\x8d\xa6\x9c\xf4\xb6\x9e\x80\x16\x55\x7c\xbd\x3c\xf7\xcf\x07\x70\xee\xbf\x33\x7f\xde\x0f\x40\x48\x70\x2f\x96\xaf\x0e\x11\x76\x99\xd9\xac\xd6\x51\x61\x51\x12\x4e\xc0\x3c\x3b\xf7\xdf\x9f\xf5\xfe\x1b\x00\x00\xff\xff\x9e\x47\xb5\xb0\x8a\x19\x00\x00")

func templateTemplateOpenshiftIoOpenshiftMysqlPersistentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftMysqlPersistentYaml,
		"Template.template.openshift.io/openshift/mysql-persistent.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftMysqlPersistentYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftMysqlPersistentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/mysql-persistent.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftNginxExampleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\xeb\x6f\xe3\xc6\x11\xff\xae\xbf\x62\x70\x08\x70\x77\x80\x29\x9d\xd3\x16\x48\xf9\x4d\x27\x2b\xb6\x10\xeb\x01\x49\x4e\xd2\x06\x81\xb1\x22\x47\xe4\xd6\xcb\x5d\x66\x77\x29\x59\xbd\xfa\x7f\x2f\x66\x97\xa4\x48\x89\xe7\x47\x91\xab\x3f\x59\xfb\x98\xf9\xcd\x6f\x9e\x4b\x96\xf3\x9f\x51\x1b\xae\x64\x08\x16\xb3\x5c\x30\x8b\x7d\x95\xa3\x34\x29\xdf\xda\x3e\x57\x83\xdd\x65\xef\x81\xcb\x38\x84\x75\xb9\xdd\x13\x6c\x83\xc2\x84\x3d\xa8\x6f\x84\x20\x13\x2e\x1f\x03\x7c\x64\x59\x2e\xb0\x97\xa1\x31\x2c\xc1\x10\xfe\x13\xf4\x00\xd6\x29\xc2\x56\x09\xa1\xf6\x5c\x26\x60\x50\xef\x78\x84\x1f\xcc\x47\x48\xd9\x0e\x61\x83\x28\x21\xd2\xc8\x2c\xc6\xc0\x25\x1c\x54\xa1\x21\xd7\xea\x5f\x18\xd9\x10\xbe\xfb\x32\x1b\x4e\xc7\x4f\xfd\x5e\x0f\xe0\x47\xa5\x21\x53\x1a\x81\xcb\xad\xd2\x19\xb3\x5c\x49\x60\x1b\x55\x58\x28\x0c\x89\xb6\x29\x37\x35\xa6\x0b\xe0\x32\x12\x45\x4c\x1b\xf3\x1c\xe5\x8a\x0c\x82\x48\x49\xc3\x63\xd4\xee\xb2\xb9\x00\x83\x08\xa9\xb5\xb9\x09\x07\x83\x84\xdb\xb4\xd8\xf4\x23\x95\x0d\x4c\x24\x94\x4e\x06\x95\x55\x83\x8d\x50\x9b\x41\xc6\x8c\x45\x3d\x58\x8e\x87\x57\xd3\x71\x3f\x8b\xfb\xbd\x0c\x2d\x8b\x99\x65\xc4\x05\x93\x52\x59\x2f\x96\x7e\x02\xc4\x68\x22\xcd\x73\xeb\xb8\x1d\x4a\x28\xc9\x81\x19\x09\x85\x9b\xf5\x7a\xe1\xb8\x40\x0d\x4c\xc6\xc0\x40\xe3\x0e\xb5\x41\xb2\xfd\xf1\x00\x1f\x9c\xee\x8f\xc0\xf2\x5c\xf0\xc8\xc9\x75\x52\x01\x6c\xca\xac\xbf\x69\xc0\x90\xc6\x88\xac\xb2\x28\x6d\xff\xad\x14\x95\x12\xbf\x3d\x51\x4e\x4b\xa4\xe4\x48\x30\x63\x42\xf7\x6f\xe0\xee\xb8\x9d\x56\xbc\xc5\xdc\xe4\x82\x1d\x02\xc9\x32\x0c\x5f\x47\x56\x87\x10\x15\x15\x19\x4a\xef\x8f\xa0\xd0\x22\x7c\x05\xf8\x73\x31\x42\xc9\x24\x68\xf9\x71\xdd\xe4\x0f\x62\xdc\x72\x89\x06\x34\x1a\x55\xe8\x08\x0d\x48\xc4\x18\x63\xb0\x0a\x62\xdc\xa1\x50\x79\x49\x31\xab\x5c\xd5\xf0\xa7\xb7\x28\x86\xcd\xe1\x6d\x31\x71\xee\x36\x06\x9b\x82\x8b\x98\x9c\xb6\xe5\x49\xa1\x4b\xbf\x93\x88\x86\xba\x18\x73\xa1\x0e\x44\x4b\xfb\x60\xff\xdc\xf0\x5c\xab\x1d\x79\x3f\x68\x7b\x63\x89\x31\xdc\x30\x7b\x01\x13\x19\x75\xdc\x32\x45\x9e\x2b\x6d\xdb\x7c\xb3\x28\x42\x63\xfa\x1a\xe3\x94\x59\xa2\xdd\xdd\xb3\x2c\x31\x21\xfc\x51\xf0\xe8\xc1\x58\xa6\xed\x45\x15\x0d\x5e\x51\xbb\x9c\xf8\x55\x93\xb3\x08\xc3\xa3\xc6\x9e\xda\x50\x8d\x30\x61\x2f\x80\x66\x19\xdb\x5d\xf6\x00\x7c\xc9\x5a\xf9\x5a\xd3\x03\x68\x66\x6a\x47\xae\x9e\x64\xeb\xf8\x31\x57\x06\x8d\x63\x50\x28\x16\xc3\x86\x09\x26\xc9\xbf\x36\xc5\x16\xa7\xb9\x8a\x8d\x93\xe0\x71\x97\xe5\xaa\x07\x60\x72\x8c\xbc\x6c\xa2\xa4\x54\x13\x94\xc7\xf6\xb8\x29\xd5\xd2\x66\x08\x3f\x7c\xfa\xe1\x53\x95\xdd\x4c\x27\x68\x17\xed\x65\x83\x02\x23\xab\x74\x05\xb6\xad\xec\xab\xe6\x2f\x55\x61\x5f\x65\x7c\x77\xe5\x47\xc7\x42\x50\x68\xee\xbd\x19\x0e\x06\x5f\xfa\x64\x57\x3f\x55\xc6\x3e\x95\xff\xe7\xcc\xa6\x4f\x2f\x50\x40\xe7\x69\x67\xb8\x58\xdc\x4e\x46\xc3\xf5\x64\x3e\xbb\xbf\x9a\x4f\x87\x93\x99\xbf\x69\x55\x85\xe4\xd4\x6f\x6f\xb0\x76\x92\xb1\x04\x57\x56\x23\xcb\xde\xec\xf0\x9f\x10\x73\x03\x56\xb3\xe8\x01\xd4\x16\xa2\x94\xc9\x04\x0d\xb5\xa3\x53\x87\x73\xd2\xd2\x61\xee\x57\x61\x7d\xa6\xcc\x1c\xb9\x7c\x7b\x33\xac\xab\xb2\xbe\xa4\x6a\x4f\x25\xc5\x27\xf9\x09\xa2\x53\x17\x32\x91\xa7\xac\xed\xc8\x3d\xe3\x36\xd8\x2a\x1d\x68\x64\xf1\x21\x84\x77\x56\x17\xf8\xee\x05\x9f\xa9\xc2\xe6\x85\xad\x23\xa4\xf6\x50\x07\xdd\x6b\x96\xd4\x9b\x2d\x81\x21\x21\x32\xd6\xc7\xb0\xab\x90\x95\x14\xd7\xb1\x1e\xed\x15\xd7\x74\x78\x34\x9f\xad\xc7\xbf\xae\xef\xaf\x26\xcb\xa7\xf2\x40\xc2\xed\x51\xa3\xc6\x2d\x1d\x5b\xcd\xef\x96\xa3\xf1\xfd\x72\xbc\x98\xaf\x26\xeb\xf9\xf2\x1f\xf7\xcb\xf1\x8f\x4f\xf5\x29\x17\xa8\x5d\xa7\xee\x96\xb7\xd5\x29\x7b\xc8\x31\x84\x6b\x5e\x62\xb2\x9a\x59\x4c\x0e\x95\x26\x8f\x71\x75\xb2\x0a\xb0\xd5\x2a\x3b\xfe\x7a\x81\x81\x56\x0d\x0b\xbf\xfb\x32\xbb\x9e\xcc\x7e\xbd\xff\x79\xbc\x5c\x4d\xe6\xb3\xa7\x93\x63\x65\x51\xf3\x7c\xad\x16\xc3\xd1\xb8\x8d\x74\xe5\x10\xf9\x24\xd1\x3c\x49\x50\xd7\xa5\xc4\x1f\x70\x20\x46\x2e\x5e\x5b\xeb\x3e\xe2\x5a\x1b\xbe\xf3\x1d\xed\x30\x18\x69\x74\x79\x79\x3d\x59\xdf\xdc\x7d\xbe\xff\x65\xfc\xf9\x66\x3e\xff\xe9\x7e\x35\x1e\x2d\xc7\xeb\x33\xca\x6e\x8a\x4d\x25\x09\x25\x6a\x1e\x75\x8a\x1a\xcf\xc6\xcb\xc9\xe8\x79\x59\xfe\xfa\xd7\x73\xe6\xaa\xee\x54\x7f\x4e\xe2\xf8\xce\x77\x96\xcb\xbe\xd5\x7e\xab\x04\xd2\xe8\x34\x99\x10\x2e\x5f\x51\xc4\xbb\xc2\xd1\xb3\xb5\x54\x42\x70\xe9\xe3\xab\x1e\xb8\xcb\x13\x6d\x56\xe8\xef\x38\x9c\x77\x66\x64\x77\x9e\x56\xe1\x5f\x63\xaf\x52\x94\x71\x59\x47\x9c\x77\x3d\xca\x5d\x08\xbf\xfd\xde\x90\xef\x2a\x62\x08\xef\xe1\x7d\x63\x51\xf0\x1d\x4a\x34\x66\xa1\xd5\x06\x9b\x68\xc0\xb5\x92\x6b\xb4\xed\x45\x00\xea\x23\x21\x0c\x4e\x57\x4f\xfb\x63\xa9\x53\x72\xcb\x99\xb8\x42\xc1\x0e\x2b\x8c\x94\x8c\x4d\x08\x7f\x69\x9f\xb1\x3c\x43\x55\xd8\xe3\x76\x77\x86\x36\xa6\x8c\xa6\xd2\x16\x85\xc1\x91\x8c\x45\x17\x20\x0a\x0b\xfe\x7f\x37\xf7\xd5\xd6\xd6\xe3\x69\x1b\x84\xe0\x19\xb7\xe6\x14\x58\x86\x99\xd2\x07\x0a\x8d\xe9\x78\x4a\xd5\xf3\x76\x32\x9d\x94\x09\x7c\x5a\x82\xf8\xb1\xf8\x2c\x98\x66\x59\x43\x18\x2b\xac\xa2\xf7\x47\x14\x02\x25\xcb\x79\x54\xcd\xa8\xfa\x35\x23\xab\xdb\x1b\xff\x53\xe9\xed\x68\x3f\xf0\x96\x7a\x99\x93\x31\x68\x9d\xa5\x01\x9c\x3c\x00\xd0\x29\x01\x66\x0c\x4f\xa4\x9f\xf5\x99\x10\x34\x36\x50\x7d\xd9\x6a\xf7\x16\x8b\xa1\x9c\x4e\xcb\x37\x42\xec\x67\x89\xc6\xe3\x81\xe6\xe7\x72\xba\x9e\xf9\xa7\x0e\xcb\xb0\x1e\x80\x09\x7f\x8f\x3c\xf7\x47\xc1\x35\xc6\x35\x89\x3b\x26\x8a\xb3\xc8\xed\x80\x78\x7c\xc8\xcd\xaa\x2e\x03\xfb\x14\x35\x3a\x90\x0d\xfa\x28\x38\x78\x8c\xa6\x13\x8e\xbb\xd7\xc2\xe4\x5a\xd4\x33\xc0\x8e\xd3\xf9\x09\xa8\xb2\xcc\x13\x4d\xae\x21\xfa\xd8\x71\x53\x0d\x42\x61\x30\x86\x0f\x97\xfd\xcb\xef\xe9\x31\x14\xe3\x96\x15\xc2\x7e\x3c\x87\xe4\x2e\x96\x92\x8e\xb0\x9a\xfd\xf5\x19\x68\xef\x48\xfe\xbb\x53\x5c\x53\xf6\xc8\xb3\x22\x03\x96\xa9\x42\x5a\x82\xe7\x13\xc0\xf1\x54\x07\x2b\x44\x4c\x12\xca\x33\x48\x53\x7f\xf8\x96\x52\xa9\x46\xd4\x4c\x9c\x67\x00\xfd\xed\xf2\xfb\x29\xef\x72\xde\xdd\xf2\xb6\x0a\x27\x8d\xb9\x32\xdc\x92\x8e\x3d\xb7\xa9\xff\x3a\xd2\xea\x61\x2e\xb3\x21\x52\xf1\x39\xb8\x6b\x6e\x61\x79\x14\x70\xb7\xbc\xad\x21\x76\x0e\x49\xcf\x60\x7d\xf9\xf5\xdc\x4f\xf8\x99\xd3\x57\x68\xcb\xa0\x57\xf4\x46\xd5\x4c\x46\xa9\x03\x70\x41\x0f\x40\x50\x1a\x94\x4d\x51\xd3\x7c\x47\x06\x3b\xe3\x1a\x16\x73\xb7\xe4\x1b\xbe\x46\x90\xea\xf8\x15\x03\xab\x28\x29\xa5\x7e\xc5\xf6\x2d\x6a\x94\x8d\x10\xee\x9c\x20\x9f\x43\xed\x7d\x20\x98\xe5\x3b\x74\x35\x9b\x16\x9b\x9f\xa8\x08\x24\xb7\xc0\x8d\x83\x57\x3e\x18\xb4\x52\xbe\xea\x9c\x1b\x75\x06\x74\xe4\x27\x61\xb8\xe2\xda\x8d\x07\x87\x1a\x6c\x63\x2a\xee\x8a\x12\xff\x3c\x8b\xdd\xe3\xca\x55\x24\xf7\x61\x68\xcf\x85\x00\x4d\x0f\xbf\x0a\xbe\x73\x50\xf5\xd9\xed\x82\xf0\x0a\xdc\x7a\x78\x1b\xc1\xe4\x03\x30\xef\x64\x7f\x75\x53\x33\x8b\xf1\x19\xd6\x61\x23\xf0\x6e\x4a\xb5\x35\xdc\xf3\xc7\xdd\x29\xea\x6b\x17\x3c\x55\x17\x29\x87\xc6\x3e\xc0\x10\x62\xbe\xdd\xf2\x88\xdc\x69\x15\x24\x05\x1a\x43\xc3\x10\xb9\x1a\x25\x85\x76\x0c\xcc\x40\xce\x74\xcd\x2a\x19\xb6\xc7\x4d\xaa\xd4\x03\xc5\x75\x1f\x60\xa6\x2c\x1d\xd6\x87\xbc\x0b\xb9\x1f\x5f\xe1\x97\xf2\xca\xca\xa9\xee\x95\xed\x05\xde\xff\xc6\x82\x7f\x0f\x83\x7f\x7e\x0a\xfe\xfe\xfb\x97\xbf\x7e\x7a\xa2\x49\xc6\xcd\xb8\xee\xdb\x26\x3e\xe6\x1a\x4d\xab\xe6\x74\x0e\xcc\xa7\xe6\x0e\x4b\x0b\x2b\x53\x5c\x95\xb3\xaa\xfe\xf8\xe2\x6b\x71\x39\x0c\x57\xd6\x9c\x23\x2f\xf7\xff\x34\xe8\x9d\x03\x7a\xef\xbf\x01\x00\x00\xff\xff\x0c\x6d\x55\xe0\x09\x16\x00\x00")

func templateTemplateOpenshiftIoOpenshiftNginxExampleYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftNginxExampleYaml,
		"Template.template.openshift.io/openshift/nginx-example.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftNginxExampleYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftNginxExampleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/nginx-example.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftNodejsMongoPersistentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5b\x6f\xdb\x46\xf6\x7f\xd7\xa7\x38\x30\x02\xa4\xc5\xdf\x94\xec\xf4\xbf\x6d\x97\xc0\x3e\xc8\x92\xea\x68\x6b\x5d\x20\xc9\xc9\x76\x8b\xc2\x18\x91\x47\xd2\xd4\xe4\x0c\x3b\x33\x94\xad\xcd\xfa\xbb\x2f\xe6\x42\x8a\x37\xc9\x72\xe2\xa0\x2f\xd5\x43\x10\xcf\xe5\xcc\xef\xdc\xcf\xcc\x21\x49\xe8\x07\x14\x92\x72\xe6\x83\xc2\x38\x89\x88\xc2\x36\x4f\x90\xc9\x0d\x5d\xa9\x36\xe5\x9d\xed\x65\xeb\x9e\xb2\xd0\x87\x85\x9b\x6e\x45\x64\x89\x91\xf4\x5b\x90\xef\xf0\x81\xf1\x10\x7f\x97\x5e\xcc\xd9\x9a\x7b\x89\xa6\x28\x15\x32\xd5\x8a\x51\x4a\xb2\x46\x1f\xfe\xeb\xb5\x00\x16\x1b\x84\x15\x8f\x22\xfe\x40\xd9\x1a\x24\x8a\x2d\x0d\xf0\x1b\xf9\x2d\x6c\xc8\x16\x61\x89\xc8\x20\x10\x48\x14\x86\x40\x19\xec\x78\x2a\x20\x11\xfc\x77\x0c\x94\x0f\x6f\x3e\x8d\xbb\xa3\xc1\xd3\x39\xbc\xf9\xd4\xef\x2e\xba\x57\xdd\xf9\xe0\x6e\x3e\x98\x7d\x18\xf6\x06\x77\x66\xa6\xdd\x6a\x01\xfc\xc4\x05\xc4\x5c\x20\x50\xb6\xe2\x22\x26\x8a\x72\x06\x64\xc9\x53\x05\xa9\xd4\x87\xaa\x0d\x95\x39\xee\x73\xa0\x2c\x88\xd2\x50\x4f\x4c\x12\x64\x73\xcd\x34\x04\x9c\x49\x1a\xa2\x30\x9b\xe5\x39\x48\x44\xd8\x28\x95\x48\xbf\xd3\x59\x53\xb5\x49\x97\xed\x80\xc7\x9d\x5c\x4a\x1d\xc7\x3c\x3e\x76\x96\x11\x5f\x76\x62\x22\x15\x8a\xce\x6c\xd0\xed\x8f\x06\xed\x38\x6c\xb7\x62\x54\x24\x24\x8a\x68\x99\x11\xc6\xb8\xb2\xa4\xf5\x9f\x00\x21\xca\x40\xd0\x44\x19\x1d\x74\x19\xe0\x23\x89\x93\x08\x61\xcc\x43\x6c\xff\x2e\x81\x24\x49\x44\x03\xcb\xc9\x03\x55\x1b\x20\x30\xd2\x62\xee\x5f\x81\xa6\xb9\x24\x12\xdb\x39\xdf\x86\x22\xbc\x32\xf7\x8e\xe8\x97\xc9\xc0\xc0\x0a\x38\xeb\x45\x44\x4a\xdf\xfc\xd7\xb3\x9b\xcc\x54\xc9\xe6\x42\x2a\x93\x88\xec\x3c\x46\x62\xf4\x73\x41\xfc\x5f\xc6\x77\xc3\x06\x1e\xa4\x31\x32\x2b\x57\x2f\x15\x91\x7f\x22\xda\x3a\xa9\x88\xb3\xb5\x57\xd2\xc9\xa2\x28\x34\x08\x71\x45\x19\x4a\x10\x28\x79\x2a\x02\x94\xc0\x10\x43\x0c\x41\x71\x08\x71\x8b\x11\x4f\x9c\xbc\x88\x41\xfe\xcf\x79\x51\x83\x45\x99\x13\x58\xa6\x34\x0a\xb5\xc4\x57\x74\x9d\x0a\xb7\xa0\xa8\xef\x10\x93\x88\xef\x34\x67\x8e\x66\x75\x2d\x0b\x73\x23\x28\x2c\x2e\x2f\x6b\xd7\x99\x4c\x04\xdf\x6a\x25\x7b\x65\x49\xcf\x30\x84\xf7\x44\x9d\xc3\x90\x05\x0d\xbb\x64\x9a\x24\x5c\xa8\xb2\x7c\x49\x10\xa0\x94\x6d\x81\xe1\x86\x28\x2d\x66\xb3\x4f\x91\xb5\xf4\xe1\x8f\x94\x06\xf7\x52\x11\xa1\xce\x0b\xaa\x6e\x8e\x33\x4b\xca\x42\xb2\x8c\xd0\x87\xb3\x15\x89\x24\x9e\xb5\x00\x2c\xaa\x43\xb1\xc5\xce\xcb\x84\x04\xe8\xef\x81\xb6\xf8\x52\x07\x0c\xe9\xb7\x3c\x28\x46\xb7\xed\x65\x0b\xc0\x46\xb2\x39\x06\x02\xf5\xfe\xa2\x5f\x66\xa7\xb9\x38\xd3\x02\x90\x4a\x50\xb6\xee\xe7\xf3\x99\xa0\x3d\x12\xc6\x94\x79\x09\x91\xf2\x81\x8b\xd0\x2f\x46\xa4\x6e\x7f\x34\x1c\xdf\x4d\xbb\xf3\xf9\xc7\xc9\xac\xff\x54\xde\xd7\xb8\xe3\xc0\xda\x54\xa2\x28\xad\xbb\x9d\x0f\x66\x4f\xc7\x78\x32\xc1\xb4\xc6\x54\x2d\xdc\x54\x02\xce\xe0\x31\xe1\x12\xa5\xb1\xa4\x88\x93\x10\x96\x24\x22\x4c\x9b\xb5\xda\x60\xc9\x16\x13\x1e\x4a\x47\xc1\x45\xee\x36\x89\x92\x0d\x29\xab\x31\xc4\x04\x59\x88\x2c\xa0\x28\x7d\x78\xfb\xeb\xa7\x33\x2d\xd6\x33\x1f\xce\x0e\xc5\xed\xb3\x73\x47\x15\xe0\x4c\xf3\xa2\xd7\x3a\x6e\xce\x9e\x7e\x7b\xdb\xac\x9a\x04\x03\xcb\x8e\x36\x48\xc7\x99\xe7\x96\x3d\xe0\xd2\x51\xd4\x93\x3e\xfc\x78\xf1\xe3\x85\x1b\x50\x44\xac\x51\x4d\xcb\xc3\x12\x23\x0c\x14\x17\x99\x7c\xca\x87\x1d\x94\xf8\x8c\xa7\xaa\x2e\xef\xc3\x48\x37\x5c\x9a\x34\xd6\x9d\x4e\x6f\x86\xbd\xee\x62\x38\x19\xdf\xf5\x27\xa3\xee\x70\x6c\x55\xaf\x78\x06\xa0\xaa\xd1\x17\x80\x1a\xc6\x64\x8d\x73\x25\x90\xc4\x2f\x36\x85\x9f\x11\x13\x09\x4a\x90\xe0\x1e\xf8\x0a\x82\x0d\x61\x6b\x94\x3a\x13\x57\x4d\x81\xea\x53\x1a\xd8\x3d\x08\xeb\x4a\x07\xba\x9e\x09\x4a\x2f\x86\xd5\x77\x01\x77\xc3\x1f\x74\x8c\xb5\x31\xb3\x82\x28\x53\x6f\x16\x59\x1a\x0c\xf3\x81\x50\xe5\xad\xb8\xf0\x04\x92\x70\xe7\xc3\x99\x12\xa9\x09\x32\xc7\x74\xc6\x53\x95\xa4\x2a\x83\xb5\xd7\x50\x83\xb8\x17\x64\x9d\x4f\x96\x08\xfa\x1a\x91\x54\xce\x5a\xa5\xea\xf1\x38\xa6\x39\x4d\xcb\xa8\x0f\x2c\x89\x21\x5f\x66\x33\x8b\xbf\x8f\xf9\x0a\x1f\x55\x9f\x9a\x80\xd0\x9b\x8c\x17\x83\x7f\x2d\xee\xfa\xc3\xd9\x93\x5b\xb0\xde\x93\x03\x10\xb8\xd2\xcb\xe6\x93\xdb\x59\x6f\x70\x37\x1b\x4c\x27\xf3\xe1\x62\x32\xfb\xe5\x6e\x36\xf8\xe9\x29\x5f\x95\x0a\xda\xbc\xea\x76\x76\x93\xad\x52\xbb\x04\x7d\xb8\xa6\x0e\x93\x12\x44\xe1\x7a\x97\x03\x37\x18\xe7\x95\x51\x00\x64\xdb\xfd\x1f\x99\x4b\x8e\xa7\xa3\xbb\xd1\x70\x36\x9b\xcc\xf2\x29\x80\x2d\x89\x52\x2b\xa6\x7c\x76\x0f\x70\x25\x78\xec\x17\x16\x1f\x95\x77\x39\x53\xf8\xdf\x57\x26\x5c\x8a\xb0\xfa\x98\x4f\xbb\xbd\x41\x99\xc5\xb9\x61\xc5\x3a\xa1\xa0\xeb\x35\x8a\x3c\xa2\xd8\x05\xe6\xd8\x9e\xf1\x87\xd2\xb8\xb5\xe8\xd2\x84\x2d\x37\xf6\xc8\xa5\xc9\x35\xfa\xf0\xeb\xe1\xe2\xfd\xed\xd5\xdd\xc7\xc1\xd5\xfb\xc9\xe4\xe7\xbb\xf9\xa0\x37\x1b\x2c\x6a\xb2\x7e\x9f\x2e\x33\x4a\xc8\x50\xd0\xa0\x91\xd4\x60\x3c\x98\x0d\x7b\xc7\x69\xd9\xed\x87\x7d\xb2\x9f\x97\x0b\xaf\xe3\x98\xb6\xfc\xa8\xc5\x0a\x9d\x2b\x50\x7c\x2d\x07\x15\x68\x4e\x92\x3e\x5c\x9e\x10\xcb\x9b\xec\xd8\x4a\x6b\x86\xf6\xe2\x51\x2a\x50\xb2\x25\x65\xb1\xe8\xdf\xfe\x0a\xd4\xe8\xf2\xcd\x81\x20\x73\x9c\x1c\x3c\x38\xe7\x26\x94\xe5\x26\x67\x75\x5f\x72\xa2\xbd\x1b\x35\x26\xd0\xc2\xba\x82\x4f\x35\xe7\xda\x06\x9a\xa3\xc9\xf8\x7a\xd2\xbf\x32\xf5\x45\x9d\xd4\x4f\x15\x37\xdc\xdb\xe1\xcf\xb8\x9b\xe1\xaa\x3a\x07\x70\x8f\x3b\xbf\x5c\xc6\xd4\x96\x34\xcb\xaa\x0e\x29\x2b\x8d\x5e\x1f\x56\x56\x89\x7d\x36\xb4\x4c\xbc\xcf\x08\xff\x39\x32\xe5\x72\xf1\xf5\xf9\x2c\x57\xaa\x27\x73\x6b\xf2\xbb\x0f\x6f\xe1\x6d\x61\x30\xa2\x5b\x64\x28\xe5\x54\xf0\x25\x96\x0f\xd6\x77\x81\x6b\x54\x55\x34\x09\x51\x1b\x1f\x3a\x09\x59\x63\xc0\xd3\xfc\x0e\x93\x4f\x57\xab\x33\x77\x38\xa3\x8a\x92\xa8\x8f\x11\xd9\xcd\x31\xe0\x2c\x94\x3e\x7c\x57\x5e\xa3\x68\x8c\x3c\x55\xfb\xe9\x03\xa9\xa0\xe9\xd2\x50\x3c\x5e\x96\xbd\x2c\x77\xc6\x69\x13\x34\x1d\x97\xe8\x9f\x27\x81\x93\x05\x90\xdf\x4c\xcb\x68\x22\x1a\x53\x25\xab\x08\x63\x8c\xb9\xd8\x69\x23\x18\x0d\x46\xba\x00\xb8\x19\x8e\x86\x2e\x95\x54\x93\x21\xdd\xa7\xc1\x29\x11\x24\x2e\x10\x23\xa9\xe2\x31\x51\x34\xf0\x41\x87\xed\x7a\x78\x1b\xeb\x3c\x5c\x2a\x0c\x9e\x51\xd0\x67\x15\x00\x0d\x25\x17\xbc\x24\x87\x1f\x4c\x96\xd3\x1c\xe0\x07\x1e\xa5\x31\xf6\x22\x42\xeb\x15\x76\x06\xe2\x60\xf0\xdd\xc7\x7e\x7b\x6d\x1e\xf1\x10\x73\xf1\xce\x90\x84\x1f\x05\x55\x38\x61\xae\x1a\xa9\x69\x52\xe0\x1f\x29\xca\xa2\x16\xa5\xe2\xc2\x38\xeb\x9b\x4f\x1f\x26\x37\xb7\xa3\xc1\x5d\xaf\x3b\xed\xf6\x86\x8b\x5f\xbe\xe2\x65\x51\xe7\xf8\xfc\xd9\xa1\x90\xe0\x5f\xc0\x7f\xc3\xbd\xcd\x98\x42\x58\xbe\xbb\xbd\xfb\xe1\xe2\xf2\x87\x86\xcb\xdb\x7e\xfc\x50\xc6\x3f\x80\xe1\xcf\x28\x87\x32\x51\xbd\x4e\x11\x74\x82\x70\x4f\xad\x8a\x8e\x14\x09\x5f\xb9\x4c\x7a\xa6\x3c\x39\x69\xd9\x17\x14\x52\x7f\x15\x3d\x9f\x03\xed\xaf\xa2\xa7\x48\xe7\xa4\x3a\x25\x48\xe6\x3c\xb8\x6f\x28\x0c\x6a\xd1\xcd\x6d\xa8\xe4\xf5\xcb\x9a\xef\x94\xa3\x24\x9c\x54\xc8\x54\xcf\x39\x56\xc9\xe0\x63\xd1\xab\xec\x2f\xe0\x71\x4c\x58\x58\x1d\xf6\xa0\xb3\xa4\xac\x23\x37\xb5\x71\x8f\xd6\x87\x82\xda\x90\x61\x05\x2e\xdf\xfd\xd0\xbe\x68\x5f\xb4\x2f\x7d\x03\xb3\xf3\xa6\x6a\x6e\xe0\xa5\xf0\xa6\xe8\xb1\xe0\x25\xfb\x81\x46\x3b\x32\xf4\x3d\xdc\x92\xe8\x1f\x67\x7f\xa4\x54\x7d\xf3\xed\xd9\x97\x56\x58\x97\xaf\x56\x61\x65\xc8\x0b\x95\x96\xfd\x6d\x4d\x69\x31\xd2\x85\x62\x45\x9f\xb1\x1e\x9b\xda\x62\x72\x4b\x44\x27\xa2\xcb\x8e\x33\x84\x8e\xb6\xfb\xd2\x91\xc7\x83\xa7\x57\x5a\x6f\x8f\x94\xf5\x17\x9b\xd3\xb6\x03\x24\x4d\x85\x51\x59\x04\x81\x1e\x1a\x3f\x1f\xd1\xbf\x6a\xb9\x59\x75\x9b\xcf\x2a\x2f\x1d\x11\xff\xbb\xf6\xbb\xca\xdc\x73\x4f\x4c\x27\x55\x9f\x89\xe6\x12\x95\x11\x81\x07\x95\x1e\x14\x9a\x73\x80\x48\x49\xd7\xcc\xb6\x9b\x48\x14\x01\x5f\x99\x12\x63\x25\x38\x53\xc8\x42\x70\xdd\x0f\xd7\xa6\x0a\xed\xeb\x6d\xa1\x7f\xd5\x6e\x01\xb8\xa6\x8f\x55\x89\xfe\x37\x6f\xb5\xb8\xf7\x04\x5d\x66\x52\x81\x61\x2e\x5d\x17\xe4\x0f\xd5\xec\x0d\x60\xf7\x0d\xc5\x71\x26\x1e\x78\xd8\xa0\x40\x03\xb7\x20\x67\xed\x4c\x34\x44\xd9\x08\xcc\xec\x2b\xa1\x33\xb2\x3d\x02\x71\xdf\x07\xaa\x80\x1a\x91\x47\x1a\xa7\x31\x10\xe3\x4b\x5a\x6e\xd6\x31\x0d\x9e\xac\xc5\x98\xdb\x0f\x04\x84\x41\x2a\xeb\xe2\x1a\xd9\x4d\x37\xda\xd5\x73\x60\xc5\xab\xd3\x11\x6c\x7f\xbb\x7c\x37\xa2\x2f\xc2\x95\x35\x7a\x5f\x86\x0b\xbe\x71\xfb\xbe\xad\x22\x2c\x85\x9e\x97\x22\xb5\x0e\x0e\x56\x97\x64\x4b\x68\x44\x96\x11\xc2\x8a\x0b\x93\x7b\xcf\x01\xdb\xeb\xb6\xdd\x7a\x0e\xef\xae\x69\x15\xa2\xdb\xdf\x23\x09\x09\xa8\xda\xe5\xd8\x2a\xf7\x96\x23\xb0\x2e\xaf\x6b\xa0\xb4\xad\xdd\xce\x6e\x32\x3f\x10\x98\x70\x49\x95\x16\x85\xe9\x95\x9b\x6f\x08\x4a\xcf\x91\x26\x70\x43\xa0\x15\x5e\x05\x78\x4d\x15\xcc\xf6\x04\x6e\x67\x37\x39\xc6\xc6\x87\xf2\x23\x48\x4f\xeb\x3e\xb7\xd7\xb4\x66\xa7\x73\x54\xce\x63\x39\x10\x58\x0a\xc2\x82\x8d\x01\x71\x0e\x8a\xac\x81\x0b\xe0\x6a\x83\x02\x04\xae\x34\xd3\x86\xc1\x02\xd7\xd4\x0c\xd9\x0b\x8b\x40\x60\x7c\xdf\xfa\x37\xbd\x6b\x92\x46\xca\x51\x3d\xc0\xff\x0a\x05\xb2\x82\xd7\x35\x76\x12\x8e\xa1\xb6\x7a\x88\x88\xa2\x5b\x34\x2f\x20\x7a\xb0\xf8\x31\x87\x06\x49\x15\x50\x69\xe0\xb9\xfe\x92\xe0\xdc\x5e\xd8\xeb\x4c\xd5\x80\xf6\x6c\x47\x04\xfa\x54\x98\x7b\xcd\xde\x96\x0a\xdd\x91\x26\x4b\x41\x73\x81\x0d\x4d\x2f\xce\x84\x53\xb5\x21\x0a\x1e\x68\x14\x81\xe0\xa9\xc2\x0c\x7e\x16\x0f\x5c\xa3\xf3\x5c\x23\x8e\x70\x65\x01\x2e\x23\xc2\xee\x81\x58\x55\xdb\xcd\xcb\x5c\xb6\x18\xd6\xd0\x76\x0b\xe6\xf7\xde\x1d\x9c\x03\xae\x77\x03\xab\xb8\xaf\x8d\x09\x65\xd9\xd1\x55\xc2\x6d\x80\x2e\x84\x74\xb5\xa2\x81\x56\xa8\xe2\xb0\x4e\x51\x4a\xd7\xb3\x06\x64\xda\xc0\x43\x20\x12\x12\x22\x72\xb9\x6a\xd6\x1e\x70\xb9\xe1\xfc\x5e\x5b\x77\x1b\x60\xcc\x95\x5e\x2c\x76\x49\x13\x72\xdb\x8f\x80\x8f\x6e\x4b\xde\x37\x37\xc9\x13\xde\xfe\x4a\xbc\xff\x74\xbd\x7f\x5f\x78\x7f\xff\xed\xd3\xff\x5f\x3c\xe9\xba\xd9\x34\x2d\xcc\x17\x41\xf8\x98\x08\x94\xd2\x36\xe7\x2c\xaf\x8d\x1d\x90\x2a\xbb\x5d\xc7\x61\xc6\x4a\x2a\x6d\xb2\xcb\x3e\x69\xb0\x09\xc4\x75\x37\x32\x6e\xea\xc8\xdd\xfc\xab\x41\x6f\xec\xb8\x68\xec\xc5\x53\xfb\xd9\x9b\x88\x7b\x60\x29\x27\xd7\x43\xaf\xf7\x87\x62\x48\x56\xb2\x54\x04\x74\x2b\x51\x18\xdb\xd5\x81\x37\x4b\x10\xfa\xca\x59\x30\xe6\x25\x5a\xb9\xe9\x25\xf6\xa5\x29\x0f\x01\xd9\x27\x43\xb5\x04\xe2\x28\x65\xe4\x73\x59\x69\xd2\xbf\x66\xb2\xfa\xee\xe9\x39\x49\x95\x3e\x58\xa8\x62\x9f\xba\x4b\x99\x01\x56\x4c\x70\xfa\x90\x83\x90\xa6\xfb\xab\x5c\x83\xfa\x2e\xbf\x7f\x5e\x7d\xb5\xaf\x2d\x0e\x6a\xae\x59\x63\xcf\x68\x4a\x9a\x2f\xb6\xea\xaa\xaa\xb1\x9b\x3f\x9a\x99\x3b\x6a\x33\xd7\x39\x94\xae\x5e\x43\xcd\x43\x0c\x17\xaf\x29\x84\xca\x05\xbc\x21\x4e\x06\xa9\x54\x3c\x86\xf1\x74\x04\x31\x15\x82\x0b\x97\x0c\xcb\x51\x78\xbf\x68\x54\x5c\x54\x6b\xf9\xfe\x2f\x00\x00\xff\xff\x07\xb7\x60\x0c\x65\x28\x00\x00")

func templateTemplateOpenshiftIoOpenshiftNodejsMongoPersistentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftNodejsMongoPersistentYaml,
		"Template.template.openshift.io/openshift/nodejs-mongo-persistent.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftNodejsMongoPersistentYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftNodejsMongoPersistentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/nodejs-mongo-persistent.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftNodejsMongodbExampleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5b\x6f\x1b\x37\xf6\x7f\xd7\xa7\x38\x10\x02\x24\xc1\xdf\x23\xd9\xe9\x7f\xdb\xee\x00\xfb\x20\x4b\xaa\xa3\xad\x75\x81\x64\x37\xbb\x5b\x14\x06\x35\x73\x24\xb1\x9e\x21\xa7\x24\x47\xb6\x36\xeb\xef\xbe\xe0\x65\x46\x73\x93\x2c\xa7\x0e\xba\x0f\xf5\x53\x42\x9e\x39\xfc\x9d\xfb\x21\x8f\x48\x42\x7f\x42\x21\x29\x67\x3e\x28\x8c\x93\x88\x28\xec\xf0\x04\x99\xdc\xd0\x95\xea\x50\xde\xdd\x5e\xb4\xee\x29\x0b\x7d\xb8\x71\xdb\xad\x88\x2c\x31\x92\x7e\x0b\x80\x24\x89\x0f\x8c\x87\xf8\xab\xf4\x62\xce\xd6\x3c\x5c\x7a\xf8\x48\xe2\x24\xc2\x16\xe4\xfc\x0e\x92\xc4\x28\x25\x59\xa3\x0f\xff\xf1\x5a\x00\x37\x1b\x84\x15\x8f\x22\xfe\x40\xd9\x1a\x24\x8a\x2d\x0d\xf0\x9d\x7c\x0f\x1b\xb2\x45\x58\x22\x32\x08\x04\x12\x85\x21\x50\x06\x3b\x9e\x0a\x48\x04\xff\x15\x03\xe5\xc3\x9b\xcf\x93\xde\x78\xf8\x74\x06\x6f\x3e\x0f\x7a\x37\xbd\xcb\xde\x62\x78\xb7\x18\xce\x7f\x1a\xf5\x87\x77\x66\xa7\xd3\x6a\x01\xfc\xc0\x05\xc4\x5c\x20\x50\xb6\xe2\x22\x26\x8a\x72\x06\x64\xc9\x53\x05\xa9\xd4\x87\xaa\x0d\x95\x39\xec\x33\xa0\x2c\x88\xd2\x50\x6f\x4c\x13\x64\x0b\xad\x11\x08\x38\x93\x34\x44\x61\x3e\x96\x67\x20\x11\x61\xa3\x54\x22\xfd\x6e\x77\x4d\xd5\x26\x5d\x76\x02\x1e\x77\x73\x15\x76\x9d\xec\xf8\xd8\x5d\x46\x7c\xd9\x8d\x89\x54\x28\xba\xf3\x61\x6f\x30\x1e\x76\xe2\xb0\xd3\x8a\x51\x91\x90\x28\x62\x14\xca\x18\x57\x96\xb5\xfe\x2f\x40\x88\x32\x10\x34\x51\xc6\x40\x46\x4d\xfa\xaf\xc7\xc0\xe9\x10\x26\x3c\xc4\xce\xaf\x52\x9b\x22\xa2\x81\x15\xe9\x81\xaa\x0d\x10\x18\x6b\x75\x0f\x2e\x41\x33\x5f\x12\x89\x9d\xff\x51\x05\x38\xa1\x3e\xf5\xe6\x93\xd1\xe4\xca\x87\x1e\xdb\x19\xcc\x20\x15\x17\x18\xc2\x03\x8d\x22\x58\x22\x44\x5c\x2a\x48\x13\xce\x20\xe1\xa1\xd6\x8c\x12\x69\xa0\x51\x74\x60\xca\xa2\x1d\xa4\x12\xcb\x02\xc0\x8a\x0b\x50\x28\x15\x65\xeb\x8e\x39\x85\x06\x9c\xf5\x23\x22\xa5\x6f\xfe\xe9\x59\x6c\x66\xab\xe4\xf4\x21\x95\x49\x44\x76\x1e\x23\x31\xfa\xb9\x8e\xff\x2f\x57\xe9\xbb\x61\xb2\xc1\x18\x05\x89\xde\x37\x7c\xcc\x83\x34\x46\x66\xed\xe8\xa5\x22\xf2\x4f\x54\x50\x9d\x55\xc4\xd9\xda\x2b\xf9\xc0\x4d\x49\xc0\x10\x57\x94\xa1\x04\x81\x92\xa7\x22\x40\x09\x0c\x31\xc4\x10\x14\x87\x10\xb7\x18\xf1\xc4\x69\x97\x18\x29\xfe\xbe\x28\x3a\x4a\xd1\xc0\x04\x96\x29\x8d\x42\x6d\xde\x15\x5d\xa7\xc2\x11\x14\xdd\x2a\xc4\x24\xe2\x3b\x2d\x99\xe3\x59\xa5\x65\x61\xee\x6b\x05\xe2\x32\x59\xc7\x06\x7a\x4e\x47\xa5\x33\xb3\xe3\x49\x19\x30\xce\xbc\x44\x27\x25\xa9\xf4\xe7\x7a\x9b\xac\xf1\x0c\x24\xb7\xe6\x2d\xf1\x03\xb9\xe1\x69\x14\x6a\xff\x48\x25\x86\xc6\xe4\xf8\x98\xa0\xa0\xc6\x04\x91\x63\x9b\xa4\x22\xe1\x12\x25\x70\x16\xed\x3a\x75\x45\x27\x82\x6f\xb5\x57\x7b\x65\xcb\xcf\x31\x84\x8f\x44\x9d\xc1\x88\x05\x0d\x5f\xc9\x34\x49\xb8\x50\x65\x1b\x93\x20\x40\x29\x3b\x02\xc3\x0d\x51\xda\xd4\xe6\x3b\x45\xd6\xd2\x87\xdf\x52\x1a\xdc\x4b\x45\x84\x3a\x2b\xb8\x5e\x73\xe2\x5d\x52\x16\x92\x65\x84\x3e\xb4\x57\x24\x92\xd8\x6e\x01\x58\x54\x07\x33\xae\xde\x96\x09\x09\xd0\xdf\xe3\x6c\xf1\xa5\xce\x91\xd2\x6f\x79\x50\xcc\xf6\xdb\x8b\x16\x80\xcd\xec\x0b\x0c\x04\x6a\xa3\x16\x53\x51\x76\x98\x4b\xad\x2d\x00\xa9\x04\x65\xeb\x41\xbe\x9f\xd9\xd0\x23\x61\x4c\x99\x97\x10\x29\x1f\xb8\x08\xfd\x62\x12\xee\x0d\xc6\xa3\xc9\xdd\xac\xb7\x58\x7c\x9a\xce\x07\x4f\xe5\xef\x1a\xbf\x38\x40\x9b\x4a\x14\x25\xba\xdb\xc5\x70\xfe\x74\x4c\x26\x53\x3f\x6a\x42\xd5\x32\x6c\x25\xc7\x0e\x1f\xad\x9f\x68\x67\x8e\x38\x09\x61\x49\x22\xc2\x74\x64\xa9\x0d\x96\xc2\x21\xe1\xa1\x74\x1c\x5c\xb1\xea\x90\x28\xd9\x90\xb2\x15\x43\x4c\x90\x85\xc8\x02\x8a\xd2\x87\xb7\x3f\x7f\x6e\x6b\xb5\xb6\x7d\x68\x1f\x2a\x55\xed\x33\xc7\x15\xa0\xad\x65\xd1\xb4\x4e\x9a\xf6\xd3\x2f\x6f\x9b\x4d\x93\x60\x60\xc5\xd1\xfe\xe8\x24\xf3\x1c\xd9\x03\x2e\xb3\x28\xe0\x42\xf9\xf0\xfd\xf9\xf7\xe7\x6e\x41\x11\xb1\x46\x35\x2b\x2f\x4b\x8c\x30\x50\x5c\x64\xfa\x29\x1f\x76\x50\xe3\x73\x9e\xaa\xba\xbe\x0f\x23\xdd\x70\x69\x2a\x77\x6f\x36\xbb\x1e\xf5\x7b\x37\xa3\xe9\xe4\x6e\x30\x1d\xf7\x46\x13\x6b\x7a\xc5\x33\x00\x55\x8b\xbe\x00\xd4\x28\x26\x6b\x5c\x28\x81\x24\x7e\xb1\x2b\xfc\x88\x98\x48\x50\x82\x04\xf7\xc0\x57\x10\x6c\x08\x5b\xa3\xd4\x19\xaa\xea\x0a\x54\x9f\xd2\x20\xee\x41\x58\x97\x3a\xd7\xf6\x4d\x1e\x7b\x31\xac\x81\xcb\xf9\x1b\xfe\xa0\xd3\xbc\x4d\xdb\x15\x44\x99\x79\xb3\xc4\xd2\xe0\x98\x0f\x84\x2a\x6f\xc5\x85\x27\x90\x84\x3b\x1f\xda\x4a\xa4\x26\xc7\x1c\xb3\x19\x4f\x55\x92\xaa\x0c\xd6\xde\x42\x0d\xea\xbe\x21\xeb\x7c\xb3\xc4\xd0\xd7\x88\xa4\x72\xde\x2a\x55\x9f\xc7\x31\xcd\x79\x5a\x41\x7d\x60\x49\x0c\x39\x99\x2d\x6e\xfe\xbe\xec\x28\x7c\x54\x03\x6a\x12\x42\x7f\x3a\xb9\x19\xfe\xe3\xe6\x6e\x30\x9a\x3f\x39\x82\xf5\x9e\x1d\x80\xc0\x95\x26\x5b\x4c\x6f\xe7\xfd\xe1\xdd\x7c\x38\x9b\x2e\x46\x37\xd3\xf9\x3f\xef\xe6\xc3\x1f\x9e\x72\xaa\x54\xd0\x66\xaa\xdb\xf9\x75\x46\xa5\x76\x09\xfa\x70\x45\x1d\x26\x25\x88\xc2\xf5\x2e\x07\x6e\x30\x2e\x2a\xab\x00\xc8\xb6\xfb\xff\x64\x21\x39\x99\x8d\xef\xc6\xa3\xf9\x7c\x3a\xcf\xb7\x00\xb6\x24\x4a\xad\x9a\xf2\xdd\x3d\xc0\x95\xe0\xb1\x5f\x20\x3e\xaa\xef\x72\xa1\xf0\xbf\xad\x6c\xb8\x12\x61\xed\xb1\x98\xf5\xfa\xc3\xb2\x88\x0b\x23\x8a\x0d\x42\x41\xd7\x6b\x14\x79\x46\xb1\x04\xe6\xd8\xbe\x89\x87\xd2\xba\xf5\xe8\xd2\x86\xed\x78\xf6\xc8\xa5\xa9\x35\xfa\xf0\xab\xd1\xcd\xc7\xdb\xcb\xbb\x4f\xc3\xcb\x8f\xd3\xe9\x8f\x77\x8b\x61\x7f\x3e\xbc\xa9\xe9\xfa\x63\xba\xcc\x38\x21\x43\x41\x83\x46\x56\xc3\xc9\x70\x3e\xea\x1f\xe7\x65\x3f\x3f\x1c\x93\x83\xbc\x63\x79\x9d\xc0\xb4\x1d\x50\x2d\x57\xe8\x5a\x81\xe2\x6b\x05\xa8\x40\x73\x92\xf4\xe1\xe2\x84\x5c\xde\xe4\xc7\x56\x5b\x73\xb4\x77\xad\x52\x7f\x92\x91\x94\xd5\xa2\xff\xf6\x57\xc2\xc6\x90\x6f\x4e\x04\x59\xe0\xe4\xe0\xc1\x05\x37\xa1\x2c\x77\x39\x6b\xfb\x52\x10\xed\xc3\xa8\xb1\x80\x16\xe8\x0a\x31\xd5\x5c\x6b\x1b\x78\x8e\xa7\x93\xab\xe9\xe0\xd2\xf4\x17\x75\x56\x3f\x54\xc2\x70\xef\x87\x3f\xe2\x6e\x8e\xab\xea\x1e\xc0\x3d\xee\xfc\x72\x1b\x53\x23\x69\xd6\x55\x1d\x52\xd6\x1a\xbd\x3e\xac\xac\x13\xfb\x62\x68\x99\x7a\x9f\x51\xfe\x73\x6c\xca\xed\xe2\xeb\xcb\x59\xee\x54\x4f\x96\xd6\xd4\x77\x1f\xde\xc2\xdb\xc2\x62\x44\xb7\xc8\x50\xca\x99\xe0\x4b\x2c\x1f\xac\xaf\x02\x57\xa8\xaa\x68\x12\xa2\x36\x3e\x74\x13\xb2\xc6\x80\xa7\xf9\x35\x2a\xdf\xae\x76\x67\xee\x70\x46\x15\x25\xd1\x00\x23\xb2\x5b\x60\xc0\x59\x28\x7d\xf8\xa6\x4c\xa3\x68\x8c\x3c\x55\xfb\xed\x03\xa5\xa0\xe1\xce\x50\x3c\x5d\x96\x83\x2c\x8f\xc5\x59\x13\x32\x9d\x96\xe8\x1f\xa7\x80\x93\xe5\xcf\xef\xc6\x65\x34\x11\x8d\xa9\x92\x55\x84\x31\xc6\x5c\xec\xb4\x0f\x8c\x87\x63\x5d\xff\xaf\x47\xe3\x91\xab\x24\xd5\x5a\x48\xf7\x55\x70\x46\x04\x89\x0b\xcc\x48\xaa\x78\x4c\x14\x0d\x7c\xd0\x59\xbb\x9e\xdd\x26\xba\x0c\x97\xfa\x82\xe3\xf6\xf9\xa2\xf2\xdf\xd0\x70\xc1\x4b\x2a\xf8\x57\xbb\x5c\xa9\xe2\x0b\x40\xa1\x20\x66\xb0\x0f\x26\xeb\xa3\xf7\x1c\xa7\xbb\xd2\x5d\xe7\xc3\x77\xe7\x17\xdf\x35\x5c\x76\xf6\xeb\x87\x2a\xe4\x01\x0c\x7f\x44\xfb\x90\xa9\xea\x75\x9a\x86\x13\x94\x7b\x6a\x17\x71\xa4\xa8\x7e\xe5\xb6\xe2\x99\x72\x7e\x12\xd9\xef\x68\x3c\xfe\x6c\x12\xbe\x04\xda\x9f\x4d\x42\x91\xcf\x49\x75\x3d\x48\x16\x3c\xb8\x6f\xa8\xa4\xb5\xec\xe6\x3e\xa8\x14\xc2\x8b\x5a\xec\x94\xb3\x24\x9c\x54\xf9\xab\xe7\x1c\x2b\xfd\xf8\x58\x8c\x2a\xfb\x17\xf0\x38\x26\x2c\xac\x2e\x7b\xd0\x5d\x52\xd6\x95\x9b\xda\xba\x47\xeb\x4b\x41\x6d\xc9\x88\x02\x17\x1f\xbe\xeb\x9c\x77\xce\x3b\x17\xbe\x81\xd9\x7d\x53\x75\x37\xf0\x52\x78\x53\x8c\x58\xf0\x92\xfd\x42\xa3\x1f\x19\xfe\x1e\x6e\x49\xf4\xb7\xf6\x6f\x29\x55\xef\xde\xb7\x7f\x6f\x4b\x72\xf1\x6a\x2d\x49\x86\xbc\xd0\x9a\xd8\xbf\x2d\x8f\xd2\x18\xc7\xba\xb3\xaa\xd8\x33\xd6\x6b\x33\xdb\x7d\x6d\x89\xe8\x46\x74\xd9\x75\x8e\xd0\xd5\x7e\x5f\x3a\xf2\x78\xf2\xf4\x4a\xf4\xf6\xc8\x72\xca\x8c\x13\xb5\x1b\x50\x51\x96\x23\xc6\x90\xa6\xb1\x0f\xed\xf6\xc9\xd9\x7c\x7f\xd2\x57\xed\xbc\xaa\x01\xf1\x45\xad\x96\x63\xe2\x7f\xd3\xf9\x50\xd9\x7b\xee\xb1\xe5\xa4\x4e\x2c\xd1\x52\xa2\x32\x2a\xf0\xa0\x32\x10\x42\x73\x0e\x10\x29\xe9\x9a\xd9\xd9\x0f\x89\x22\xe0\x2b\xd3\x3c\xac\x04\x67\x0a\x59\x08\x6e\x0e\xe0\x66\x46\xa1\x7d\xc7\x2c\x0c\x93\x3a\x2d\x00\x37\xfd\x98\xd8\x47\x2a\x12\x63\x3e\x73\x70\x37\x6b\x81\xbf\xa5\x54\x60\x98\x6b\xd7\xa5\xef\x03\xed\x6b\x03\xd6\xfd\x24\x71\x92\x69\x07\x1e\x36\x28\xd0\xa0\x2d\xa8\x59\x47\x09\x0d\x51\x36\xe2\x32\xdf\x95\xc0\x19\xd5\x1e\x41\xb8\x1f\x88\x54\x40\x8d\xc9\x23\x8d\xd3\x18\x88\x09\x12\xad\x36\x1b\x71\x06\x4f\x36\xfa\xcb\xdd\x07\x02\xc2\x20\x95\x75\x6d\x8d\xed\x47\xd7\x3a\x86\x73\x60\xc5\x4b\xc4\x11\x6c\x7f\xb9\xf8\x30\xa6\x2f\xc2\x95\x0d\x22\x5f\x86\x0b\xde\xb9\xef\xde\x57\x11\x96\x72\xca\x4b\x91\x6a\xb3\xde\xce\xaf\x33\x8f\x13\x98\x70\x49\x95\x3e\xd5\x4c\xa2\xcd\xa8\xbe\xf4\x04\x66\x92\x1f\x04\x5a\xb7\x55\xb8\x57\x54\xc1\x7c\xcf\xe0\x76\x7e\x9d\x43\x6d\x7c\x9c\x3d\x82\xf5\xb4\xa1\x6b\x67\x4d\x6b\x2e\xb1\x40\xe5\x62\x83\x03\x81\xa5\x20\x2c\xd8\x18\x10\x67\xa0\xc8\x1a\xb8\x00\xae\x36\x28\x40\xe0\x4a\x0b\x6d\x04\x2c\x48\x4d\xcd\x92\x6d\xfa\x05\x02\xe3\xfb\xf1\xba\x19\xd9\x92\x34\x52\x8e\xeb\x01\xf9\x57\x28\x90\x15\x1c\xbc\xf1\xf5\xfa\x18\x6a\x6b\x87\x88\x28\xba\x45\x73\xed\xd6\x8b\xc5\xdf\x4c\x68\x90\x54\x01\x95\x06\x9e\x9b\x69\x08\xce\xed\x35\xb1\x2e\x54\x0d\x68\xdf\xbe\xc2\xc3\x80\x0a\x73\x37\xd8\xe5\x60\x0b\x2f\xf2\x4d\x9e\x82\xe6\x12\x18\x9a\xf9\x8f\x49\x5c\x6a\x43\x94\x1d\xf2\x0b\x9e\x2a\xcc\xe0\x67\xa1\xe7\x86\x6b\x67\x1a\x71\x84\x2b\x0b\x70\x19\x11\x76\x0f\xc4\x9a\x3a\xff\x85\x80\xd3\x2d\x86\x35\xb4\xbd\x82\xfb\x7d\x74\x07\xe7\x80\xeb\x13\xa8\x2a\xee\x2b\xe3\x42\x59\x1d\x72\xdd\x64\x07\xa0\x07\x21\x5d\xad\x68\xa0\x0d\xaa\x38\xac\x53\x94\xd2\xcd\x49\x01\x99\x76\xf0\x10\x88\x84\x84\x88\x5c\xaf\x5a\xb4\x07\x5c\x6e\x38\xbf\xd7\xde\xdd\x01\x98\x70\xa5\x89\xc5\x2e\x69\x42\x6e\xdf\xc0\xe1\x93\xfb\x24\x9f\xd5\x9a\x32\x05\x6f\x7f\x26\xde\xbf\x7b\xde\xbf\xce\xbd\xbf\xfe\xf2\xf9\xff\xcf\x9f\x74\xef\x69\x1e\xca\xcd\xef\x6e\xf0\x31\x11\x28\xa5\x1d\x08\x59\x59\x1b\x5f\xdd\xab\xe2\xf6\x9c\x84\x99\x28\x66\xb2\xae\x78\x3e\x79\xb7\xb9\xda\xbd\xa8\x67\xd2\xd4\x91\xbb\xfd\x57\x83\xde\xf8\xca\xaf\xb1\x17\x4f\x1d\x64\xef\x0a\xee\x91\xa2\x5c\xc6\x0e\xbd\x18\x1f\xca\x21\x59\x73\x50\x51\xd0\xad\x44\x61\x7c\x77\xc5\x45\x9e\x8b\xf5\xb5\xad\xe0\xcc\xc5\x5f\x24\xd8\xdf\x04\xe4\x29\x20\xfb\x41\x4e\x2d\x57\x3b\x4e\x19\xfb\x5c\x57\x9a\xf5\xcf\x99\xae\xbe\x79\x7a\x4e\x53\xa5\x21\x79\x15\xfb\xcc\x5d\x6c\xec\xaf\x63\x0a\xb5\x44\x1f\x72\x10\xd2\x6c\x7f\x1d\x6a\x30\xdf\xc5\xb7\xcf\x9b\xaf\x36\xe1\x3f\x68\xb9\x66\x8b\x3d\x63\x29\x69\x3a\x8e\xba\xa9\x6a\xe2\xe6\x0f\x4f\xe6\x9e\xd7\x2c\x75\x0e\xa5\xa7\x69\xa8\x79\xcc\xe0\xe2\x35\x95\x50\xb9\xc4\x36\xe4\xc9\x20\x95\x8a\xc7\x30\x99\x8d\x21\xa6\x42\x70\xe1\x8a\x61\x39\x0b\xef\x89\xc6\x45\xa2\xda\x98\xf1\xbf\x01\x00\x00\xff\xff\x4b\xfe\x97\xa0\xe9\x27\x00\x00")

func templateTemplateOpenshiftIoOpenshiftNodejsMongodbExampleYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftNodejsMongodbExampleYaml,
		"Template.template.openshift.io/openshift/nodejs-mongodb-example.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftNodejsMongodbExampleYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftNodejsMongodbExampleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/nodejs-mongodb-example.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftPostgresqlEphemeralYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x6d\x6f\x1b\xb9\x11\xfe\xae\x5f\x31\x30\x0e\x70\x02\x78\xb5\x71\xee\x12\x20\x0b\x1c\x0a\x9d\xed\x5c\x85\xda\xb2\x4e\x52\x72\x68\x83\xc0\x18\x71\x47\x2b\x36\x5c\x72\x43\x72\x65\xab\xae\xff\x7b\x41\x72\x5f\x25\x45\xf0\x5d\x83\xa2\xfa\x60\xac\xf9\x32\x7c\xe6\x99\x37\x0e\xb1\xe0\x1f\x49\x1b\xae\x64\x02\x96\xf2\x42\xa0\xa5\xa1\x2a\x48\x9a\x35\x5f\xd9\x21\x57\xf1\xe6\x7c\xf0\x85\xcb\x34\x81\x45\x35\x3d\x10\xb8\x24\x61\x92\x01\x34\x3b\x12\x28\x94\xb1\x99\x26\xf3\x55\x44\x54\xac\x29\x27\x8d\x22\xaa\xa7\x07\x39\x19\x83\x19\x25\xf0\xef\x68\x00\xb0\x58\x13\xac\x94\x10\xea\x9e\xcb\x0c\x0c\xe9\x0d\x67\xf4\xc2\xbc\x84\x35\x6e\x08\x96\x44\x12\x98\x26\xb4\x94\x02\x97\xb0\x55\xa5\x86\x42\xab\x7f\x12\xb3\x09\xfc\xf0\x78\x39\x5a\x8c\x7e\x19\xcd\xaf\xee\xe6\x57\xb3\x8f\xe3\x8b\xab\xbb\xc9\xe8\xe6\xea\x69\x38\x18\x40\xfd\xfb\x60\x48\x4b\xcc\xc9\xad\x9e\xde\xce\x17\xbf\xce\xae\xe6\xbf\x5d\xdf\x7d\x98\x5f\xcd\x9e\xda\x55\x53\x34\xe6\x5e\xe9\x74\x67\xd5\x74\x34\x9f\xff\x7e\x3b\xbb\x0c\x2b\x2f\xd1\xe2\x12\x0d\xc1\x64\x5f\x5e\x0d\xc4\xaf\xbc\x50\x52\x12\xb3\x5c\x49\xf8\x30\xbb\xee\xf2\x91\xc4\xf1\xb7\x40\x27\x6f\x7e\xfa\xf1\x75\xec\x90\xbf\x57\x1a\x72\xa5\x09\xb8\x5c\x29\x9d\xa3\x17\x84\x4b\x55\x5a\x28\x8d\x63\xc9\xae\xb9\x69\xe8\x3e\x03\x2e\x99\x28\x53\x37\x71\x5b\x90\x9c\x3b\x5b\x01\x53\xd2\xf0\x94\xb4\xdf\x6c\xce\xc0\x10\xc1\xda\xda\xc2\x24\x71\x9c\x71\xbb\x2e\x97\x43\xa6\xf2\xd8\x30\xa1\x74\x16\x77\x0c\xc6\x94\xb4\xc8\x25\xe9\x78\x38\xc8\xc9\x62\x8a\x16\x9d\x75\x51\x4a\x65\x83\xb4\xc4\xb3\x91\x92\x61\x9a\x17\xd6\x7b\x8b\x37\xa5\x27\x32\x48\x9a\xff\x76\x0d\x69\x4d\x57\x65\xd4\x33\xb8\xe7\x76\xed\xb4\x28\x9c\x93\x19\x4b\xd2\x82\xb1\x4a\x63\x46\xc3\xff\x1f\xa5\x2b\x45\x7e\x1f\xcd\x26\xe3\xc9\xaf\x09\x8c\xe4\xd6\xab\xe2\xa1\x52\x0a\xf7\x5c\x08\x58\x12\x08\x65\x2c\x94\x85\x92\x50\xa8\xd4\xb1\x61\x75\xe9\x6d\x3e\x84\x5b\x29\xb6\x50\x1a\xea\x63\x86\x95\xd2\x60\xc9\x58\x2e\x33\x7f\x08\x67\x4a\x5e\x08\x34\x26\xf1\x9f\x51\x0b\xc8\x4f\xf7\x02\x2f\xe5\xa6\x10\xb8\x8d\x82\x2b\x77\x58\x7e\x71\x55\x47\xd8\xcb\x03\xbb\x14\x2b\x73\x92\xc1\x6e\x51\xa9\x45\xd2\xf0\x91\x2a\x66\x3a\xb1\xed\x08\x71\x20\x8d\x8d\x3d\xdd\x77\x3c\xc7\x8c\x4c\x9c\x2e\xeb\xaf\x16\xdd\x70\x6d\xf3\x03\x10\x85\x92\x59\xd4\xf3\x8a\x45\x4f\xfd\x42\xab\x0d\x4f\xc9\x80\xa3\x12\x65\x8a\x42\x49\xea\xa8\x52\x11\xef\xbc\x85\xb4\xf7\x15\xc0\xd6\x89\xaa\x24\x30\x0c\x19\xa3\x19\xe6\x06\xa4\xb2\xb5\x6d\x9c\x31\xf6\x7c\xeb\xac\x16\xac\x00\xe5\x16\x34\x19\x8b\xda\x82\x5a\x81\x5d\x37\xce\x19\xcc\xaa\xc9\x94\xc2\xba\x44\x83\x42\x04\xab\x2f\xc9\xf9\x98\x33\xf6\xce\xd1\x95\x54\x67\x90\x33\x67\x6c\x1d\xbe\x50\xa6\x50\x54\xd9\x04\x50\x13\xb0\xb5\x32\x24\x61\xc3\x11\x0a\xd4\x98\x93\x25\x6d\xe0\x7e\x4d\x32\x30\xe2\xd2\x6d\xed\xdf\x1d\x0a\x38\xa3\xe1\x3e\xc7\x15\x87\x3a\xea\xfb\xc3\x8c\x52\xf8\x2b\xda\x33\x18\x4b\x76\x60\x97\x29\x8b\x42\x69\xdb\x77\x00\x64\x8c\x8c\x19\x6a\x4a\xd7\x68\x5d\x5c\xf8\x7d\x16\x33\x93\x34\x3a\x9e\xf5\x5c\x32\x9c\x75\x28\xb9\x57\x93\xa6\x40\x46\x49\x7b\xf6\x40\x2d\x5d\xa2\x36\xc9\x20\x82\x6e\x6d\xd9\x9c\x0f\x00\x42\x1d\x99\x13\xd3\x64\x07\x00\xdd\x5c\x73\x20\xdb\xc0\x37\x0a\x12\x3d\x14\xca\x50\x54\x03\xbe\x0b\x18\x4f\x1f\x87\x6e\xe4\xd3\xe9\x69\x3d\xe1\x89\x3a\x3d\xfd\xfc\x74\xfa\x1c\x71\x45\x53\x0e\x0e\x48\xaa\x27\x9f\x2d\xad\x6c\x4a\xd0\x01\x69\x6e\xb2\x95\x54\x57\xaa\xc3\x25\x62\x00\x60\xac\xe6\x32\xbb\x6c\x88\xea\xe9\x77\xac\x26\xc1\x1e\xfe\xa3\xb5\xae\x87\xef\x60\xed\x3c\x62\x52\xef\xbd\xff\xb5\x4d\x4b\xcd\x5b\x6f\x4b\xe2\xf8\x71\x68\x0a\x62\x43\x26\x4a\x63\x49\x8f\xa7\x4f\x49\x35\xe2\x7c\xdb\x7c\xfa\xcb\x8b\xa1\xe3\xe0\xe7\x9f\x4f\x5a\x0f\x3d\x79\xf9\xd9\xcf\x3e\x3d\x93\xdc\x82\x58\x80\xe6\x45\x86\xcf\x68\xcf\xef\xeb\xc8\x57\x29\x4d\x95\xb6\x09\xbc\xaa\x46\x0a\xff\x9f\xab\xe3\xf5\x80\x56\x56\x31\x25\x12\x58\x5c\x4c\x6b\x9d\x51\x67\x64\xa7\xfd\xa5\x86\x04\x31\xab\x74\xd2\xc9\x2a\x47\xa1\xba\x2d\xc6\x51\x3f\x5a\xad\xb8\xe4\x76\x9b\xc0\x44\xc9\x90\x94\xec\xb6\xa0\x04\x2e\x6a\x9e\xbc\xd7\xa0\x2d\x2b\x7d\x84\xc2\xf4\x17\x14\x28\x99\x33\xec\xe3\x11\x43\x5e\x52\x21\xd4\xd6\xd5\x8f\x0b\x25\x57\x3c\xfb\x43\x16\x45\x51\xac\xb1\x6f\xd7\x7b\xe4\x36\x5a\x29\x1d\x69\xc2\x74\x9b\xc0\x89\xd5\x25\x9d\xfc\x51\xd3\x68\x2a\x04\x67\x68\x12\x38\xff\xd3\xd4\x59\x8d\x96\xb2\x6d\x03\xda\x13\x36\xa3\x50\x63\x06\x5d\x3d\xea\x25\x7d\xc5\x3d\x8f\xcd\xc5\xb7\xfe\x3d\xe3\xe4\xae\x22\xee\xd7\x5c\x3c\x3a\x82\x22\x60\x58\xe0\x92\x0b\x6e\x39\x19\x6f\xa2\xf6\x0c\x92\x9b\xee\x91\xb5\x73\xee\x44\x67\x67\x05\xc0\x06\x45\x49\xef\xb5\xca\x93\xde\xb0\x63\xce\xe5\xde\xbf\xd1\x76\x46\xab\xdd\x39\x80\x2f\xb4\x4d\xfa\x69\x60\x6f\xc9\xb3\x14\xfe\x06\xcc\x3a\xdd\x7c\x7f\xa8\x75\x7e\xfb\xae\x70\xeb\x3d\xdf\x1f\xae\x3b\xea\xcf\x43\xf5\x97\xb3\x04\x4e\xe1\x74\x77\x70\x5a\x0a\x31\x55\x82\xb3\x6d\x02\xe3\xd5\x44\xd9\xa9\x26\x43\xd2\x76\xd6\x09\xbe\x21\x49\xc6\x4c\xb5\x5a\x52\x1f\x27\x3d\x74\xdd\x34\xfc\x98\xca\x73\x94\xe9\xee\x70\x04\x71\x69\x74\x2c\xf8\xd2\x6d\x8a\xd9\x9a\xd8\x97\xf6\x46\xbd\xb7\x38\x8a\xdc\xb1\xbd\x61\x97\xc0\x38\x8a\x4b\x12\xb8\x9d\x13\x53\x32\x75\xd1\xfd\xfa\x55\x6f\x91\xe5\x39\xa9\xd2\xb6\xf3\xaf\xf6\x42\x6f\x2f\x45\x43\x3f\x95\xd7\x10\x1a\x70\xd3\xdd\x84\x5d\x6d\x39\x90\xb6\xc1\xa7\x1e\x4c\xf9\xff\x94\xb0\x83\xcc\xbc\x39\xce\x4b\x0f\xb0\x51\xa5\x66\x64\xfa\x10\x04\xcf\xb9\x35\xbb\xb0\x72\xca\x95\xde\x3a\xaf\xbb\xb9\xba\xb9\x9d\xfd\xfd\xee\x7a\x7c\x33\x5e\x74\x9d\xcd\x10\x2b\x35\xb7\xdb\x0b\x25\x2d\x3d\xd8\xbe\x80\x23\x49\xcb\x31\xca\x37\x5c\x50\x46\x69\x02\x2b\x14\xa6\x6b\x7f\x4b\x3a\xe7\xd2\x97\x91\x9b\xf0\x34\x30\x45\xbb\x4e\x20\x4e\x69\x13\x77\x26\x23\xa1\xb2\xce\xb6\x8d\x12\x65\x4e\x37\xaa\x94\xbb\xe6\xcd\xdd\x58\x25\x63\x83\x9e\xe8\xb8\xc8\xcc\x57\x11\xbb\xa0\xeb\xe1\x3a\x1e\x67\x51\x6f\x7d\x2a\x4d\x1d\x4f\x55\x6d\x7d\xcf\xb5\x69\xe3\xa9\x6a\x2c\xea\x35\x23\x71\x8f\x5b\x33\xe8\xc3\xed\xa5\x79\xca\x0b\xbb\xbd\xe4\xba\xcf\x63\x4e\x29\x2f\xf3\x04\x4e\x4e\x9e\x5d\x5a\x5a\x9c\x56\xf3\x2c\x6b\xaa\x49\x14\x32\xc1\xc5\x1a\xa5\x23\x55\x63\xde\x39\x1f\x4b\xab\x5c\x9b\xcd\x12\x70\x75\x78\xbf\x24\x4d\x70\x07\xef\x81\xf0\x5a\xed\x24\xbf\x70\x71\x18\xbb\x53\xe7\x56\x13\xe6\x0b\xcc\x8e\x84\x69\xd2\xbb\x57\x7e\xbc\x9a\xcd\xc7\xb7\x93\xa7\x9d\x0d\x55\x57\xf1\xc3\xa3\xd3\x75\x3e\x1d\x5d\x74\x12\xa0\x40\x63\x17\x41\x67\x4a\xc7\x21\x17\x36\xc4\x85\xb2\x3e\x6e\x29\xa8\x48\xa9\xee\x47\xfe\x4e\xd3\x4c\x54\x57\x24\xe7\xb8\x6d\x9b\xe6\x1a\x97\x5e\x47\x7b\x83\x0f\x3c\x2f\x73\x40\xef\x63\xae\x87\x0c\x51\xe3\x5b\xc9\x86\x39\x60\x28\x5d\x4b\xe8\x5a\xb1\xaa\x51\x0b\x4f\x46\x37\x61\xf1\xb5\x8b\xbf\xa6\xa1\xea\x46\xdb\xc0\xb9\xd1\xd7\x92\x6b\x17\x28\x95\x59\x7c\x95\x49\xe0\xcd\xf9\xeb\x1b\xbe\x8b\xc7\x35\xa4\xed\xfb\xc7\xa4\x66\xcb\xb5\x97\x9a\x3c\xa8\x8e\x2d\x9c\x87\xba\x06\x7c\x0f\x56\xb3\xaf\xc1\xd4\x50\xdd\x9e\xdf\x76\x75\x07\x30\xb8\x5d\x75\x47\xdd\xe2\xa9\x3a\x01\x08\x17\xfa\x34\x3c\x80\x74\x5a\xe8\x3d\x20\xcd\x0b\x5b\xbd\x73\x12\x8a\x63\x00\x75\xd0\xf9\x8f\x30\xd6\xf1\xd7\x1d\xc8\xf5\xa3\xa0\x47\xd4\x79\x4c\x71\xb7\x1c\xb0\x6b\xb4\xcd\x2b\x4f\x59\xe3\x0e\xed\x72\x68\xd4\x8f\x68\xd0\x11\xd6\x7d\x05\xac\xce\x1b\x54\x11\xe3\x0f\xfa\x34\x8a\xfe\xf1\x2a\x7a\xf7\xf9\xf1\x47\xe7\xcf\x19\x49\xd2\xfe\xf5\x94\x1e\x0a\x1d\xee\xf6\x8d\xe6\xfb\xd7\xbb\x1d\x9d\x77\xf4\xab\x9f\x33\x1b\xc6\x3b\xb0\x58\x0b\xcb\xa1\x78\xa6\x06\xd3\xf6\x52\x15\x34\x38\xfd\x84\xd1\xbf\x6a\x0d\xce\xdf\xfa\xfe\xf5\xb9\x3a\x74\xee\x7e\xc7\xf5\x98\x74\xdc\xea\xd0\xcb\x62\x30\x0a\xa5\xc7\x94\xe8\xbd\xda\x1e\x42\xd3\xb9\xda\x7d\xcb\x93\x0c\xe6\x85\xa0\x74\xb9\x8b\xaf\xea\x9a\x1c\xc4\xce\x89\x3e\xe9\x82\x55\x8d\xff\xbc\x78\x37\xfc\xe9\x0c\xde\x0d\xdf\xb8\x3f\x6f\x41\x69\x08\x4f\x6d\x2f\xf7\x70\x1f\x16\xe8\x63\xf8\x10\xf4\x2a\x63\x1e\x41\x7e\xf2\x6e\xf8\xf6\x64\xf0\x9f\x00\x00\x00\xff\xff\x09\xa4\x36\x09\xd9\x17\x00\x00")

func templateTemplateOpenshiftIoOpenshiftPostgresqlEphemeralYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftPostgresqlEphemeralYaml,
		"Template.template.openshift.io/openshift/postgresql-ephemeral.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftPostgresqlEphemeralYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftPostgresqlEphemeralYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/postgresql-ephemeral.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftPostgresqlPersistentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x6b\x6f\xdb\x38\xd6\xfe\xee\x5f\x71\x10\x0c\x90\x16\x88\xa4\xa6\x33\x2d\x50\x01\x83\x17\x1e\x27\xed\x6b\x6c\x9c\x78\x6c\xb7\x83\x6e\x51\x04\xc7\xd2\xb1\xcc\x2d\x45\xaa\x24\xe5\xc4\x9b\xcd\x7f\x5f\x90\xd4\xd5\x76\x3d\xe9\x6c\xb1\x58\x7d\x08\x1c\x5e\x9f\xf3\x9c\x3b\xb1\x60\x1f\x48\x69\x26\x45\x0c\x86\xf2\x82\xa3\xa1\x50\x16\x24\xf4\x9a\xad\x4c\xc8\x64\xb4\x39\x1f\x7c\x61\x22\x8d\x61\x51\x4d\x0f\x38\x2e\x89\xeb\x78\x00\xcd\x8e\x18\x0a\xa9\x4d\xa6\x48\x7f\xe5\x41\x61\xcf\xd3\x86\x84\x09\xea\xf9\x41\x4e\x5a\x63\x46\x31\xfc\x2b\x18\x00\x2c\xd6\x04\x2b\xc9\xb9\xbc\x63\x22\x03\x4d\x6a\xc3\x12\x7a\xa6\x9f\xc3\x1a\x37\x04\x4b\x22\x01\x89\x22\x34\x94\x02\x13\xb0\x95\xa5\x82\x42\xc9\x7f\x50\x62\x62\xf8\xe9\xe1\x62\xb8\x18\xfe\x36\x9c\x5f\xde\xce\x2f\x67\x1f\xc6\xa3\xcb\xdb\xeb\xe1\xe4\xf2\x31\x1c\x0c\xa0\xfe\xde\x6b\x52\x02\x73\xb2\xab\xa7\x37\xf3\xc5\xbb\xd9\xe5\xfc\xf7\xab\xdb\xf7\xf3\xcb\xd9\x63\xbb\x6a\x8a\x5a\xdf\x49\x95\xee\xac\x9a\x0e\xe7\xf3\x3f\x6e\x66\x17\x7e\xe5\x05\x1a\x5c\xa2\x26\xb8\xde\x3f\xaf\x06\xe2\x56\x8e\xa4\x10\x94\x18\x26\x05\xbc\x9f\x5d\x75\x09\x89\xa3\xe8\x5b\xa0\xe3\x57\xbf\xfc\xfc\x32\xb2\xc8\xdf\x4a\x05\xb9\x54\x04\x4c\xac\xa4\xca\xd1\x1d\x84\x4b\x59\x1a\x28\xb5\x65\xc9\xac\x99\x6e\xf8\x3e\x03\x26\x12\x5e\xa6\x76\xe2\xa6\x20\x31\xb7\xca\x82\x44\x0a\xcd\x52\x52\x6e\xb3\x3e\x03\x4d\x04\x6b\x63\x0a\x1d\x47\x51\xc6\xcc\xba\x5c\x86\x89\xcc\x23\x9d\x70\xa9\xb2\xa8\xa3\xb1\x44\x0a\x83\x4c\x90\x8a\xc2\x41\x4e\x06\x53\x34\x68\xd5\x8b\x42\x48\xe3\x4f\x8b\x1d\x1b\x29\xe9\x44\xb1\xc2\x38\x73\x71\xaa\x74\x44\xfa\x93\xe6\xbf\x5f\x41\x5a\xd3\x55\x29\xf5\x0c\xee\x98\x59\x43\x6b\x12\xa0\x8d\x54\x98\x51\xf8\xbf\x23\x71\x25\xc5\xf5\xcd\xe2\x32\x86\x79\x82\xdc\x5d\x2e\x3d\x38\xb3\x46\x01\x52\x10\x28\x2a\x38\x4b\x10\x98\x06\x21\x0d\xe8\xb2\x28\xa4\x32\x94\x86\xf0\x51\x96\x90\x97\xda\x78\xeb\xed\x88\xba\x91\xbc\xcc\x49\x03\x6e\x90\x71\x5c\x72\x6a\xac\x39\xe1\xa5\x36\xa4\xec\x2d\xa5\xa6\xbe\xa4\xa1\xc3\xc3\x12\x29\x46\x1c\xb5\x8e\xdd\xcf\xa0\xc5\xee\xa6\x7b\x1e\x9a\x32\x5d\x70\xdc\x06\xde\xe4\x5b\x6d\x1c\x58\x29\x93\x32\x27\xe1\x75\x1a\x94\x8a\xc7\x0d\x5d\xa9\x4c\x74\xc7\xf1\x2d\x5f\x16\x8d\x36\x91\xd3\xc6\x2d\xcb\x31\x23\x1d\xa5\xcb\xfa\x57\x8b\x28\x5c\x9b\xfc\x00\x2c\x2e\x45\x16\xf4\x2c\x66\xd1\x95\xd3\xba\xf4\x86\xa5\x96\x1f\xd0\x06\x45\x8a\xdc\xf2\xbc\x03\x1f\x9c\x25\x91\xf2\x76\x84\xad\x81\x55\x01\x22\xf4\xd1\xa4\x19\x66\xda\x59\x18\xa5\x20\xc5\x41\xb3\xb3\xcb\xab\x93\x9b\x4d\x96\xb8\x33\xab\x09\xe5\x7f\xa1\x48\xa1\xa8\xa2\x03\xa0\x22\x48\xd6\x52\x93\x80\x0d\x43\x28\x50\x61\x4e\x86\x94\x86\xbb\x35\x09\x2f\x85\x8d\x9f\x4c\x64\xd5\xb9\x4e\x9d\x95\x03\x84\xfb\xbc\x54\x72\xab\xa0\xaf\xb7\x19\xa5\xf0\xff\x68\xce\x60\x2c\x92\x03\xbb\x2a\x83\xeb\x2b\x0d\x93\x84\xb4\x0e\x15\xa5\x6b\x34\xd6\xd4\xdd\x3e\x83\x99\x8e\x1b\xe9\xce\x7a\xa6\xe3\xef\x3a\x18\xad\xab\x59\x5d\x60\x42\x71\x7b\xf9\x40\x2e\x6d\xe4\xd5\xf1\x20\x80\x6e\xb6\xd8\x9c\x0f\x00\x7c\x66\x98\x53\xa2\xc8\xee\xef\x06\x8f\x03\xe1\x03\xbe\x91\x62\xe8\xbe\x90\x9a\x82\x1a\xf1\xad\x07\x79\xfa\x10\xda\x91\x4f\xa7\xa7\xf5\x84\x63\xea\xf4\xf4\xf3\xe3\xe9\x53\x8e\x2b\x9a\xf8\x7e\xe0\xa4\x7a\xf2\xc9\xa7\x95\x4d\x4e\x39\x70\x9a\x9d\x6c\x4f\xaa\x53\xcf\xe1\x98\x3f\x00\xd0\x46\x31\x91\x5d\x34\x44\xf5\xe4\x3b\x96\x64\x60\x0f\xff\xd1\xe4\xd5\xc3\x77\x30\x19\x1e\x51\xa9\x33\xdf\xff\x58\xa7\xa5\x62\xad\xb9\xc5\x51\xf4\x10\xea\x82\x92\xb0\x0a\x80\xe3\xe9\x63\x5c\x8d\x58\xe3\xd6\x9f\xfe\xef\x59\x68\x39\xf8\xf5\xd7\x93\xd6\x44\x4f\x9e\x7f\x76\xb3\x8f\x4f\x24\xb7\xa0\xc4\x43\x73\x47\xfa\x9f\xc1\x9e\xe1\x57\xe0\x85\x4c\x69\x2a\x95\x89\xe1\x45\x35\x52\xb8\xff\x6c\x62\xae\x07\x94\x34\x32\x91\x3c\x86\xc5\x68\x5a\xcb\x8c\x2a\x23\x33\xed\x2f\xd5\xc4\x29\x31\x52\xd5\xc4\xfc\x29\x54\xbb\x45\x5b\xea\x87\xab\x15\x13\xcc\x6c\x63\xb8\x96\xc2\x87\x27\xb3\x2d\x28\x86\x51\xcd\x93\xb3\x1a\x34\x65\x25\x0f\x97\x98\xfe\x86\x1c\x45\x62\x15\xfb\x70\x44\x91\xd3\xc6\xbf\x3f\xb8\x74\x34\xe2\xc8\xf2\x3d\xb5\x7e\x07\xab\x3e\xe6\x4c\x64\x4a\x0d\xb7\x33\xc2\xf4\x0f\xc5\x0c\xdd\x88\xc4\xa3\x57\xa4\x65\xa9\x12\x6a\x8c\x44\xd1\xd7\x92\xb4\x69\xfe\x87\x3a\x22\xdb\x5b\x3f\xdc\x5c\xbd\x9f\x5c\xde\x8e\x86\xd3\xe1\x68\xbc\xf8\x78\x44\x9a\x0b\x2a\xb8\xdc\xda\x14\x36\x92\x62\xc5\xb2\xef\xb2\x4f\xe4\xc5\x1a\xfb\x56\x7a\x87\xcc\x04\x2b\xa9\x02\x45\x98\x6e\x63\x38\x31\xaa\xa4\x93\xef\xa5\xa4\xaa\x0d\x74\x0c\xe7\x7f\xd9\x10\x8c\x42\x43\xd9\xb6\x01\xed\xd4\x3f\x23\x9f\xe6\x06\x5d\x39\xea\x25\x7d\xc1\x9d\x55\x34\x85\x79\xfd\x3d\xe1\xe6\xae\x20\xf6\x6b\x4a\xa3\xce\x41\x01\x24\x58\xe0\x92\x71\x66\x18\x69\x67\x70\xed\x1d\x24\x36\xdd\x2b\x6b\x57\xdb\x89\x35\x9d\x15\x00\x1b\xe4\x25\xbd\x55\x32\x8f\x7b\xc3\x96\x39\x9b\x49\xfe\x46\xdb\x19\xad\x76\xe7\x00\xbe\xd0\x36\xee\x07\xb5\xbd\x25\x4f\x12\xf8\x1b\x30\xeb\xe0\xf9\xe3\xa1\xd6\xd1\xfa\x87\xc2\xad\xf7\xfc\x78\xb8\xf6\xaa\xbf\x0e\xd5\xd5\x87\x31\x9c\xc2\xe9\xee\xe0\xb4\xe4\x7c\x2a\x39\x4b\xb6\x31\x8c\x57\xd7\xd2\x4c\x15\x69\x5f\x79\xd4\x1f\x67\x1b\x12\xa4\xf5\x54\xc9\x25\xf5\x71\xd2\x7d\xd7\x4c\xfd\x97\xc8\x3c\x47\x91\xee\x0e\x07\x10\x95\x5a\x45\x9c\x2d\xed\xa6\x28\x59\x53\xf2\xa5\xad\xf9\xf7\x16\x07\x81\xbd\xb6\x37\x6c\xc3\x31\x43\x7e\x41\x1c\xb7\x73\x4a\xa4\x48\xad\x77\xbf\x7c\xd1\x5b\x64\x58\x4e\xb2\x34\xed\xfc\x8b\x3d\xd7\xdb\x4b\x38\xd0\x4f\x4c\x35\x84\x06\xdc\x74\x37\xfd\x54\x5b\x0e\x24\x21\x70\xa1\x07\x53\xf6\x5f\x25\xec\x20\x33\xaf\x8e\xf3\xd2\x03\xbc\x93\x19\xfc\xc7\x59\xce\x8c\xde\x85\x95\x53\x2e\xd5\xd6\x5a\xdd\xe4\x72\x72\x33\xfb\x78\x7b\x35\x9e\x8c\x17\x5d\x63\xd3\x94\x94\x8a\x99\xed\x48\x0a\x43\xf7\xa6\x7f\xc0\x91\xa0\x65\x19\x65\x1b\xc6\x29\xa3\x34\x86\x15\x72\xdd\xd5\xbf\x21\x95\x33\xe1\xd2\xc8\xc4\xbf\x5c\x4c\xd1\xac\x63\x88\x52\xda\x44\x9d\xc9\x80\xcb\xac\xb3\xcd\x37\x7c\x13\x59\x8a\x5d\xf5\xe6\x76\xac\x3a\x63\x83\x8e\xe8\xa8\xc8\xf4\x57\x1e\x59\xa7\xeb\xe1\x3a\xee\x67\x41\x6f\x7d\x2a\x74\xed\x4f\x55\xa5\xf0\x96\x29\xdd\xfa\x93\x22\x6d\x50\x99\x7a\xcd\x90\xdf\xe1\x56\x0f\xfa\x70\x7b\x61\xfe\x7b\x2e\x87\x4e\x7f\xd5\xa9\x2d\x76\x54\x60\x87\xae\xff\x3c\x74\x18\xc5\xb2\xac\xc9\x39\x81\x8f\x17\xa3\x35\x0a\x4b\xbd\xc2\xbc\x83\x12\x4b\x23\x73\x34\x2c\x89\xc1\x66\xeb\xfd\xc4\x65\xaf\xeb\x49\x75\xc0\x09\x57\x3b\x21\xd2\x97\x17\x63\x7b\xeb\xdc\x28\xc2\x7c\x81\xd9\x11\x67\x8e\x7b\xb5\xf4\x87\xcb\xd9\x7c\x7c\x73\xfd\xb8\xb3\xa1\xea\xa4\x7e\x7a\xb0\x62\xce\xa7\xc3\x51\x27\x4c\x72\xd4\x66\xe1\x65\xa6\x74\xec\x23\xe6\xc9\x49\x2f\xf9\x8f\x5b\x0a\x2a\x52\xaa\x9a\xd0\x55\x3e\xcd\x44\x55\x16\x5a\xf3\x6e\x7b\x53\xdb\xac\xf5\x5a\xef\x09\xde\xb3\xbc\xcc\x01\x9d\x25\x82\x5c\x55\xbe\x05\x66\x4d\x2d\x73\x90\xa0\xb0\x7d\xb0\xed\x3f\xab\xee\xd4\xeb\x6e\xe2\x17\x5f\x59\x2f\x6d\xba\xc8\xae\x4f\x0e\x7c\x89\xc7\x94\x75\xa7\x4a\x2d\x2e\x17\xc5\xf0\xea\xfc\xe5\x84\xed\xe2\xb1\x4d\x7b\xfb\x8e\x73\x5d\xb3\x65\x7b\x6a\xf7\xea\x42\x5d\x5d\x58\x3b\x66\x29\xe9\x3d\x58\xcd\xbe\x06\x53\x43\x75\x7b\x7f\xdb\xc9\x1e\xc0\x60\x77\x59\x36\x4c\x0f\x4f\xd5\xfd\x80\x6f\x62\x52\x58\x49\xe5\x56\xd4\x19\x72\x0f\x48\xf3\x4c\x58\xef\xbc\xf6\x29\xd4\x83\x3a\x68\xf7\x47\x18\xeb\xd8\xeb\x0e\xe4\xfa\x65\xd3\x21\xea\xbc\xbb\xd9\x5a\x08\xcc\x1a\x0d\xdc\x31\xce\x61\x49\x76\xc4\xe3\xf6\xf5\xba\x7f\x50\x3b\x22\x41\xe7\xb0\xee\x53\x66\x75\xdf\xa0\xf2\x18\x77\xd1\xa7\x61\xf0\xf7\x17\xc1\x9b\xcf\x0f\x3f\x5b\x7b\xce\x48\x90\x72\x6f\xc0\x74\x5f\x28\xdf\xcf\x34\x92\xef\x17\x81\x3b\x32\xef\xc8\x57\xbf\xc9\x36\x8c\x77\x60\x25\x2d\x2c\x8b\xe2\x89\x12\x4c\xdb\xd2\xcb\x4b\x70\xfa\x09\x83\x7f\xd6\x12\x9c\xbf\x76\x3d\xfb\x53\x65\xe8\x54\x88\xc7\xe5\xb8\xee\x98\xd5\xa1\xe7\x51\xaf\x14\x4a\x8f\x09\xd1\x7b\x7a\x3e\x84\xa6\x53\x00\x7e\xcb\x92\x34\xe6\x05\xa7\x74\xb9\x8b\xcf\xc7\x6b\xf0\x3e\xd7\xbe\x4f\x5a\xd6\x2d\xc6\x33\xa0\x30\x0b\xbd\xe7\x9e\xc1\xcb\x77\x6c\x0f\x67\x75\xc0\x08\x0b\x4c\x98\xd9\x36\xf0\x76\x5a\xb9\x23\xd0\xce\xdf\xed\x05\x85\xaa\xe3\xb3\xc4\x75\x78\x70\xa9\x00\x8c\x6c\xac\xfa\xd9\x9b\xf0\x97\x33\x78\x13\xbe\xb2\x7f\x5e\x83\x54\xe0\x5f\x2a\x9f\xef\xa3\x3c\x78\xa0\x8b\x2c\x87\x08\xad\xe2\xf8\x11\xd0\x27\x6f\xc2\xd7\x27\x83\x7f\x07\x00\x00\xff\xff\xcb\x11\x51\xfb\x35\x19\x00\x00")

func templateTemplateOpenshiftIoOpenshiftPostgresqlPersistentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftPostgresqlPersistentYaml,
		"Template.template.openshift.io/openshift/postgresql-persistent.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftPostgresqlPersistentYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftPostgresqlPersistentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/postgresql-persistent.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftRailsPgsqlPersistentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5b\x73\xdb\x36\x16\x7e\xd7\xaf\x38\xe3\xe9\x4c\xda\x59\x4b\x8a\xdd\x66\xb6\xe5\x9b\x2c\x2b\x8e\x26\x96\xa5\x52\x76\xd2\x6c\xa7\xa3\x01\xc9\x23\x0a\x6b\x12\x60\x00\x50\xb6\x9a\xf5\x7f\xdf\x01\x40\x52\xbc\xda\x56\xea\x4c\x1f\x76\xfd\x90\x89\x08\xe0\xe0\x3b\x57\x7c\xb8\x90\x84\x7e\x40\x21\x29\x67\x0e\x28\x8c\x93\x88\x28\x1c\xf0\x04\x99\xdc\xd0\xb5\x1a\x50\x3e\xdc\x9e\xf4\x6e\x29\x0b\x1c\xb8\xce\x9a\x7b\x11\xf1\x30\x92\x4e\x0f\x80\x24\x89\x03\x82\xd0\x48\xf6\x93\x50\x7e\x8e\xfa\x89\x96\x25\x15\x32\xd5\x83\x42\x5e\x67\x97\x18\xa5\x24\x21\x3a\xf0\x9f\x7e\x0f\xe0\x7a\x83\xb0\xe6\x51\xc4\xef\x28\x0b\x41\xa2\xd8\x52\x1f\xbf\x97\x3f\xc0\x86\x6c\x11\x3c\x44\x06\xbe\x40\xa2\x30\x00\xca\x60\xc7\x53\x01\x89\xe0\xff\x46\x5f\x39\xf0\xdd\x97\xab\xd1\x6c\xf2\x70\x0c\xdf\x7d\x39\x1f\x5d\x8f\xce\x46\xcb\xc9\x6a\x39\x71\x3f\x4c\xc7\x93\x95\x69\x19\xf4\x7a\x00\x6f\xb9\x80\x98\x0b\x04\xca\xd6\x5c\xc4\x44\x51\xce\x80\x78\x3c\x55\x90\x4a\x3d\xa9\xda\x50\x59\xc0\x3e\x06\xca\xfc\x28\x0d\x74\xc3\x3c\x41\xb6\xd4\x16\x01\x9f\x33\x49\x03\x14\x66\xb0\x3c\x06\x89\x08\x1b\xa5\x12\xe9\x0c\x87\x21\x55\x9b\xd4\x1b\xf8\x3c\x1e\x16\x26\x1c\x5a\xdd\xf1\x7e\xe8\x45\xdc\x1b\xc6\x44\x2a\x14\x43\x77\x32\x3a\x9f\x4d\x06\x71\x30\xe8\xc5\xa8\x48\x40\x14\x31\xf6\x64\x8c\x2b\x2b\x59\xff\x04\x08\x50\xfa\x82\x26\xca\xf8\x67\xc4\x00\xef\x49\x9c\x44\x08\xae\x16\xaa\xcd\x1f\x51\xdf\xaa\x71\x47\xd5\x06\x08\x2c\xb8\x54\xa1\xc0\xe5\xaf\x97\xa0\x85\x7a\x44\xe2\xa0\xd0\xdb\x88\x84\x17\xd6\x3e\x13\xfa\x97\x6c\x60\x50\xf9\x9c\x8d\x23\x22\xa5\x63\xfe\xdb\x17\xa9\xb7\x33\x0d\x95\x68\x0c\xa8\x4c\x22\xb2\xeb\x33\x12\xa3\x93\x99\xe1\x1f\x25\xad\x5b\x46\x70\x3f\x8d\x91\x59\xb3\xf6\x53\x11\x39\xcf\xc3\xda\x94\x14\x71\x16\xf6\x2b\x1e\xb9\x2e\x5b\x0c\x02\x5c\x53\x86\x12\x04\x4a\x9e\x0a\x1f\x25\x30\xc4\x00\x03\x50\x1c\x02\xdc\x62\xc4\x93\xcc\x58\xa4\xe9\xc0\xb2\xbd\x09\x78\x29\x8d\x02\x6d\xed\x35\x0d\x53\x91\x75\x28\xbb\x3b\xc0\x24\xe2\xbb\xd8\x26\x9a\xfe\xab\xf7\x65\x41\x11\x00\xa5\xce\xd5\x6e\x83\xa6\x8e\x89\xe0\x5b\xed\xe0\x7e\xcd\xd0\x18\xc0\x3b\xa2\x8e\x61\xca\xfc\x96\x51\x32\x4d\x12\x2e\x54\xd5\xba\xc4\xf7\x51\xca\x81\xc0\x60\x43\x94\x36\xb2\x19\xa7\x48\x28\x1d\xf8\x9c\x52\xff\x56\x2a\x22\xd4\xb1\xf6\xf3\xb1\x31\xba\x6d\x6f\x2d\x42\x1e\x65\x01\xf1\x22\x74\xe0\x68\x4d\x22\x89\x47\x3d\x00\x8b\xac\xb3\xfa\xe8\x66\x99\x10\x1f\x9d\x3d\xd6\x1e\xf7\x74\xbd\x90\x4e\xaf\x0f\xe5\xca\xb7\x3d\xe9\x01\xd8\x2a\xb7\x44\x5f\xa0\x1e\x5f\xce\xcb\x7c\xb2\xac\xcc\xf4\x00\xa4\x12\x94\x85\xe7\x45\x7b\xc9\x37\xfd\x84\x48\x79\xc7\x45\xa0\xfb\x8f\x16\x8b\xcb\xe9\x78\x74\x3d\x9d\x5f\xad\x16\xa3\xe5\xf2\xe3\xdc\x3d\x7f\x68\x8c\x48\x25\x8a\x7a\xef\x9b\xe5\xc4\xb5\x3d\x73\x3f\x56\x04\x17\x65\xae\x2a\xb5\xe8\x9b\x8b\x2c\xfa\xed\xe5\xdd\xe2\x4e\x77\xd1\xad\xcb\xc9\xd8\x9d\x5c\xaf\xde\x4f\x3e\xad\x74\xa7\x87\xc7\xec\x62\xea\x71\xc3\x30\x8d\x92\x55\x2b\x5a\x93\xfb\x84\x4b\x94\x26\x20\x23\x4e\x02\xf0\x48\x44\x98\x4e\x0e\xb5\xc1\x4a\x48\x27\x3c\x90\x99\x84\xac\xf8\x0f\x48\x94\x6c\x48\x35\x12\x02\x4c\x90\x05\xc8\x7c\x8a\xd2\x81\x57\xbf\x7f\x39\xd2\xae\x39\x72\xe0\xa8\xab\xf4\x1f\x1d\x67\x52\x01\x8e\xb4\x2e\xba\x6f\xa6\xcd\xd1\xc3\x1f\xaf\xda\xdd\x9b\xa0\x6f\xd5\xd1\x71\x9d\x69\xd6\xcf\xba\xdd\xa1\x97\x49\xd4\x8d\x0e\xfc\xfc\xfa\xe7\xd7\xd9\x07\x45\x44\x88\x6a\x51\xfd\x2c\x31\x42\x5f\x71\x91\xdb\xa7\x3a\x59\xa7\xc5\x5d\x9e\xaa\xa6\xbd\xbb\x91\x6e\xb8\x54\xf5\x20\x3a\x9f\xcf\x46\xd3\x2b\xeb\x76\xc5\x73\x00\x75\x8f\x1e\x00\x6a\x1a\x93\x10\x97\x4a\x20\x89\x0f\x0e\x85\xf7\x88\x89\x04\x25\x88\x7f\x0b\x7c\x0d\xfe\x86\xb0\x10\xa5\x5e\xcc\xeb\xa1\x40\xf5\x2c\x2d\xea\x76\xc2\x3a\xd3\xf5\x72\x6c\x6a\xdb\xc1\xb0\xce\xb3\xb2\xbd\xe1\x77\xba\x52\xdb\xd2\x5b\x43\x94\xbb\x37\x2f\x4e\x2d\x81\x79\x47\xa8\xea\xaf\xb9\xe8\x0b\x24\xc1\xce\x81\x23\x25\x52\x53\xa7\x1e\xf3\x19\x4f\x55\x92\xaa\x1c\xd6\xde\x43\x2d\xe6\xbe\x26\x61\xd1\x58\x11\xe8\x68\x44\x52\x65\xd1\x2a\xd5\x98\xc7\x31\x2d\x64\x5a\x45\x1d\xf0\x52\x16\x44\x08\x78\x8f\x3e\x08\x72\x8b\x50\x8c\xb1\x8b\x95\xb3\x5f\x47\x14\xde\xab\x73\x6a\xaa\xc7\x78\x7e\x75\x3d\xf9\xed\x7a\x75\x3e\xcd\x6a\x07\x40\xb8\x97\x0d\x20\x70\x6d\xca\xc8\xfc\xc6\x1d\x4f\x56\xee\x64\x31\x5f\x4e\xaf\xe7\xee\xa7\x95\x3b\x79\xfb\x50\xf4\x4a\x05\x6d\xef\x75\xe3\x5e\xe6\xbd\xd4\x2e\x41\x07\x2e\x68\x86\x49\x09\xa2\x30\xdc\x15\x5a\x18\x8c\xcb\xda\x57\x00\x64\xdb\xfd\x8f\x3c\x3f\xdd\x9b\xb3\x4f\x17\x93\xd9\x6a\x36\x75\xdd\xb9\x5b\x34\x03\x6c\x49\x94\x1a\xbb\x55\x7b\xec\x81\xae\x05\x8f\x9d\xd2\x80\x47\x9d\x50\xac\x40\xa9\xb7\x73\x4e\x07\x3f\xd6\x1a\xb2\xb5\xc7\x3a\x69\xb9\x18\x8d\x27\x55\x55\x97\x46\x25\x9b\x99\x82\x86\x21\x8a\xa2\xcc\xd8\x0e\x66\xda\xb1\x49\x92\xca\x77\x1b\xe6\x95\x06\x4b\x64\xf6\xc8\xa5\x59\xc4\xf4\xe4\x17\xd3\xeb\x77\x37\x67\xab\x8f\x93\xb3\x77\xf3\xf9\xfb\x95\xad\xf7\x0d\x9b\xbf\x4b\xbd\xee\xdc\x3a\x2f\xd8\xc3\xcb\x24\x98\x65\x23\x8d\x9c\xd7\x35\x1f\xc5\xb7\x4a\x34\x81\x66\x26\xe9\xc0\xc9\x33\x6a\x72\x5b\x08\x0a\xb4\xbb\x8f\x05\x11\x24\x96\x7b\x5b\x27\x02\xcb\x21\xa3\x13\xec\x0a\xef\x16\x3c\x28\x7f\xd5\x79\x15\xc7\x84\xd5\x3e\xf6\x61\x30\x8c\x69\xa8\x27\xea\x17\x74\x5d\x6e\x6a\x03\x99\x22\x94\xa1\xb8\x6a\x40\xcc\x82\x96\xd0\x28\x15\xb8\xe0\x11\xf5\x77\x0e\x8c\x3c\x2e\x54\xc5\xc1\x6e\x86\xbc\xc2\xaf\x72\x20\x55\x57\xea\xbf\xfd\xf6\xae\x1a\xe7\xf5\x99\xdb\xbe\xee\x0d\x5e\x81\x2e\xcb\x49\x5a\xc9\xd9\x7d\xd6\xb6\x2e\xde\x15\x4b\x14\xe9\xdb\xbe\xce\xb7\xc8\x5c\xcc\x97\xd7\x17\xee\x64\xf9\xeb\xa5\xa1\x3f\x4d\x69\x6f\x6b\x09\x0f\x45\xf2\xbc\xc7\x9d\x8b\xeb\x7a\x9b\x21\x4f\x4e\x95\x65\x35\xba\xb4\x9b\xab\x15\x55\x4e\xde\x5e\x1e\x59\xce\x15\x0f\x46\x57\xa3\x84\x2f\x86\x2c\x63\x9d\x7f\xc5\x5a\xb9\xdf\x9f\x88\x8a\x67\x48\x9a\x8d\x7e\x5b\x8d\xe7\x57\x57\x93\xb1\xa6\x49\xcb\x76\x81\xdd\xfd\x9f\x90\xbe\x7c\x37\x72\x27\xe7\xab\xb3\x9b\xb7\x6f\x27\xee\xd3\xc2\xab\xdd\xdb\x64\x37\x29\x5d\xbb\xd0\x2e\xea\xd7\x2d\xed\x45\xd3\xa2\xbe\xa5\x39\xd8\xd7\x6d\xbb\xa5\x6f\x82\xee\xab\xb3\xc3\x1d\x4d\x2f\x97\xab\xc9\xd5\x87\x76\x07\x14\xcd\xe5\xb1\x86\xcd\x3a\xf0\x0a\x5e\x95\x3e\x46\x74\x8b\x0c\xa5\x5c\x08\xee\x61\x15\xb1\xde\x40\x5f\xa0\xaa\xab\x91\x10\xb5\x71\x60\x48\x84\xa2\x7e\x84\xb2\xde\x5a\xdf\x8a\x64\x73\x33\xaa\x28\x89\xce\x31\x22\xbb\x25\xfa\x9c\x05\x7a\x09\xac\xf6\x51\x34\x46\x9e\xaa\xa2\xb9\xce\x64\xda\xec\x51\xda\x16\xe5\x06\x2a\xaa\xfd\xa2\x0d\x8a\x5e\xac\xe9\xdf\xa5\xf0\x9b\x67\xeb\x5b\x9c\xdd\x54\xc1\x44\x34\xa6\x4a\xd6\x01\xc6\x18\x73\xb1\xd3\xe6\x99\x4d\x66\x9a\xcf\x5e\x4e\x67\xd3\x8c\x5d\xd5\x39\x1d\xdd\xb3\xb9\x3a\x83\x20\xa9\xe2\x31\x51\xd4\x77\x40\x53\x99\xe6\xf2\xa9\x57\xfe\xca\x12\x5a\xf7\xc7\x57\xf1\xd6\x96\xed\x03\x1c\x42\x3d\x3b\x09\xe3\xa2\x38\x86\xf9\xc0\xa3\x34\xc6\x71\x44\x68\x73\xb7\x98\x83\xe8\x5c\xcc\xf7\x5c\xc2\x9e\x24\xcd\x78\x80\x85\x39\x5d\x24\xc1\x47\x41\x15\xce\x59\x46\xa2\x1b\x9e\x13\xf8\x39\x45\x59\xf6\x9a\x54\x5c\x98\x54\xfc\xee\xcb\x87\xf9\xe5\xcd\x6c\xb2\x1a\x8f\x16\xa3\xf1\xf4\xfa\xd3\x37\x3c\xf8\xd0\x3c\xb7\x38\x89\x2b\x91\xdc\x03\xf4\x6f\x39\x83\x48\xec\x89\xa7\xfc\x1c\xf5\xca\xe9\xf0\xe6\xa7\x1f\x4f\x73\x4f\x96\x8e\x22\x8a\xcf\x5d\xb4\xb7\x03\xc4\xdf\xb1\x27\xc8\x6d\xf5\x32\x3b\x81\x67\x58\xf7\xb9\x5b\x83\x47\x58\x67\x7d\xaf\xf0\xc2\xbc\xfb\x09\xbe\xfb\xac\x6e\x7f\x81\x99\xff\x9f\x45\x1f\xce\x13\xfe\x97\x59\xeb\xa1\x7c\x47\x6f\x99\xeb\x8e\x68\xdd\x2e\x6b\xd8\xc3\x54\x8a\x61\x44\x3d\x3d\x68\xe8\x6f\xd0\xbf\xed\x17\xc1\xdc\xe8\xdc\xef\xeb\x69\x9f\x41\x88\x4e\x1f\x67\x44\x15\xc2\xd4\x51\x80\xe1\x59\xac\xa8\x54\xa0\xe1\x09\x56\xf4\x6d\xcc\xf2\x15\xfc\xe8\xe4\xc5\xf8\x51\x29\x7c\x4a\x54\xc9\xfe\x6d\x0d\x57\x98\xf1\x94\xd5\x4d\x18\xeb\x6f\x0b\x4b\x06\xb7\xc4\xa8\x39\x34\x17\x3e\x43\x9d\xa7\x95\x39\x1f\x2f\x85\xfd\x4a\x7f\x3b\xa1\x6c\x9e\x1f\x3e\x6f\x38\x40\xd2\xc6\x73\x6a\xa7\x3e\xfa\xd3\xd5\xd3\xf5\xf9\x9b\xb2\xc5\x96\x50\xfd\x2a\xc2\xb8\x97\xe3\xfc\x32\x78\x53\x6b\x7e\xea\xb8\xf3\x59\x94\x32\xd1\xba\xa2\x32\x86\xe8\x43\xed\xaa\x15\xcd\x3c\x40\xa4\xa4\x21\xb3\xb7\xaa\x24\x8a\x80\xaf\x0d\x6d\x58\x0b\xce\x14\xb2\x00\xb2\x2b\xbe\xec\x36\x36\xb0\xd7\x0b\xa5\x6b\xda\x41\x0f\x20\xbb\xdc\xb4\x8e\xd1\xff\x16\xd7\x89\xd9\xa1\x93\xe6\x8e\x54\x60\x50\xd8\x38\xab\x80\x1d\xb7\x8d\x2d\x58\xf7\x77\xe6\x57\xb9\x75\xe0\x6e\x83\x02\x0d\xda\x92\xa5\x75\x4a\xd1\x00\x65\x2b\x2e\x33\xae\x02\xce\x98\xf6\x11\x84\xfb\xbb\xce\x1a\xa8\x19\xb9\xa7\x71\x1a\x03\x31\xe9\xa4\xcd\x66\xd3\xd3\xe0\xb1\xd7\xd1\x45\x08\x81\x4f\x18\xa4\xb2\x69\xab\x99\x1d\x72\xa9\xd3\xbd\x80\x55\xde\xfc\x3c\x82\xec\xcd\xc9\xe9\x8c\x1e\x84\xaa\xf4\x98\xe1\x30\x68\xf0\xfd\x7e\xe8\x0f\x75\x9c\xf5\x22\x74\x28\x64\x9b\xec\x60\x5d\x4a\xb6\x84\x46\xc4\x8b\x10\xd6\x5c\x18\xde\x70\x0c\x38\x08\x07\x76\xe8\x31\x9c\x5e\xd0\x3a\xd0\x6c\xfc\x98\x24\xc4\xa7\x6a\x57\xc0\xab\x6d\x49\x1e\x81\x75\x72\xd1\x00\xa5\x43\xee\xc6\xbd\xcc\xb3\x41\x60\xc2\x25\x55\xda\x20\xe6\x61\x88\x79\x2d\x53\x39\x6d\x37\x55\x1c\x7c\x1e\x34\x2d\x79\x41\x15\xb8\x7b\x01\x37\xee\x65\x81\xb1\xf5\x0a\xe7\x11\xa4\xcf\x7a\x69\x31\x08\x69\x23\x5a\x97\xa8\xb2\xb4\xe5\x40\xc0\x13\x84\xf9\x1b\x83\xe1\x18\x14\x09\x81\x0b\xe0\x6a\x83\x02\x04\xae\xb5\xce\x46\xbf\x92\xd2\xd4\x7c\xb2\x3b\x11\x81\xc0\xf8\xfe\x8d\x8b\x79\xa7\x41\xd2\x48\x65\x52\x3b\xd4\x5f\xa3\x40\x56\xca\xbd\xd6\x2b\xae\xc7\x50\x5b\x37\x44\x44\xd1\x2d\x9a\xa3\x0c\xfd\xb1\xfc\x6a\x49\x83\xa4\x0a\xa8\x34\xf0\xb2\x5b\x50\xc1\xb9\xdd\x8a\x37\x95\x6a\x00\x1d\xdb\xab\x3a\x38\xa7\xc2\x6c\x58\xf6\xa1\x54\xba\xb6\x6b\x0b\x14\x34\x5b\xd3\xc0\xdc\x18\x9b\x9a\xaa\x36\x44\xc1\x1d\x8d\x22\x10\x3c\x55\x98\xc3\xb7\x55\x21\xbb\x8c\x3f\xd6\x78\x23\x5c\x5b\x78\x5e\x44\xd8\x2d\x10\xeb\x67\x3b\xd4\x2b\x2c\x8b\x41\x03\xeb\xa8\x14\x7b\xef\xb2\x69\x0b\xb8\x2d\xc7\x9b\x35\xd4\x17\x26\x7e\xf2\x65\x32\xa3\xf0\x03\x80\x11\x04\x74\xbd\xa6\xbe\x76\xa7\xe2\x10\xa6\x28\x65\xf6\x36\x03\x90\xe9\xe8\x0e\x80\x48\x48\x88\x28\xac\xaa\x15\xbb\x43\x6f\xc3\xf9\xad\x0e\xed\x01\xc0\x15\x57\xba\xb3\xd8\x25\x6d\xc8\xed\xf5\x18\x7c\xcc\x86\x14\xef\x43\xcc\x12\x0a\xaf\x7e\x27\xfd\x3f\x47\xfd\x7f\xbd\xee\xff\xf2\xc7\x97\x9f\x5e\x3f\x68\xca\x1b\x22\x43\x61\xde\xbd\xe1\x7d\x22\x50\x4a\x7b\x81\x6c\x75\x6d\xbd\x90\xab\xab\xfb\x49\x7b\xde\x2a\xa9\x37\x24\xa6\xb6\x6c\x51\xd0\xf5\x2e\x8f\x61\xca\x14\x86\x82\xaa\x9d\x56\x29\x5b\x10\x7d\xce\x6f\x69\xcb\x42\x62\x21\xc3\x7b\xdc\x55\x61\x1b\xcc\x27\xa7\xff\x7c\x1a\x74\xfd\x4e\xa0\x25\xa6\xca\xc5\x45\xef\xe7\x6c\x4c\x51\xa9\x7f\x04\xa6\x08\x65\x11\x2e\xed\x0b\xb6\x72\x7f\xc5\x7b\x19\xb3\xd9\x70\x41\xff\xc4\xec\xc0\x07\x38\x83\x84\x84\x2d\x1a\x95\xa3\xe9\x46\xa2\xe8\x8c\xa6\x6c\xbf\x7a\xf0\x62\x59\xd7\x28\xdf\x07\x1e\xa0\x95\xe5\x75\xfc\x2b\xb5\x5a\xec\x37\x9e\x8f\x1e\x8d\x77\x69\x66\x83\xa7\xae\xd6\x84\x6d\xa9\xe0\xcc\xbc\x04\x4b\x59\x80\x02\xee\x36\xd4\xdf\x74\xf9\xc5\x56\x84\x94\x0d\x60\xcc\xd3\x28\xd0\x19\x2e\x51\xe5\x8a\x25\x82\x07\xa9\x6f\x9f\x9b\x65\xcf\xdb\x8c\x60\x2e\xcc\xdb\x82\x86\x7a\xb6\x9a\x94\x20\x14\xba\x95\x0f\xd5\xbb\x14\xda\xcf\xa6\x95\x2a\xcb\x3d\xcf\x0f\xd7\xb2\x93\xba\x2a\xa1\xeb\xba\x56\xec\x9c\x67\x4f\x96\xbb\xe6\x29\x45\x9c\xcd\x26\x1d\xef\xbf\xe7\x45\xe0\xc7\x87\xa7\xb2\xa9\xf2\x24\xab\x73\x96\x52\x04\xb4\x94\x9a\x9f\x9f\x4e\xda\xc6\x0b\xb1\xce\xa9\xda\x0d\xf6\x14\x15\xd6\x2b\x55\x4d\x62\xce\xe6\x0a\xc9\x63\xce\x18\x1a\xaf\xc9\x62\x82\x47\x0f\x34\x32\xe1\x47\x27\xaf\x5f\x1f\xd5\xa5\x2f\x37\x44\x60\x00\x67\xe9\x7a\x8d\x02\x46\x86\x31\xb6\x49\x6d\x1c\x64\xe4\xb4\xe9\x74\x76\xd6\x96\xe8\x7e\x2a\x15\x8f\xc1\x4d\xbd\xdd\x05\xc6\x12\x62\x2a\x04\x17\x19\xef\xa9\xae\xb8\xb5\x9e\xb3\x72\xcf\xd6\xc7\x27\xff\x0d\x00\x00\xff\xff\x85\x54\x99\x0a\x60\x2d\x00\x00")

func templateTemplateOpenshiftIoOpenshiftRailsPgsqlPersistentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftRailsPgsqlPersistentYaml,
		"Template.template.openshift.io/openshift/rails-pgsql-persistent.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftRailsPgsqlPersistentYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftRailsPgsqlPersistentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/rails-pgsql-persistent.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftRailsPostgresqlExampleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x6f\xdb\xb6\xf6\x7f\xef\x4f\x71\x10\x0c\xe8\x86\x7f\x6c\x37\xdd\x8a\xff\xa6\x77\x8e\xad\x26\x46\xe3\x87\xc9\xc9\xba\xde\x61\x30\x68\xe9\x58\xe2\x8d\x44\xaa\x24\xe5\xc4\xeb\xcd\x77\xbf\x20\x29\xc9\x92\x2c\x3b\x49\x97\xa2\xf7\x02\xd7\x2f\x8a\x46\x24\x0f\x7f\xe7\x91\x3f\x3e\x90\x94\xfe\x86\x42\x52\xce\x1c\x50\x98\xa4\x31\x51\xd8\xe3\x29\x32\x19\xd1\xb5\xea\x51\xde\xdf\x9c\x75\x6e\x29\x0b\x1c\xb8\xce\x9b\x3b\x31\x59\x61\x2c\x9d\x0e\x00\x49\x53\x07\x04\xa1\xb1\xec\xa6\x5c\xaa\x50\xa0\xfc\x14\x77\xf1\x9e\x24\x69\x8c\x1d\x28\x25\x1e\xe9\x94\xa0\x94\x24\x44\x07\xfe\xd5\xed\x00\x5c\x47\x08\x6b\x1e\xc7\xfc\x8e\xb2\x10\x24\x8a\x0d\xf5\xf1\x7b\xf9\x03\x44\x64\x83\xb0\x42\x64\xe0\x0b\x24\x0a\x03\xa0\x0c\xb6\x3c\x13\x90\x0a\xfe\x4f\xf4\x95\x03\xdf\x7d\x9e\x0e\x26\xee\xc3\x29\x7c\xf7\x79\x34\xb8\x1e\x9c\x0f\x16\xee\x72\xe1\x7a\xbf\x8d\x87\xee\xd2\xb4\xf4\x3a\x1d\x80\x77\x5c\x40\xc2\x05\x02\x65\x6b\x2e\x12\xa2\x28\x67\x40\x56\x3c\x53\x90\x49\x3d\xa9\x8a\xa8\x2c\x81\x9f\x02\x65\x7e\x9c\x05\xba\x61\x96\x22\x5b\x68\xab\x80\xcf\x99\xa4\x01\x0a\x33\x58\x9e\x82\x44\x84\x48\xa9\x54\x3a\xfd\x7e\x48\x55\x94\xad\x7a\x3e\x4f\xfa\xa5\x19\xfb\x56\x7b\xbc\xef\xaf\x62\xbe\xea\x27\x44\x2a\x14\x7d\xcf\x1d\x8c\x26\x6e\x2f\x09\x7a\x9d\x04\x15\x09\x88\x22\xc6\xa6\x8c\x71\x65\x25\xeb\x3f\x01\x02\x94\xbe\xa0\xa9\x32\x3e\x32\x56\xd2\xbf\x01\x83\xdc\x84\xe0\x69\xe9\xda\x17\x31\xf5\xad\x3e\x77\x54\x45\x40\x60\x6e\xcd\xbd\xf8\xf5\x0a\xb4\xf4\x15\x91\xd8\xfb\xcf\x34\x40\xae\xd4\x87\x81\x37\x1d\x4f\x2f\x1c\x18\xb0\xad\x81\x0c\x52\x71\x81\x01\xdc\xd1\x38\x86\x15\x42\xcc\xa5\x82\x2c\xe5\x0c\x52\x1e\x68\xcb\x28\x91\xf9\x1a\x44\x0f\x66\x2c\xde\x42\x26\xb1\x8e\x1f\xd6\x5c\x80\x42\xa9\x28\x0b\x7b\x66\x16\xea\x73\x36\x8c\x89\x94\x8e\xf9\x6f\x57\x64\xab\xad\x69\xa8\x45\x7d\x40\x65\x1a\x93\x6d\x97\x91\x04\x9d\xdc\xc2\xff\x57\x35\xe8\xf7\x6e\x1a\x61\x82\x82\xc4\x3f\xb4\x8c\xe6\x7e\x96\x20\xb3\x6e\xec\x66\x22\x76\x9e\x66\x9e\x7d\x49\x31\x67\x61\xb7\x16\x01\xd7\x35\xf5\x02\x5c\x53\x86\x12\x04\x4a\x9e\x09\x1f\x25\x30\xc4\x00\x03\x50\x1c\x02\xdc\x60\xcc\xd3\xdc\xb6\x64\x3f\x4e\xaa\xce\x25\xb0\xca\x68\x1c\x68\xd7\xae\x69\x98\x89\xbc\x43\x35\xaa\x02\x4c\x63\xbe\xd5\x7a\xe5\x22\x9b\x7d\x59\x50\xc6\x59\xa5\x73\xbd\x5b\xcf\x26\x79\xd9\x8f\xca\xdc\xc7\xb9\x4c\xca\x80\x71\xd6\x4d\x75\x51\x92\x4a\x0f\xd7\xcd\x24\xc4\x53\x90\xdc\xfa\xb6\x26\x0f\x64\xc4\xb3\x38\xd0\xc1\x91\x49\x0c\x8c\xbf\xf1\x3e\x45\x41\x8d\x03\xe2\x5c\x6c\x9a\x89\x94\x4b\x94\xc0\x59\xbc\xed\xed\xdb\x39\x15\x7c\xa3\x23\xba\xdb\x70\x3c\x06\x70\x49\xd4\x29\x8c\x99\xdf\x32\x4a\x66\x69\xca\x85\xaa\x7b\x98\xf8\x3e\x4a\xd9\x13\x18\x44\x44\x69\x47\x9b\x71\x8a\x84\xd2\x81\x4f\x19\xf5\x6f\xa5\x22\x42\x9d\xea\xb8\x3b\x35\x8e\xb7\xed\xad\xc5\x77\x45\x59\x40\x56\x31\x3a\x70\xb2\x26\xb1\xc4\x93\x0e\x80\x45\x76\xa4\xea\xea\x0e\x32\x25\x3e\x3a\x3b\xb4\x1d\xbe\xd2\x55\x52\x3a\x9d\x2e\x54\x6b\xfe\xe6\xac\x03\x60\xeb\xfb\x02\x7d\x81\xda\xb5\xd5\x6a\x54\x4c\x97\x17\xd7\x0e\x80\x54\x82\xb2\x70\x54\xb6\x57\x22\xa4\x9b\x12\x29\xef\xb8\x08\x74\xff\xc1\x7c\x7e\x35\x1e\x0e\xae\xc7\xb3\xe9\x72\x3e\x58\x2c\x3e\xcc\xbc\xd1\xc3\xde\x88\x4c\xa2\x68\xf6\xbe\x59\xb8\x9e\xed\x59\x44\x49\x4d\x70\x59\xdc\xeb\x52\xcb\xbe\x85\xc8\xb2\xdf\x4e\xde\x2d\x6e\x75\x17\xdd\xba\x70\x87\x9e\x7b\xbd\x7c\xef\x7e\x5c\xea\x4e\x0f\xc7\xec\x62\x56\xa1\x3d\xc3\xec\x15\xea\x46\xa9\x76\xef\x6d\xc4\xe9\xb4\x88\x39\x09\x60\x45\x62\xc2\x74\x8a\xaa\x08\x6b\x89\x95\xf2\x40\xe6\x12\xf2\x25\xaf\x47\xe2\x34\x22\xf5\x58\x08\x30\x45\x16\x20\xf3\x29\x4a\x07\x5e\xfd\xf1\xf9\x44\xbb\xe6\xc4\x81\x93\x43\x0b\xde\xc9\x69\x2e\x15\xe0\x44\xeb\xa2\xfb\xe6\xda\x9c\x3c\xfc\xf9\xaa\xdd\xbd\x29\xfa\x56\x1d\x1d\xd9\xb9\x66\xdd\xbc\xdb\x1d\xae\x8a\x7c\xe2\x42\x39\xf0\xf3\xeb\x9f\x5f\xe7\x1f\x14\x11\x21\xaa\x79\xfd\xb3\xc4\x18\x7d\xc5\x45\x61\x9f\xfa\x64\x07\x2d\xee\xf1\x4c\xed\xdb\xfb\x30\xd2\x88\x4b\xd5\x0c\xa2\xd1\x6c\x32\x18\x4f\xad\xdb\x15\x2f\x00\x34\x3d\xfa\x0c\x50\xe3\x84\x84\xb8\x50\x02\x49\xf2\xec\x50\x78\x8f\x98\x4a\x50\x82\xf8\xb7\xc0\xd7\xe0\x47\x84\x85\x28\x75\xad\x6b\x86\x02\xd5\xb3\xb4\xa8\x7b\x10\xd6\xb9\xae\xda\x43\x53\x11\x9f\x0d\x6b\x94\x2f\x1e\x11\xbf\xd3\xeb\x85\x5d\x00\x1a\x88\x0a\xf7\x16\xe5\xa9\x25\x30\xef\x08\x55\xdd\x35\x17\x5d\x81\x24\xd8\x3a\x70\xa2\x44\x66\x2a\xd5\x31\x9f\xf1\x4c\xa5\x99\x2a\x60\xed\x3c\xd4\x62\xee\x6b\x12\x96\x8d\x35\x81\x8e\x46\x24\x55\x1e\xad\x52\x0d\x79\x92\xd0\x52\xa6\x55\xd4\x81\x55\xc6\x82\x18\x01\xef\xd1\x07\x41\x6e\x11\xca\x31\x76\xc9\x74\x76\xab\x99\xc2\x7b\x35\xa2\xa6\x7a\x0c\x67\xd3\x6b\xf7\xf7\xeb\xe5\x68\x9c\xd7\x0e\x80\x70\x27\x1b\x40\xe0\xda\x94\x91\xd9\x8d\x37\x74\x97\x9e\x3b\x9f\x2d\xc6\xd7\x33\xef\xe3\xd2\x73\xdf\x3d\x94\xbd\x32\x41\xdb\x7b\xdd\x78\x57\x45\x2f\xb5\x4d\xd1\x81\x0b\x9a\x63\x52\x82\x28\x0c\xb7\xa5\x16\x06\xe3\xa2\xf1\x15\x00\xd9\x66\xf7\x47\x91\x9f\xde\xcd\xf9\xc7\x0b\x77\xb2\x9c\x8c\x3d\x6f\xe6\x95\xcd\x00\x1b\x12\x67\xc6\x6e\xf5\x1e\x3b\xa0\x6b\xc1\x13\xa7\x32\xe0\xa8\x13\xca\x35\x28\x5b\x6d\x9d\x37\xbd\x1f\x1b\x0d\xf9\xda\x63\x9d\xb4\x98\x0f\x86\x6e\x5d\xd5\x85\x51\xc9\x66\xa6\xa0\x61\x88\xa2\x2c\x33\xb6\x83\x99\x76\x68\x92\xa4\xf6\xdd\x86\x79\xad\xc1\xd2\xa9\x1d\x72\x69\x16\x31\x3d\xf9\xc5\xf8\xfa\xf2\xe6\x7c\xf9\xc1\x3d\xbf\x9c\xcd\xde\x2f\x6d\xbd\xdf\xb3\xf9\x65\xb6\x3a\x9c\x5b\xa3\x92\xc3\xbc\x4c\x82\x59\x4e\xb4\x97\xf3\xba\xe6\xa3\xf8\x5a\x89\x26\xd0\xcc\x24\x1d\x38\x7b\x42\x4d\x6e\x0b\x41\x81\x76\xcf\x35\x27\x82\x24\x72\x67\xeb\x54\x60\x35\x64\x74\x82\x4d\xf1\x6e\xce\x83\xea\x57\x9d\x57\x49\x42\x58\xe3\x63\x17\x7a\xfd\x84\x86\x7a\xa2\x6e\xb9\x37\x91\x51\x63\x20\x53\x84\x32\x14\xd3\x3d\x88\x79\xd0\x12\x1a\x67\x02\xe7\x3c\xa6\xfe\xd6\x81\xc1\x8a\x0b\x55\x73\xb0\x97\x23\xaf\x31\xac\x02\x48\xdd\x95\xfa\xb7\xdb\xd8\xd6\xe3\xbc\x39\x73\xdb\xd7\x9d\xc1\x6b\xd0\x65\x35\x49\x6b\x39\xbb\xcb\xda\xd6\xc5\xbb\x66\x89\x32\x7d\xdb\xd7\xf9\x16\x99\xf3\xd9\xe2\xfa\xc2\x73\x17\xbf\x5e\x19\xfa\xb3\x2f\xed\x5d\x23\xe1\xa1\x4c\x9e\xf7\xb8\xf5\x70\xdd\x6c\x33\xe4\xc9\xa9\xb3\xac\xbd\x2e\xed\xe6\x6a\x45\x55\x90\xb7\x97\x47\x56\x70\xc5\xbf\x83\xae\xb0\xf3\x23\x5e\x38\x24\xa9\x41\x2e\x5f\x4c\xc7\x9c\xbf\xfe\x1d\xcd\x26\x83\xdf\x97\xc3\xd9\x74\xea\x0e\x35\x4d\x5a\xb4\x2b\x78\xb8\xff\x23\xd2\x17\x97\x03\xcf\x1d\x2d\xcf\x6f\xde\xbd\x73\xbd\xc7\x85\xd7\xbb\xb7\xc9\xde\xa7\x74\xed\x42\x0f\x51\xbf\xc3\xd2\x5e\x34\x2d\x9a\x5b\x9a\x67\x7b\xa8\x6d\xb7\xf4\x55\xd0\x7d\x71\x76\x78\x83\xf1\xd5\x62\xe9\x4e\x7f\x6b\x77\x40\xd9\x5c\x1d\x6b\xd8\xac\x03\xaf\xe0\x55\xe5\x63\x4c\x37\xc8\x50\xca\xb9\xe0\x2b\xac\x23\xd6\x5b\xe8\x0b\x54\x4d\x35\x52\xa2\x22\x07\xfa\x44\x28\xea\xc7\x28\x9b\xad\xcd\xad\x48\x3e\x37\xa3\x8a\x92\x78\x84\x31\xd9\x2e\xd0\xe7\x2c\xd0\x4b\x60\xbd\x8f\xa2\x09\xf2\x4c\x95\xcd\x4d\x26\xd3\x66\x8f\xca\xb6\xa8\x30\x50\x59\xed\xe7\x6d\x50\xf4\x62\x4d\xbf\x95\xc2\x6f\x9f\xac\x6f\x79\x82\x54\x07\x13\xd3\x84\x2a\xd9\x04\x98\x60\xc2\xc5\x56\x9b\x67\xe2\x4e\x34\x9f\xbd\x1a\x4f\xc6\x39\xbb\x6a\x72\x3a\xba\x63\x73\x4d\x06\x41\x32\xc5\x13\xa2\xa8\xef\x80\xa6\x32\xfb\xcb\xa7\x5e\xf9\x6b\x4b\x68\xd3\x1f\x5f\xc4\x5b\x5b\xb6\x0f\xf0\x1c\xea\xf9\xd5\x8e\x0a\x54\xf5\x64\xac\x42\x0b\x0b\xd8\x07\x97\xff\xa3\xbb\xf6\xdd\x21\x51\xa7\x1a\x40\x6f\x7f\xfa\xf1\x4d\xa1\x7b\x65\xf3\x5e\x7e\x3e\x44\x14\x0f\x80\xf8\x16\x2c\xba\xb0\xd5\xcb\x70\xe7\x27\x58\xf7\xa9\x64\xfa\x08\x4f\x6b\xb2\xeb\x17\x66\xaa\x8f\x30\xc4\x27\x75\xfb\x1b\x5c\xf6\x7f\xbc\xf3\x5b\xf2\xce\xff\x3e\x9e\xf7\x5c\x86\xa0\x37\x99\x4d\x47\xb4\x6e\x30\x35\xec\x7e\x26\x45\x3f\xa6\x2b\x3d\xa8\xef\x47\xe8\xdf\x76\xcb\x60\xde\xeb\xdc\xed\xea\x69\x9f\x40\x21\xde\x1c\xe7\x10\x35\x8a\x71\xa0\x00\xc3\x93\x78\x44\xa5\x40\xc3\x23\x3c\xe2\xeb\x98\xe5\x0b\x18\xc5\xd9\x8b\x31\x8a\x4a\xf8\x54\xc8\x85\xfd\x6d\x78\x9c\x25\x38\xe1\x19\x6b\x9a\x30\xd1\xdf\xe6\x96\x3e\x6d\x88\x51\xb3\x9f\x86\xf2\x53\xdc\xd7\x79\x5a\x9b\xd3\xfa\xa6\xf6\xd9\xca\xad\xd7\xb9\x24\x55\x5b\x73\x26\xf8\xf9\x61\xcf\xb1\xe5\xe0\xaf\xca\x79\x5a\xc2\xe7\x8b\x68\xcf\x4e\x8e\xf3\x4b\xef\x6d\xa3\xf9\xb1\x43\xbb\x27\x11\xa3\x54\xeb\x8a\xca\x18\xa2\x0b\x8d\x6b\x4b\x34\xf3\x00\x91\x92\x86\xcc\xde\x50\x92\x38\x06\xbe\x36\x4b\xf9\x5a\x70\xa6\x90\x05\x90\x5f\x54\xe5\x37\x9b\x81\x3d\x24\xaf\x5c\x79\xf6\x3a\x00\xf9\x25\x9d\x3d\x17\xd2\xff\x96\xd7\x62\xf9\xd1\x89\xc0\x4f\x19\x15\x18\x94\x36\xce\xab\xd2\xc1\x5b\xb3\x16\xb4\xbb\xeb\xee\x69\x61\x1f\xb8\x8b\x50\xa0\xc1\x5b\xb1\xb5\x0e\x74\x1a\xa0\x6c\x45\x66\xc6\xd5\xe0\x19\xe3\x1e\xc1\xb8\xbb\xb3\x6b\x80\x9a\x90\x7b\x9a\x64\x09\x10\x13\xe4\xda\x70\x36\x69\x0c\x1e\x7b\xb9\x5b\x06\x11\xf8\x84\x41\x26\xf7\xad\x35\xb1\x43\xae\x74\x12\x96\xb0\xaa\x24\xfe\x08\xb2\xb7\x67\x6f\x26\xf4\x59\xa8\x2a\x17\xe6\xcf\x83\x06\xdf\xef\x86\xfe\xd0\xc4\xd9\x2c\x0d\xcf\x85\xac\xbd\x7b\xe3\x5d\x15\xa1\x27\x30\xe5\x92\x2a\x3d\xb7\x79\x38\x61\x9e\x95\xd4\x0e\x68\x4d\x19\x03\x9f\x07\xfb\xa0\x2f\xa8\x02\x6f\x27\xe0\xc6\xbb\x2a\xd1\xb6\x9e\xfa\x1f\xc1\xfa\xa4\x27\x02\xbd\x90\xee\x05\xc6\x02\x55\x9e\x23\x1c\x08\xac\x04\x61\x7e\x64\x30\x9c\x82\x22\x21\x70\x01\x5c\x45\x28\x40\xe0\x5a\xeb\x6c\xf4\xab\x28\x4d\xcd\x27\x4b\xc5\x05\x02\xe3\xbb\x97\x20\xe6\x81\x01\xc9\x62\x95\x4b\x3d\xa0\xfe\x1a\x05\xb2\x4a\x98\xb7\xde\x8a\x1c\x43\x6d\xdd\x10\x13\x45\x37\x68\x76\xbf\xfa\x63\xf5\x79\x8f\x06\x49\x15\x50\x69\xe0\xe5\x17\x67\x82\x73\xbb\x7b\xdb\x57\x6a\x0f\xe8\xd0\xde\xee\xc0\x88\x0a\xc3\xd8\xb7\x25\xd8\xca\x4d\x4f\x5b\xa0\xa0\xd9\x9b\x05\xe6\x92\xd1\x14\x30\x15\x11\x65\x1f\xa4\x08\x9e\x29\x2c\xe0\xdb\x04\xcc\xef\x6f\x4f\x35\xde\x18\xd7\x16\xde\x2a\x26\xec\x16\x88\xf5\x73\xf9\x96\x25\xb7\x2c\x06\x7b\x58\x07\x95\xd8\xbb\xcc\xa7\x2d\xe1\xb6\x9c\x88\x35\x50\x5f\x98\xf8\x29\xd6\xa4\x9c\xc3\xf6\x00\x06\x10\xd0\xf5\x9a\xfa\xda\x9d\x8a\x43\x98\xa1\x94\xf9\x75\x3e\x20\xd3\xd1\x1d\x00\x91\x90\x12\x51\x5a\x55\x2b\x76\x87\xab\x88\xf3\x5b\x1d\xda\x3d\x80\x29\x57\xba\xb3\xd8\xa6\x6d\xc8\xed\x8d\x0a\x7c\xc8\x87\x94\x4f\x0a\xcc\x7a\x05\xaf\xfe\x20\xdd\xbf\x06\xdd\x7f\xbc\xee\xfe\xf2\xe7\xe7\x9f\x5e\x3f\x68\xce\x17\x22\x43\x61\x9e\x88\xe1\x7d\x2a\x50\x4a\x7b\xe7\x68\x75\x6d\xbd\xc3\x69\xaa\xfb\x51\x7b\xde\x2a\xa9\x19\xb9\x79\x01\xb2\x41\x41\xd7\xdb\x22\x86\x29\x53\x18\x0a\xaa\xb6\x5a\xa5\x7c\xf5\xf1\x39\xbf\xa5\x2d\x35\xdb\x42\x86\xf7\xb8\xad\xc3\x36\x98\xcf\xde\xfc\xff\xe3\xa0\x9b\x87\xbf\x2d\x31\x55\x2d\x2e\x7a\x43\x63\x63\x8a\x4a\xfb\x84\x45\x17\xa1\x3c\xc2\xa5\x7d\xe1\x55\xed\xaf\x78\x27\xa7\x11\x11\x17\xf4\x2f\x04\xfb\xde\x04\x38\x83\x94\x84\x2d\x1a\x55\xa3\xe9\x46\xa2\x38\x18\x4d\xf9\x86\xed\xd9\xeb\x52\x53\xa3\x62\x23\xf4\x0c\xad\x2c\x89\xe2\x5f\xa8\xd5\x7c\xb7\xf3\x3a\x7a\x9a\x7a\x48\x33\x1b\x3c\x4d\xb5\x5c\xb6\xa1\x82\x33\xf3\x84\x29\x63\x01\x0a\xb8\x8b\xa8\x1f\x1d\xf2\x8b\xad\x08\x19\xeb\xc1\xb0\x78\x90\x24\x51\x15\x8a\xa5\x82\x07\xf6\xa5\xda\x69\xf1\x2e\xcb\x08\xce\x5f\xa7\xed\xa9\x67\xab\x49\x05\x42\xa9\x5b\xf5\x1c\xf6\x90\x42\xbb\xd9\xb4\x52\x55\xb9\xa3\xe2\x74\x29\x3f\xaa\xaa\xb3\xa7\x43\x37\x51\x07\xe7\xd9\x31\xd3\x43\xf3\x54\x22\xce\x66\x93\x8e\xf7\x3f\x8a\x22\xf0\xe3\xc3\x63\xd9\x54\x7b\xc5\x73\x70\x96\x4a\x04\xb4\x94\x9a\x9f\x1f\x4f\xda\xbd\x47\x45\x07\xa7\x6a\x37\xd8\x63\xbc\x53\xaf\x54\x0d\x89\x05\x71\x2a\x25\x0f\x39\x63\x68\xbc\x26\xcb\x09\x8e\xee\xe8\x73\xe1\x27\x67\xaf\x5f\x9f\x34\xa5\x2f\x22\x22\x30\x80\xf3\x6c\xbd\x46\x01\x03\x43\xce\xda\xa4\xee\xed\xe4\x73\xa1\x67\x6f\x26\xe7\x6d\x89\xee\x67\x52\xf1\x04\xbc\x6c\xb5\xbd\xc0\x44\x42\x42\x85\xe0\x22\xe7\x3d\xf5\x15\xb7\xd1\x73\x52\xed\xd9\xfa\x5e\xe1\xdf\x01\x00\x00\xff\xff\xd1\x49\x14\xb8\x8d\x2c\x00\x00")

func templateTemplateOpenshiftIoOpenshiftRailsPostgresqlExampleYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftRailsPostgresqlExampleYaml,
		"Template.template.openshift.io/openshift/rails-postgresql-example.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftRailsPostgresqlExampleYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftRailsPostgresqlExampleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/rails-postgresql-example.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftRedisEphemeralYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x5b\x8f\xdb\xb8\x15\x7e\xf7\xaf\x38\x30\x02\x78\x06\x18\xc9\x73\xc1\xee\x62\x09\x04\x85\xd7\xe3\x6c\x8d\xc6\x1e\xc3\x76\xb3\x68\x83\x20\xa0\xa9\x63\x89\x0d\x45\xaa\x24\xe5\x89\x3a\x9d\xff\x5e\x90\xba\x58\xb2\x9c\xc9\xa4\x7d\xa9\x9e\x66\x78\x39\xfc\xbe\xef\x5c\x78\x68\x9a\xf1\x0f\xa8\x0d\x57\x92\x80\xc5\x34\x13\xd4\x62\xa8\x32\x94\x26\xe1\x7b\x1b\x72\x35\x3e\xdc\x0c\xbe\x70\x19\x11\xd8\x56\xd3\x03\x41\x77\x28\x0c\x19\x40\xb3\x83\x80\xc6\x88\x9b\x00\xb3\x04\x53\xd4\x54\x04\xf5\xcc\x20\x45\x63\x68\x8c\x04\xfe\x1d\x0c\x00\xb6\x09\xc2\x5e\x09\xa1\x1e\xb9\x8c\xc1\xa0\x3e\x70\x86\x17\xe6\x12\x12\x7a\x40\xd8\x21\x4a\x60\x1a\xa9\xc5\x08\xb8\x84\x42\xe5\x1a\x32\xad\xfe\x81\xcc\x12\x78\xf3\x74\x3f\xd9\x4e\x7e\x9b\x6c\x66\x9f\x37\xb3\xf5\x87\xf9\x74\xf6\x79\x39\x59\xcc\x9e\xc3\xc1\x00\xea\x6f\x45\x8d\x79\x54\x3a\x72\xab\xd7\xb3\xfb\xf9\xe6\xf3\x6a\xb2\xd9\xfc\xf1\xb0\xbe\x7f\x76\x8b\xa6\x4a\x4a\x64\x96\x2b\x09\x7f\x5d\xbf\xaf\x50\x93\xf1\xf8\x5b\xa6\xc9\xcf\x77\xbf\xfc\x3a\x76\xf6\xdf\x29\x0d\xa9\xd2\x08\x5c\xee\x95\x4e\xa9\xb7\x41\x77\x2a\xb7\x90\x1b\xc7\xc5\x26\xdc\x34\x7a\x5c\x01\x97\x4c\xe4\x91\x9b\x78\xc8\x50\x6e\x9c\x98\xc0\x94\x34\x3c\x42\xed\x37\x9b\x2b\x30\x88\x90\x58\x9b\x39\x04\x31\xb7\x49\xbe\x0b\x99\x4a\xc7\x86\x09\xa5\xe3\x71\xa9\x28\x53\xd2\x52\x2e\x51\x8f\x77\x42\xed\xc6\x29\x35\x16\xf5\xf8\x2e\xbc\x0d\x07\x29\x5a\x1a\x51\x4b\x9d\x23\xa8\x94\xca\x96\x76\x89\x57\x23\x42\xc3\x34\xcf\xac\x77\xac\x97\xde\x7d\x6b\x67\x13\xb8\x0c\x52\x4c\x95\x2e\xc0\x6d\x07\x63\x75\xce\x6c\xae\x11\x8c\x55\x1a\xaf\xe0\x91\xdb\xc4\x11\xcb\x5c\x60\x18\x8b\xd2\xfa\x19\x1a\x63\xf8\xff\xa8\x43\xc5\xed\x8f\xc9\x7a\x39\x5f\xfe\x4e\x60\x22\x1b\x62\x4a\x63\x04\x8f\x5c\x08\xd8\x21\x08\x65\x2c\xe4\x99\x92\x90\xa9\xc8\x09\xe4\x79\x73\x25\x43\x78\x90\xa2\x80\xdc\x60\x17\x3d\xec\x95\x06\x8b\xc6\x72\x19\xfb\x43\x38\x53\x72\x2a\xa8\x31\xc4\xff\x19\x78\x68\x7e\xa6\x93\x31\x11\x37\x99\xa0\x45\x20\x69\x8a\xa4\xd2\xfc\x62\x56\xa7\xc6\xe5\x99\x0d\x8a\xe5\x29\xca\xd2\x81\x41\xae\x05\xf9\x01\x3d\xac\x46\x6c\xe9\xd1\xb7\x2e\x94\x8c\x83\x4e\x3c\x6c\x3b\x2c\x33\xad\x0e\x3c\x42\x03\x4e\x31\x2a\x23\x2a\x94\xc4\x0a\xb6\xcb\x50\xd4\xa1\x4f\xdc\x4a\x67\x2f\x2d\x37\x20\x95\xad\x15\x76\x92\xf6\x62\xe5\x0a\x8c\x02\x2a\x0b\xd0\x68\x2c\xd5\x16\xd4\x1e\x6c\x82\x75\xd2\x7b\xb7\x54\x26\x35\x9a\x5c\x58\x97\xf1\x54\x88\xf2\x80\x1d\xba\x98\x71\x2e\x0b\xfb\x8c\x2a\xc4\x3a\xe8\x29\x0d\x7f\xa6\xf6\x0a\xe6\x92\x9d\xd9\x65\xf2\x2c\x53\xda\x76\xf5\xa5\x8c\xa1\x31\xa1\xc6\x28\xa1\xd6\xc9\xec\xf7\x59\x1a\x1b\xe2\x81\xec\xa8\xc1\xab\xda\xcf\xe5\x31\x27\xa5\xae\x1a\x37\x19\x65\x48\x8e\x27\x0e\xd4\xce\x95\x2d\x43\x06\x01\xb4\x8b\xec\xe1\x66\x00\x50\x16\xd4\x0d\x32\x8d\x76\x00\xd0\xce\xe4\x33\xb9\x0c\xdf\xa8\xcc\xf8\x35\x53\x06\x83\xac\xa9\x79\xa3\xa7\xd0\x99\xf9\x38\x1a\xd5\xd0\x9b\xc9\xd1\xe8\xd3\xf3\xc8\x5b\x2b\x49\x7c\xab\xe2\x0d\xc0\xd5\x03\x2e\xe3\xfb\x06\x4f\xcf\xd6\xb9\xe2\xfa\x02\x49\xef\xee\xff\x99\x65\xae\xf9\xb1\x5e\x3f\x85\x26\x43\x16\x32\x91\xbb\xb0\x9f\xaf\x9e\x49\x35\xe2\x1c\x6c\x3e\xfe\xe9\x22\x74\x2c\xdf\xbe\x1d\xfa\x0d\xc3\xcb\x4f\x7e\xe2\xf9\x95\xfc\x33\x64\x25\x24\x6f\xad\xfc\x33\x68\x3b\xbf\xc2\x2b\x55\x84\x2b\xa5\x2d\x81\xeb\x6a\x24\xf3\xff\xb9\x4b\xa3\x1e\xd0\xca\x2a\xa6\x04\x81\xed\x74\x55\xd3\xa4\x3a\x46\xbb\xea\x2e\x35\x28\x90\x59\xa5\x6b\x2d\xbe\x8b\xd2\x6d\x31\x4e\xed\xc9\x7e\xcf\x25\xb7\x05\x81\xa5\x92\x65\x92\xda\x22\x43\x02\xd3\x5a\x1d\xef\x53\x6a\xf3\x8a\x8a\x50\x34\xfa\x8d\x0a\x2a\x19\x6a\x02\x4f\x2f\xf8\xee\x1e\x33\xa1\x0a\x57\x99\xa6\x4a\xee\x79\xfc\x43\x4e\xa4\x22\x4b\x68\xd7\x95\x8f\x94\xdb\x60\xaf\x74\xa0\x91\x46\x05\x81\xa1\xd5\x39\x0e\x7f\xd4\x2b\x1a\x33\xc1\x19\x35\x04\x6e\xfe\x6b\xe9\xac\xa6\x16\xe3\xa2\x01\xed\x05\x5b\x63\xd9\x7b\x0c\xda\x3c\xea\x25\x5d\xe2\x5e\xc7\xa6\x0d\xaa\xbf\x57\x9c\xdc\x26\xe2\xbe\xa6\x8e\xb7\x0c\x05\xc0\x68\x46\x77\x5c\x70\xcb\xd1\x78\x17\x1d\xcf\x40\x79\x68\x1f\x59\xc7\x65\x37\x1f\x5b\x0b\x00\x0e\x54\xe4\xf8\x4e\xab\x94\x74\x86\x9d\x70\xae\xfe\xfc\x05\x8b\x35\xee\x4f\xe7\x00\xbe\x60\x41\xfa\xb9\xdf\x5b\xf6\x2a\xce\xee\xe3\xa9\x6f\x03\x47\x30\x3a\x1d\x5c\xe5\x42\xac\x94\xe0\xac\x20\x30\xdf\x2f\x95\x5d\x69\x34\x28\x6d\x6b\x9d\xe0\x07\x94\x68\xcc\x4a\xab\x1d\x76\xb1\xba\xe0\xe7\x54\xdc\xa3\xa0\xc5\x06\x99\x92\x91\x21\x70\x77\xdd\x59\x63\x59\xb6\x51\xec\x0b\xda\x53\x9a\xbd\x84\xad\xd6\xf3\x14\x55\x6e\x1b\x73\x37\x3d\x27\xb7\xeb\x00\x74\x4b\x45\xed\x98\xc6\xb5\xab\xf3\x87\x9c\xab\x0d\xe0\xe3\x9b\x46\xfc\x1b\x64\xf1\x6b\x3b\x78\xca\x8f\xa9\x34\xa5\x32\x3a\x1d\x0e\x60\xbc\xe3\x72\x6c\x92\xde\x78\xc0\xfb\x43\xac\x37\xe4\x1a\x1f\x18\xbe\xb9\xa8\xfa\x0d\xc1\x21\x48\xe0\xe6\xf6\x97\xf0\x3a\xbc\x0e\x6f\x20\xa0\xf0\xa6\x1b\x74\x90\x71\x19\x5f\x0e\xe1\xed\x5b\x18\xae\x1e\x96\xbf\x0f\xbf\xef\xa6\x9f\x5e\xad\xba\x46\xa3\x72\xcd\xd0\x74\x69\x0a\x9e\x72\x6b\x4e\xa9\x97\xdd\xad\x8b\xca\xc5\x6c\xf1\xb0\xfe\xdb\xe7\xf7\xf3\xc5\x7c\xdb\x0e\x46\x83\x2c\xd7\xdc\x16\x53\x25\x2d\x7e\x3d\x09\x8b\x17\xb2\xcf\x79\x8d\x1f\xb8\xc0\x18\x23\x02\x7b\x2a\x0c\xb6\x66\x2d\xea\x94\x4b\x5f\x0f\x17\xe5\xb3\x67\x45\x6d\x42\x60\x1c\xe1\x61\xdc\x9a\x0c\x84\x8a\x5b\xdb\x0e\x4a\xe4\x29\x2e\x54\x2e\x4f\x43\x28\x75\x63\x95\x8d\x03\xd5\x63\xc1\x77\x65\xff\x37\x76\x89\xd9\xc1\xf5\x72\x1e\x06\x9d\xf5\x91\x34\x75\xbe\x55\x97\xc4\x3b\xae\xcd\x31\xdf\xaa\x8e\xad\x5e\x33\x11\x8f\xb4\x38\x06\x7b\x09\xb7\x53\xaf\x30\xcd\x6c\x71\xcf\x75\x57\xc7\x14\x23\x9e\xa7\x04\x86\xc3\x57\xd7\xc8\x23\x4e\xab\x79\x1c\x37\x65\x31\x28\x2b\xc5\x34\xa1\xd2\x89\xaa\x69\xda\x3a\x9f\xe6\x56\xb9\x97\x08\x23\xe0\x2e\x94\x7e\x6d\x5d\xd2\x13\xbc\xdd\xec\xdd\x9f\xd4\xc6\xf2\xf2\x9b\xbb\x03\x37\x56\x23\x4d\xb7\x34\x3e\x5f\x00\x48\xdd\x08\x7d\x98\xad\x37\xf3\x87\xe5\xf3\xc9\xb2\xaa\x29\x7c\xf3\xe4\xc8\x6d\x56\x93\x69\xab\x22\x0a\x6a\xec\xb6\x24\x89\xd1\xbc\x2c\x8e\x8d\x52\xe5\x85\x34\x3f\x72\xae\x54\xa8\x6e\x76\x7f\x1b\x37\x13\xd5\xe5\xee\x22\x35\x73\xd2\xa0\xf5\xba\x05\xdd\x47\xe0\x82\x7e\xe5\x69\x9e\x02\xf5\x41\xe5\xba\xf1\xea\x11\xe8\x9a\xf2\x46\x2a\x60\x54\xba\x97\x90\xeb\x9f\xab\xee\x7a\xe9\xf9\x2e\xca\xc5\xef\x5d\xc2\x35\xad\x70\x3b\xbd\x06\x2e\x6e\xfe\x99\x73\xed\x32\xa3\xf2\x83\xbf\x7a\x08\xfc\x74\x73\xbb\xe0\xa7\x78\xb6\x09\xb6\xde\x84\xcb\x5a\x2d\x78\x4c\x50\xa3\x07\xd5\xf2\x80\x0b\x49\xf7\x46\xe9\xc1\x6a\xf6\x35\x98\x1a\xa9\x8f\xe7\x1f\x9b\xf2\x33\x18\xdc\xae\xfa\x6d\x72\xc4\x53\xb5\xad\x50\x76\x9f\x51\xf9\x14\x4c\xb0\xb9\x10\x7b\x40\xee\xab\x89\x66\xa7\x1b\x6e\x40\x9d\x8d\xf6\x17\x14\x2b\x03\xf4\x04\x6d\xfd\xe3\x46\x03\xa6\x7c\xa3\xb1\xe3\x8f\x1a\xb9\x41\xdd\x43\x56\xae\x6a\xfd\xf4\xb1\x3a\xde\xe5\x3e\xf4\x61\xf4\x91\x06\xff\x9a\x04\x7f\xbf\x0e\x7e\xfd\xf4\x74\xf3\xb3\x7f\x28\xc4\x28\xdd\x0b\x1d\x89\x93\x40\x97\xad\x66\x43\xa7\xd7\x6d\x9c\xf0\x38\x01\x5e\xf5\x96\x4e\xe5\xea\x17\x08\xe7\x59\xb0\xca\x3d\xcb\x73\x27\xef\xc5\x5d\x78\x0b\x4a\x83\xeb\xb8\x8c\xbd\xec\x71\xe8\x59\xf0\xb1\x71\x82\xa7\x4a\xc2\x17\x64\x1d\xde\x85\xb7\xc3\xc1\x7f\x02\x00\x00\xff\xff\xee\x6b\xfd\xa5\xf4\x12\x00\x00")

func templateTemplateOpenshiftIoOpenshiftRedisEphemeralYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftRedisEphemeralYaml,
		"Template.template.openshift.io/openshift/redis-ephemeral.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftRedisEphemeralYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftRedisEphemeralYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/redis-ephemeral.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftRedisPersistentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x6d\x6f\xdb\x38\x12\xfe\xee\x5f\x31\x30\x0a\xb8\x05\x22\x39\x4e\xb0\xbb\x58\x01\xc5\xc1\xeb\xb8\x3d\xe3\xea\xc4\xb0\xbd\x29\x7a\x45\x11\xd0\xd4\x58\xe6\x95\x22\x75\x24\xe5\xc4\x97\xcb\x7f\x3f\x90\x94\x64\xbd\xb8\x69\x72\xf7\xe5\xf4\x29\xe1\xcb\x70\xe6\x99\x67\x1e\x0e\x4d\x32\x76\x8b\x4a\x33\x29\x22\x30\x98\x66\x9c\x18\x0c\x65\x86\x42\xef\xd8\xd6\x84\x4c\x0e\xf7\xa3\xde\x77\x26\xe2\x08\xd6\xc5\x74\x8f\x93\x0d\x72\x1d\xf5\xa0\xda\x11\x81\xc2\x98\xe9\x20\xb3\xa6\xb4\x41\x61\x82\x72\xaa\x97\xa2\xd6\x24\xc1\x08\xfe\x1d\xf4\x00\xd6\x3b\x84\xad\xe4\x5c\xde\x33\x91\x80\x46\xb5\x67\x14\xdf\xea\x77\xb0\x23\x7b\x84\x0d\xa2\x00\xaa\x90\x18\x8c\x81\x09\x38\xc8\x5c\x41\xa6\xe4\x3f\x90\x9a\x08\xde\x3c\x5e\x8d\xd7\xe3\x3f\xc6\xab\xe9\xdd\x6a\xba\xbc\x9d\x4d\xa6\x77\xd7\xe3\xf9\xf4\x29\xec\xf5\xa0\xfc\x16\x44\xeb\x7b\xa9\x62\xbb\x7a\x39\xbd\x9a\xad\xee\x16\xe3\xd5\xea\xf3\xcd\xf2\xea\xc9\x2e\x9a\x48\x21\x90\x1a\x26\x05\xfc\xb9\xfc\x54\xb8\x1d\x0d\x87\x3f\x32\x1d\xfd\x7a\xf9\xdb\xef\x43\x6b\xff\x83\x54\x90\x4a\x85\xc0\xc4\x56\xaa\x94\x38\x1b\x64\x23\x73\x03\xb9\xb6\xb1\x98\x1d\xd3\x15\x20\x67\xc0\x04\xe5\x79\x6c\x27\x6e\x32\x14\x2b\x8b\x26\x50\x29\x34\x8b\x51\xb9\xcd\xfa\x0c\x34\x22\xec\x8c\xc9\xac\x07\x09\x33\xbb\x7c\x13\x52\x99\x0e\x35\xe5\x52\x25\x43\x0f\x29\x95\xc2\x10\x26\x50\x0d\x37\x5c\x6e\x86\x29\xd1\x06\xd5\xf0\x32\xbc\x08\x7b\x29\x1a\x12\x13\x43\x6c\x26\x88\x10\xd2\x78\xbb\x91\x43\x23\x46\x4d\x15\xcb\x8c\xcb\xac\x83\xde\x7e\x4b\x6b\x13\x98\x08\x52\x4c\xa5\x3a\x80\xdd\x0e\xda\xa8\x9c\x9a\x5c\x21\x68\x23\x15\x9e\xc1\x3d\x33\x3b\x38\xe6\xd2\x0d\x93\x04\xc3\xff\x47\x10\x8a\xc0\xae\x6f\xd6\xd3\x08\xbe\xc8\x1c\xd2\x5c\x1b\xcf\xa6\x5a\x04\x7b\xc9\xf3\x14\x35\x90\x3d\x61\x9c\x6c\x38\x56\xec\xa2\x3c\xb7\xc6\xc0\x48\xc8\x35\x36\x03\x08\x9d\x71\x46\xa5\x98\x70\xa2\x75\xe4\xfe\x0c\x9c\x4b\x6e\xa6\x51\x27\x31\xd3\x19\x27\x87\x40\x90\x14\x23\x0f\xf4\x89\x45\x92\xe6\x29\x0a\x9f\xa9\x20\x57\x3c\x7a\x45\xec\x46\x21\xd6\x62\xef\x5a\xe7\x52\x24\x41\x23\xf1\xeb\x7a\x38\xb6\x92\xf6\x2c\xb6\x30\x80\x36\x44\xc4\x84\x4b\x81\x05\x27\x6c\x29\xa2\x0a\x5d\x85\x16\x98\x3a\x72\xd8\x29\xcb\x8a\x18\xa4\x38\xc5\x89\xae\x17\xc5\x29\x2a\xe8\x20\x02\x7f\x25\xe6\x0c\x66\x82\x9e\xd8\xa5\xf3\x2c\x93\xca\x34\x31\x21\x94\xa2\xd6\xa1\xc2\x78\x47\x8c\x85\xc6\xed\x33\x24\xd1\x91\xf3\x6e\x43\x34\x9e\x95\xf9\xf0\xc7\xb4\x85\xa8\x98\xd0\x19\xa1\x18\x1d\x8f\xec\xc9\x8d\x15\x15\x1d\xf5\x02\xa8\x6b\xe0\x7e\xd4\x03\xf0\x7a\xb7\x42\xaa\xd0\xee\xaf\xd7\xd9\x89\x4a\x83\x1f\x08\x27\x3e\x64\x52\x63\x90\x55\x8a\x34\x78\x0c\xad\x99\xaf\x83\x41\xe9\x7b\x35\x39\x18\x7c\x7b\x1a\x38\x6b\x3e\x8a\x1f\xe9\x51\x0f\x6c\xb5\x32\x91\x5c\x55\xfe\x74\x6c\x9d\x92\xbe\x67\x82\x74\x0a\xfc\x3f\x47\x99\x2b\x76\x54\xd3\xc7\x50\x67\x48\xc3\xa2\xb4\x66\x8b\xa7\xa8\x18\xb1\x19\xd6\x5f\xff\xf2\x36\xb4\x51\xbe\x7f\xdf\x77\x1b\xfa\xef\xbe\xb9\x89\xa7\x17\xc6\x9f\x21\xf5\x2e\x39\x6b\xfe\xcf\xa0\x9e\xfd\xc2\x5f\x21\x63\x5c\x48\x65\x22\x38\x2f\x46\x32\xf7\x9f\x95\xf4\x72\x40\x49\x23\xa9\xe4\x11\xac\x27\x8b\x32\x4c\xa2\x12\x34\x8b\xe6\x52\x8d\x1c\xa9\x91\xaa\xc4\xe2\xa7\x5e\xda\x2d\xda\xa2\x3d\xde\x6e\x99\x60\xe6\x10\xc1\xb5\x14\xbe\xb2\xcc\x21\xc3\x08\x26\x25\x3a\x2e\xa7\xc4\xe4\x45\x28\x5c\x92\xf8\x0f\xc2\x89\xa0\xa8\x22\x78\x7c\x26\x77\x8b\x8a\xe4\xb7\x4e\xde\x26\x9c\xb0\xb4\x93\xc9\x57\x00\xea\xcb\x6d\x2e\x63\xac\x60\x5d\x22\x89\x3f\x2b\x66\xf0\x46\x50\xef\xbd\x42\x2d\x73\x45\xb1\xe2\x85\xc2\x7f\xe6\xa8\x4d\xf5\x3f\x94\xda\x60\x4f\xbd\xbd\xf9\xf4\xe7\x7c\x7a\x37\x19\x2f\xc6\x93\xd9\xfa\xcb\x33\xd1\x5c\x61\xc6\xe5\xc1\x8a\xe3\x44\x8a\x2d\x4b\x5e\x45\x49\xc2\xb3\x1d\x69\x12\xf3\x9e\x30\x13\x6c\xa5\x0a\x14\x92\xf8\x10\x41\xdf\xa8\x1c\xfb\xaf\x85\x44\x61\xc6\x19\x25\x3a\x82\xd1\x7f\x4d\x04\xa3\x88\xc1\xe4\x50\x39\xed\xd2\xbf\x44\xdf\xe7\xf4\xea\x71\x94\x4b\x9a\x81\x3b\x56\x54\x3d\x57\xf9\xbd\xe0\xe4\x7a\x20\xf6\xab\xae\x92\x9a\xa1\x00\x28\xc9\xc8\x86\x71\x66\x18\x6a\x47\xb8\xe3\x19\x28\xf6\xf5\x23\xcb\x2a\x6b\xaa\x4b\x6d\x01\xc0\x9e\xf0\x1c\x3f\x28\x99\x46\x8d\x61\x0b\x9c\x55\xd3\xbf\xe1\x61\x89\xdb\xf6\x1c\xc0\x77\x3c\x44\x5d\x25\xeb\x2c\x7b\x51\xcc\xf6\x63\xa9\xe3\xdf\x00\x06\xed\xc1\x45\xce\xf9\x42\x72\x46\x0f\x11\xcc\xb6\xd7\xd2\x2c\x14\x6a\x7f\x4f\x54\x58\xb3\x3d\x0a\xd4\x7a\xa1\xe4\x06\x9b\xbe\xda\x52\x66\x84\x5f\x21\x27\x87\x15\x52\x29\x62\x1d\xc1\xe5\x79\x63\x8d\xa1\xd9\x4a\xd2\xef\x68\xda\x61\x76\xe4\xa7\x58\xcf\x52\x94\xb9\xa9\xcc\x8d\x3a\x49\xae\xab\x1a\x34\x85\xaf\x4c\x4c\x95\xda\xc5\xe9\x43\x4e\x29\x1d\x38\x7e\x93\x98\xfd\x20\x58\x7c\xa8\x93\xc7\x7f\x54\xa6\x29\x11\x71\x7b\x38\x80\xe1\x86\x89\xa1\xde\x75\xc6\x03\xd6\x1d\xa2\x9d\x21\x83\xda\x40\xff\xcd\xdb\xa2\xe5\xe1\x0c\x82\x1d\x8c\x2e\x7e\x0b\xcf\xc3\xf3\x70\x04\x01\x81\x37\x4d\xd2\x41\xc6\x44\xf2\xae\x0f\xef\xdf\x43\x7f\x71\x73\xfd\xb1\xff\xf3\x34\xfd\xf2\x62\xd4\x3b\x12\xe7\x3f\xce\x52\x66\x74\x3b\x74\xdf\x49\x5b\x56\xce\xa7\xf3\x9b\xe5\x97\xbb\x4f\xb3\xf9\x6c\x5d\x27\xa3\x46\x9a\x2b\x66\x0e\x13\x29\x0c\x3e\xb4\x68\xf1\x4c\xf5\xd9\xac\xb1\x3d\xe3\x98\x60\x1c\xc1\x96\x70\x8d\xb5\x59\x83\x2a\x65\xc2\xe9\xe1\xdc\x3f\xb1\x16\xc4\xec\x22\x18\xc6\xb8\x1f\xd6\x26\x03\x2e\x93\xda\x36\xdf\x09\xcf\x65\x2e\xda\x14\x4a\xed\x58\x61\x63\x4f\xd4\x90\xb3\x8d\x6f\x41\x87\xb6\x30\x1b\x7e\x3d\x5f\x87\x41\x63\x7d\x2c\x74\x59\x6f\xc5\x95\xf7\x81\x29\x7d\xac\x37\x85\xda\x10\x65\xca\x35\x63\x7e\x4f\x0e\x47\xb2\x17\x8d\x7b\x5d\xaf\x5e\x73\x38\xd4\x5a\xd6\xda\x25\xd9\x4a\x81\x1d\xba\xfe\xb9\xb4\x18\xc5\x92\xa4\x12\xcf\xc0\xeb\xc9\x64\x47\x84\x85\x5e\x91\xb4\xe6\x25\xc9\x8d\xb4\xcf\x23\x1a\x81\xbd\x76\xba\x0a\x6c\x8f\x6b\x44\xd5\xac\xf1\x6d\x4b\x41\xfd\x15\x39\xb3\x07\xae\x8c\x42\x92\xae\x49\x72\x5a\x26\xa2\xb2\xf9\xbb\x9d\x2e\x57\xb3\x9b\xeb\xa7\xd6\xb2\xa2\x11\x7e\xf3\x68\xe3\x5a\x2d\xc6\x93\x9a\x6e\x72\xa2\xcd\xda\x07\x89\xf1\xcc\x4b\x68\xbf\xdf\xb8\xb6\x66\xc7\x98\x0b\x14\x8a\x6e\xc6\xdd\xd9\xd5\x44\xd1\xd0\x58\x3e\x67\x16\x1a\x34\x0e\xb7\xa0\xf9\x2c\x9d\x93\x07\x96\xe6\x29\x10\x47\x3d\x90\xdb\xa2\x98\xc0\xec\xf0\x08\x15\x50\x22\xec\xdb\xcc\x3e\x1a\x8a\x27\x85\x4f\xd6\xdc\x2f\xfe\x64\xcb\xb2\xea\xff\xeb\x45\xd8\xf3\xcd\x09\x53\xb6\x7e\x8a\x3c\xb8\x0b\x2a\x82\x5f\x46\x17\x73\xd6\xf6\x67\xbd\xc3\xda\x43\xf5\xba\x44\x0b\xee\x77\xa8\xd0\x39\x55\xcb\x80\x25\xae\x7d\x4c\x75\xdc\xaa\xf6\x55\x3e\x55\x50\x1f\xcf\x3f\x3e\x44\x4e\xf8\x60\x77\x59\x34\x4c\xc3\x9f\xa2\x55\x07\xdf\x71\xc7\xb0\x95\xca\xad\x28\xaf\xcd\x8e\x23\x57\xc5\x44\xb5\xd3\x0e\x57\x4e\x9d\x24\xfa\x33\x88\x79\x82\xb6\xbc\x2d\x7f\x6e\xa9\x9c\xf1\x8f\x49\x7a\xfc\x99\x25\xd7\xa8\x3a\x9e\xf9\x55\xb5\x1f\x63\x16\xc7\x1b\xdf\x51\x1f\x06\x5f\x49\xf0\xaf\x71\xf0\xf7\xf3\xe0\xf7\x6f\x8f\xa3\x5f\xdd\xe3\x28\x41\x81\xca\xfd\xda\x84\x0f\x99\xf2\xed\x75\x15\x4e\xa7\x27\x69\xc5\xd1\x72\xdc\x8b\x01\xf8\xfc\x1e\x7f\x15\xb0\x61\x58\x3c\xcf\x00\xc3\x24\xf4\x2c\x39\x83\x8b\x8f\xac\x13\x42\x61\x60\x42\x32\x42\x99\x39\x54\x7e\xb4\x1a\xde\x67\x00\x1d\x7d\xec\x10\xb0\xe8\x8b\x6d\xee\x8b\x5f\x6a\x2c\xdf\xc0\x48\xd8\xa0\x45\x32\x86\xb7\x97\xe1\x05\x48\x05\xb6\x5b\xd4\xe6\x5d\xd7\xad\xb6\x05\xc7\xd8\x16\x4a\x85\x34\x3c\xe3\x5b\xff\x32\xbc\xe8\xf7\xfe\x13\x00\x00\xff\xff\x73\xf7\x8c\xcd\x1d\x14\x00\x00")

func templateTemplateOpenshiftIoOpenshiftRedisPersistentYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftRedisPersistentYaml,
		"Template.template.openshift.io/openshift/redis-persistent.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftRedisPersistentYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftRedisPersistentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/redis-persistent.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateTemplateOpenshiftIoOpenshiftSystemYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x79\x8f\xdb\xb8\x92\xff\xbf\x3f\x05\xd1\xc8\xe2\x01\x8b\x95\x8f\xee\x49\x4f\x62\x60\x80\xf5\xd8\x4a\x62\xc4\xd7\xb3\xdd\x99\x19\x2c\x16\x7a\xb4\x54\x6d\x6b\x5b\x12\x35\x24\xe5\x8e\x5f\x26\xdf\x7d\x41\xdd\x07\x25\xcb\x47\x67\x72\xa8\x07\x98\xc0\x14\x55\x55\x2c\x16\xab\xea\x57\xa4\x24\xec\x9a\x1f\x80\x32\x93\x38\x3d\xc4\xc1\x76\x2d\xcc\xa1\x45\x5c\x70\xd8\xd6\x7c\xe0\x2d\x93\xb4\x77\xdd\xab\x47\xd3\x31\x7a\x68\x15\x5e\xbe\xb2\x81\x31\xbc\x81\x1e\x1a\x93\x8d\xe9\x20\xe2\xa0\x2d\xe7\x2e\xeb\xb5\xdb\x2f\x3e\xad\xd4\x69\x7f\xba\xd2\xa6\xfd\x89\xfa\x59\xc1\x86\x6d\x3a\xad\x17\x9f\x7e\x1b\x8d\x87\x83\xfe\x62\xa8\x0d\x67\x93\xfe\x68\xfa\x19\x61\x86\x5e\x7c\xea\x0f\x27\xa3\xa9\x76\xbf\x54\x17\x7e\xef\x76\xd4\x32\xef\x2f\x97\xbf\xcd\x16\xc3\xcf\x57\x36\x70\x6c\x60\x8e\x7b\x57\x08\x39\xd8\x86\x1e\x62\x7b\xc6\xc1\x0e\x7f\x32\x17\xeb\xd0\x43\xb1\xb4\x57\x64\xfd\x7f\xa0\x73\xd6\xbb\x52\x50\x7a\x5c\xbb\xee\x15\x42\xc1\x18\xe6\xa2\x8d\x71\x70\xf8\x07\x62\x79\x36\x0c\x2c\x6c\x0a\x72\x69\x4e\x59\x5e\x0a\xe3\x84\xe2\x0d\x5c\x21\xc4\x5c\xd0\x83\x0e\x58\xd7\x81\xb1\x09\x31\x80\x05\x0d\x0a\x5a\x00\x36\x7e\xa3\x26\x87\x09\x76\xf6\x7e\x1b\x05\x46\x3c\xaa\x47\x5d\x44\xc3\x9f\x1e\x30\x1e\xff\x46\x28\xa4\xdd\x43\xdd\x4e\x67\x62\x5e\x46\x6c\x7b\xcf\xfe\xb4\x8e\x96\x7a\xe6\xe8\x70\xbc\xd4\x6f\x2f\x24\x73\xa8\x6a\x0a\x86\xc9\xbe\x31\xd1\xd7\x58\x7f\x04\xc7\xf8\x6a\x64\x1f\x82\x6b\x91\xbd\x0d\x0e\x1f\x10\xe7\xc1\xdc\x1c\x10\x5b\xa7\xc4\xc9\x48\x4b\xc1\xb5\x4c\x1d\xb3\x1e\xea\xfa\xbf\x19\x58\xa0\x73\x42\x23\x39\xa4\xb7\x0b\xe1\x28\xe6\xb0\xd9\xc7\xe2\x13\xcb\x32\x9d\xcd\x1c\x53\x6c\xa7\xc6\x60\x3a\x1c\xe8\x0e\x5b\x4b\xd0\x89\x63\xc4\x4c\xc4\x9f\x8d\x3f\x2e\x3d\x2a\xc6\x77\xf3\xf2\x3f\xd2\xad\xf7\x0e\xde\x61\xd3\xc2\x6b\x2b\x77\x8d\x9b\x36\x10\x8f\xc7\xb4\xee\x3a\x9d\xf8\x9a\xe7\x1a\x98\xc3\x1c\xa8\x49\x8c\x02\x33\xbe\x77\xa1\x87\x16\x81\x88\x7e\x5b\xe4\xfa\x22\x49\xb3\x2a\x13\x7f\x16\x5e\x83\x95\x1a\x49\xa9\x26\xd2\xca\x14\x7f\x3a\x71\x38\x36\x1d\xa0\xa9\x9b\x15\x84\xe9\x26\x43\x4c\x91\x11\x12\x7f\xe0\xec\xb2\xfd\x02\xb6\x83\xd9\xf4\xcd\xe8\xad\xb6\x50\x87\xa3\xa5\x36\x5f\xcc\x7e\xff\x23\xd5\x09\xa1\x1d\xb6\xbc\xbc\x71\xf6\xee\x6e\x7f\x7e\x5d\x4e\xea\x9f\xf7\xea\xbd\xba\xd4\x26\xfd\xe5\x4a\x5d\xf8\x0e\xbc\x1e\xc5\x76\x57\x42\x73\xd1\x1f\xbc\xd7\xd4\xe9\x07\x19\x09\x97\x12\xc3\xd3\xb9\x99\x19\xa6\x69\xfb\xa6\x7d\xcb\x74\x6c\x81\x82\x6d\xf7\xa6\xd3\x0e\x79\xf5\xba\xad\x8e\x72\x93\xef\x3b\xf7\x2c\x6b\x4e\x2c\x53\xdf\xf7\xd0\xe8\x61\x4a\xf8\x9c\x02\x03\x87\x1f\x9e\x20\x4e\xcd\xcd\x26\x9e\x0e\x25\xb4\x86\x60\xb5\x0c\xb6\xd8\xd9\xc0\xc5\x56\x97\xaf\xa5\x33\x96\x57\x74\x7f\x71\x7d\x85\x26\x0c\x3a\x05\x11\x92\x2f\x63\xc3\x09\xbb\x7a\x46\x1c\x4e\xda\x8b\x4f\x81\x19\x8e\x26\xfd\xb7\xea\xe7\x13\x26\xca\x32\x77\xe0\x00\x63\x73\x4a\xd6\xd0\xcb\xd8\x8c\xe9\x98\xdc\xc4\xd6\x10\x2c\xbc\x4f\xd6\x71\x27\xd3\xc7\xcd\xad\xf2\xec\x55\xae\xbb\x4b\xa2\x3f\x02\xcf\x12\x46\xc8\x25\x94\xf7\x50\x6e\x51\x94\x2b\x24\x98\x3d\x6c\x98\x25\x92\xc2\xc7\xb4\xc2\x22\xb5\xd9\x36\x76\x8c\x7c\xb3\x92\xe8\x53\x01\x87\xd3\xbd\x4b\xcc\x8c\x42\x50\xe8\x11\xd8\xb6\xd0\xa8\xe8\x85\xa6\x20\xf4\xe8\x96\x89\x18\xf0\x58\x99\x8a\x2b\x64\x44\xd7\xff\x12\x8e\xf0\x5f\xd7\xe8\x2f\xb4\xa1\xe0\xa2\xd9\xfb\x73\xf5\x7b\x9b\xd3\x6f\xce\x0b\xa7\xdd\xc1\xce\x0f\x9f\x13\xe2\x39\x3c\xe7\xed\x6c\xd1\x36\xc7\x7c\xdb\x43\xed\x1d\xa6\x6d\xcb\x5c\xb7\xfd\x71\xb4\x85\xc9\x66\x18\x54\xc7\x59\x39\x49\xe0\x7a\x40\xae\xa5\x13\xe7\x41\x42\x2e\xd4\x59\xb4\x88\x93\x3f\xe6\xad\x03\x1a\x92\xdb\x83\xe1\x64\x96\x40\x3d\xe1\x5c\x59\x42\x91\xb5\x0a\x5d\x34\x4d\x6b\x50\xf3\x8d\xe7\xc1\xdc\x4c\xb0\x9b\x5b\x2a\x1c\x6c\x96\x6d\x52\xd0\x23\xec\xa5\x43\x09\xe5\x2a\x1b\xe9\x41\x45\x95\x5c\xfc\x82\xbe\xd5\xf2\x15\x0a\xf4\x0c\xf7\x9a\x22\xd1\x64\x30\x59\x6d\x9c\x9a\xc5\x04\x01\x5c\x0b\x69\x66\x2e\x31\x8e\x29\xcf\xb4\x28\xd9\x05\x2c\x4d\x0c\x14\xa4\xb8\x99\x9f\xd7\xb7\x9d\x4e\xe7\x3a\xdb\xe3\x63\xe6\x67\xdb\x80\x5d\x9b\x71\x83\x78\xfc\xc7\x4b\xa4\x72\xc2\x8c\xa6\x2b\x81\xaf\xc7\x5a\x7f\x3e\xf2\xb1\xb6\x8c\xd0\x8b\x4f\xcb\x3f\x96\x2b\x75\xa2\xfd\xda\x1f\xbc\x57\xa7\xc3\x04\x94\xd7\x24\x1c\x41\xf6\x5a\xc4\x13\x7c\x9f\xf4\x7d\x8e\xf4\xef\xd8\xac\xe2\xf6\x82\x59\x85\xb0\xd1\xba\x0b\x2d\xba\x2b\xb7\x92\xe2\x15\x37\x97\x51\x44\x62\xf6\x39\xd1\x89\xd5\x43\xab\xc1\xbc\x66\x8e\xb2\xe5\xdc\x7d\x2b\x91\x39\x08\x9a\x8c\x63\xee\xb1\x3a\xe3\xa9\xa7\xc1\xbc\x77\x7b\x79\x76\x88\x58\x02\xdd\x99\x3e\x62\x3e\x2e\xeb\x4e\xa9\x57\x29\xe6\x7d\x32\x4d\x72\x4c\x37\xc0\xe7\xd9\xae\x75\x92\xf5\x33\x65\x97\x46\xb5\x8c\xf8\x41\x7f\x31\x93\x57\x25\x33\x74\x68\x3c\x71\xd7\x9a\xd1\xf1\xc4\x21\x85\x45\x1d\x97\x92\x9d\x69\x3c\xef\x88\x52\x3c\xca\x46\x15\x4a\x83\x5d\xf7\xcc\xf1\x18\xb0\x03\x8b\xb8\xcf\x3b\xa0\x34\x93\x73\x46\x74\x64\x4e\xf5\x44\xe8\xe3\x59\x19\x55\x4c\xa0\xc9\xa7\xd2\xba\xb8\x4c\x36\xa5\x65\x28\x06\x3d\xa8\xf7\x03\x16\x8b\x72\xc2\xa8\x1f\xd4\xe9\x6a\xa9\xbd\x9b\xe5\xb0\x6d\x48\x42\xac\xc3\x5e\xbb\x9d\x73\x47\x3d\xb1\x1a\xdb\x36\x66\x1c\x68\x1b\x76\xe0\x70\xd6\x36\x6d\xb1\x50\x6b\x31\xd2\x96\xef\xfa\x0b\x75\xa8\x2d\xd5\xc1\x42\x5d\xd5\xca\x7b\x32\x77\x3c\x77\xf2\x53\x6a\x8a\xcf\x17\x7e\x43\x05\xfb\xfb\x0f\x87\x7c\x63\xae\xaf\x4f\x84\x18\x10\x38\xbf\x4e\xd6\x6b\xde\x76\xee\xea\x06\xb6\xa8\x6b\xa5\xc3\x0c\x98\x9e\x37\xc8\x03\x29\x46\x0a\x1d\x67\xc6\x72\xb9\xa4\x23\x23\xc7\xb9\xee\xbf\x74\x50\xf5\x9c\x7f\xee\xf6\x67\x2e\x56\x16\xb8\x1d\xe1\x5c\x91\xe3\x59\x56\x71\xe5\x7d\x65\x05\xcc\x97\xc7\x20\x0d\x69\xfd\x52\xa2\x23\xf4\xe3\x94\x2f\x8f\x03\x72\x52\x90\x12\x5e\x03\x6a\x9b\x0e\x16\xd1\x67\x12\xec\x79\x87\xe5\x45\x03\x76\xed\xd4\x45\xc5\x22\xe9\xda\xd8\x05\xab\x9e\x25\x1b\xa3\x72\x8a\x5f\xb8\xe8\x79\x40\xb6\xe3\x6a\x9e\x95\xc4\xbe\xdb\x92\x67\xad\x58\xc3\xdc\xad\xe9\x7c\x3c\x18\x51\xa3\x5e\x28\x76\x0d\xaf\xeb\x47\xce\xd7\xb5\x22\x67\xc8\xe3\x42\xe1\x46\x32\xae\xa3\xe2\x4d\x6a\xc4\x3f\x2c\xd6\x28\xaa\xe2\x54\xa8\x41\xf1\x63\xd6\xb3\xc4\xc7\x6a\x7a\x7c\x6b\x3a\x8f\xa6\xb3\xd1\x02\x36\xbd\x7c\x21\xb7\x04\x75\x2c\xfa\xa3\xf1\xf2\xa4\xbc\x7e\xd8\x5f\xf5\x7f\xed\x2f\x55\xed\x7e\x31\x96\xdd\xec\x67\x70\x37\xbd\x76\x9b\x12\xc2\x7b\x2f\x3e\x4d\xfe\x58\xfe\x73\xac\x2d\x66\xb3\x55\x52\x5c\xfc\xef\x74\xb6\xd7\x8e\xfa\x44\x94\x65\x85\xcd\xd5\xbb\xd1\xf4\xfd\x68\xfa\x56\x5b\xce\xdf\x8d\xa6\xbf\x6b\xfd\xe1\x70\xa1\x2e\x97\x32\x01\x3a\x2d\xff\xbf\x1a\x44\x02\xe4\x70\xbf\xe8\xaf\x46\xb3\xa9\xf6\x66\x34\x96\x02\x25\x63\xdd\x0e\x74\xdb\x4e\xf4\x92\xf7\x4e\x65\x1c\xe6\xa3\x61\x0d\xba\x0c\x30\xd5\xb7\x46\xcb\x35\x0d\x99\xc2\xd5\xf1\xaa\xaf\x8d\xa6\x43\xf5\xf7\xa0\xb0\xfb\xa1\x2f\x55\xfc\xf5\xcb\x6b\xc9\xdd\x6f\xee\xc7\x63\x6d\xa1\xd6\xb8\xfd\x2e\x53\xb8\x97\xe1\x9e\x60\xd6\xbe\x58\xcd\xf7\xee\x82\x35\xdf\x94\xbb\x45\x95\x0b\x14\xd5\xce\x11\x88\xcb\x43\x8d\xb4\xe3\xa9\x2c\xcf\x12\x82\xeb\x8a\xf0\x1c\x6b\xcc\xa0\x2a\x82\x83\xed\xf2\xfd\xd0\xa4\x3d\xf4\xe9\x73\xb5\xcc\x59\x72\xcf\x8f\x1e\xc1\xd6\xb1\xbe\x85\x43\xe1\x2e\xd5\x2f\x99\x81\x6e\xf7\xa6\xdb\xad\x19\xf1\x92\xbe\xd5\x60\x31\xe2\x73\xa1\xa0\x27\x1d\xdf\x51\x61\x2f\x33\xf2\x1f\x3d\xf0\xe5\xcc\xe0\x64\x20\x28\x41\x3a\x4a\x6c\x63\x59\x8f\xa9\xd8\x99\x9f\xd7\x77\x3f\x5d\xe7\x62\x61\x09\xca\xcc\xf8\xb9\x98\x76\xaf\xdb\xfa\xa9\xd5\x7d\xa9\xfc\xfc\x05\xbc\xdd\x25\xcf\xcd\xa4\xd7\x5a\x32\x2d\xb9\xf9\x40\x97\x04\x9d\xf5\xd0\x24\xe8\x5b\x82\x76\xc1\x3a\x45\x7f\x21\x47\x47\x2f\xde\xcd\x96\xab\x69\x7f\xa2\x06\x32\x47\x48\xf2\x83\xba\x58\x8e\x66\xd3\x73\xb5\x56\x6b\xcf\x0b\x15\xb7\xf8\x0a\x1b\x7c\x39\x20\x5f\xf4\x5f\xe7\xf8\xde\x05\xf1\x78\xd1\xf3\x66\x17\x17\x76\xdd\x04\x87\x85\xfd\x4b\xf6\x72\x82\x93\xdd\x71\xaf\x64\xd9\x6d\x09\xe3\x3d\x54\xf3\x18\x78\xec\xdb\x7b\x12\xff\x1c\xef\x9e\xf0\x44\x42\xd3\x61\xa0\x7b\x14\x54\x63\x03\xab\x04\x7e\x47\xab\xa4\x6f\x59\xe4\x29\x22\x95\x5c\xee\x21\x30\x42\x30\xc9\x49\x44\x2a\x1f\x92\x4a\x87\xfa\x7c\x3a\x8d\xab\xe3\x25\x5a\x8c\xae\x67\xb5\xf9\xcd\xe8\xb1\xfe\x36\xe2\x85\x8c\x33\xde\x33\xab\x69\x97\xdf\x8c\x26\x0b\x1b\x8f\xe7\xe6\x22\xd8\x15\xd9\x06\x57\x18\xc7\x9b\x20\x14\xd7\xcf\x45\x8c\x98\x45\x50\x03\x91\x51\xfb\x3a\xf2\x92\xee\xab\x2f\x9b\x98\xd4\xd3\x4c\xbd\x24\xa5\x04\x52\xaf\xde\x2d\x54\x75\x39\xe8\x8f\x55\x6d\x3e\x5b\xac\xfa\x63\x4d\x9d\x0e\xe7\xb3\xd1\x54\xba\x03\x15\x6e\x7c\xbd\xf8\xd4\x9f\x8f\x06\xfd\xe5\x4a\xeb\x0f\x06\xea\x72\xa9\xad\x66\xef\xd5\x69\x0c\x90\x33\x1b\x62\x12\x9e\xd1\xcd\x59\x24\x3b\x9e\xf5\x87\xf2\xc3\x44\x16\xfe\xf7\xbe\x36\x99\x41\x7f\xf0\x4e\x8a\x5c\xaf\x3b\x32\xa4\x99\x1a\xff\x50\x9d\x8f\x67\x7f\x4c\xd4\xe9\xaa\xac\xc4\xc0\xb0\x63\xac\xc9\xc7\x0a\x59\x26\xfd\x69\xff\xad\xea\xd3\xe8\xcf\x47\x32\x1a\x89\xee\xb2\x7d\x65\xf5\x83\x68\x9f\x2f\x9a\x12\x6d\xf6\x41\x5d\x2c\x46\x43\xe9\xf8\xc2\xb9\xc9\x3b\xc9\xb2\x49\x98\xcd\xd5\xe9\x72\x39\xd6\x3e\xa8\x8b\xd1\x1b\xe9\xee\x6d\x22\x69\xb6\xaf\x4c\xd2\xa8\xe7\x42\x5d\xce\x67\xd3\xa5\xaa\x0d\x66\x43\x55\x5a\xe8\x48\xa8\x66\xfb\xca\xa8\x06\x7b\x28\x25\x25\x9b\x60\x0b\x38\xde\x85\x4d\xed\x08\x17\x60\x7e\x2e\x53\x8e\x16\xd1\x06\x73\x78\xc2\x7b\xbf\x34\x70\x7b\xd9\x64\xb9\xce\xb1\xa8\xb6\xb8\x5f\x9a\x09\xbf\xea\xbc\xae\x71\x36\xea\xb8\xdc\xbb\x62\x53\xa2\xcc\x85\xa7\x85\xaa\x3e\x4a\xf6\xaa\xf3\xaa\xde\x51\x32\xc9\x9d\xaf\xbf\xcc\x21\xb4\xb6\x20\xb0\x3f\x47\xdd\x2f\xcf\x4e\xda\x9f\xaf\xd6\x51\x15\x7f\x25\xb5\x8e\xd0\xf2\xaf\xb2\x5a\x78\x55\xf7\x2c\x51\xdc\x35\xae\x9d\x60\x07\x6f\xc0\x4e\x96\x47\x41\xb1\x87\x49\xbe\x96\x9f\x20\x3b\x1c\x03\x2f\x95\xbb\x64\x0a\xc8\x97\x48\x5f\x72\x15\xe9\x26\x83\xa9\x50\xce\x77\x9f\xc4\xac\x09\x91\x9d\x03\x3a\x36\x89\xb9\xcd\x9f\x54\x3f\x21\x8d\xa9\xdc\x29\x69\x32\x99\xaf\x28\x93\xe9\x36\x99\xcc\x19\x99\x8c\xd4\xce\x9b\x64\xe6\x9b\x49\x66\x4a\x02\xf2\xf7\x9a\xcf\xa4\x86\x7b\x7e\x61\x4b\x96\xcd\xc7\xda\x55\x72\x57\x4b\xcb\x5b\xa2\x6f\xbe\xf4\x9a\xbd\xf5\xd8\x92\x57\x7a\xa6\xbe\x74\xd5\xab\x76\xe2\x78\xb4\x96\x73\x9e\xa6\xa8\xe8\xa4\xc3\x29\xba\x4e\x6d\xe1\x7f\x83\xea\xae\x63\xd7\xc7\x6d\x79\x62\xd7\x3d\x7d\xb7\x33\xb8\xf9\xef\x49\xc7\x5d\x31\xd3\x29\xdf\x0a\x1f\x41\x9f\xc2\xd3\x9c\xe4\x36\xa7\xa4\x3b\x56\x92\xf3\x8f\x85\xfd\x2a\x05\xad\x3d\xc7\xb0\xc0\xa7\xec\x9f\xc0\xf1\x13\xcf\xd4\xd1\x1b\x21\x82\x16\x38\xa1\x1c\xcb\x30\x94\x4d\x4b\x1e\xb5\x89\xfe\x1e\xb0\x69\x79\x14\x62\x5b\x59\xa7\x0f\xb8\xbb\x14\xfe\xe6\xf1\x9d\x33\xb4\xc2\xc1\xa3\x43\x47\x8f\xaa\x53\xea\x1a\xc7\x8f\x9e\xe9\x00\x52\xea\x24\xcd\x6c\x31\x50\xb5\xe5\xb2\x84\xed\x35\xa7\x1e\x5c\x4b\xef\x4c\x41\x8a\xe5\xfd\x5c\x5d\x04\xee\x46\x4e\xa6\xc4\x2b\x15\x48\x26\xce\xad\x8c\x4e\xda\xff\x49\x69\xc8\x40\x5b\x19\x31\x29\xc0\x93\x53\xf5\xdf\x13\x55\x8b\x66\xa1\xa7\x9c\xe2\x7c\x31\xfb\x30\x1a\xaa\x0b\x6d\x3e\xee\x97\x10\x03\xe1\x5a\x5c\x6a\x32\x90\x52\xb8\x5f\xaa\x0b\x6d\x3c\x7b\x5b\xae\xf4\xdc\xfb\xae\xca\xa9\x48\x9f\xa6\x2d\x10\x92\x3d\x46\x9b\x5f\x01\xe3\xd9\x5b\x6d\x35\xd3\x96\xab\xe1\xec\x7e\x75\xb4\x4d\x25\x34\xc6\xea\x07\xb5\xc4\x26\x4d\xe7\x81\x94\x58\xe4\xe1\xe3\x74\x49\xad\xbe\xe4\x98\x54\xc5\xb1\xb7\xd9\xa2\x6c\x44\xaf\x6f\x3b\x77\x65\xab\xe4\xa8\xd3\x79\x31\xc9\x36\xb7\xdd\xf0\xf8\x55\xf1\xd0\x70\x44\x3c\x7c\x3a\xa8\xfc\xc1\xa0\x13\x1e\x0d\x92\x2f\xf0\xfe\x74\xf8\xeb\xec\xf7\xe0\x49\xae\x1c\x48\xd6\x26\xb3\x61\xc9\x20\xc2\x0e\xd3\xd9\x54\xad\x5c\xab\x91\x50\xbe\x3b\x93\x96\x66\x32\xd8\x9f\xa5\xc0\x7f\xbd\x0d\xd6\x3c\xe3\x5a\x8f\xaa\x1f\xf7\xb0\xfa\x09\x8f\xab\x1f\xf7\xc0\x7a\xc2\x20\x98\x34\xed\xbd\xfa\x87\x26\x1c\xfb\x01\x9a\xfd\xf9\x5c\xcb\xdd\x51\xe2\xe3\x26\x73\x6d\xa1\x8e\xd5\x0a\x92\xa9\x2e\x25\xa2\x4d\x56\xf3\xaa\x75\xf7\x86\x12\x3b\x8f\x5c\x51\x72\xd6\xfe\x3d\xec\x17\xf0\x50\xec\x80\x82\x23\xf6\xd8\x30\x28\xb0\xfc\xf3\xe2\x28\xc9\xe0\x6c\xee\x96\x8b\xe5\x7b\xba\xb2\xd8\x72\x9e\x60\x1e\x03\x2a\x38\x9d\x28\x59\x95\x75\x9c\x27\x98\x8b\x19\x7b\x22\xd4\x38\x51\xb0\xf2\x98\x7e\x9e\x58\x06\xb1\xb1\xe9\x9c\xaa\xad\x12\x3f\x7c\xa6\xa6\xb2\xcf\x61\x1e\x23\x50\xff\x7e\xf5\x4e\x9d\xae\x46\x03\xdf\xa9\x3f\x83\xd9\x7b\x7c\x0b\x0e\x37\x75\x5c\x48\x20\xeb\x0b\x59\xd3\x69\x9f\x27\xa9\x9f\x66\x33\xab\xb5\x03\x6a\x3e\xec\x5b\x36\x31\x4e\x58\x12\x49\x34\xb8\x5f\x95\x78\xa2\xf3\xa2\x40\xe1\x74\x72\xc0\xbd\xf0\xf6\xcd\xe8\x2f\x87\x68\x16\xc0\x69\x02\x20\xbe\xa6\xb3\xa9\x11\x74\xbd\xf4\xb1\x54\x70\x76\x99\xdf\xa1\xb2\x85\x0d\xfd\x22\x81\x49\x0a\x12\x4b\xf4\x97\x42\x39\xfe\xc0\x33\x7c\x11\x76\xcb\xb2\xfe\x08\x7a\xa6\xc1\x73\x4c\x9d\xd0\xdc\xfb\x7a\xf4\x3c\x9f\x07\x73\xd3\x0e\x7b\xb6\xe8\x3a\x8d\x38\xbf\x8f\x27\x47\xe4\xb0\xad\x2c\xc1\x3e\x02\xb2\xd5\x01\x6c\x87\xe0\xda\x21\xb0\x56\x1b\xaa\xd5\x06\x6a\x35\x61\x5a\x4d\x90\x76\x18\xa2\x55\x01\xb4\x03\xf0\xac\x06\x38\x3b\x0c\xcd\x6a\x00\xb3\xba\xb0\xec\x90\xcd\x54\x41\x32\x39\x20\x3b\xe1\xe9\xa6\x32\x30\x56\x1b\x8a\x95\x01\xb1\xf3\x1e\x92\xaa\x00\x61\xb5\x21\xd8\xd1\x00\xec\x6c\xf8\x55\x09\xbe\x8e\x87\x5e\x17\x08\xb9\xdf\xe6\x1b\xc2\xea\xc0\xad\x23\xc1\xd6\x21\xa8\x75\x08\x68\x1d\x84\x59\xa5\x39\xdc\xc1\x0c\xae\x12\x60\x49\x33\xb6\x1a\xe0\xea\x4c\x71\x4a\x61\xd5\x61\x79\xca\x67\xff\x74\x71\x4a\xc1\xd4\x61\x71\xca\x22\xed\xe9\xc2\x94\x40\xa8\x1a\x9a\x91\xfa\xce\x33\xb4\x22\x03\x4e\x87\xc5\xa8\x00\x4d\xe7\x1a\x71\x35\x5c\x3a\x2c\x5a\x2d\x07\x7b\xba\x7c\x75\x40\x52\xa5\x90\xe5\x00\xe9\x02\xbe\xfa\x2b\x78\x44\xf6\xe6\x82\x0f\x8d\x49\x77\x71\x0a\xa7\xde\x8a\x6f\x4e\x2c\xdf\x04\x3a\xe1\xc5\x89\x01\x49\xa9\x28\x17\x3c\x01\x22\x9a\xdf\x01\x36\x32\x30\x2f\x12\x31\x10\xe1\x77\xe5\x0d\xa1\x4f\x98\x1a\x60\x28\x73\xc1\xb9\x60\x78\x69\x0b\xca\x2b\x34\x38\x61\xa2\x6f\x41\x7f\x6c\xf1\x8f\xf9\x45\x5f\xa1\x6f\x84\x98\xbe\x05\x21\xc0\xbb\xd5\x6a\x7e\xd8\x00\xaa\x5f\xa7\x72\xe8\x6d\xd0\xe9\xcb\x47\x3f\xf4\xec\x7a\x6b\xcb\xd4\xdb\xf1\x57\x3f\x92\xbf\xec\x93\xca\x85\xf7\x85\x5c\x06\x4d\x67\xdf\xc2\x17\xf5\x88\xe0\x74\xb7\x81\xd3\x0d\x9c\x6e\xe0\x74\x85\x0c\x0d\x9c\x6e\xe0\x74\x03\xa7\xeb\x28\xac\x81\xd3\x0d\x9c\xae\x2f\x4f\x03\xa7\x1b\x38\xdd\xc0\xe9\x06\x4e\xcb\xf0\xc9\x31\x78\x5a\x76\x7f\x2d\x40\xdd\x95\x60\x31\xb9\x30\xdf\x1b\xa2\x96\x8f\xf2\xfb\x87\xd4\x28\x9c\xb3\x99\x63\xed\x7b\x48\xe4\xd3\x57\x59\x11\xca\x5f\x10\x7a\xa1\x57\x83\xa6\xc9\x7c\x81\xcf\x0c\xc5\x8f\x77\xb1\x3f\xbd\x33\xde\xd6\x15\xdf\xff\x75\x3c\x51\xfa\x77\x9e\x87\x48\xa9\xe2\x62\x2f\xa9\x0c\x68\xf6\x9e\x08\x7d\xcc\xb4\xfb\xef\xa7\xff\xe5\x3f\x53\x6d\x4d\x6d\xa4\xa9\x8d\x34\xb5\x91\x23\x6c\xa6\xa9\x8d\x34\xb5\x91\xa6\x36\xd2\xd4\x46\x9a\xda\x48\x53\x1b\x91\x6b\xa5\xa9\x8d\x1c\x27\xdf\x0f\x57\x1b\x29\x4f\xff\xd1\x97\xdf\x0d\xae\x05\x24\x04\x8c\x37\x3c\x2b\xb7\xe3\xdb\xa0\x89\xcc\x5d\x0d\x9a\x68\xd0\x44\x83\x26\x1a\x34\xd1\xa0\x89\x06\x4d\xa0\xdc\x5f\x83\x26\x1a\x34\xd1\xa0\x89\x06\x4d\x3c\x37\x9a\x28\x26\xea\xdf\xf5\x36\x14\x33\x0d\x78\x34\xff\x3c\xe3\x63\x69\x31\x81\x66\x23\x2a\xad\x8b\x8b\xed\x44\x85\x44\x7b\x85\x6f\x34\x37\x50\xb1\x81\x8a\x0d\x54\x3c\xc2\x66\x1a\xa8\xd8\x40\xc5\x06\x2a\x36\x50\xb1\x81\x8a\x0d\x54\x94\x6b\xa5\x81\x8a\xc7\xc9\xf7\x83\x43\xc5\x4c\xba\x8f\xbe\xe0\xce\xd3\x77\x0d\x49\x7d\xe8\x70\xc6\x67\x4c\xc3\xdb\x8b\x70\x34\x44\x7c\xa0\x53\xc0\xe1\x77\xde\xce\xff\x4e\x68\xcc\xed\xac\x4f\x57\x04\x30\xa9\x3c\x81\x48\xae\xcb\x62\x68\x70\xb5\x3a\x4b\xc8\xf6\x29\xa7\x12\x41\xb5\x2a\x2a\x55\x70\x4e\x02\x0a\xab\x48\x65\xd1\x63\x29\xbd\xf1\xec\x37\x75\xa1\x0d\x04\x38\x5d\xf5\x7f\x1d\xab\xfe\xf2\x97\xe6\xdf\xd7\x5d\xc9\x97\xa0\x23\x6e\xa3\x49\xff\xad\x5a\x70\x11\xcf\x70\x18\xbf\xfa\x1c\xf6\x71\x87\xf1\x6f\x2b\x3e\xff\x9c\x36\x3f\x54\xef\x90\x7d\x96\xda\x69\x07\xe9\x8f\xfa\xbc\x6a\x7b\x6d\x3a\x6d\xd9\x37\x56\xcd\x62\x53\xf1\xb3\xab\xa1\xdd\xfe\x36\xfc\xe5\xfa\x45\xd6\x86\xaf\x83\x82\x04\x52\xb6\xa8\x7b\xf3\xb3\xff\xe1\xf4\x2e\x52\x3c\xf4\x22\x59\x2c\x48\x19\x46\x3f\xa5\x76\xed\xb3\x00\xf4\x8f\xa5\x3a\x56\x07\x2b\xd4\xfd\xc7\xe1\x99\xbd\xd0\x47\x5b\x85\x7e\x19\xf1\xa8\x9e\x7f\x41\x9d\x65\xda\x26\x2f\x3c\x87\x60\x83\x4d\xe8\xbe\x87\x6e\xde\x66\x95\x46\xe1\x4f\x0f\x58\xb1\xbf\xee\x7a\xf9\xa5\x90\x26\xd3\xcd\x90\xa9\x17\xb5\x76\x98\xb6\x2d\x73\xdd\x0e\x2a\x3b\xc2\x49\x4a\xe2\x95\x7f\xb1\x7e\xb8\x92\x77\x3f\x36\x5a\x15\xa9\x9c\x16\xac\x12\xc7\xef\x7f\x7b\xc5\xc7\xc9\x3d\xf4\x57\xc8\x56\xac\x13\xd0\x39\x18\x8a\x48\x73\x90\x43\xae\xa2\x0b\x84\xf2\xe0\x23\xbb\x57\x99\x59\x47\x91\x2d\x70\xdd\x55\x1e\x01\x5c\x2c\xbc\x08\xba\xed\x74\xa2\x8e\x06\x06\x9b\x38\xe6\xbf\x7d\x6a\x41\x13\xf3\x5c\xa0\x3b\x93\x81\x91\xe2\x60\x91\x8d\x05\x3b\xb0\x90\x43\xb8\xa9\x43\x72\x7b\xf0\x01\x75\x86\xba\x77\x51\x1b\xc3\x3b\x40\xaf\x3b\x9d\xb8\xcc\xe9\x37\xdc\x8a\x86\x4e\xba\xe5\x4e\x34\x74\x12\x51\x18\x27\xae\xf2\x44\x4d\x0e\x4c\x21\x8e\xb2\xde\x88\x5e\x0a\x50\x4a\x28\xda\x03\x8b\xba\x51\x63\xad\x13\xdb\x15\xc8\xca\x24\x8e\x7f\x25\xb9\xb0\x05\xfd\x91\x79\x76\xba\xbf\xb1\x7e\x30\x2d\x10\x93\x8d\x0c\xcf\x76\x5b\xd4\x58\xc7\x1c\x2d\xc1\x81\x01\x15\xff\xe7\x22\x43\x13\xe3\x49\x91\x0c\x3a\x08\x37\xa4\x10\xc7\xda\x67\xc4\x00\xd7\x52\x0c\x93\x3d\x5a\xc0\x98\xc2\xf6\x8e\x9e\x68\x30\xba\x86\xd7\x16\x28\x42\xf5\x0e\x31\xc4\x0a\x4e\xe9\x13\xbb\x2e\x38\x46\x4c\x34\xdd\x18\x8b\x7b\x9d\x74\x6a\x61\xf2\x70\x9d\xed\xe5\xb3\x84\x1d\xd0\x3d\x8b\xdf\xb4\xe0\x10\x25\x75\x55\x68\x91\x82\xaf\xd1\x44\x36\xec\x71\xa2\x60\xf2\x10\x5d\x51\x5c\xa0\x3a\x38\x1c\x6f\x40\x4c\x47\x59\x2f\xdb\x74\x14\x26\xcc\xe4\xee\x27\x3b\x7a\x2d\x83\xb8\x6e\x11\x6c\x28\x9c\x7a\x8e\x8e\x39\x18\x69\x05\x59\x1e\x56\x84\x19\x2a\xbe\x3b\x41\x2f\x53\x33\x8d\x75\x6e\xee\x80\xc2\x16\xb3\xad\xe9\x6c\xd2\x6a\x49\xb1\x34\x1d\x9d\xfa\x5f\x3e\xc1\x96\x12\x8c\x36\xd1\x94\x61\xd2\xc4\x1d\xf8\x4b\x25\x72\x07\x41\xba\x37\x88\xb0\x43\x49\x9e\xe7\xdf\xa2\x04\x08\xa3\x7a\x1d\x86\x20\xbe\x87\xae\x03\xfd\x67\xf1\x50\xdc\x1c\x00\xc8\xf8\xa7\x04\x95\xc4\xd7\x22\xe0\x9b\x34\xf8\x51\x31\xfc\x11\xa1\xf4\xb0\xa1\xde\x70\x7c\x68\xe3\x62\x8a\x6d\xe0\xbe\xcf\x51\x90\x01\x4c\xa7\xa6\x1b\x08\xd9\x9f\xcc\x11\x05\x0b\x30\x03\xc4\xf1\xa6\x75\x85\xa4\xa5\x13\xe1\xca\x4d\x0a\x46\xfc\x10\x54\x98\xd0\xdc\x88\xc8\xa6\x0c\x16\x37\x0a\x05\x63\x8b\xb9\xd2\xbd\x52\xd0\x83\x80\x6c\xe8\x1f\xff\x83\x95\x7f\x77\x94\xd7\xff\xfb\xe9\xd5\x67\x11\xba\x36\xe0\x80\x48\x79\x7b\x08\x3e\x46\x6b\x34\xe1\x96\xa9\xaf\x16\x19\x66\x0b\xcf\x51\x89\xaa\x42\x30\xff\xeb\xdb\xf9\xc1\x2e\x00\x1b\x68\x26\x56\x56\x5f\xd7\x81\x31\xb4\x22\x8f\xe0\x20\xbe\xc5\x1c\x99\x0c\xf5\xe7\x23\x1d\x33\x8e\x36\x44\x98\x1e\x27\x42\xe3\xe2\x1f\x83\x3c\x39\xc2\x9a\x91\xc9\x03\x2b\x0b\xac\xc3\xa3\xfe\x44\x0b\x95\x9d\x32\x62\x79\x51\xbe\x30\xee\xec\x6c\x89\x51\x65\x85\x7f\x32\xf9\x16\x61\xcb\x42\x4c\x27\x2e\x30\x84\x1d\x03\x05\x0b\xdb\x05\x6a\x9b\x3e\x53\x86\x1e\x08\x15\x1c\x11\xf6\x6f\x95\x89\xdc\xbd\xab\x3b\x4b\x19\x89\xf3\x1a\x26\x84\x87\x16\xef\xf3\xe4\x5b\x40\x4f\xa6\x65\xe8\x98\x1a\xc8\xff\xaa\x0c\x6b\x21\x75\xd3\x42\xf0\x11\xdb\xae\x05\x2d\x9d\xd8\xa2\x83\x15\x33\xf6\x15\x1c\xa1\x62\xff\x13\xea\xa9\xae\x89\x79\xe6\x90\xf5\x41\xcd\xad\xc0\xc1\x0e\xf7\x6f\x46\x9e\x63\x40\x20\x1a\x15\xe2\xfa\xd3\x1f\x68\xf6\x7e\x14\x08\xb3\x06\x14\xef\xe8\x05\x1a\x0e\x64\x09\x90\x9b\xf7\xf0\x60\x7e\x4c\x44\xc9\x6e\xcf\x94\x19\x64\x30\xa4\xbc\x58\xf7\xe1\x9a\xf6\x95\x35\xd9\x2f\xff\x39\xf6\x97\x79\x20\x53\x24\x8a\x27\x02\xae\xe8\x10\xcc\x9e\x6f\x9c\x5b\x88\x23\xac\x90\xc4\x30\x99\x6b\xe1\x7d\x90\x72\x04\x74\x04\xe9\x58\xc6\x0c\x84\x2b\x13\x31\xc8\xd7\x73\x12\xce\x43\x9f\x14\x4f\x67\x22\x65\x09\xe3\x79\x52\xbe\x3b\x61\x5d\x14\xe0\x62\xf5\xbc\x0a\xc6\x88\x3c\xa4\x24\x8b\xd4\x12\x6a\x0b\x8c\x12\x31\x87\x51\xbf\x69\x50\xf9\x2c\xc1\x99\x65\xca\x0a\xab\x22\x55\xda\xf2\x17\x43\x85\xa2\xfc\xeb\x91\xcf\x3f\xd1\x8d\xc8\x11\x6d\xb5\xce\x46\x0e\x17\x56\x67\x85\x36\xe9\x3b\x06\x2f\x6d\x88\x66\xae\x03\x76\x4d\x3f\xba\x25\x36\x5f\xb2\x67\x70\xd0\xfe\x35\xec\x9a\x9a\xe0\x55\x47\x26\x37\xad\xcc\x2a\x99\x4e\xd0\x5b\xc9\xbe\xc4\x41\xdd\x2d\x44\x7a\x10\x20\xf3\x30\x42\xc4\x24\x83\xef\x27\xfa\x28\xbe\x42\x0f\x74\xcb\x74\x2b\x48\x4c\x94\xdb\x1b\x85\x6e\xc1\xfa\xb9\x77\xdb\xba\x51\x5e\xb6\x7e\xce\x33\x9b\xf8\x10\x52\xca\x2c\x55\x32\x38\xc8\x2c\x80\x20\x2f\xef\x42\x66\x2f\x5b\x77\x4a\xf7\xb6\xd5\xfd\x29\xcf\x6e\xb9\xc5\x14\x0c\xc4\x40\xa7\xc0\x05\x43\xd3\xf6\xe1\x03\xec\xc0\xe1\xcc\xd7\x32\x0a\x4b\x9d\xe2\x6a\xb0\x02\x2e\xa3\xff\xfc\xbe\x5e\xf5\x24\x2c\x7d\xce\x22\xdd\xb5\xc2\x6c\x2b\x12\xfa\x11\xf6\x48\x2c\xea\x8c\x50\x0f\x41\x80\xbb\xa9\x2f\x96\x64\x7b\xe9\xb0\x50\x22\xfe\x46\xae\x28\x4a\x25\x26\xf1\x47\xfa\x44\x53\x0b\x0d\xb0\x23\x3c\x7a\x88\x00\x8c\xff\x42\xc1\xb7\x12\x11\xa1\xc8\x80\xb5\xe7\xe7\x5f\x08\xf5\x39\x12\x19\x19\x8f\xae\x46\x8c\xfd\x85\xb0\x05\x6c\xf1\x2d\x0a\x00\x4d\xab\x90\x4f\x14\xbe\x89\x1a\xf9\x2b\x9f\x54\x21\x2c\x7a\xd4\x41\xc4\x69\x93\x87\x40\xee\x99\x0b\xce\x72\x39\x46\x2e\x00\x45\x7e\x8a\x1a\x29\xf8\x69\x0b\x4e\x9c\x09\x45\x21\xa8\x90\x08\xa1\x68\x84\x2c\xb0\x20\xa1\xa8\xf6\x03\xb6\x82\x28\x95\x95\xb4\xf0\x4d\xd4\xa8\x48\xe6\xf7\xbf\xce\x8b\xaa\x3a\x7e\x34\xb6\xc8\x66\x23\xd8\x53\x60\x2e\x71\x98\x90\xc1\x00\x86\x44\x5a\x14\xe8\xbc\xc8\xa8\xf0\x99\xd4\xec\x5e\xfc\xff\x07\x00\x00\xff\xff\xee\x37\xdc\x71\x0d\xb4\x00\x00")

func templateTemplateOpenshiftIoOpenshiftSystemYamlBytes() ([]byte, error) {
	return bindataRead(
		_templateTemplateOpenshiftIoOpenshiftSystemYaml,
		"Template.template.openshift.io/openshift/system.yaml",
	)
}

func templateTemplateOpenshiftIoOpenshiftSystemYaml() (*asset, error) {
	bytes, err := templateTemplateOpenshiftIoOpenshiftSystemYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Template.template.openshift.io/openshift/system.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"APIService.apiregistration.k8s.io/v1beta1.servicecatalog.k8s.io.yaml":                                                               apiserviceApiregistrationK8sIoV1beta1ServicecatalogK8sIoYaml,
	"ClusterRole.rbac.authorization.k8s.io/admin.yaml":                                                                                   clusterroleRbacAuthorizationK8sIoAdminYaml,
	"ClusterRole.rbac.authorization.k8s.io/asb-access.yaml":                                                                              clusterroleRbacAuthorizationK8sIoAsbAccessYaml,
	"ClusterRole.rbac.authorization.k8s.io/asb-auth.yaml":                                                                                clusterroleRbacAuthorizationK8sIoAsbAuthYaml,
	"ClusterRole.rbac.authorization.k8s.io/basic-user.yaml":                                                                              clusterroleRbacAuthorizationK8sIoBasicUserYaml,
	"ClusterRole.rbac.authorization.k8s.io/cluster-admin.yaml":                                                                           clusterroleRbacAuthorizationK8sIoClusterAdminYaml,
	"ClusterRole.rbac.authorization.k8s.io/cluster-debugger.yaml":                                                                        clusterroleRbacAuthorizationK8sIoClusterDebuggerYaml,
	"ClusterRole.rbac.authorization.k8s.io/cluster-reader.yaml":                                                                          clusterroleRbacAuthorizationK8sIoClusterReaderYaml,
	"ClusterRole.rbac.authorization.k8s.io/cluster-status.yaml":                                                                          clusterroleRbacAuthorizationK8sIoClusterStatusYaml,
	"ClusterRole.rbac.authorization.k8s.io/customer-admin-cluster.yaml":                                                                  clusterroleRbacAuthorizationK8sIoCustomerAdminClusterYaml,
	"ClusterRole.rbac.authorization.k8s.io/customer-admin-controller.yaml":                                                               clusterroleRbacAuthorizationK8sIoCustomerAdminControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/customer-admin-project.yaml":                                                                  clusterroleRbacAuthorizationK8sIoCustomerAdminProjectYaml,
	"ClusterRole.rbac.authorization.k8s.io/edit.yaml":                                                                                    clusterroleRbacAuthorizationK8sIoEditYaml,
	"ClusterRole.rbac.authorization.k8s.io/kube-state-metrics.yaml":                                                                      clusterroleRbacAuthorizationK8sIoKubeStateMetricsYaml,
	"ClusterRole.rbac.authorization.k8s.io/namespace-viewer.yaml":                                                                        clusterroleRbacAuthorizationK8sIoNamespaceViewerYaml,
	"ClusterRole.rbac.authorization.k8s.io/registry-admin.yaml":                                                                          clusterroleRbacAuthorizationK8sIoRegistryAdminYaml,
	"ClusterRole.rbac.authorization.k8s.io/registry-editor.yaml":                                                                         clusterroleRbacAuthorizationK8sIoRegistryEditorYaml,
	"ClusterRole.rbac.authorization.k8s.io/registry-viewer.yaml":                                                                         clusterroleRbacAuthorizationK8sIoRegistryViewerYaml,
	"ClusterRole.rbac.authorization.k8s.io/router-metrics.yaml":                                                                          clusterroleRbacAuthorizationK8sIoRouterMetricsYaml,
	"ClusterRole.rbac.authorization.k8s.io/sar-creator.yaml":                                                                             clusterroleRbacAuthorizationK8sIoSarCreatorYaml,
	"ClusterRole.rbac.authorization.k8s.io/self-access-reviewer.yaml":                                                                    clusterroleRbacAuthorizationK8sIoSelfAccessReviewerYaml,
	"ClusterRole.rbac.authorization.k8s.io/self-provisioner.yaml":                                                                        clusterroleRbacAuthorizationK8sIoSelfProvisionerYaml,
	"ClusterRole.rbac.authorization.k8s.io/service-catalog-controller.yaml":                                                              clusterroleRbacAuthorizationK8sIoServiceCatalogControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/servicecatalog-serviceclass-viewer.yaml":                                                      clusterroleRbacAuthorizationK8sIoServicecatalogServiceclassViewerYaml,
	"ClusterRole.rbac.authorization.k8s.io/storage-admin.yaml":                                                                           clusterroleRbacAuthorizationK8sIoStorageAdminYaml,
	"ClusterRole.rbac.authorization.k8s.io/sudoer.yaml":                                                                                  clusterroleRbacAuthorizationK8sIoSudoerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-aggregate-to-admin.yaml":                                                               clusterroleRbacAuthorizationK8sIoSystemAggregateToAdminYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-aggregate-to-edit.yaml":                                                                clusterroleRbacAuthorizationK8sIoSystemAggregateToEditYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-aggregate-to-view.yaml":                                                                clusterroleRbacAuthorizationK8sIoSystemAggregateToViewYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-auth-delegator.yaml":                                                                   clusterroleRbacAuthorizationK8sIoSystemAuthDelegatorYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-aws-cloud-provider.yaml":                                                               clusterroleRbacAuthorizationK8sIoSystemAwsCloudProviderYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-basic-user.yaml":                                                                       clusterroleRbacAuthorizationK8sIoSystemBasicUserYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-build-controller.yaml":                                                                 clusterroleRbacAuthorizationK8sIoSystemBuildControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-build-strategy-custom.yaml":                                                            clusterroleRbacAuthorizationK8sIoSystemBuildStrategyCustomYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-build-strategy-docker.yaml":                                                            clusterroleRbacAuthorizationK8sIoSystemBuildStrategyDockerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-build-strategy-jenkinspipeline.yaml":                                                   clusterroleRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-build-strategy-source.yaml":                                                            clusterroleRbacAuthorizationK8sIoSystemBuildStrategySourceYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-certificate-signing-controller.yaml":                                                   clusterroleRbacAuthorizationK8sIoSystemCertificateSigningControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-certificates.k8s.io-certificatesigningrequests-nodeclient.yaml":                        clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsNodeclientYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-certificates.k8s.io-certificatesigningrequests-selfnodeclient.yaml":                    clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsSelfnodeclientYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-attachdetach-controller.yaml":                                               clusterroleRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-certificate-controller.yaml":                                                clusterroleRbacAuthorizationK8sIoSystemControllerCertificateControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-clusterrole-aggregation-controller.yaml":                                    clusterroleRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-cronjob-controller.yaml":                                                    clusterroleRbacAuthorizationK8sIoSystemControllerCronjobControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-daemon-set-controller.yaml":                                                 clusterroleRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-deployment-controller.yaml":                                                 clusterroleRbacAuthorizationK8sIoSystemControllerDeploymentControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-disruption-controller.yaml":                                                 clusterroleRbacAuthorizationK8sIoSystemControllerDisruptionControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-endpoint-controller.yaml":                                                   clusterroleRbacAuthorizationK8sIoSystemControllerEndpointControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-generic-garbage-collector.yaml":                                             clusterroleRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-horizontal-pod-autoscaler.yaml":                                             clusterroleRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-job-controller.yaml":                                                        clusterroleRbacAuthorizationK8sIoSystemControllerJobControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-namespace-controller.yaml":                                                  clusterroleRbacAuthorizationK8sIoSystemControllerNamespaceControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-node-controller.yaml":                                                       clusterroleRbacAuthorizationK8sIoSystemControllerNodeControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-persistent-volume-binder.yaml":                                              clusterroleRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-pod-garbage-collector.yaml":                                                 clusterroleRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-pv-protection-controller.yaml":                                              clusterroleRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-pvc-protection-controller.yaml":                                             clusterroleRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-replicaset-controller.yaml":                                                 clusterroleRbacAuthorizationK8sIoSystemControllerReplicasetControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-replication-controller.yaml":                                                clusterroleRbacAuthorizationK8sIoSystemControllerReplicationControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-resourcequota-controller.yaml":                                              clusterroleRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-route-controller.yaml":                                                      clusterroleRbacAuthorizationK8sIoSystemControllerRouteControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-service-account-controller.yaml":                                            clusterroleRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-service-controller.yaml":                                                    clusterroleRbacAuthorizationK8sIoSystemControllerServiceControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-statefulset-controller.yaml":                                                clusterroleRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-controller-ttl-controller.yaml":                                                        clusterroleRbacAuthorizationK8sIoSystemControllerTtlControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-daemonset-controller.yaml":                                                             clusterroleRbacAuthorizationK8sIoSystemDaemonsetControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-deployer.yaml":                                                                         clusterroleRbacAuthorizationK8sIoSystemDeployerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-deployment-controller.yaml":                                                            clusterroleRbacAuthorizationK8sIoSystemDeploymentControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-deploymentconfig-controller.yaml":                                                      clusterroleRbacAuthorizationK8sIoSystemDeploymentconfigControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-discovery.yaml":                                                                        clusterroleRbacAuthorizationK8sIoSystemDiscoveryYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-disruption-controller.yaml":                                                            clusterroleRbacAuthorizationK8sIoSystemDisruptionControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-endpoint-controller.yaml":                                                              clusterroleRbacAuthorizationK8sIoSystemEndpointControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-garbage-collector-controller.yaml":                                                     clusterroleRbacAuthorizationK8sIoSystemGarbageCollectorControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-gc-controller.yaml":                                                                    clusterroleRbacAuthorizationK8sIoSystemGcControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-heapster.yaml":                                                                         clusterroleRbacAuthorizationK8sIoSystemHeapsterYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-hpa-controller.yaml":                                                                   clusterroleRbacAuthorizationK8sIoSystemHpaControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-image-auditor.yaml":                                                                    clusterroleRbacAuthorizationK8sIoSystemImageAuditorYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-image-builder.yaml":                                                                    clusterroleRbacAuthorizationK8sIoSystemImageBuilderYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-image-pruner.yaml":                                                                     clusterroleRbacAuthorizationK8sIoSystemImagePrunerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-image-puller.yaml":                                                                     clusterroleRbacAuthorizationK8sIoSystemImagePullerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-image-pusher.yaml":                                                                     clusterroleRbacAuthorizationK8sIoSystemImagePusherYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-image-signer.yaml":                                                                     clusterroleRbacAuthorizationK8sIoSystemImageSignerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-job-controller.yaml":                                                                   clusterroleRbacAuthorizationK8sIoSystemJobControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-kube-aggregator.yaml":                                                                  clusterroleRbacAuthorizationK8sIoSystemKubeAggregatorYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-kube-controller-manager.yaml":                                                          clusterroleRbacAuthorizationK8sIoSystemKubeControllerManagerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-kube-dns.yaml":                                                                         clusterroleRbacAuthorizationK8sIoSystemKubeDnsYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-kube-scheduler.yaml":                                                                   clusterroleRbacAuthorizationK8sIoSystemKubeSchedulerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-kubelet-api-admin.yaml":                                                                clusterroleRbacAuthorizationK8sIoSystemKubeletApiAdminYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-master.yaml":                                                                           clusterroleRbacAuthorizationK8sIoSystemMasterYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-namespace-controller.yaml":                                                             clusterroleRbacAuthorizationK8sIoSystemNamespaceControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-node-admin.yaml":                                                                       clusterroleRbacAuthorizationK8sIoSystemNodeAdminYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-node-bootstrap-autoapprover.yaml":                                                      clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapAutoapproverYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-node-bootstrapper.yaml":                                                                clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapperYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-node-problem-detector.yaml":                                                            clusterroleRbacAuthorizationK8sIoSystemNodeProblemDetectorYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-node-proxier.yaml":                                                                     clusterroleRbacAuthorizationK8sIoSystemNodeProxierYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-node-reader.yaml":                                                                      clusterroleRbacAuthorizationK8sIoSystemNodeReaderYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-node.yaml":                                                                             clusterroleRbacAuthorizationK8sIoSystemNodeYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-oauth-token-deleter.yaml":                                                              clusterroleRbacAuthorizationK8sIoSystemOauthTokenDeleterYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-aggregate-to-admin.yaml":                                                     clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToAdminYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-aggregate-to-edit.yaml":                                                      clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToEditYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-aggregate-to-view.yaml":                                                      clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToViewYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-build-config-change-controller.yaml":                              clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-build-controller.yaml":                                            clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-cluster-quota-reconciliation-controller.yaml":                     clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-default-rolebindings-controller.yaml":                             clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-deployer-controller.yaml":                                         clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-deploymentconfig-controller.yaml":                                 clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-horizontal-pod-autoscaler.yaml":                                   clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-image-import-controller.yaml":                                     clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-image-trigger-controller.yaml":                                    clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-ingress-to-route-controller.yaml":                                 clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-namespace-security-allocation-controller.yaml":                    clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-origin-namespace-controller.yaml":                                 clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-pv-recycler-controller.yaml":                                      clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-resourcequota-controller.yaml":                                    clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-sdn-controller.yaml":                                              clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-service-ingress-ip-controller.yaml":                               clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-service-serving-cert-controller.yaml":                             clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-controller.yaml":                                   clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-pull-secrets-controller.yaml":                      clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-template-instance-controller.yaml":                                clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-template-instance-finalizer-controller.yaml":                      clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-template-service-broker.yaml":                                     clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-controller-unidling-controller.yaml":                                         clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-openshift-templateservicebroker-client.yaml":                                           clusterroleRbacAuthorizationK8sIoSystemOpenshiftTemplateservicebrokerClientYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-persistent-volume-provisioner.yaml":                                                    clusterroleRbacAuthorizationK8sIoSystemPersistentVolumeProvisionerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-registry.yaml":                                                                         clusterroleRbacAuthorizationK8sIoSystemRegistryYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-replicaset-controller.yaml":                                                            clusterroleRbacAuthorizationK8sIoSystemReplicasetControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-replication-controller.yaml":                                                           clusterroleRbacAuthorizationK8sIoSystemReplicationControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-router.yaml":                                                                           clusterroleRbacAuthorizationK8sIoSystemRouterYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-scope-impersonation.yaml":                                                              clusterroleRbacAuthorizationK8sIoSystemScopeImpersonationYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-sdn-manager.yaml":                                                                      clusterroleRbacAuthorizationK8sIoSystemSdnManagerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-sdn-reader.yaml":                                                                       clusterroleRbacAuthorizationK8sIoSystemSdnReaderYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-service-catalog-aggregate-to-admin.yaml":                                               clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToAdminYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-service-catalog-aggregate-to-edit.yaml":                                                clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToEditYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-service-catalog-aggregate-to-view.yaml":                                                clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToViewYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-statefulset-controller.yaml":                                                           clusterroleRbacAuthorizationK8sIoSystemStatefulsetControllerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-volume-scheduler.yaml":                                                                 clusterroleRbacAuthorizationK8sIoSystemVolumeSchedulerYaml,
	"ClusterRole.rbac.authorization.k8s.io/system-webhook.yaml":                                                                          clusterroleRbacAuthorizationK8sIoSystemWebhookYaml,
	"ClusterRole.rbac.authorization.k8s.io/view.yaml":                                                                                    clusterroleRbacAuthorizationK8sIoViewYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/admin-0.yaml":                                                                          clusterrolebindingRbacAuthorizationK8sIoAdmin0Yaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/admin.yaml":                                                                            clusterrolebindingRbacAuthorizationK8sIoAdminYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/asb-access.yaml":                                                                       clusterrolebindingRbacAuthorizationK8sIoAsbAccessYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/asb-auth.yaml":                                                                         clusterrolebindingRbacAuthorizationK8sIoAsbAuthYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/auth-delegator-openshift-template-service-broker.yaml":                                 clusterrolebindingRbacAuthorizationK8sIoAuthDelegatorOpenshiftTemplateServiceBrokerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/azure-cluster-reader.yaml":                                                             clusterrolebindingRbacAuthorizationK8sIoAzureClusterReaderYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/basic-users.yaml":                                                                      clusterrolebindingRbacAuthorizationK8sIoBasicUsersYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/bootstrap-autoapprover.yaml":                                                           clusterrolebindingRbacAuthorizationK8sIoBootstrapAutoapproverYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/cluster-admin.yaml":                                                                    clusterrolebindingRbacAuthorizationK8sIoClusterAdminYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/cluster-admins.yaml":                                                                   clusterrolebindingRbacAuthorizationK8sIoClusterAdminsYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/cluster-reader-0.yaml":                                                                 clusterrolebindingRbacAuthorizationK8sIoClusterReader0Yaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/cluster-reader.yaml":                                                                   clusterrolebindingRbacAuthorizationK8sIoClusterReaderYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/cluster-readers.yaml":                                                                  clusterrolebindingRbacAuthorizationK8sIoClusterReadersYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/cluster-status-binding.yaml":                                                           clusterrolebindingRbacAuthorizationK8sIoClusterStatusBindingYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-cluster-group.yaml":                                                     clusterrolebindingRbacAuthorizationK8sIoCustomerAdminClusterGroupYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-controller-admin.yaml":                                                  clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerAdminYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-controller-project-admin.yaml":                                          clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerProjectAdminYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/customer-admin-controller-sa.yaml":                                                     clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerSaYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/kube-state-metrics-cluster-role-binding.yaml":                                          clusterrolebindingRbacAuthorizationK8sIoKubeStateMetricsClusterRoleBindingYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/router-metrics.yaml":                                                                   clusterrolebindingRbacAuthorizationK8sIoRouterMetricsYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/router-router-role.yaml":                                                               clusterrolebindingRbacAuthorizationK8sIoRouterRouterRoleYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/sdn-cluster-reader.yaml":                                                               clusterrolebindingRbacAuthorizationK8sIoSdnClusterReaderYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/sdn-reader.yaml":                                                                       clusterrolebindingRbacAuthorizationK8sIoSdnReaderYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/self-access-reviewers.yaml":                                                            clusterrolebindingRbacAuthorizationK8sIoSelfAccessReviewersYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/self-provisioners.yaml":                                                                clusterrolebindingRbacAuthorizationK8sIoSelfProvisionersYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-controller-binding.yaml":                                               clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerBindingYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-controller-namespace-viewer-binding.yaml":                              clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerNamespaceViewerBindingYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-namespace-viewer-binding.yaml":                                         clusterrolebindingRbacAuthorizationK8sIoServiceCatalogNamespaceViewerBindingYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/service-catalog-sar-creator-binding.yaml":                                              clusterrolebindingRbacAuthorizationK8sIoServiceCatalogSarCreatorBindingYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/servicecatalog-serviceclass-viewer-binding.yaml":                                       clusterrolebindingRbacAuthorizationK8sIoServicecatalogServiceclassViewerBindingYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-auth-delegator-binding.yaml":                                                    clusterrolebindingRbacAuthorizationK8sIoSystemAuthDelegatorBindingYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-aws-cloud-provider.yaml":                                                        clusterrolebindingRbacAuthorizationK8sIoSystemAwsCloudProviderYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-basic-user.yaml":                                                                clusterrolebindingRbacAuthorizationK8sIoSystemBasicUserYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-build-strategy-docker-binding.yaml":                                             clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyDockerBindingYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-build-strategy-jenkinspipeline-binding.yaml":                                    clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineBindingYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-build-strategy-source-binding.yaml":                                             clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategySourceBindingYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-attachdetach-controller.yaml":                                        clusterrolebindingRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-certificate-controller.yaml":                                         clusterrolebindingRbacAuthorizationK8sIoSystemControllerCertificateControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-clusterrole-aggregation-controller.yaml":                             clusterrolebindingRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-cronjob-controller.yaml":                                             clusterrolebindingRbacAuthorizationK8sIoSystemControllerCronjobControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-daemon-set-controller.yaml":                                          clusterrolebindingRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-deployment-controller.yaml":                                          clusterrolebindingRbacAuthorizationK8sIoSystemControllerDeploymentControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-disruption-controller.yaml":                                          clusterrolebindingRbacAuthorizationK8sIoSystemControllerDisruptionControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-endpoint-controller.yaml":                                            clusterrolebindingRbacAuthorizationK8sIoSystemControllerEndpointControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-generic-garbage-collector.yaml":                                      clusterrolebindingRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-horizontal-pod-autoscaler.yaml":                                      clusterrolebindingRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-job-controller.yaml":                                                 clusterrolebindingRbacAuthorizationK8sIoSystemControllerJobControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-namespace-controller.yaml":                                           clusterrolebindingRbacAuthorizationK8sIoSystemControllerNamespaceControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-node-controller.yaml":                                                clusterrolebindingRbacAuthorizationK8sIoSystemControllerNodeControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-persistent-volume-binder.yaml":                                       clusterrolebindingRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-pod-garbage-collector.yaml":                                          clusterrolebindingRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-pv-protection-controller.yaml":                                       clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-pvc-protection-controller.yaml":                                      clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-replicaset-controller.yaml":                                          clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicasetControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-replication-controller.yaml":                                         clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicationControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-resourcequota-controller.yaml":                                       clusterrolebindingRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-route-controller.yaml":                                               clusterrolebindingRbacAuthorizationK8sIoSystemControllerRouteControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-service-account-controller.yaml":                                     clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-service-controller.yaml":                                             clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-statefulset-controller.yaml":                                         clusterrolebindingRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-controller-ttl-controller.yaml":                                                 clusterrolebindingRbacAuthorizationK8sIoSystemControllerTtlControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-deployer.yaml":                                                                  clusterrolebindingRbacAuthorizationK8sIoSystemDeployerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-discovery-binding.yaml":                                                         clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryBindingYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-discovery.yaml":                                                                 clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-image-builder.yaml":                                                             clusterrolebindingRbacAuthorizationK8sIoSystemImageBuilderYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-image-puller.yaml":                                                              clusterrolebindingRbacAuthorizationK8sIoSystemImagePullerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-kube-controller-manager.yaml":                                                   clusterrolebindingRbacAuthorizationK8sIoSystemKubeControllerManagerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-kube-dns.yaml":                                                                  clusterrolebindingRbacAuthorizationK8sIoSystemKubeDnsYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-kube-scheduler.yaml":                                                            clusterrolebindingRbacAuthorizationK8sIoSystemKubeSchedulerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-masters.yaml":                                                                   clusterrolebindingRbacAuthorizationK8sIoSystemMastersYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-node-admins.yaml":                                                               clusterrolebindingRbacAuthorizationK8sIoSystemNodeAdminsYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-node-bootstrapper.yaml":                                                         clusterrolebindingRbacAuthorizationK8sIoSystemNodeBootstrapperYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-node-proxier.yaml":                                                              clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxierYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-node-proxiers.yaml":                                                             clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxiersYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-node.yaml":                                                                      clusterrolebindingRbacAuthorizationK8sIoSystemNodeYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-nodes.yaml":                                                                     clusterrolebindingRbacAuthorizationK8sIoSystemNodesYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-oauth-token-deleters.yaml":                                                      clusterrolebindingRbacAuthorizationK8sIoSystemOauthTokenDeletersYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-build-config-change-controller.yaml":                       clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-build-controller.yaml":                                     clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-cluster-quota-reconciliation-controller.yaml":              clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-default-rolebindings-controller.yaml":                      clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-deployer-controller.yaml":                                  clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-deploymentconfig-controller.yaml":                          clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-horizontal-pod-autoscaler.yaml":                            clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-image-import-controller.yaml":                              clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-image-trigger-controller.yaml":                             clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-ingress-to-route-controller.yaml":                          clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-namespace-security-allocation-controller.yaml":             clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-origin-namespace-controller.yaml":                          clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-pv-recycler-controller.yaml":                               clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-resourcequota-controller.yaml":                             clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-sdn-controller.yaml":                                       clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-service-ingress-ip-controller.yaml":                        clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-service-serving-cert-controller.yaml":                      clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-controller.yaml":                            clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-serviceaccount-pull-secrets-controller.yaml":               clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-controller-admin.yaml":                   clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerAdminYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-controller.yaml":                         clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-finalizer-controller-admin.yaml":         clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerAdminYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-instance-finalizer-controller.yaml":               clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-template-service-broker.yaml":                              clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-openshift-controller-unidling-controller.yaml":                                  clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-registry.yaml":                                                                  clusterrolebindingRbacAuthorizationK8sIoSystemRegistryYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-scope-impersonation.yaml":                                                       clusterrolebindingRbacAuthorizationK8sIoSystemScopeImpersonationYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-sdn-readers.yaml":                                                               clusterrolebindingRbacAuthorizationK8sIoSystemSdnReadersYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-volume-scheduler.yaml":                                                          clusterrolebindingRbacAuthorizationK8sIoSystemVolumeSchedulerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/system-webhooks.yaml":                                                                  clusterrolebindingRbacAuthorizationK8sIoSystemWebhooksYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/templateservicebroker-client.yaml":                                                     clusterrolebindingRbacAuthorizationK8sIoTemplateservicebrokerClientYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/tsb-openshift-template-service-broker.yaml":                                            clusterrolebindingRbacAuthorizationK8sIoTsbOpenshiftTemplateServiceBrokerYaml,
	"ClusterRoleBinding.rbac.authorization.k8s.io/view.yaml":                                                                             clusterrolebindingRbacAuthorizationK8sIoViewYaml,
	"ClusterServiceBroker.servicecatalog.k8s.io/ansible-service-broker.yaml":                                                             clusterservicebrokerServicecatalogK8sIoAnsibleServiceBrokerYaml,
	"ClusterServiceBroker.servicecatalog.k8s.io/template-service-broker.yaml":                                                            clusterservicebrokerServicecatalogK8sIoTemplateServiceBrokerYaml,
	"ConfigMap/kube-service-catalog/cluster-info.yaml":                                                                                   configmapKubeServiceCatalogClusterInfoYaml,
	"ConfigMap/kube-system/extension-apiserver-authentication.yaml":                                                                      configmapKubeSystemExtensionApiserverAuthenticationYaml,
	"ConfigMap/openshift-ansible-service-broker/broker-config.yaml":                                                                      configmapOpenshiftAnsibleServiceBrokerBrokerConfigYaml,
	"ConfigMap/openshift-infra/reconciler-rolebindings.yaml":                                                                             configmapOpenshiftInfraReconcilerRolebindingsYaml,
	"ConfigMap/openshift-metrics/alertmanager.yaml":                                                                                      configmapOpenshiftMetricsAlertmanagerYaml,
	"ConfigMap/openshift-metrics/prometheus.yaml":                                                                                        configmapOpenshiftMetricsPrometheusYaml,
	"ConfigMap/openshift-node/node-config-compute.yaml":                                                                                  configmapOpenshiftNodeNodeConfigComputeYaml,
	"ConfigMap/openshift-node/node-config-infra.yaml":                                                                                    configmapOpenshiftNodeNodeConfigInfraYaml,
	"ConfigMap/openshift-node/node-config-master.yaml":                                                                                   configmapOpenshiftNodeNodeConfigMasterYaml,
	"ConfigMap/openshift-template-service-broker/apiserver-config.yaml":                                                                  configmapOpenshiftTemplateServiceBrokerApiserverConfigYaml,
	"ConfigMap/openshift-web-console/webconsole-config.yaml":                                                                             configmapOpenshiftWebConsoleWebconsoleConfigYaml,
	"CustomResourceDefinition.apiextensions.k8s.io/bundlebindings.automationbroker.io.yaml":                                              customresourcedefinitionApiextensionsK8sIoBundlebindingsAutomationbrokerIoYaml,
	"CustomResourceDefinition.apiextensions.k8s.io/bundleinstances.automationbroker.io.yaml":                                             customresourcedefinitionApiextensionsK8sIoBundleinstancesAutomationbrokerIoYaml,
	"CustomResourceDefinition.apiextensions.k8s.io/bundles.automationbroker.io.yaml":                                                     customresourcedefinitionApiextensionsK8sIoBundlesAutomationbrokerIoYaml,
	"CustomResourceDefinition.apiextensions.k8s.io/etcdbackups.etcd.database.coreos.com.yaml":                                            customresourcedefinitionApiextensionsK8sIoEtcdbackupsEtcdDatabaseCoreosComYaml,
	"DaemonSet.apps/openshift-metrics/prometheus-node-exporter.yaml":                                                                     daemonsetAppsOpenshiftMetricsPrometheusNodeExporterYaml,
	"DaemonSet.apps/openshift-node/sync.yaml":                                                                                            daemonsetAppsOpenshiftNodeSyncYaml,
	"DaemonSet.apps/openshift-sdn/ovs.yaml":                                                                                              daemonsetAppsOpenshiftSdnOvsYaml,
	"DaemonSet.apps/openshift-sdn/sdn.yaml":                                                                                              daemonsetAppsOpenshiftSdnSdnYaml,
	"Deployment.apps/default/docker-registry.yaml":                                                                                       deploymentAppsDefaultDockerRegistryYaml,
	"Deployment.apps/default/registry-console.yaml":                                                                                      deploymentAppsDefaultRegistryConsoleYaml,
	"Deployment.apps/default/router.yaml":                                                                                                deploymentAppsDefaultRouterYaml,
	"Deployment.apps/kube-service-catalog/apiserver.yaml":                                                                                deploymentAppsKubeServiceCatalogApiserverYaml,
	"Deployment.apps/kube-service-catalog/controller-manager.yaml":                                                                       deploymentAppsKubeServiceCatalogControllerManagerYaml,
	"Deployment.apps/openshift-ansible-service-broker/asb.yaml":                                                                          deploymentAppsOpenshiftAnsibleServiceBrokerAsbYaml,
	"Deployment.apps/openshift-etcd/etcd-operator.yaml":                                                                                  deploymentAppsOpenshiftEtcdEtcdOperatorYaml,
	"Deployment.apps/openshift-infra/bootstrap-autoapprover.yaml":                                                                        deploymentAppsOpenshiftInfraBootstrapAutoapproverYaml,
	"Deployment.apps/openshift-infra/customer-admin-controller.yaml":                                                                     deploymentAppsOpenshiftInfraCustomerAdminControllerYaml,
	"Deployment.apps/openshift-metrics/kube-state-metrics.yaml":                                                                          deploymentAppsOpenshiftMetricsKubeStateMetricsYaml,
	"Deployment.apps/openshift-template-service-broker/apiserver.yaml":                                                                   deploymentAppsOpenshiftTemplateServiceBrokerApiserverYaml,
	"Deployment.apps/openshift-web-console/webconsole.yaml":                                                                              deploymentAppsOpenshiftWebConsoleWebconsoleYaml,
	"EtcdBackup.etcd.database.coreos.com/openshift-etcd/etcd-backup.yaml":                                                                etcdbackupEtcdDatabaseCoreosComOpenshiftEtcdEtcdBackupYaml,
	"Group.user.openshift.io/customer-admins.yaml":                                                                                       groupUserOpenshiftIoCustomerAdminsYaml,
	"Group.user.openshift.io/customer-readers.yaml":                                                                                      groupUserOpenshiftIoCustomerReadersYaml,
	"ImageStream.image.openshift.io/openshift/dotnet-runtime.yaml":                                                                       imagestreamImageOpenshiftIoOpenshiftDotnetRuntimeYaml,
	"ImageStream.image.openshift.io/openshift/dotnet.yaml":                                                                               imagestreamImageOpenshiftIoOpenshiftDotnetYaml,
	"ImageStream.image.openshift.io/openshift/httpd.yaml":                                                                                imagestreamImageOpenshiftIoOpenshiftHttpdYaml,
	"ImageStream.image.openshift.io/openshift/jenkins.yaml":                                                                              imagestreamImageOpenshiftIoOpenshiftJenkinsYaml,
	"ImageStream.image.openshift.io/openshift/mariadb.yaml":                                                                              imagestreamImageOpenshiftIoOpenshiftMariadbYaml,
	"ImageStream.image.openshift.io/openshift/mongodb.yaml":                                                                              imagestreamImageOpenshiftIoOpenshiftMongodbYaml,
	"ImageStream.image.openshift.io/openshift/mysql.yaml":                                                                                imagestreamImageOpenshiftIoOpenshiftMysqlYaml,
	"ImageStream.image.openshift.io/openshift/nginx.yaml":                                                                                imagestreamImageOpenshiftIoOpenshiftNginxYaml,
	"ImageStream.image.openshift.io/openshift/nodejs.yaml":                                                                               imagestreamImageOpenshiftIoOpenshiftNodejsYaml,
	"ImageStream.image.openshift.io/openshift/perl.yaml":                                                                                 imagestreamImageOpenshiftIoOpenshiftPerlYaml,
	"ImageStream.image.openshift.io/openshift/php.yaml":                                                                                  imagestreamImageOpenshiftIoOpenshiftPhpYaml,
	"ImageStream.image.openshift.io/openshift/postgresql.yaml":                                                                           imagestreamImageOpenshiftIoOpenshiftPostgresqlYaml,
	"ImageStream.image.openshift.io/openshift/python.yaml":                                                                               imagestreamImageOpenshiftIoOpenshiftPythonYaml,
	"ImageStream.image.openshift.io/openshift/redis.yaml":                                                                                imagestreamImageOpenshiftIoOpenshiftRedisYaml,
	"ImageStream.image.openshift.io/openshift/ruby.yaml":                                                                                 imagestreamImageOpenshiftIoOpenshiftRubyYaml,
	"ImageStream.image.openshift.io/openshift/wildfly.yaml":                                                                              imagestreamImageOpenshiftIoOpenshiftWildflyYaml,
	"Namespace/default.yaml":                                                                                                             namespaceDefaultYaml,
	"Namespace/kube-public.yaml":                                                                                                         namespaceKubePublicYaml,
	"Namespace/kube-service-catalog.yaml":                                                                                                namespaceKubeServiceCatalogYaml,
	"Namespace/kube-system.yaml":                                                                                                         namespaceKubeSystemYaml,
	"Namespace/openshift-ansible-service-broker.yaml":                                                                                    namespaceOpenshiftAnsibleServiceBrokerYaml,
	"Namespace/openshift-azure.yaml":                                                                                                     namespaceOpenshiftAzureYaml,
	"Namespace/openshift-etcd.yaml":                                                                                                      namespaceOpenshiftEtcdYaml,
	"Namespace/openshift-infra.yaml":                                                                                                     namespaceOpenshiftInfraYaml,
	"Namespace/openshift-metrics.yaml":                                                                                                   namespaceOpenshiftMetricsYaml,
	"Namespace/openshift-node.yaml":                                                                                                      namespaceOpenshiftNodeYaml,
	"Namespace/openshift-sdn.yaml":                                                                                                       namespaceOpenshiftSdnYaml,
	"Namespace/openshift-template-service-broker.yaml":                                                                                   namespaceOpenshiftTemplateServiceBrokerYaml,
	"Namespace/openshift-web-console.yaml":                                                                                               namespaceOpenshiftWebConsoleYaml,
	"Namespace/openshift.yaml":                                                                                                           namespaceOpenshiftYaml,
	"OAuthClient.oauth.openshift.io/cockpit-oauth-client.yaml":                                                                           oauthclientOauthOpenshiftIoCockpitOauthClientYaml,
	"Role.rbac.authorization.k8s.io/kube-public/system-controller-bootstrap-signer.yaml":                                                 roleRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYaml,
	"Role.rbac.authorization.k8s.io/kube-service-catalog/cluster-info-configmap.yaml":                                                    roleRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapYaml,
	"Role.rbac.authorization.k8s.io/kube-service-catalog/configmap-accessor.yaml":                                                        roleRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorYaml,
	"Role.rbac.authorization.k8s.io/kube-system/extension-apiserver-authentication-reader.yaml":                                          roleRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderYaml,
	"Role.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-controller-manager.yaml":                                     roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYaml,
	"Role.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-scheduler.yaml":                                              roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYaml,
	"Role.rbac.authorization.k8s.io/kube-system/system-controller-bootstrap-signer.yaml":                                                 roleRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYaml,
	"Role.rbac.authorization.k8s.io/kube-system/system-controller-cloud-provider.yaml":                                                   roleRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYaml,
	"Role.rbac.authorization.k8s.io/kube-system/system-controller-token-cleaner.yaml":                                                    roleRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYaml,
	"Role.rbac.authorization.k8s.io/openshift/shared-resource-viewer.yaml":                                                               roleRbacAuthorizationK8sIoOpenshiftSharedResourceViewerYaml,
	"Role.rbac.authorization.k8s.io/openshift-etcd/etcd-operator.yaml":                                                                   roleRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYaml,
	"Role.rbac.authorization.k8s.io/openshift-metrics/kube-state-metrics-resizer.yaml":                                                   roleRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsResizerYaml,
	"Role.rbac.authorization.k8s.io/openshift-node/system-node-config-reader.yaml":                                                       roleRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYaml,
	"Role.rbac.authorization.k8s.io/openshift-template-service-broker/templateservicebroker-auth-reader.yaml":                            roleRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYaml,
	"RoleBinding.rbac.authorization.k8s.io/kube-public/system-controller-bootstrap-signer.yaml":                                          rolebindingRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYaml,
	"RoleBinding.rbac.authorization.k8s.io/kube-service-catalog/cluster-info-configmap-binding.yaml":                                     rolebindingRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapBindingYaml,
	"RoleBinding.rbac.authorization.k8s.io/kube-service-catalog/configmap-accessor-binding.yaml":                                         rolebindingRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorBindingYaml,
	"RoleBinding.rbac.authorization.k8s.io/kube-system/extension-apiserver-authentication-reader-binding.yaml":                           rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderBindingYaml,
	"RoleBinding.rbac.authorization.k8s.io/kube-system/extension-apiserver-authentication-reader-openshift-template-service-broker.yaml": rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderOpenshiftTemplateServiceBrokerYaml,
	"RoleBinding.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-controller-manager.yaml":                              rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYaml,
	"RoleBinding.rbac.authorization.k8s.io/kube-system/system--leader-locking-kube-scheduler.yaml":                                       rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYaml,
	"RoleBinding.rbac.authorization.k8s.io/kube-system/system-controller-bootstrap-signer.yaml":                                          rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYaml,
	"RoleBinding.rbac.authorization.k8s.io/kube-system/system-controller-cloud-provider.yaml":                                            rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYaml,
	"RoleBinding.rbac.authorization.k8s.io/kube-system/system-controller-token-cleaner.yaml":                                             rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYaml,
	"RoleBinding.rbac.authorization.k8s.io/openshift/shared-resource-viewers.yaml":                                                       rolebindingRbacAuthorizationK8sIoOpenshiftSharedResourceViewersYaml,
	"RoleBinding.rbac.authorization.k8s.io/openshift-etcd/etcd-operator.yaml":                                                            rolebindingRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYaml,
	"RoleBinding.rbac.authorization.k8s.io/openshift-metrics/kube-state-metrics.yaml":                                                    rolebindingRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsYaml,
	"RoleBinding.rbac.authorization.k8s.io/openshift-node/sync-node-config-reader-binding.yaml":                                          rolebindingRbacAuthorizationK8sIoOpenshiftNodeSyncNodeConfigReaderBindingYaml,
	"RoleBinding.rbac.authorization.k8s.io/openshift-node/system-node-config-reader.yaml":                                                rolebindingRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYaml,
	"RoleBinding.rbac.authorization.k8s.io/openshift-template-service-broker/templateservicebroker-auth-reader.yaml":                     rolebindingRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYaml,
	"Route.route.openshift.io/default/docker-registry.yaml":                                                                              routeRouteOpenshiftIoDefaultDockerRegistryYaml,
	"Route.route.openshift.io/default/registry-console.yaml":                                                                             routeRouteOpenshiftIoDefaultRegistryConsoleYaml,
	"Route.route.openshift.io/kube-service-catalog/apiserver.yaml":                                                                       routeRouteOpenshiftIoKubeServiceCatalogApiserverYaml,
	"Route.route.openshift.io/openshift-ansible-service-broker/asb-1338.yaml":                                                            routeRouteOpenshiftIoOpenshiftAnsibleServiceBrokerAsb1338Yaml,
	"Route.route.openshift.io/openshift-metrics/alertmanager.yaml":                                                                       routeRouteOpenshiftIoOpenshiftMetricsAlertmanagerYaml,
	"Route.route.openshift.io/openshift-metrics/alerts.yaml":                                                                             routeRouteOpenshiftIoOpenshiftMetricsAlertsYaml,
	"Route.route.openshift.io/openshift-metrics/prometheus.yaml":                                                                         routeRouteOpenshiftIoOpenshiftMetricsPrometheusYaml,
	"Secret/default/etc-origin-cloudprovider.yaml":                                                                                       secretDefaultEtcOriginCloudproviderYaml,
	"Secret/default/registry-certificates.yaml":                                                                                          secretDefaultRegistryCertificatesYaml,
	"Secret/default/registry-config.yaml":                                                                                                secretDefaultRegistryConfigYaml,
	"Secret/default/router-certs.yaml":                                                                                                   secretDefaultRouterCertsYaml,
	"Secret/kube-service-catalog/apiserver-ssl.yaml":                                                                                     secretKubeServiceCatalogApiserverSslYaml,
	"Secret/openshift-ansible-service-broker/asb-client.yaml":                                                                            secretOpenshiftAnsibleServiceBrokerAsbClientYaml,
	"Secret/openshift-etcd/etcd-backup-abs-credentials.yaml":                                                                             secretOpenshiftEtcdEtcdBackupAbsCredentialsYaml,
	"Secret/openshift-etcd/etcd-client-tls.yaml":                                                                                         secretOpenshiftEtcdEtcdClientTlsYaml,
	"Secret/openshift-metrics/alertmanager-proxy.yaml":                                                                                   secretOpenshiftMetricsAlertmanagerProxyYaml,
	"Secret/openshift-metrics/alerts-proxy.yaml":                                                                                         secretOpenshiftMetricsAlertsProxyYaml,
	"Secret/openshift-metrics/prometheus-proxy.yaml":                                                                                     secretOpenshiftMetricsPrometheusProxyYaml,
	"Secret/openshift-template-service-broker/templateservicebroker-client.yaml":                                                         secretOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYaml,
	"SecurityContextConstraints.security.openshift.io/anyuid.yaml":                                                                       securitycontextconstraintsSecurityOpenshiftIoAnyuidYaml,
	"SecurityContextConstraints.security.openshift.io/hostaccess.yaml":                                                                   securitycontextconstraintsSecurityOpenshiftIoHostaccessYaml,
	"SecurityContextConstraints.security.openshift.io/hostmount-anyuid.yaml":                                                             securitycontextconstraintsSecurityOpenshiftIoHostmountAnyuidYaml,
	"SecurityContextConstraints.security.openshift.io/hostnetwork.yaml":                                                                  securitycontextconstraintsSecurityOpenshiftIoHostnetworkYaml,
	"SecurityContextConstraints.security.openshift.io/nonroot.yaml":                                                                      securitycontextconstraintsSecurityOpenshiftIoNonrootYaml,
	"SecurityContextConstraints.security.openshift.io/privileged.yaml":                                                                   securitycontextconstraintsSecurityOpenshiftIoPrivilegedYaml,
	"SecurityContextConstraints.security.openshift.io/restricted.yaml":                                                                   securitycontextconstraintsSecurityOpenshiftIoRestrictedYaml,
	"Service/default/docker-registry.yaml":                                                                                               serviceDefaultDockerRegistryYaml,
	"Service/default/registry-console.yaml":                                                                                              serviceDefaultRegistryConsoleYaml,
	"Service/default/router-stats.yaml":                                                                                                  serviceDefaultRouterStatsYaml,
	"Service/default/router.yaml":                                                                                                        serviceDefaultRouterYaml,
	"Service/kube-service-catalog/apiserver.yaml":                                                                                        serviceKubeServiceCatalogApiserverYaml,
	"Service/kube-service-catalog/controller-manager.yaml":                                                                               serviceKubeServiceCatalogControllerManagerYaml,
	"Service/openshift-ansible-service-broker/asb.yaml":                                                                                  serviceOpenshiftAnsibleServiceBrokerAsbYaml,
	"Service/openshift-metrics/alertmanager.yaml":                                                                                        serviceOpenshiftMetricsAlertmanagerYaml,
	"Service/openshift-metrics/alerts.yaml":                                                                                              serviceOpenshiftMetricsAlertsYaml,
	"Service/openshift-metrics/kube-state-metrics.yaml":                                                                                  serviceOpenshiftMetricsKubeStateMetricsYaml,
	"Service/openshift-metrics/prometheus-node-exporter.yaml":                                                                            serviceOpenshiftMetricsPrometheusNodeExporterYaml,
	"Service/openshift-metrics/prometheus.yaml":                                                                                          serviceOpenshiftMetricsPrometheusYaml,
	"Service/openshift-template-service-broker/apiserver.yaml":                                                                           serviceOpenshiftTemplateServiceBrokerApiserverYaml,
	"Service/openshift-web-console/webconsole.yaml":                                                                                      serviceOpenshiftWebConsoleWebconsoleYaml,
	"ServiceAccount/default/default.yaml":                                                                                                serviceaccountDefaultDefaultYaml,
	"ServiceAccount/default/registry.yaml":                                                                                               serviceaccountDefaultRegistryYaml,
	"ServiceAccount/default/router.yaml":                                                                                                 serviceaccountDefaultRouterYaml,
	"ServiceAccount/kube-service-catalog/service-catalog-apiserver.yaml":                                                                 serviceaccountKubeServiceCatalogServiceCatalogApiserverYaml,
	"ServiceAccount/kube-service-catalog/service-catalog-controller.yaml":                                                                serviceaccountKubeServiceCatalogServiceCatalogControllerYaml,
	"ServiceAccount/kube-system/attachdetach-controller.yaml":                                                                            serviceaccountKubeSystemAttachdetachControllerYaml,
	"ServiceAccount/kube-system/certificate-controller.yaml":                                                                             serviceaccountKubeSystemCertificateControllerYaml,
	"ServiceAccount/kube-system/clusterrole-aggregation-controller.yaml":                                                                 serviceaccountKubeSystemClusterroleAggregationControllerYaml,
	"ServiceAccount/kube-system/cronjob-controller.yaml":                                                                                 serviceaccountKubeSystemCronjobControllerYaml,
	"ServiceAccount/kube-system/daemon-set-controller.yaml":                                                                              serviceaccountKubeSystemDaemonSetControllerYaml,
	"ServiceAccount/kube-system/deployment-controller.yaml":                                                                              serviceaccountKubeSystemDeploymentControllerYaml,
	"ServiceAccount/kube-system/disruption-controller.yaml":                                                                              serviceaccountKubeSystemDisruptionControllerYaml,
	"ServiceAccount/kube-system/endpoint-controller.yaml":                                                                                serviceaccountKubeSystemEndpointControllerYaml,
	"ServiceAccount/kube-system/generic-garbage-collector.yaml":                                                                          serviceaccountKubeSystemGenericGarbageCollectorYaml,
	"ServiceAccount/kube-system/job-controller.yaml":                                                                                     serviceaccountKubeSystemJobControllerYaml,
	"ServiceAccount/kube-system/namespace-controller.yaml":                                                                               serviceaccountKubeSystemNamespaceControllerYaml,
	"ServiceAccount/kube-system/node-controller.yaml":                                                                                    serviceaccountKubeSystemNodeControllerYaml,
	"ServiceAccount/kube-system/persistent-volume-binder.yaml":                                                                           serviceaccountKubeSystemPersistentVolumeBinderYaml,
	"ServiceAccount/kube-system/pod-garbage-collector.yaml":                                                                              serviceaccountKubeSystemPodGarbageCollectorYaml,
	"ServiceAccount/kube-system/pv-protection-controller.yaml":                                                                           serviceaccountKubeSystemPvProtectionControllerYaml,
	"ServiceAccount/kube-system/pvc-protection-controller.yaml":                                                                          serviceaccountKubeSystemPvcProtectionControllerYaml,
	"ServiceAccount/kube-system/replicaset-controller.yaml":                                                                              serviceaccountKubeSystemReplicasetControllerYaml,
	"ServiceAccount/kube-system/replication-controller.yaml":                                                                             serviceaccountKubeSystemReplicationControllerYaml,
	"ServiceAccount/kube-system/resourcequota-controller.yaml":                                                                           serviceaccountKubeSystemResourcequotaControllerYaml,
	"ServiceAccount/kube-system/service-account-controller.yaml":                                                                         serviceaccountKubeSystemServiceAccountControllerYaml,
	"ServiceAccount/kube-system/service-controller.yaml":                                                                                 serviceaccountKubeSystemServiceControllerYaml,
	"ServiceAccount/kube-system/statefulset-controller.yaml":                                                                             serviceaccountKubeSystemStatefulsetControllerYaml,
	"ServiceAccount/openshift-ansible-service-broker/asb-client.yaml":                                                                    serviceaccountOpenshiftAnsibleServiceBrokerAsbClientYaml,
	"ServiceAccount/openshift-ansible-service-broker/asb.yaml":                                                                           serviceaccountOpenshiftAnsibleServiceBrokerAsbYaml,
	"ServiceAccount/openshift-azure/azure-cluster-reader.yaml":                                                                           serviceaccountOpenshiftAzureAzureClusterReaderYaml,
	"ServiceAccount/openshift-etcd/etcd-operator.yaml":                                                                                   serviceaccountOpenshiftEtcdEtcdOperatorYaml,
	"ServiceAccount/openshift-infra/bootstrap-autoapprover.yaml":                                                                         serviceaccountOpenshiftInfraBootstrapAutoapproverYaml,
	"ServiceAccount/openshift-infra/build-config-change-controller.yaml":                                                                 serviceaccountOpenshiftInfraBuildConfigChangeControllerYaml,
	"ServiceAccount/openshift-infra/build-controller.yaml":                                                                               serviceaccountOpenshiftInfraBuildControllerYaml,
	"ServiceAccount/openshift-infra/cluster-quota-reconciliation-controller.yaml":                                                        serviceaccountOpenshiftInfraClusterQuotaReconciliationControllerYaml,
	"ServiceAccount/openshift-infra/customer-admin-controller.yaml":                                                                      serviceaccountOpenshiftInfraCustomerAdminControllerYaml,
	"ServiceAccount/openshift-infra/default-rolebindings-controller.yaml":                                                                serviceaccountOpenshiftInfraDefaultRolebindingsControllerYaml,
	"ServiceAccount/openshift-infra/deployer-controller.yaml":                                                                            serviceaccountOpenshiftInfraDeployerControllerYaml,
	"ServiceAccount/openshift-infra/deploymentconfig-controller.yaml":                                                                    serviceaccountOpenshiftInfraDeploymentconfigControllerYaml,
	"ServiceAccount/openshift-infra/horizontal-pod-autoscaler.yaml":                                                                      serviceaccountOpenshiftInfraHorizontalPodAutoscalerYaml,
	"ServiceAccount/openshift-infra/image-import-controller.yaml":                                                                        serviceaccountOpenshiftInfraImageImportControllerYaml,
	"ServiceAccount/openshift-infra/image-trigger-controller.yaml":                                                                       serviceaccountOpenshiftInfraImageTriggerControllerYaml,
	"ServiceAccount/openshift-infra/ingress-to-route-controller.yaml":                                                                    serviceaccountOpenshiftInfraIngressToRouteControllerYaml,
	"ServiceAccount/openshift-infra/namespace-security-allocation-controller.yaml":                                                       serviceaccountOpenshiftInfraNamespaceSecurityAllocationControllerYaml,
	"ServiceAccount/openshift-infra/node-bootstrapper.yaml":                                                                              serviceaccountOpenshiftInfraNodeBootstrapperYaml,
	"ServiceAccount/openshift-infra/origin-namespace-controller.yaml":                                                                    serviceaccountOpenshiftInfraOriginNamespaceControllerYaml,
	"ServiceAccount/openshift-infra/pv-recycler-controller.yaml":                                                                         serviceaccountOpenshiftInfraPvRecyclerControllerYaml,
	"ServiceAccount/openshift-infra/resourcequota-controller.yaml":                                                                       serviceaccountOpenshiftInfraResourcequotaControllerYaml,
	"ServiceAccount/openshift-infra/sdn-controller.yaml":                                                                                 serviceaccountOpenshiftInfraSdnControllerYaml,
	"ServiceAccount/openshift-infra/service-serving-cert-controller.yaml":                                                                serviceaccountOpenshiftInfraServiceServingCertControllerYaml,
	"ServiceAccount/openshift-infra/serviceaccount-controller.yaml":                                                                      serviceaccountOpenshiftInfraServiceaccountControllerYaml,
	"ServiceAccount/openshift-infra/serviceaccount-pull-secrets-controller.yaml":                                                         serviceaccountOpenshiftInfraServiceaccountPullSecretsControllerYaml,
	"ServiceAccount/openshift-infra/template-instance-controller.yaml":                                                                   serviceaccountOpenshiftInfraTemplateInstanceControllerYaml,
	"ServiceAccount/openshift-infra/template-instance-finalizer-controller.yaml":                                                         serviceaccountOpenshiftInfraTemplateInstanceFinalizerControllerYaml,
	"ServiceAccount/openshift-infra/unidling-controller.yaml":                                                                            serviceaccountOpenshiftInfraUnidlingControllerYaml,
	"ServiceAccount/openshift-metrics/kube-state-metrics.yaml":                                                                           serviceaccountOpenshiftMetricsKubeStateMetricsYaml,
	"ServiceAccount/openshift-metrics/prometheus-node-exporter.yaml":                                                                     serviceaccountOpenshiftMetricsPrometheusNodeExporterYaml,
	"ServiceAccount/openshift-metrics/prometheus-reader.yaml":                                                                            serviceaccountOpenshiftMetricsPrometheusReaderYaml,
	"ServiceAccount/openshift-metrics/prometheus.yaml":                                                                                   serviceaccountOpenshiftMetricsPrometheusYaml,
	"ServiceAccount/openshift-node/sync.yaml":                                                                                            serviceaccountOpenshiftNodeSyncYaml,
	"ServiceAccount/openshift-sdn/sdn.yaml":                                                                                              serviceaccountOpenshiftSdnSdnYaml,
	"ServiceAccount/openshift-template-service-broker/apiserver.yaml":                                                                    serviceaccountOpenshiftTemplateServiceBrokerApiserverYaml,
	"ServiceAccount/openshift-template-service-broker/templateservicebroker-client.yaml":                                                 serviceaccountOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYaml,
	"ServiceAccount/openshift-web-console/webconsole.yaml":                                                                               serviceaccountOpenshiftWebConsoleWebconsoleYaml,
	"StatefulSet.apps/openshift-metrics/prometheus.yaml":                                                                                 statefulsetAppsOpenshiftMetricsPrometheusYaml,
	"StorageClass.storage.k8s.io/azure.yaml":                                                                                             storageclassStorageK8sIoAzureYaml,
	"Template.template.openshift.io/openshift/3scale-gateway.yaml":                                                                       templateTemplateOpenshiftIoOpenshift3scaleGatewayYaml,
	"Template.template.openshift.io/openshift/amp-apicast-wildcard-router.yaml":                                                          templateTemplateOpenshiftIoOpenshiftAmpApicastWildcardRouterYaml,
	"Template.template.openshift.io/openshift/amp-pvc.yaml":                                                                              templateTemplateOpenshiftIoOpenshiftAmpPvcYaml,
	"Template.template.openshift.io/openshift/cakephp-mysql-example.yaml":                                                                templateTemplateOpenshiftIoOpenshiftCakephpMysqlExampleYaml,
	"Template.template.openshift.io/openshift/cakephp-mysql-persistent.yaml":                                                             templateTemplateOpenshiftIoOpenshiftCakephpMysqlPersistentYaml,
	"Template.template.openshift.io/openshift/dancer-mysql-example.yaml":                                                                 templateTemplateOpenshiftIoOpenshiftDancerMysqlExampleYaml,
	"Template.template.openshift.io/openshift/dancer-mysql-persistent.yaml":                                                              templateTemplateOpenshiftIoOpenshiftDancerMysqlPersistentYaml,
	"Template.template.openshift.io/openshift/django-psql-example.yaml":                                                                  templateTemplateOpenshiftIoOpenshiftDjangoPsqlExampleYaml,
	"Template.template.openshift.io/openshift/django-psql-persistent.yaml":                                                               templateTemplateOpenshiftIoOpenshiftDjangoPsqlPersistentYaml,
	"Template.template.openshift.io/openshift/dotnet-example.yaml":                                                                       templateTemplateOpenshiftIoOpenshiftDotnetExampleYaml,
	"Template.template.openshift.io/openshift/dotnet-pgsql-persistent.yaml":                                                              templateTemplateOpenshiftIoOpenshiftDotnetPgsqlPersistentYaml,
	"Template.template.openshift.io/openshift/dotnet-runtime-example.yaml":                                                               templateTemplateOpenshiftIoOpenshiftDotnetRuntimeExampleYaml,
	"Template.template.openshift.io/openshift/httpd-example.yaml":                                                                        templateTemplateOpenshiftIoOpenshiftHttpdExampleYaml,
	"Template.template.openshift.io/openshift/jenkins-ephemeral.yaml":                                                                    templateTemplateOpenshiftIoOpenshiftJenkinsEphemeralYaml,
	"Template.template.openshift.io/openshift/jenkins-persistent.yaml":                                                                   templateTemplateOpenshiftIoOpenshiftJenkinsPersistentYaml,
	"Template.template.openshift.io/openshift/mariadb-ephemeral.yaml":                                                                    templateTemplateOpenshiftIoOpenshiftMariadbEphemeralYaml,
	"Template.template.openshift.io/openshift/mariadb-persistent.yaml":                                                                   templateTemplateOpenshiftIoOpenshiftMariadbPersistentYaml,
	"Template.template.openshift.io/openshift/mongodb-ephemeral.yaml":                                                                    templateTemplateOpenshiftIoOpenshiftMongodbEphemeralYaml,
	"Template.template.openshift.io/openshift/mongodb-persistent.yaml":                                                                   templateTemplateOpenshiftIoOpenshiftMongodbPersistentYaml,
	"Template.template.openshift.io/openshift/mysql-ephemeral.yaml":                                                                      templateTemplateOpenshiftIoOpenshiftMysqlEphemeralYaml,
	"Template.template.openshift.io/openshift/mysql-persistent.yaml":                                                                     templateTemplateOpenshiftIoOpenshiftMysqlPersistentYaml,
	"Template.template.openshift.io/openshift/nginx-example.yaml":                                                                        templateTemplateOpenshiftIoOpenshiftNginxExampleYaml,
	"Template.template.openshift.io/openshift/nodejs-mongo-persistent.yaml":                                                              templateTemplateOpenshiftIoOpenshiftNodejsMongoPersistentYaml,
	"Template.template.openshift.io/openshift/nodejs-mongodb-example.yaml":                                                               templateTemplateOpenshiftIoOpenshiftNodejsMongodbExampleYaml,
	"Template.template.openshift.io/openshift/postgresql-ephemeral.yaml":                                                                 templateTemplateOpenshiftIoOpenshiftPostgresqlEphemeralYaml,
	"Template.template.openshift.io/openshift/postgresql-persistent.yaml":                                                                templateTemplateOpenshiftIoOpenshiftPostgresqlPersistentYaml,
	"Template.template.openshift.io/openshift/rails-pgsql-persistent.yaml":                                                               templateTemplateOpenshiftIoOpenshiftRailsPgsqlPersistentYaml,
	"Template.template.openshift.io/openshift/rails-postgresql-example.yaml":                                                             templateTemplateOpenshiftIoOpenshiftRailsPostgresqlExampleYaml,
	"Template.template.openshift.io/openshift/redis-ephemeral.yaml":                                                                      templateTemplateOpenshiftIoOpenshiftRedisEphemeralYaml,
	"Template.template.openshift.io/openshift/redis-persistent.yaml":                                                                     templateTemplateOpenshiftIoOpenshiftRedisPersistentYaml,
	"Template.template.openshift.io/openshift/system.yaml":                                                                               templateTemplateOpenshiftIoOpenshiftSystemYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"APIService.apiregistration.k8s.io": {nil, map[string]*bintree{
		"v1beta1.servicecatalog.k8s.io.yaml": {apiserviceApiregistrationK8sIoV1beta1ServicecatalogK8sIoYaml, map[string]*bintree{}},
	}},
	"ClusterRole.rbac.authorization.k8s.io": {nil, map[string]*bintree{
		"admin.yaml":                                                                {clusterroleRbacAuthorizationK8sIoAdminYaml, map[string]*bintree{}},
		"asb-access.yaml":                                                           {clusterroleRbacAuthorizationK8sIoAsbAccessYaml, map[string]*bintree{}},
		"asb-auth.yaml":                                                             {clusterroleRbacAuthorizationK8sIoAsbAuthYaml, map[string]*bintree{}},
		"basic-user.yaml":                                                           {clusterroleRbacAuthorizationK8sIoBasicUserYaml, map[string]*bintree{}},
		"cluster-admin.yaml":                                                        {clusterroleRbacAuthorizationK8sIoClusterAdminYaml, map[string]*bintree{}},
		"cluster-debugger.yaml":                                                     {clusterroleRbacAuthorizationK8sIoClusterDebuggerYaml, map[string]*bintree{}},
		"cluster-reader.yaml":                                                       {clusterroleRbacAuthorizationK8sIoClusterReaderYaml, map[string]*bintree{}},
		"cluster-status.yaml":                                                       {clusterroleRbacAuthorizationK8sIoClusterStatusYaml, map[string]*bintree{}},
		"customer-admin-cluster.yaml":                                               {clusterroleRbacAuthorizationK8sIoCustomerAdminClusterYaml, map[string]*bintree{}},
		"customer-admin-controller.yaml":                                            {clusterroleRbacAuthorizationK8sIoCustomerAdminControllerYaml, map[string]*bintree{}},
		"customer-admin-project.yaml":                                               {clusterroleRbacAuthorizationK8sIoCustomerAdminProjectYaml, map[string]*bintree{}},
		"edit.yaml":                                                                 {clusterroleRbacAuthorizationK8sIoEditYaml, map[string]*bintree{}},
		"kube-state-metrics.yaml":                                                   {clusterroleRbacAuthorizationK8sIoKubeStateMetricsYaml, map[string]*bintree{}},
		"namespace-viewer.yaml":                                                     {clusterroleRbacAuthorizationK8sIoNamespaceViewerYaml, map[string]*bintree{}},
		"registry-admin.yaml":                                                       {clusterroleRbacAuthorizationK8sIoRegistryAdminYaml, map[string]*bintree{}},
		"registry-editor.yaml":                                                      {clusterroleRbacAuthorizationK8sIoRegistryEditorYaml, map[string]*bintree{}},
		"registry-viewer.yaml":                                                      {clusterroleRbacAuthorizationK8sIoRegistryViewerYaml, map[string]*bintree{}},
		"router-metrics.yaml":                                                       {clusterroleRbacAuthorizationK8sIoRouterMetricsYaml, map[string]*bintree{}},
		"sar-creator.yaml":                                                          {clusterroleRbacAuthorizationK8sIoSarCreatorYaml, map[string]*bintree{}},
		"self-access-reviewer.yaml":                                                 {clusterroleRbacAuthorizationK8sIoSelfAccessReviewerYaml, map[string]*bintree{}},
		"self-provisioner.yaml":                                                     {clusterroleRbacAuthorizationK8sIoSelfProvisionerYaml, map[string]*bintree{}},
		"service-catalog-controller.yaml":                                           {clusterroleRbacAuthorizationK8sIoServiceCatalogControllerYaml, map[string]*bintree{}},
		"servicecatalog-serviceclass-viewer.yaml":                                   {clusterroleRbacAuthorizationK8sIoServicecatalogServiceclassViewerYaml, map[string]*bintree{}},
		"storage-admin.yaml":                                                        {clusterroleRbacAuthorizationK8sIoStorageAdminYaml, map[string]*bintree{}},
		"sudoer.yaml":                                                               {clusterroleRbacAuthorizationK8sIoSudoerYaml, map[string]*bintree{}},
		"system-aggregate-to-admin.yaml":                                            {clusterroleRbacAuthorizationK8sIoSystemAggregateToAdminYaml, map[string]*bintree{}},
		"system-aggregate-to-edit.yaml":                                             {clusterroleRbacAuthorizationK8sIoSystemAggregateToEditYaml, map[string]*bintree{}},
		"system-aggregate-to-view.yaml":                                             {clusterroleRbacAuthorizationK8sIoSystemAggregateToViewYaml, map[string]*bintree{}},
		"system-auth-delegator.yaml":                                                {clusterroleRbacAuthorizationK8sIoSystemAuthDelegatorYaml, map[string]*bintree{}},
		"system-aws-cloud-provider.yaml":                                            {clusterroleRbacAuthorizationK8sIoSystemAwsCloudProviderYaml, map[string]*bintree{}},
		"system-basic-user.yaml":                                                    {clusterroleRbacAuthorizationK8sIoSystemBasicUserYaml, map[string]*bintree{}},
		"system-build-controller.yaml":                                              {clusterroleRbacAuthorizationK8sIoSystemBuildControllerYaml, map[string]*bintree{}},
		"system-build-strategy-custom.yaml":                                         {clusterroleRbacAuthorizationK8sIoSystemBuildStrategyCustomYaml, map[string]*bintree{}},
		"system-build-strategy-docker.yaml":                                         {clusterroleRbacAuthorizationK8sIoSystemBuildStrategyDockerYaml, map[string]*bintree{}},
		"system-build-strategy-jenkinspipeline.yaml":                                {clusterroleRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineYaml, map[string]*bintree{}},
		"system-build-strategy-source.yaml":                                         {clusterroleRbacAuthorizationK8sIoSystemBuildStrategySourceYaml, map[string]*bintree{}},
		"system-certificate-signing-controller.yaml":                                {clusterroleRbacAuthorizationK8sIoSystemCertificateSigningControllerYaml, map[string]*bintree{}},
		"system-certificates.k8s.io-certificatesigningrequests-nodeclient.yaml":     {clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsNodeclientYaml, map[string]*bintree{}},
		"system-certificates.k8s.io-certificatesigningrequests-selfnodeclient.yaml": {clusterroleRbacAuthorizationK8sIoSystemCertificatesK8sIoCertificatesigningrequestsSelfnodeclientYaml, map[string]*bintree{}},
		"system-controller-attachdetach-controller.yaml":                            {clusterroleRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYaml, map[string]*bintree{}},
		"system-controller-certificate-controller.yaml":                             {clusterroleRbacAuthorizationK8sIoSystemControllerCertificateControllerYaml, map[string]*bintree{}},
		"system-controller-clusterrole-aggregation-controller.yaml":                 {clusterroleRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYaml, map[string]*bintree{}},
		"system-controller-cronjob-controller.yaml":                                 {clusterroleRbacAuthorizationK8sIoSystemControllerCronjobControllerYaml, map[string]*bintree{}},
		"system-controller-daemon-set-controller.yaml":                              {clusterroleRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYaml, map[string]*bintree{}},
		"system-controller-deployment-controller.yaml":                              {clusterroleRbacAuthorizationK8sIoSystemControllerDeploymentControllerYaml, map[string]*bintree{}},
		"system-controller-disruption-controller.yaml":                              {clusterroleRbacAuthorizationK8sIoSystemControllerDisruptionControllerYaml, map[string]*bintree{}},
		"system-controller-endpoint-controller.yaml":                                {clusterroleRbacAuthorizationK8sIoSystemControllerEndpointControllerYaml, map[string]*bintree{}},
		"system-controller-generic-garbage-collector.yaml":                          {clusterroleRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYaml, map[string]*bintree{}},
		"system-controller-horizontal-pod-autoscaler.yaml":                          {clusterroleRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYaml, map[string]*bintree{}},
		"system-controller-job-controller.yaml":                                     {clusterroleRbacAuthorizationK8sIoSystemControllerJobControllerYaml, map[string]*bintree{}},
		"system-controller-namespace-controller.yaml":                               {clusterroleRbacAuthorizationK8sIoSystemControllerNamespaceControllerYaml, map[string]*bintree{}},
		"system-controller-node-controller.yaml":                                    {clusterroleRbacAuthorizationK8sIoSystemControllerNodeControllerYaml, map[string]*bintree{}},
		"system-controller-persistent-volume-binder.yaml":                           {clusterroleRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYaml, map[string]*bintree{}},
		"system-controller-pod-garbage-collector.yaml":                              {clusterroleRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYaml, map[string]*bintree{}},
		"system-controller-pv-protection-controller.yaml":                           {clusterroleRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYaml, map[string]*bintree{}},
		"system-controller-pvc-protection-controller.yaml":                          {clusterroleRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYaml, map[string]*bintree{}},
		"system-controller-replicaset-controller.yaml":                              {clusterroleRbacAuthorizationK8sIoSystemControllerReplicasetControllerYaml, map[string]*bintree{}},
		"system-controller-replication-controller.yaml":                             {clusterroleRbacAuthorizationK8sIoSystemControllerReplicationControllerYaml, map[string]*bintree{}},
		"system-controller-resourcequota-controller.yaml":                           {clusterroleRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYaml, map[string]*bintree{}},
		"system-controller-route-controller.yaml":                                   {clusterroleRbacAuthorizationK8sIoSystemControllerRouteControllerYaml, map[string]*bintree{}},
		"system-controller-service-account-controller.yaml":                         {clusterroleRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYaml, map[string]*bintree{}},
		"system-controller-service-controller.yaml":                                 {clusterroleRbacAuthorizationK8sIoSystemControllerServiceControllerYaml, map[string]*bintree{}},
		"system-controller-statefulset-controller.yaml":                             {clusterroleRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYaml, map[string]*bintree{}},
		"system-controller-ttl-controller.yaml":                                     {clusterroleRbacAuthorizationK8sIoSystemControllerTtlControllerYaml, map[string]*bintree{}},
		"system-daemonset-controller.yaml":                                          {clusterroleRbacAuthorizationK8sIoSystemDaemonsetControllerYaml, map[string]*bintree{}},
		"system-deployer.yaml":                                                      {clusterroleRbacAuthorizationK8sIoSystemDeployerYaml, map[string]*bintree{}},
		"system-deployment-controller.yaml":                                         {clusterroleRbacAuthorizationK8sIoSystemDeploymentControllerYaml, map[string]*bintree{}},
		"system-deploymentconfig-controller.yaml":                                   {clusterroleRbacAuthorizationK8sIoSystemDeploymentconfigControllerYaml, map[string]*bintree{}},
		"system-discovery.yaml":                                                     {clusterroleRbacAuthorizationK8sIoSystemDiscoveryYaml, map[string]*bintree{}},
		"system-disruption-controller.yaml":                                         {clusterroleRbacAuthorizationK8sIoSystemDisruptionControllerYaml, map[string]*bintree{}},
		"system-endpoint-controller.yaml":                                           {clusterroleRbacAuthorizationK8sIoSystemEndpointControllerYaml, map[string]*bintree{}},
		"system-garbage-collector-controller.yaml":                                  {clusterroleRbacAuthorizationK8sIoSystemGarbageCollectorControllerYaml, map[string]*bintree{}},
		"system-gc-controller.yaml":                                                 {clusterroleRbacAuthorizationK8sIoSystemGcControllerYaml, map[string]*bintree{}},
		"system-heapster.yaml":                                                      {clusterroleRbacAuthorizationK8sIoSystemHeapsterYaml, map[string]*bintree{}},
		"system-hpa-controller.yaml":                                                {clusterroleRbacAuthorizationK8sIoSystemHpaControllerYaml, map[string]*bintree{}},
		"system-image-auditor.yaml":                                                 {clusterroleRbacAuthorizationK8sIoSystemImageAuditorYaml, map[string]*bintree{}},
		"system-image-builder.yaml":                                                 {clusterroleRbacAuthorizationK8sIoSystemImageBuilderYaml, map[string]*bintree{}},
		"system-image-pruner.yaml":                                                  {clusterroleRbacAuthorizationK8sIoSystemImagePrunerYaml, map[string]*bintree{}},
		"system-image-puller.yaml":                                                  {clusterroleRbacAuthorizationK8sIoSystemImagePullerYaml, map[string]*bintree{}},
		"system-image-pusher.yaml":                                                  {clusterroleRbacAuthorizationK8sIoSystemImagePusherYaml, map[string]*bintree{}},
		"system-image-signer.yaml":                                                  {clusterroleRbacAuthorizationK8sIoSystemImageSignerYaml, map[string]*bintree{}},
		"system-job-controller.yaml":                                                {clusterroleRbacAuthorizationK8sIoSystemJobControllerYaml, map[string]*bintree{}},
		"system-kube-aggregator.yaml":                                               {clusterroleRbacAuthorizationK8sIoSystemKubeAggregatorYaml, map[string]*bintree{}},
		"system-kube-controller-manager.yaml":                                       {clusterroleRbacAuthorizationK8sIoSystemKubeControllerManagerYaml, map[string]*bintree{}},
		"system-kube-dns.yaml":                                                      {clusterroleRbacAuthorizationK8sIoSystemKubeDnsYaml, map[string]*bintree{}},
		"system-kube-scheduler.yaml":                                                {clusterroleRbacAuthorizationK8sIoSystemKubeSchedulerYaml, map[string]*bintree{}},
		"system-kubelet-api-admin.yaml":                                             {clusterroleRbacAuthorizationK8sIoSystemKubeletApiAdminYaml, map[string]*bintree{}},
		"system-master.yaml":                                                        {clusterroleRbacAuthorizationK8sIoSystemMasterYaml, map[string]*bintree{}},
		"system-namespace-controller.yaml":                                          {clusterroleRbacAuthorizationK8sIoSystemNamespaceControllerYaml, map[string]*bintree{}},
		"system-node-admin.yaml":                                                    {clusterroleRbacAuthorizationK8sIoSystemNodeAdminYaml, map[string]*bintree{}},
		"system-node-bootstrap-autoapprover.yaml":                                   {clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapAutoapproverYaml, map[string]*bintree{}},
		"system-node-bootstrapper.yaml":                                             {clusterroleRbacAuthorizationK8sIoSystemNodeBootstrapperYaml, map[string]*bintree{}},
		"system-node-problem-detector.yaml":                                         {clusterroleRbacAuthorizationK8sIoSystemNodeProblemDetectorYaml, map[string]*bintree{}},
		"system-node-proxier.yaml":                                                  {clusterroleRbacAuthorizationK8sIoSystemNodeProxierYaml, map[string]*bintree{}},
		"system-node-reader.yaml":                                                   {clusterroleRbacAuthorizationK8sIoSystemNodeReaderYaml, map[string]*bintree{}},
		"system-node.yaml":                                                          {clusterroleRbacAuthorizationK8sIoSystemNodeYaml, map[string]*bintree{}},
		"system-oauth-token-deleter.yaml":                                           {clusterroleRbacAuthorizationK8sIoSystemOauthTokenDeleterYaml, map[string]*bintree{}},
		"system-openshift-aggregate-to-admin.yaml":                                  {clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToAdminYaml, map[string]*bintree{}},
		"system-openshift-aggregate-to-edit.yaml":                                   {clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToEditYaml, map[string]*bintree{}},
		"system-openshift-aggregate-to-view.yaml":                                   {clusterroleRbacAuthorizationK8sIoSystemOpenshiftAggregateToViewYaml, map[string]*bintree{}},
		"system-openshift-controller-build-config-change-controller.yaml":           {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-build-controller.yaml":                         {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-cluster-quota-reconciliation-controller.yaml":  {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-default-rolebindings-controller.yaml":          {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-deployer-controller.yaml":                      {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-deploymentconfig-controller.yaml":              {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-horizontal-pod-autoscaler.yaml":                {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYaml, map[string]*bintree{}},
		"system-openshift-controller-image-import-controller.yaml":                  {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-image-trigger-controller.yaml":                 {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-ingress-to-route-controller.yaml":              {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-namespace-security-allocation-controller.yaml": {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-origin-namespace-controller.yaml":              {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-pv-recycler-controller.yaml":                   {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-resourcequota-controller.yaml":                 {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-sdn-controller.yaml":                           {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-service-ingress-ip-controller.yaml":            {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-service-serving-cert-controller.yaml":          {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-serviceaccount-controller.yaml":                {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-serviceaccount-pull-secrets-controller.yaml":   {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-template-instance-controller.yaml":             {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-template-instance-finalizer-controller.yaml":   {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-template-service-broker.yaml":                  {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYaml, map[string]*bintree{}},
		"system-openshift-controller-unidling-controller.yaml":                      {clusterroleRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYaml, map[string]*bintree{}},
		"system-openshift-templateservicebroker-client.yaml":                        {clusterroleRbacAuthorizationK8sIoSystemOpenshiftTemplateservicebrokerClientYaml, map[string]*bintree{}},
		"system-persistent-volume-provisioner.yaml":                                 {clusterroleRbacAuthorizationK8sIoSystemPersistentVolumeProvisionerYaml, map[string]*bintree{}},
		"system-registry.yaml":                                                      {clusterroleRbacAuthorizationK8sIoSystemRegistryYaml, map[string]*bintree{}},
		"system-replicaset-controller.yaml":                                         {clusterroleRbacAuthorizationK8sIoSystemReplicasetControllerYaml, map[string]*bintree{}},
		"system-replication-controller.yaml":                                        {clusterroleRbacAuthorizationK8sIoSystemReplicationControllerYaml, map[string]*bintree{}},
		"system-router.yaml":                                                        {clusterroleRbacAuthorizationK8sIoSystemRouterYaml, map[string]*bintree{}},
		"system-scope-impersonation.yaml":                                           {clusterroleRbacAuthorizationK8sIoSystemScopeImpersonationYaml, map[string]*bintree{}},
		"system-sdn-manager.yaml":                                                   {clusterroleRbacAuthorizationK8sIoSystemSdnManagerYaml, map[string]*bintree{}},
		"system-sdn-reader.yaml":                                                    {clusterroleRbacAuthorizationK8sIoSystemSdnReaderYaml, map[string]*bintree{}},
		"system-service-catalog-aggregate-to-admin.yaml":                            {clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToAdminYaml, map[string]*bintree{}},
		"system-service-catalog-aggregate-to-edit.yaml":                             {clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToEditYaml, map[string]*bintree{}},
		"system-service-catalog-aggregate-to-view.yaml":                             {clusterroleRbacAuthorizationK8sIoSystemServiceCatalogAggregateToViewYaml, map[string]*bintree{}},
		"system-statefulset-controller.yaml":                                        {clusterroleRbacAuthorizationK8sIoSystemStatefulsetControllerYaml, map[string]*bintree{}},
		"system-volume-scheduler.yaml":                                              {clusterroleRbacAuthorizationK8sIoSystemVolumeSchedulerYaml, map[string]*bintree{}},
		"system-webhook.yaml":                                                       {clusterroleRbacAuthorizationK8sIoSystemWebhookYaml, map[string]*bintree{}},
		"view.yaml":                                                                 {clusterroleRbacAuthorizationK8sIoViewYaml, map[string]*bintree{}},
	}},
	"ClusterRoleBinding.rbac.authorization.k8s.io": {nil, map[string]*bintree{
		"admin-0.yaml":                                                                  {clusterrolebindingRbacAuthorizationK8sIoAdmin0Yaml, map[string]*bintree{}},
		"admin.yaml":                                                                    {clusterrolebindingRbacAuthorizationK8sIoAdminYaml, map[string]*bintree{}},
		"asb-access.yaml":                                                               {clusterrolebindingRbacAuthorizationK8sIoAsbAccessYaml, map[string]*bintree{}},
		"asb-auth.yaml":                                                                 {clusterrolebindingRbacAuthorizationK8sIoAsbAuthYaml, map[string]*bintree{}},
		"auth-delegator-openshift-template-service-broker.yaml":                         {clusterrolebindingRbacAuthorizationK8sIoAuthDelegatorOpenshiftTemplateServiceBrokerYaml, map[string]*bintree{}},
		"azure-cluster-reader.yaml":                                                     {clusterrolebindingRbacAuthorizationK8sIoAzureClusterReaderYaml, map[string]*bintree{}},
		"basic-users.yaml":                                                              {clusterrolebindingRbacAuthorizationK8sIoBasicUsersYaml, map[string]*bintree{}},
		"bootstrap-autoapprover.yaml":                                                   {clusterrolebindingRbacAuthorizationK8sIoBootstrapAutoapproverYaml, map[string]*bintree{}},
		"cluster-admin.yaml":                                                            {clusterrolebindingRbacAuthorizationK8sIoClusterAdminYaml, map[string]*bintree{}},
		"cluster-admins.yaml":                                                           {clusterrolebindingRbacAuthorizationK8sIoClusterAdminsYaml, map[string]*bintree{}},
		"cluster-reader-0.yaml":                                                         {clusterrolebindingRbacAuthorizationK8sIoClusterReader0Yaml, map[string]*bintree{}},
		"cluster-reader.yaml":                                                           {clusterrolebindingRbacAuthorizationK8sIoClusterReaderYaml, map[string]*bintree{}},
		"cluster-readers.yaml":                                                          {clusterrolebindingRbacAuthorizationK8sIoClusterReadersYaml, map[string]*bintree{}},
		"cluster-status-binding.yaml":                                                   {clusterrolebindingRbacAuthorizationK8sIoClusterStatusBindingYaml, map[string]*bintree{}},
		"customer-admin-cluster-group.yaml":                                             {clusterrolebindingRbacAuthorizationK8sIoCustomerAdminClusterGroupYaml, map[string]*bintree{}},
		"customer-admin-controller-admin.yaml":                                          {clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerAdminYaml, map[string]*bintree{}},
		"customer-admin-controller-project-admin.yaml":                                  {clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerProjectAdminYaml, map[string]*bintree{}},
		"customer-admin-controller-sa.yaml":                                             {clusterrolebindingRbacAuthorizationK8sIoCustomerAdminControllerSaYaml, map[string]*bintree{}},
		"kube-state-metrics-cluster-role-binding.yaml":                                  {clusterrolebindingRbacAuthorizationK8sIoKubeStateMetricsClusterRoleBindingYaml, map[string]*bintree{}},
		"router-metrics.yaml":                                                           {clusterrolebindingRbacAuthorizationK8sIoRouterMetricsYaml, map[string]*bintree{}},
		"router-router-role.yaml":                                                       {clusterrolebindingRbacAuthorizationK8sIoRouterRouterRoleYaml, map[string]*bintree{}},
		"sdn-cluster-reader.yaml":                                                       {clusterrolebindingRbacAuthorizationK8sIoSdnClusterReaderYaml, map[string]*bintree{}},
		"sdn-reader.yaml":                                                               {clusterrolebindingRbacAuthorizationK8sIoSdnReaderYaml, map[string]*bintree{}},
		"self-access-reviewers.yaml":                                                    {clusterrolebindingRbacAuthorizationK8sIoSelfAccessReviewersYaml, map[string]*bintree{}},
		"self-provisioners.yaml":                                                        {clusterrolebindingRbacAuthorizationK8sIoSelfProvisionersYaml, map[string]*bintree{}},
		"service-catalog-controller-binding.yaml":                                       {clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerBindingYaml, map[string]*bintree{}},
		"service-catalog-controller-namespace-viewer-binding.yaml":                      {clusterrolebindingRbacAuthorizationK8sIoServiceCatalogControllerNamespaceViewerBindingYaml, map[string]*bintree{}},
		"service-catalog-namespace-viewer-binding.yaml":                                 {clusterrolebindingRbacAuthorizationK8sIoServiceCatalogNamespaceViewerBindingYaml, map[string]*bintree{}},
		"service-catalog-sar-creator-binding.yaml":                                      {clusterrolebindingRbacAuthorizationK8sIoServiceCatalogSarCreatorBindingYaml, map[string]*bintree{}},
		"servicecatalog-serviceclass-viewer-binding.yaml":                               {clusterrolebindingRbacAuthorizationK8sIoServicecatalogServiceclassViewerBindingYaml, map[string]*bintree{}},
		"system-auth-delegator-binding.yaml":                                            {clusterrolebindingRbacAuthorizationK8sIoSystemAuthDelegatorBindingYaml, map[string]*bintree{}},
		"system-aws-cloud-provider.yaml":                                                {clusterrolebindingRbacAuthorizationK8sIoSystemAwsCloudProviderYaml, map[string]*bintree{}},
		"system-basic-user.yaml":                                                        {clusterrolebindingRbacAuthorizationK8sIoSystemBasicUserYaml, map[string]*bintree{}},
		"system-build-strategy-docker-binding.yaml":                                     {clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyDockerBindingYaml, map[string]*bintree{}},
		"system-build-strategy-jenkinspipeline-binding.yaml":                            {clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategyJenkinspipelineBindingYaml, map[string]*bintree{}},
		"system-build-strategy-source-binding.yaml":                                     {clusterrolebindingRbacAuthorizationK8sIoSystemBuildStrategySourceBindingYaml, map[string]*bintree{}},
		"system-controller-attachdetach-controller.yaml":                                {clusterrolebindingRbacAuthorizationK8sIoSystemControllerAttachdetachControllerYaml, map[string]*bintree{}},
		"system-controller-certificate-controller.yaml":                                 {clusterrolebindingRbacAuthorizationK8sIoSystemControllerCertificateControllerYaml, map[string]*bintree{}},
		"system-controller-clusterrole-aggregation-controller.yaml":                     {clusterrolebindingRbacAuthorizationK8sIoSystemControllerClusterroleAggregationControllerYaml, map[string]*bintree{}},
		"system-controller-cronjob-controller.yaml":                                     {clusterrolebindingRbacAuthorizationK8sIoSystemControllerCronjobControllerYaml, map[string]*bintree{}},
		"system-controller-daemon-set-controller.yaml":                                  {clusterrolebindingRbacAuthorizationK8sIoSystemControllerDaemonSetControllerYaml, map[string]*bintree{}},
		"system-controller-deployment-controller.yaml":                                  {clusterrolebindingRbacAuthorizationK8sIoSystemControllerDeploymentControllerYaml, map[string]*bintree{}},
		"system-controller-disruption-controller.yaml":                                  {clusterrolebindingRbacAuthorizationK8sIoSystemControllerDisruptionControllerYaml, map[string]*bintree{}},
		"system-controller-endpoint-controller.yaml":                                    {clusterrolebindingRbacAuthorizationK8sIoSystemControllerEndpointControllerYaml, map[string]*bintree{}},
		"system-controller-generic-garbage-collector.yaml":                              {clusterrolebindingRbacAuthorizationK8sIoSystemControllerGenericGarbageCollectorYaml, map[string]*bintree{}},
		"system-controller-horizontal-pod-autoscaler.yaml":                              {clusterrolebindingRbacAuthorizationK8sIoSystemControllerHorizontalPodAutoscalerYaml, map[string]*bintree{}},
		"system-controller-job-controller.yaml":                                         {clusterrolebindingRbacAuthorizationK8sIoSystemControllerJobControllerYaml, map[string]*bintree{}},
		"system-controller-namespace-controller.yaml":                                   {clusterrolebindingRbacAuthorizationK8sIoSystemControllerNamespaceControllerYaml, map[string]*bintree{}},
		"system-controller-node-controller.yaml":                                        {clusterrolebindingRbacAuthorizationK8sIoSystemControllerNodeControllerYaml, map[string]*bintree{}},
		"system-controller-persistent-volume-binder.yaml":                               {clusterrolebindingRbacAuthorizationK8sIoSystemControllerPersistentVolumeBinderYaml, map[string]*bintree{}},
		"system-controller-pod-garbage-collector.yaml":                                  {clusterrolebindingRbacAuthorizationK8sIoSystemControllerPodGarbageCollectorYaml, map[string]*bintree{}},
		"system-controller-pv-protection-controller.yaml":                               {clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvProtectionControllerYaml, map[string]*bintree{}},
		"system-controller-pvc-protection-controller.yaml":                              {clusterrolebindingRbacAuthorizationK8sIoSystemControllerPvcProtectionControllerYaml, map[string]*bintree{}},
		"system-controller-replicaset-controller.yaml":                                  {clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicasetControllerYaml, map[string]*bintree{}},
		"system-controller-replication-controller.yaml":                                 {clusterrolebindingRbacAuthorizationK8sIoSystemControllerReplicationControllerYaml, map[string]*bintree{}},
		"system-controller-resourcequota-controller.yaml":                               {clusterrolebindingRbacAuthorizationK8sIoSystemControllerResourcequotaControllerYaml, map[string]*bintree{}},
		"system-controller-route-controller.yaml":                                       {clusterrolebindingRbacAuthorizationK8sIoSystemControllerRouteControllerYaml, map[string]*bintree{}},
		"system-controller-service-account-controller.yaml":                             {clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceAccountControllerYaml, map[string]*bintree{}},
		"system-controller-service-controller.yaml":                                     {clusterrolebindingRbacAuthorizationK8sIoSystemControllerServiceControllerYaml, map[string]*bintree{}},
		"system-controller-statefulset-controller.yaml":                                 {clusterrolebindingRbacAuthorizationK8sIoSystemControllerStatefulsetControllerYaml, map[string]*bintree{}},
		"system-controller-ttl-controller.yaml":                                         {clusterrolebindingRbacAuthorizationK8sIoSystemControllerTtlControllerYaml, map[string]*bintree{}},
		"system-deployer.yaml":                                                          {clusterrolebindingRbacAuthorizationK8sIoSystemDeployerYaml, map[string]*bintree{}},
		"system-discovery-binding.yaml":                                                 {clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryBindingYaml, map[string]*bintree{}},
		"system-discovery.yaml":                                                         {clusterrolebindingRbacAuthorizationK8sIoSystemDiscoveryYaml, map[string]*bintree{}},
		"system-image-builder.yaml":                                                     {clusterrolebindingRbacAuthorizationK8sIoSystemImageBuilderYaml, map[string]*bintree{}},
		"system-image-puller.yaml":                                                      {clusterrolebindingRbacAuthorizationK8sIoSystemImagePullerYaml, map[string]*bintree{}},
		"system-kube-controller-manager.yaml":                                           {clusterrolebindingRbacAuthorizationK8sIoSystemKubeControllerManagerYaml, map[string]*bintree{}},
		"system-kube-dns.yaml":                                                          {clusterrolebindingRbacAuthorizationK8sIoSystemKubeDnsYaml, map[string]*bintree{}},
		"system-kube-scheduler.yaml":                                                    {clusterrolebindingRbacAuthorizationK8sIoSystemKubeSchedulerYaml, map[string]*bintree{}},
		"system-masters.yaml":                                                           {clusterrolebindingRbacAuthorizationK8sIoSystemMastersYaml, map[string]*bintree{}},
		"system-node-admins.yaml":                                                       {clusterrolebindingRbacAuthorizationK8sIoSystemNodeAdminsYaml, map[string]*bintree{}},
		"system-node-bootstrapper.yaml":                                                 {clusterrolebindingRbacAuthorizationK8sIoSystemNodeBootstrapperYaml, map[string]*bintree{}},
		"system-node-proxier.yaml":                                                      {clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxierYaml, map[string]*bintree{}},
		"system-node-proxiers.yaml":                                                     {clusterrolebindingRbacAuthorizationK8sIoSystemNodeProxiersYaml, map[string]*bintree{}},
		"system-node.yaml":                                                              {clusterrolebindingRbacAuthorizationK8sIoSystemNodeYaml, map[string]*bintree{}},
		"system-nodes.yaml":                                                             {clusterrolebindingRbacAuthorizationK8sIoSystemNodesYaml, map[string]*bintree{}},
		"system-oauth-token-deleters.yaml":                                              {clusterrolebindingRbacAuthorizationK8sIoSystemOauthTokenDeletersYaml, map[string]*bintree{}},
		"system-openshift-controller-build-config-change-controller.yaml":               {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildConfigChangeControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-build-controller.yaml":                             {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerBuildControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-cluster-quota-reconciliation-controller.yaml":      {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerClusterQuotaReconciliationControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-default-rolebindings-controller.yaml":              {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDefaultRolebindingsControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-deployer-controller.yaml":                          {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeployerControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-deploymentconfig-controller.yaml":                  {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerDeploymentconfigControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-horizontal-pod-autoscaler.yaml":                    {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerHorizontalPodAutoscalerYaml, map[string]*bintree{}},
		"system-openshift-controller-image-import-controller.yaml":                      {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageImportControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-image-trigger-controller.yaml":                     {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerImageTriggerControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-ingress-to-route-controller.yaml":                  {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerIngressToRouteControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-namespace-security-allocation-controller.yaml":     {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerNamespaceSecurityAllocationControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-origin-namespace-controller.yaml":                  {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerOriginNamespaceControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-pv-recycler-controller.yaml":                       {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerPvRecyclerControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-resourcequota-controller.yaml":                     {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerResourcequotaControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-sdn-controller.yaml":                               {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerSdnControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-service-ingress-ip-controller.yaml":                {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceIngressIpControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-service-serving-cert-controller.yaml":              {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceServingCertControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-serviceaccount-controller.yaml":                    {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-serviceaccount-pull-secrets-controller.yaml":       {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerServiceaccountPullSecretsControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-template-instance-controller-admin.yaml":           {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerAdminYaml, map[string]*bintree{}},
		"system-openshift-controller-template-instance-controller.yaml":                 {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-template-instance-finalizer-controller-admin.yaml": {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerAdminYaml, map[string]*bintree{}},
		"system-openshift-controller-template-instance-finalizer-controller.yaml":       {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateInstanceFinalizerControllerYaml, map[string]*bintree{}},
		"system-openshift-controller-template-service-broker.yaml":                      {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerTemplateServiceBrokerYaml, map[string]*bintree{}},
		"system-openshift-controller-unidling-controller.yaml":                          {clusterrolebindingRbacAuthorizationK8sIoSystemOpenshiftControllerUnidlingControllerYaml, map[string]*bintree{}},
		"system-registry.yaml":                                                          {clusterrolebindingRbacAuthorizationK8sIoSystemRegistryYaml, map[string]*bintree{}},
		"system-scope-impersonation.yaml":                                               {clusterrolebindingRbacAuthorizationK8sIoSystemScopeImpersonationYaml, map[string]*bintree{}},
		"system-sdn-readers.yaml":                                                       {clusterrolebindingRbacAuthorizationK8sIoSystemSdnReadersYaml, map[string]*bintree{}},
		"system-volume-scheduler.yaml":                                                  {clusterrolebindingRbacAuthorizationK8sIoSystemVolumeSchedulerYaml, map[string]*bintree{}},
		"system-webhooks.yaml":                                                          {clusterrolebindingRbacAuthorizationK8sIoSystemWebhooksYaml, map[string]*bintree{}},
		"templateservicebroker-client.yaml":                                             {clusterrolebindingRbacAuthorizationK8sIoTemplateservicebrokerClientYaml, map[string]*bintree{}},
		"tsb-openshift-template-service-broker.yaml":                                    {clusterrolebindingRbacAuthorizationK8sIoTsbOpenshiftTemplateServiceBrokerYaml, map[string]*bintree{}},
		"view.yaml": {clusterrolebindingRbacAuthorizationK8sIoViewYaml, map[string]*bintree{}},
	}},
	"ClusterServiceBroker.servicecatalog.k8s.io": {nil, map[string]*bintree{
		"ansible-service-broker.yaml":  {clusterservicebrokerServicecatalogK8sIoAnsibleServiceBrokerYaml, map[string]*bintree{}},
		"template-service-broker.yaml": {clusterservicebrokerServicecatalogK8sIoTemplateServiceBrokerYaml, map[string]*bintree{}},
	}},
	"ConfigMap": {nil, map[string]*bintree{
		"kube-service-catalog": {nil, map[string]*bintree{
			"cluster-info.yaml": {configmapKubeServiceCatalogClusterInfoYaml, map[string]*bintree{}},
		}},
		"kube-system": {nil, map[string]*bintree{
			"extension-apiserver-authentication.yaml": {configmapKubeSystemExtensionApiserverAuthenticationYaml, map[string]*bintree{}},
		}},
		"openshift-ansible-service-broker": {nil, map[string]*bintree{
			"broker-config.yaml": {configmapOpenshiftAnsibleServiceBrokerBrokerConfigYaml, map[string]*bintree{}},
		}},
		"openshift-infra": {nil, map[string]*bintree{
			"reconciler-rolebindings.yaml": {configmapOpenshiftInfraReconcilerRolebindingsYaml, map[string]*bintree{}},
		}},
		"openshift-metrics": {nil, map[string]*bintree{
			"alertmanager.yaml": {configmapOpenshiftMetricsAlertmanagerYaml, map[string]*bintree{}},
			"prometheus.yaml":   {configmapOpenshiftMetricsPrometheusYaml, map[string]*bintree{}},
		}},
		"openshift-node": {nil, map[string]*bintree{
			"node-config-compute.yaml": {configmapOpenshiftNodeNodeConfigComputeYaml, map[string]*bintree{}},
			"node-config-infra.yaml":   {configmapOpenshiftNodeNodeConfigInfraYaml, map[string]*bintree{}},
			"node-config-master.yaml":  {configmapOpenshiftNodeNodeConfigMasterYaml, map[string]*bintree{}},
		}},
		"openshift-template-service-broker": {nil, map[string]*bintree{
			"apiserver-config.yaml": {configmapOpenshiftTemplateServiceBrokerApiserverConfigYaml, map[string]*bintree{}},
		}},
		"openshift-web-console": {nil, map[string]*bintree{
			"webconsole-config.yaml": {configmapOpenshiftWebConsoleWebconsoleConfigYaml, map[string]*bintree{}},
		}},
	}},
	"CustomResourceDefinition.apiextensions.k8s.io": {nil, map[string]*bintree{
		"bundlebindings.automationbroker.io.yaml":   {customresourcedefinitionApiextensionsK8sIoBundlebindingsAutomationbrokerIoYaml, map[string]*bintree{}},
		"bundleinstances.automationbroker.io.yaml":  {customresourcedefinitionApiextensionsK8sIoBundleinstancesAutomationbrokerIoYaml, map[string]*bintree{}},
		"bundles.automationbroker.io.yaml":          {customresourcedefinitionApiextensionsK8sIoBundlesAutomationbrokerIoYaml, map[string]*bintree{}},
		"etcdbackups.etcd.database.coreos.com.yaml": {customresourcedefinitionApiextensionsK8sIoEtcdbackupsEtcdDatabaseCoreosComYaml, map[string]*bintree{}},
	}},
	"DaemonSet.apps": {nil, map[string]*bintree{
		"openshift-metrics": {nil, map[string]*bintree{
			"prometheus-node-exporter.yaml": {daemonsetAppsOpenshiftMetricsPrometheusNodeExporterYaml, map[string]*bintree{}},
		}},
		"openshift-node": {nil, map[string]*bintree{
			"sync.yaml": {daemonsetAppsOpenshiftNodeSyncYaml, map[string]*bintree{}},
		}},
		"openshift-sdn": {nil, map[string]*bintree{
			"ovs.yaml": {daemonsetAppsOpenshiftSdnOvsYaml, map[string]*bintree{}},
			"sdn.yaml": {daemonsetAppsOpenshiftSdnSdnYaml, map[string]*bintree{}},
		}},
	}},
	"Deployment.apps": {nil, map[string]*bintree{
		"default": {nil, map[string]*bintree{
			"docker-registry.yaml":  {deploymentAppsDefaultDockerRegistryYaml, map[string]*bintree{}},
			"registry-console.yaml": {deploymentAppsDefaultRegistryConsoleYaml, map[string]*bintree{}},
			"router.yaml":           {deploymentAppsDefaultRouterYaml, map[string]*bintree{}},
		}},
		"kube-service-catalog": {nil, map[string]*bintree{
			"apiserver.yaml":          {deploymentAppsKubeServiceCatalogApiserverYaml, map[string]*bintree{}},
			"controller-manager.yaml": {deploymentAppsKubeServiceCatalogControllerManagerYaml, map[string]*bintree{}},
		}},
		"openshift-ansible-service-broker": {nil, map[string]*bintree{
			"asb.yaml": {deploymentAppsOpenshiftAnsibleServiceBrokerAsbYaml, map[string]*bintree{}},
		}},
		"openshift-etcd": {nil, map[string]*bintree{
			"etcd-operator.yaml": {deploymentAppsOpenshiftEtcdEtcdOperatorYaml, map[string]*bintree{}},
		}},
		"openshift-infra": {nil, map[string]*bintree{
			"bootstrap-autoapprover.yaml":    {deploymentAppsOpenshiftInfraBootstrapAutoapproverYaml, map[string]*bintree{}},
			"customer-admin-controller.yaml": {deploymentAppsOpenshiftInfraCustomerAdminControllerYaml, map[string]*bintree{}},
		}},
		"openshift-metrics": {nil, map[string]*bintree{
			"kube-state-metrics.yaml": {deploymentAppsOpenshiftMetricsKubeStateMetricsYaml, map[string]*bintree{}},
		}},
		"openshift-template-service-broker": {nil, map[string]*bintree{
			"apiserver.yaml": {deploymentAppsOpenshiftTemplateServiceBrokerApiserverYaml, map[string]*bintree{}},
		}},
		"openshift-web-console": {nil, map[string]*bintree{
			"webconsole.yaml": {deploymentAppsOpenshiftWebConsoleWebconsoleYaml, map[string]*bintree{}},
		}},
	}},
	"EtcdBackup.etcd.database.coreos.com": {nil, map[string]*bintree{
		"openshift-etcd": {nil, map[string]*bintree{
			"etcd-backup.yaml": {etcdbackupEtcdDatabaseCoreosComOpenshiftEtcdEtcdBackupYaml, map[string]*bintree{}},
		}},
	}},
	"Group.user.openshift.io": {nil, map[string]*bintree{
		"customer-admins.yaml":  {groupUserOpenshiftIoCustomerAdminsYaml, map[string]*bintree{}},
		"customer-readers.yaml": {groupUserOpenshiftIoCustomerReadersYaml, map[string]*bintree{}},
	}},
	"ImageStream.image.openshift.io": {nil, map[string]*bintree{
		"openshift": {nil, map[string]*bintree{
			"dotnet-runtime.yaml": {imagestreamImageOpenshiftIoOpenshiftDotnetRuntimeYaml, map[string]*bintree{}},
			"dotnet.yaml":         {imagestreamImageOpenshiftIoOpenshiftDotnetYaml, map[string]*bintree{}},
			"httpd.yaml":          {imagestreamImageOpenshiftIoOpenshiftHttpdYaml, map[string]*bintree{}},
			"jenkins.yaml":        {imagestreamImageOpenshiftIoOpenshiftJenkinsYaml, map[string]*bintree{}},
			"mariadb.yaml":        {imagestreamImageOpenshiftIoOpenshiftMariadbYaml, map[string]*bintree{}},
			"mongodb.yaml":        {imagestreamImageOpenshiftIoOpenshiftMongodbYaml, map[string]*bintree{}},
			"mysql.yaml":          {imagestreamImageOpenshiftIoOpenshiftMysqlYaml, map[string]*bintree{}},
			"nginx.yaml":          {imagestreamImageOpenshiftIoOpenshiftNginxYaml, map[string]*bintree{}},
			"nodejs.yaml":         {imagestreamImageOpenshiftIoOpenshiftNodejsYaml, map[string]*bintree{}},
			"perl.yaml":           {imagestreamImageOpenshiftIoOpenshiftPerlYaml, map[string]*bintree{}},
			"php.yaml":            {imagestreamImageOpenshiftIoOpenshiftPhpYaml, map[string]*bintree{}},
			"postgresql.yaml":     {imagestreamImageOpenshiftIoOpenshiftPostgresqlYaml, map[string]*bintree{}},
			"python.yaml":         {imagestreamImageOpenshiftIoOpenshiftPythonYaml, map[string]*bintree{}},
			"redis.yaml":          {imagestreamImageOpenshiftIoOpenshiftRedisYaml, map[string]*bintree{}},
			"ruby.yaml":           {imagestreamImageOpenshiftIoOpenshiftRubyYaml, map[string]*bintree{}},
			"wildfly.yaml":        {imagestreamImageOpenshiftIoOpenshiftWildflyYaml, map[string]*bintree{}},
		}},
	}},
	"Namespace": {nil, map[string]*bintree{
		"default.yaml":                           {namespaceDefaultYaml, map[string]*bintree{}},
		"kube-public.yaml":                       {namespaceKubePublicYaml, map[string]*bintree{}},
		"kube-service-catalog.yaml":              {namespaceKubeServiceCatalogYaml, map[string]*bintree{}},
		"kube-system.yaml":                       {namespaceKubeSystemYaml, map[string]*bintree{}},
		"openshift-ansible-service-broker.yaml":  {namespaceOpenshiftAnsibleServiceBrokerYaml, map[string]*bintree{}},
		"openshift-azure.yaml":                   {namespaceOpenshiftAzureYaml, map[string]*bintree{}},
		"openshift-etcd.yaml":                    {namespaceOpenshiftEtcdYaml, map[string]*bintree{}},
		"openshift-infra.yaml":                   {namespaceOpenshiftInfraYaml, map[string]*bintree{}},
		"openshift-metrics.yaml":                 {namespaceOpenshiftMetricsYaml, map[string]*bintree{}},
		"openshift-node.yaml":                    {namespaceOpenshiftNodeYaml, map[string]*bintree{}},
		"openshift-sdn.yaml":                     {namespaceOpenshiftSdnYaml, map[string]*bintree{}},
		"openshift-template-service-broker.yaml": {namespaceOpenshiftTemplateServiceBrokerYaml, map[string]*bintree{}},
		"openshift-web-console.yaml":             {namespaceOpenshiftWebConsoleYaml, map[string]*bintree{}},
		"openshift.yaml":                         {namespaceOpenshiftYaml, map[string]*bintree{}},
	}},
	"OAuthClient.oauth.openshift.io": {nil, map[string]*bintree{
		"cockpit-oauth-client.yaml": {oauthclientOauthOpenshiftIoCockpitOauthClientYaml, map[string]*bintree{}},
	}},
	"Role.rbac.authorization.k8s.io": {nil, map[string]*bintree{
		"kube-public": {nil, map[string]*bintree{
			"system-controller-bootstrap-signer.yaml": {roleRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYaml, map[string]*bintree{}},
		}},
		"kube-service-catalog": {nil, map[string]*bintree{
			"cluster-info-configmap.yaml": {roleRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapYaml, map[string]*bintree{}},
			"configmap-accessor.yaml":     {roleRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorYaml, map[string]*bintree{}},
		}},
		"kube-system": {nil, map[string]*bintree{
			"extension-apiserver-authentication-reader.yaml":      {roleRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderYaml, map[string]*bintree{}},
			"system--leader-locking-kube-controller-manager.yaml": {roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYaml, map[string]*bintree{}},
			"system--leader-locking-kube-scheduler.yaml":          {roleRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYaml, map[string]*bintree{}},
			"system-controller-bootstrap-signer.yaml":             {roleRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYaml, map[string]*bintree{}},
			"system-controller-cloud-provider.yaml":               {roleRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYaml, map[string]*bintree{}},
			"system-controller-token-cleaner.yaml":                {roleRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYaml, map[string]*bintree{}},
		}},
		"openshift": {nil, map[string]*bintree{
			"shared-resource-viewer.yaml": {roleRbacAuthorizationK8sIoOpenshiftSharedResourceViewerYaml, map[string]*bintree{}},
		}},
		"openshift-etcd": {nil, map[string]*bintree{
			"etcd-operator.yaml": {roleRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYaml, map[string]*bintree{}},
		}},
		"openshift-metrics": {nil, map[string]*bintree{
			"kube-state-metrics-resizer.yaml": {roleRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsResizerYaml, map[string]*bintree{}},
		}},
		"openshift-node": {nil, map[string]*bintree{
			"system-node-config-reader.yaml": {roleRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYaml, map[string]*bintree{}},
		}},
		"openshift-template-service-broker": {nil, map[string]*bintree{
			"templateservicebroker-auth-reader.yaml": {roleRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYaml, map[string]*bintree{}},
		}},
	}},
	"RoleBinding.rbac.authorization.k8s.io": {nil, map[string]*bintree{
		"kube-public": {nil, map[string]*bintree{
			"system-controller-bootstrap-signer.yaml": {rolebindingRbacAuthorizationK8sIoKubePublicSystemControllerBootstrapSignerYaml, map[string]*bintree{}},
		}},
		"kube-service-catalog": {nil, map[string]*bintree{
			"cluster-info-configmap-binding.yaml": {rolebindingRbacAuthorizationK8sIoKubeServiceCatalogClusterInfoConfigmapBindingYaml, map[string]*bintree{}},
			"configmap-accessor-binding.yaml":     {rolebindingRbacAuthorizationK8sIoKubeServiceCatalogConfigmapAccessorBindingYaml, map[string]*bintree{}},
		}},
		"kube-system": {nil, map[string]*bintree{
			"extension-apiserver-authentication-reader-binding.yaml":                           {rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderBindingYaml, map[string]*bintree{}},
			"extension-apiserver-authentication-reader-openshift-template-service-broker.yaml": {rolebindingRbacAuthorizationK8sIoKubeSystemExtensionApiserverAuthenticationReaderOpenshiftTemplateServiceBrokerYaml, map[string]*bintree{}},
			"system--leader-locking-kube-controller-manager.yaml":                              {rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeControllerManagerYaml, map[string]*bintree{}},
			"system--leader-locking-kube-scheduler.yaml":                                       {rolebindingRbacAuthorizationK8sIoKubeSystemSystemLeaderLockingKubeSchedulerYaml, map[string]*bintree{}},
			"system-controller-bootstrap-signer.yaml":                                          {rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerBootstrapSignerYaml, map[string]*bintree{}},
			"system-controller-cloud-provider.yaml":                                            {rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerCloudProviderYaml, map[string]*bintree{}},
			"system-controller-token-cleaner.yaml":                                             {rolebindingRbacAuthorizationK8sIoKubeSystemSystemControllerTokenCleanerYaml, map[string]*bintree{}},
		}},
		"openshift": {nil, map[string]*bintree{
			"shared-resource-viewers.yaml": {rolebindingRbacAuthorizationK8sIoOpenshiftSharedResourceViewersYaml, map[string]*bintree{}},
		}},
		"openshift-etcd": {nil, map[string]*bintree{
			"etcd-operator.yaml": {rolebindingRbacAuthorizationK8sIoOpenshiftEtcdEtcdOperatorYaml, map[string]*bintree{}},
		}},
		"openshift-metrics": {nil, map[string]*bintree{
			"kube-state-metrics.yaml": {rolebindingRbacAuthorizationK8sIoOpenshiftMetricsKubeStateMetricsYaml, map[string]*bintree{}},
		}},
		"openshift-node": {nil, map[string]*bintree{
			"sync-node-config-reader-binding.yaml": {rolebindingRbacAuthorizationK8sIoOpenshiftNodeSyncNodeConfigReaderBindingYaml, map[string]*bintree{}},
			"system-node-config-reader.yaml":       {rolebindingRbacAuthorizationK8sIoOpenshiftNodeSystemNodeConfigReaderYaml, map[string]*bintree{}},
		}},
		"openshift-template-service-broker": {nil, map[string]*bintree{
			"templateservicebroker-auth-reader.yaml": {rolebindingRbacAuthorizationK8sIoOpenshiftTemplateServiceBrokerTemplateservicebrokerAuthReaderYaml, map[string]*bintree{}},
		}},
	}},
	"Route.route.openshift.io": {nil, map[string]*bintree{
		"default": {nil, map[string]*bintree{
			"docker-registry.yaml":  {routeRouteOpenshiftIoDefaultDockerRegistryYaml, map[string]*bintree{}},
			"registry-console.yaml": {routeRouteOpenshiftIoDefaultRegistryConsoleYaml, map[string]*bintree{}},
		}},
		"kube-service-catalog": {nil, map[string]*bintree{
			"apiserver.yaml": {routeRouteOpenshiftIoKubeServiceCatalogApiserverYaml, map[string]*bintree{}},
		}},
		"openshift-ansible-service-broker": {nil, map[string]*bintree{
			"asb-1338.yaml": {routeRouteOpenshiftIoOpenshiftAnsibleServiceBrokerAsb1338Yaml, map[string]*bintree{}},
		}},
		"openshift-metrics": {nil, map[string]*bintree{
			"alertmanager.yaml": {routeRouteOpenshiftIoOpenshiftMetricsAlertmanagerYaml, map[string]*bintree{}},
			"alerts.yaml":       {routeRouteOpenshiftIoOpenshiftMetricsAlertsYaml, map[string]*bintree{}},
			"prometheus.yaml":   {routeRouteOpenshiftIoOpenshiftMetricsPrometheusYaml, map[string]*bintree{}},
		}},
	}},
	"Secret": {nil, map[string]*bintree{
		"default": {nil, map[string]*bintree{
			"etc-origin-cloudprovider.yaml": {secretDefaultEtcOriginCloudproviderYaml, map[string]*bintree{}},
			"registry-certificates.yaml":    {secretDefaultRegistryCertificatesYaml, map[string]*bintree{}},
			"registry-config.yaml":          {secretDefaultRegistryConfigYaml, map[string]*bintree{}},
			"router-certs.yaml":             {secretDefaultRouterCertsYaml, map[string]*bintree{}},
		}},
		"kube-service-catalog": {nil, map[string]*bintree{
			"apiserver-ssl.yaml": {secretKubeServiceCatalogApiserverSslYaml, map[string]*bintree{}},
		}},
		"openshift-ansible-service-broker": {nil, map[string]*bintree{
			"asb-client.yaml": {secretOpenshiftAnsibleServiceBrokerAsbClientYaml, map[string]*bintree{}},
		}},
		"openshift-etcd": {nil, map[string]*bintree{
			"etcd-backup-abs-credentials.yaml": {secretOpenshiftEtcdEtcdBackupAbsCredentialsYaml, map[string]*bintree{}},
			"etcd-client-tls.yaml":             {secretOpenshiftEtcdEtcdClientTlsYaml, map[string]*bintree{}},
		}},
		"openshift-metrics": {nil, map[string]*bintree{
			"alertmanager-proxy.yaml": {secretOpenshiftMetricsAlertmanagerProxyYaml, map[string]*bintree{}},
			"alerts-proxy.yaml":       {secretOpenshiftMetricsAlertsProxyYaml, map[string]*bintree{}},
			"prometheus-proxy.yaml":   {secretOpenshiftMetricsPrometheusProxyYaml, map[string]*bintree{}},
		}},
		"openshift-template-service-broker": {nil, map[string]*bintree{
			"templateservicebroker-client.yaml": {secretOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYaml, map[string]*bintree{}},
		}},
	}},
	"SecurityContextConstraints.security.openshift.io": {nil, map[string]*bintree{
		"anyuid.yaml":           {securitycontextconstraintsSecurityOpenshiftIoAnyuidYaml, map[string]*bintree{}},
		"hostaccess.yaml":       {securitycontextconstraintsSecurityOpenshiftIoHostaccessYaml, map[string]*bintree{}},
		"hostmount-anyuid.yaml": {securitycontextconstraintsSecurityOpenshiftIoHostmountAnyuidYaml, map[string]*bintree{}},
		"hostnetwork.yaml":      {securitycontextconstraintsSecurityOpenshiftIoHostnetworkYaml, map[string]*bintree{}},
		"nonroot.yaml":          {securitycontextconstraintsSecurityOpenshiftIoNonrootYaml, map[string]*bintree{}},
		"privileged.yaml":       {securitycontextconstraintsSecurityOpenshiftIoPrivilegedYaml, map[string]*bintree{}},
		"restricted.yaml":       {securitycontextconstraintsSecurityOpenshiftIoRestrictedYaml, map[string]*bintree{}},
	}},
	"Service": {nil, map[string]*bintree{
		"default": {nil, map[string]*bintree{
			"docker-registry.yaml":  {serviceDefaultDockerRegistryYaml, map[string]*bintree{}},
			"registry-console.yaml": {serviceDefaultRegistryConsoleYaml, map[string]*bintree{}},
			"router-stats.yaml":     {serviceDefaultRouterStatsYaml, map[string]*bintree{}},
			"router.yaml":           {serviceDefaultRouterYaml, map[string]*bintree{}},
		}},
		"kube-service-catalog": {nil, map[string]*bintree{
			"apiserver.yaml":          {serviceKubeServiceCatalogApiserverYaml, map[string]*bintree{}},
			"controller-manager.yaml": {serviceKubeServiceCatalogControllerManagerYaml, map[string]*bintree{}},
		}},
		"openshift-ansible-service-broker": {nil, map[string]*bintree{
			"asb.yaml": {serviceOpenshiftAnsibleServiceBrokerAsbYaml, map[string]*bintree{}},
		}},
		"openshift-metrics": {nil, map[string]*bintree{
			"alertmanager.yaml":             {serviceOpenshiftMetricsAlertmanagerYaml, map[string]*bintree{}},
			"alerts.yaml":                   {serviceOpenshiftMetricsAlertsYaml, map[string]*bintree{}},
			"kube-state-metrics.yaml":       {serviceOpenshiftMetricsKubeStateMetricsYaml, map[string]*bintree{}},
			"prometheus-node-exporter.yaml": {serviceOpenshiftMetricsPrometheusNodeExporterYaml, map[string]*bintree{}},
			"prometheus.yaml":               {serviceOpenshiftMetricsPrometheusYaml, map[string]*bintree{}},
		}},
		"openshift-template-service-broker": {nil, map[string]*bintree{
			"apiserver.yaml": {serviceOpenshiftTemplateServiceBrokerApiserverYaml, map[string]*bintree{}},
		}},
		"openshift-web-console": {nil, map[string]*bintree{
			"webconsole.yaml": {serviceOpenshiftWebConsoleWebconsoleYaml, map[string]*bintree{}},
		}},
	}},
	"ServiceAccount": {nil, map[string]*bintree{
		"default": {nil, map[string]*bintree{
			"default.yaml":  {serviceaccountDefaultDefaultYaml, map[string]*bintree{}},
			"registry.yaml": {serviceaccountDefaultRegistryYaml, map[string]*bintree{}},
			"router.yaml":   {serviceaccountDefaultRouterYaml, map[string]*bintree{}},
		}},
		"kube-service-catalog": {nil, map[string]*bintree{
			"service-catalog-apiserver.yaml":  {serviceaccountKubeServiceCatalogServiceCatalogApiserverYaml, map[string]*bintree{}},
			"service-catalog-controller.yaml": {serviceaccountKubeServiceCatalogServiceCatalogControllerYaml, map[string]*bintree{}},
		}},
		"kube-system": {nil, map[string]*bintree{
			"attachdetach-controller.yaml":            {serviceaccountKubeSystemAttachdetachControllerYaml, map[string]*bintree{}},
			"certificate-controller.yaml":             {serviceaccountKubeSystemCertificateControllerYaml, map[string]*bintree{}},
			"clusterrole-aggregation-controller.yaml": {serviceaccountKubeSystemClusterroleAggregationControllerYaml, map[string]*bintree{}},
			"cronjob-controller.yaml":                 {serviceaccountKubeSystemCronjobControllerYaml, map[string]*bintree{}},
			"daemon-set-controller.yaml":              {serviceaccountKubeSystemDaemonSetControllerYaml, map[string]*bintree{}},
			"deployment-controller.yaml":              {serviceaccountKubeSystemDeploymentControllerYaml, map[string]*bintree{}},
			"disruption-controller.yaml":              {serviceaccountKubeSystemDisruptionControllerYaml, map[string]*bintree{}},
			"endpoint-controller.yaml":                {serviceaccountKubeSystemEndpointControllerYaml, map[string]*bintree{}},
			"generic-garbage-collector.yaml":          {serviceaccountKubeSystemGenericGarbageCollectorYaml, map[string]*bintree{}},
			"job-controller.yaml":                     {serviceaccountKubeSystemJobControllerYaml, map[string]*bintree{}},
			"namespace-controller.yaml":               {serviceaccountKubeSystemNamespaceControllerYaml, map[string]*bintree{}},
			"node-controller.yaml":                    {serviceaccountKubeSystemNodeControllerYaml, map[string]*bintree{}},
			"persistent-volume-binder.yaml":           {serviceaccountKubeSystemPersistentVolumeBinderYaml, map[string]*bintree{}},
			"pod-garbage-collector.yaml":              {serviceaccountKubeSystemPodGarbageCollectorYaml, map[string]*bintree{}},
			"pv-protection-controller.yaml":           {serviceaccountKubeSystemPvProtectionControllerYaml, map[string]*bintree{}},
			"pvc-protection-controller.yaml":          {serviceaccountKubeSystemPvcProtectionControllerYaml, map[string]*bintree{}},
			"replicaset-controller.yaml":              {serviceaccountKubeSystemReplicasetControllerYaml, map[string]*bintree{}},
			"replication-controller.yaml":             {serviceaccountKubeSystemReplicationControllerYaml, map[string]*bintree{}},
			"resourcequota-controller.yaml":           {serviceaccountKubeSystemResourcequotaControllerYaml, map[string]*bintree{}},
			"service-account-controller.yaml":         {serviceaccountKubeSystemServiceAccountControllerYaml, map[string]*bintree{}},
			"service-controller.yaml":                 {serviceaccountKubeSystemServiceControllerYaml, map[string]*bintree{}},
			"statefulset-controller.yaml":             {serviceaccountKubeSystemStatefulsetControllerYaml, map[string]*bintree{}},
		}},
		"openshift-ansible-service-broker": {nil, map[string]*bintree{
			"asb-client.yaml": {serviceaccountOpenshiftAnsibleServiceBrokerAsbClientYaml, map[string]*bintree{}},
			"asb.yaml":        {serviceaccountOpenshiftAnsibleServiceBrokerAsbYaml, map[string]*bintree{}},
		}},
		"openshift-azure": {nil, map[string]*bintree{
			"azure-cluster-reader.yaml": {serviceaccountOpenshiftAzureAzureClusterReaderYaml, map[string]*bintree{}},
		}},
		"openshift-etcd": {nil, map[string]*bintree{
			"etcd-operator.yaml": {serviceaccountOpenshiftEtcdEtcdOperatorYaml, map[string]*bintree{}},
		}},
		"openshift-infra": {nil, map[string]*bintree{
			"bootstrap-autoapprover.yaml":                   {serviceaccountOpenshiftInfraBootstrapAutoapproverYaml, map[string]*bintree{}},
			"build-config-change-controller.yaml":           {serviceaccountOpenshiftInfraBuildConfigChangeControllerYaml, map[string]*bintree{}},
			"build-controller.yaml":                         {serviceaccountOpenshiftInfraBuildControllerYaml, map[string]*bintree{}},
			"cluster-quota-reconciliation-controller.yaml":  {serviceaccountOpenshiftInfraClusterQuotaReconciliationControllerYaml, map[string]*bintree{}},
			"customer-admin-controller.yaml":                {serviceaccountOpenshiftInfraCustomerAdminControllerYaml, map[string]*bintree{}},
			"default-rolebindings-controller.yaml":          {serviceaccountOpenshiftInfraDefaultRolebindingsControllerYaml, map[string]*bintree{}},
			"deployer-controller.yaml":                      {serviceaccountOpenshiftInfraDeployerControllerYaml, map[string]*bintree{}},
			"deploymentconfig-controller.yaml":              {serviceaccountOpenshiftInfraDeploymentconfigControllerYaml, map[string]*bintree{}},
			"horizontal-pod-autoscaler.yaml":                {serviceaccountOpenshiftInfraHorizontalPodAutoscalerYaml, map[string]*bintree{}},
			"image-import-controller.yaml":                  {serviceaccountOpenshiftInfraImageImportControllerYaml, map[string]*bintree{}},
			"image-trigger-controller.yaml":                 {serviceaccountOpenshiftInfraImageTriggerControllerYaml, map[string]*bintree{}},
			"ingress-to-route-controller.yaml":              {serviceaccountOpenshiftInfraIngressToRouteControllerYaml, map[string]*bintree{}},
			"namespace-security-allocation-controller.yaml": {serviceaccountOpenshiftInfraNamespaceSecurityAllocationControllerYaml, map[string]*bintree{}},
			"node-bootstrapper.yaml":                        {serviceaccountOpenshiftInfraNodeBootstrapperYaml, map[string]*bintree{}},
			"origin-namespace-controller.yaml":              {serviceaccountOpenshiftInfraOriginNamespaceControllerYaml, map[string]*bintree{}},
			"pv-recycler-controller.yaml":                   {serviceaccountOpenshiftInfraPvRecyclerControllerYaml, map[string]*bintree{}},
			"resourcequota-controller.yaml":                 {serviceaccountOpenshiftInfraResourcequotaControllerYaml, map[string]*bintree{}},
			"sdn-controller.yaml":                           {serviceaccountOpenshiftInfraSdnControllerYaml, map[string]*bintree{}},
			"service-serving-cert-controller.yaml":          {serviceaccountOpenshiftInfraServiceServingCertControllerYaml, map[string]*bintree{}},
			"serviceaccount-controller.yaml":                {serviceaccountOpenshiftInfraServiceaccountControllerYaml, map[string]*bintree{}},
			"serviceaccount-pull-secrets-controller.yaml":   {serviceaccountOpenshiftInfraServiceaccountPullSecretsControllerYaml, map[string]*bintree{}},
			"template-instance-controller.yaml":             {serviceaccountOpenshiftInfraTemplateInstanceControllerYaml, map[string]*bintree{}},
			"template-instance-finalizer-controller.yaml":   {serviceaccountOpenshiftInfraTemplateInstanceFinalizerControllerYaml, map[string]*bintree{}},
			"unidling-controller.yaml":                      {serviceaccountOpenshiftInfraUnidlingControllerYaml, map[string]*bintree{}},
		}},
		"openshift-metrics": {nil, map[string]*bintree{
			"kube-state-metrics.yaml":       {serviceaccountOpenshiftMetricsKubeStateMetricsYaml, map[string]*bintree{}},
			"prometheus-node-exporter.yaml": {serviceaccountOpenshiftMetricsPrometheusNodeExporterYaml, map[string]*bintree{}},
			"prometheus-reader.yaml":        {serviceaccountOpenshiftMetricsPrometheusReaderYaml, map[string]*bintree{}},
			"prometheus.yaml":               {serviceaccountOpenshiftMetricsPrometheusYaml, map[string]*bintree{}},
		}},
		"openshift-node": {nil, map[string]*bintree{
			"sync.yaml": {serviceaccountOpenshiftNodeSyncYaml, map[string]*bintree{}},
		}},
		"openshift-sdn": {nil, map[string]*bintree{
			"sdn.yaml": {serviceaccountOpenshiftSdnSdnYaml, map[string]*bintree{}},
		}},
		"openshift-template-service-broker": {nil, map[string]*bintree{
			"apiserver.yaml":                    {serviceaccountOpenshiftTemplateServiceBrokerApiserverYaml, map[string]*bintree{}},
			"templateservicebroker-client.yaml": {serviceaccountOpenshiftTemplateServiceBrokerTemplateservicebrokerClientYaml, map[string]*bintree{}},
		}},
		"openshift-web-console": {nil, map[string]*bintree{
			"webconsole.yaml": {serviceaccountOpenshiftWebConsoleWebconsoleYaml, map[string]*bintree{}},
		}},
	}},
	"StatefulSet.apps": {nil, map[string]*bintree{
		"openshift-metrics": {nil, map[string]*bintree{
			"prometheus.yaml": {statefulsetAppsOpenshiftMetricsPrometheusYaml, map[string]*bintree{}},
		}},
	}},
	"StorageClass.storage.k8s.io": {nil, map[string]*bintree{
		"azure.yaml": {storageclassStorageK8sIoAzureYaml, map[string]*bintree{}},
	}},
	"Template.template.openshift.io": {nil, map[string]*bintree{
		"openshift": {nil, map[string]*bintree{
			"3scale-gateway.yaml":              {templateTemplateOpenshiftIoOpenshift3scaleGatewayYaml, map[string]*bintree{}},
			"amp-apicast-wildcard-router.yaml": {templateTemplateOpenshiftIoOpenshiftAmpApicastWildcardRouterYaml, map[string]*bintree{}},
			"amp-pvc.yaml":                     {templateTemplateOpenshiftIoOpenshiftAmpPvcYaml, map[string]*bintree{}},
			"cakephp-mysql-example.yaml":       {templateTemplateOpenshiftIoOpenshiftCakephpMysqlExampleYaml, map[string]*bintree{}},
			"cakephp-mysql-persistent.yaml":    {templateTemplateOpenshiftIoOpenshiftCakephpMysqlPersistentYaml, map[string]*bintree{}},
			"dancer-mysql-example.yaml":        {templateTemplateOpenshiftIoOpenshiftDancerMysqlExampleYaml, map[string]*bintree{}},
			"dancer-mysql-persistent.yaml":     {templateTemplateOpenshiftIoOpenshiftDancerMysqlPersistentYaml, map[string]*bintree{}},
			"django-psql-example.yaml":         {templateTemplateOpenshiftIoOpenshiftDjangoPsqlExampleYaml, map[string]*bintree{}},
			"django-psql-persistent.yaml":      {templateTemplateOpenshiftIoOpenshiftDjangoPsqlPersistentYaml, map[string]*bintree{}},
			"dotnet-example.yaml":              {templateTemplateOpenshiftIoOpenshiftDotnetExampleYaml, map[string]*bintree{}},
			"dotnet-pgsql-persistent.yaml":     {templateTemplateOpenshiftIoOpenshiftDotnetPgsqlPersistentYaml, map[string]*bintree{}},
			"dotnet-runtime-example.yaml":      {templateTemplateOpenshiftIoOpenshiftDotnetRuntimeExampleYaml, map[string]*bintree{}},
			"httpd-example.yaml":               {templateTemplateOpenshiftIoOpenshiftHttpdExampleYaml, map[string]*bintree{}},
			"jenkins-ephemeral.yaml":           {templateTemplateOpenshiftIoOpenshiftJenkinsEphemeralYaml, map[string]*bintree{}},
			"jenkins-persistent.yaml":          {templateTemplateOpenshiftIoOpenshiftJenkinsPersistentYaml, map[string]*bintree{}},
			"mariadb-ephemeral.yaml":           {templateTemplateOpenshiftIoOpenshiftMariadbEphemeralYaml, map[string]*bintree{}},
			"mariadb-persistent.yaml":          {templateTemplateOpenshiftIoOpenshiftMariadbPersistentYaml, map[string]*bintree{}},
			"mongodb-ephemeral.yaml":           {templateTemplateOpenshiftIoOpenshiftMongodbEphemeralYaml, map[string]*bintree{}},
			"mongodb-persistent.yaml":          {templateTemplateOpenshiftIoOpenshiftMongodbPersistentYaml, map[string]*bintree{}},
			"mysql-ephemeral.yaml":             {templateTemplateOpenshiftIoOpenshiftMysqlEphemeralYaml, map[string]*bintree{}},
			"mysql-persistent.yaml":            {templateTemplateOpenshiftIoOpenshiftMysqlPersistentYaml, map[string]*bintree{}},
			"nginx-example.yaml":               {templateTemplateOpenshiftIoOpenshiftNginxExampleYaml, map[string]*bintree{}},
			"nodejs-mongo-persistent.yaml":     {templateTemplateOpenshiftIoOpenshiftNodejsMongoPersistentYaml, map[string]*bintree{}},
			"nodejs-mongodb-example.yaml":      {templateTemplateOpenshiftIoOpenshiftNodejsMongodbExampleYaml, map[string]*bintree{}},
			"postgresql-ephemeral.yaml":        {templateTemplateOpenshiftIoOpenshiftPostgresqlEphemeralYaml, map[string]*bintree{}},
			"postgresql-persistent.yaml":       {templateTemplateOpenshiftIoOpenshiftPostgresqlPersistentYaml, map[string]*bintree{}},
			"rails-pgsql-persistent.yaml":      {templateTemplateOpenshiftIoOpenshiftRailsPgsqlPersistentYaml, map[string]*bintree{}},
			"rails-postgresql-example.yaml":    {templateTemplateOpenshiftIoOpenshiftRailsPostgresqlExampleYaml, map[string]*bintree{}},
			"redis-ephemeral.yaml":             {templateTemplateOpenshiftIoOpenshiftRedisEphemeralYaml, map[string]*bintree{}},
			"redis-persistent.yaml":            {templateTemplateOpenshiftIoOpenshiftRedisPersistentYaml, map[string]*bintree{}},
			"system.yaml":                      {templateTemplateOpenshiftIoOpenshiftSystemYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
